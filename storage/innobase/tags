!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTUAL_SSIZE	include/fsp0fsp.ic	53;"	d	file:
ADDED_TABLE_SYNCED	include/fts0fts.h	/^	ADDED_TABLE_SYNCED = 8,		\/*!< TRUE if the ADDED table record is$/;"	e	enum:fts_status
ADD_THREAD_STARTED	include/fts0fts.h	/^	ADD_THREAD_STARTED = 4,		\/*!< TRUE if the FTS add thread$/;"	e	enum:fts_status
AES	include/os0file.h	/^		AES = 1,$/;"	e	enum:Encryption::Type
AIO	os/os0file.cc	/^AIO::AIO($/;"	f	class:AIO
AIO	os/os0file.cc	/^class AIO {$/;"	c	file:
AIOHandler	os/os0file.cc	/^class AIOHandler {$/;"	c	file:
APPEND_UNSIGNED	include/data0type.ic	391;"	d	file:
ASSERT_ZERO	page/page0zip.cc	114;"	d	file:
ASSERT_ZERO_BLOB	page/page0zip.cc	119;"	d	file:
ATTRIB_USED_ONLY_IN_DEBUG	trx/trx0rec.cc	2172;"	d	file:
ATTRIB_USED_ONLY_IN_DEBUG	trx/trx0rec.cc	2174;"	d	file:
AUTOINC_NEW_STYLE_LOCKING	handler/ha_innodb.cc	/^static const long AUTOINC_NEW_STYLE_LOCKING = 1;$/;"	v	file:
AUTOINC_NO_LOCKING	handler/ha_innodb.cc	/^static const long AUTOINC_NO_LOCKING = 2;$/;"	v	file:
AUTOINC_OLD_STYLE_LOCKING	handler/ha_innodb.cc	/^static const long AUTOINC_OLD_STYLE_LOCKING = 0;$/;"	v	file:
AbstractCallback	row/row0import.cc	/^class AbstractCallback : public PageCallback {$/;"	c	file:
Altered_partitions	handler/ha_innopart.cc	/^Altered_partitions::Altered_partitions($/;"	f	class:Altered_partitions
Altered_partitions	handler/ha_innopart.cc	/^class Altered_partitions$/;"	c	file:
BEGIN	fts/fts0blex.cc	144;"	d	file:
BEGIN	fts/fts0tlex.cc	144;"	d	file:
BEGIN	pars/lexyy.cc	127;"	d	file:
BG_STAT_IN_PROGRESS	include/dict0mem.h	1607;"	d
BG_STAT_NONE	include/dict0mem.h	1602;"	d
BG_STAT_SHOULD_QUIT	include/dict0mem.h	1612;"	d
BG_THREAD_READY	include/fts0fts.h	/^	BG_THREAD_READY = 2,		\/*!< TRUE if the FTS background thread$/;"	e	enum:fts_status
BG_THREAD_STOP	include/fts0fts.h	/^	BG_THREAD_STOP = 1,	 	\/*!< TRUE if the FTS background thread$/;"	e	enum:fts_status
BIG_ROW_SIZE	include/dict0dict.h	1121;"	d
BLOB_FREED	row/row0log.cc	/^	static const ulonglong BLOB_FREED = ~0ULL;$/;"	m	class:row_log_table_blob_t	file:
BPageLock	include/buf0types.h	/^typedef rw_lock_t BPageLock;$/;"	t
BPageMutex	include/buf0types.h	/^typedef ib_bpmutex_t BPageMutex;$/;"	t
BTR_ALREADY_S_LATCHED	include/btr0btr.h	103;"	d
BTR_BLOB_HDR_NEXT_PAGE_NO	btr/btr0cur.cc	135;"	d	file:
BTR_BLOB_HDR_PART_LEN	btr/btr0cur.cc	133;"	d	file:
BTR_BLOB_HDR_SIZE	btr/btr0cur.cc	138;"	d	file:
BTR_CONT_MODIFY_TREE	include/btr0btr.h	/^	BTR_CONT_MODIFY_TREE = 34,$/;"	e	enum:btr_latch_mode
BTR_CONT_SEARCH_TREE	include/btr0btr.h	/^	BTR_CONT_SEARCH_TREE = 38$/;"	e	enum:btr_latch_mode
BTR_CREATE_FLAG	include/btr0cur.h	/^	BTR_CREATE_FLAG = 16,$/;"	e	enum:__anon10
BTR_CUR_ADAPT	include/btr0cur.h	68;"	d
BTR_CUR_BINARY	include/btr0cur.h	/^	BTR_CUR_BINARY,		\/*!< success using the binary search *\/$/;"	e	enum:btr_cur_method
BTR_CUR_DELETE_IBUF	include/btr0cur.h	/^	BTR_CUR_DELETE_IBUF,	\/*!< performed the intended delete in$/;"	e	enum:btr_cur_method
BTR_CUR_DELETE_REF	include/btr0cur.h	/^	BTR_CUR_DELETE_REF	\/*!< row_purge_poss_sec() failed *\/$/;"	e	enum:btr_cur_method
BTR_CUR_DEL_MARK_IBUF	include/btr0cur.h	/^	BTR_CUR_DEL_MARK_IBUF,	\/*!< performed the intended delete$/;"	e	enum:btr_cur_method
BTR_CUR_FINE_HISTORY_LENGTH	btr/btr0cur.cc	105;"	d	file:
BTR_CUR_HASH	include/btr0cur.h	/^	BTR_CUR_HASH = 1,	\/*!< successful shortcut using$/;"	e	enum:btr_cur_method
BTR_CUR_HASH_ADAPT	include/btr0cur.h	69;"	d
BTR_CUR_HASH_FAIL	include/btr0cur.h	/^	BTR_CUR_HASH_FAIL,	\/*!< failure using hash, success using$/;"	e	enum:btr_cur_method
BTR_CUR_INSERT_TO_IBUF	include/btr0cur.h	/^	BTR_CUR_INSERT_TO_IBUF,	\/*!< performed the intended insert to$/;"	e	enum:btr_cur_method
BTR_CUR_PAGE_COMPRESS_LIMIT	include/btr0cur.h	856;"	d
BTR_CUR_PAGE_REORGANIZE_LIMIT	btr/btr0cur.cc	128;"	d	file:
BTR_CUR_RETRY_DELETE_N_TIMES	include/btr0cur.h	994;"	d
BTR_CUR_RETRY_SLEEP_TIME	include/btr0cur.h	998;"	d
BTR_DELETE	include/btr0btr.h	99;"	d
BTR_DELETE_MARK	include/btr0btr.h	95;"	d
BTR_DELETE_OP	btr/btr0cur.cc	/^	BTR_DELETE_OP,			\/*!< Purge a delete-marked record *\/$/;"	e	enum:btr_op_t	file:
BTR_DELMARK_OP	btr/btr0cur.cc	/^	BTR_DELMARK_OP			\/*!< Mark a record for deletion *\/$/;"	e	enum:btr_op_t	file:
BTR_ESTIMATE	include/btr0btr.h	86;"	d
BTR_EXTERN_FIELD_REF_SIZE	include/btr0types.h	53;"	d
BTR_EXTERN_INHERITED_FLAG	include/btr0cur.h	1029;"	d
BTR_EXTERN_LEN	include/btr0cur.h	1011;"	d
BTR_EXTERN_LOCAL_STORED_MAX_SIZE	include/btr0types.h	56;"	d
BTR_EXTERN_OFFSET	include/btr0cur.h	1009;"	d
BTR_EXTERN_OWNER_FLAG	include/btr0cur.h	1023;"	d
BTR_EXTERN_PAGE_NO	include/btr0cur.h	1008;"	d
BTR_EXTERN_SPACE_ID	include/btr0cur.h	1007;"	d
BTR_FREED_INDEX_ID	btr/btr0btr.cc	/^static const index_id_t	BTR_FREED_INDEX_ID = 0;$/;"	v	file:
BTR_IGNORE_SEC_UNIQUE	include/btr0btr.h	91;"	d
BTR_INSERT	include/btr0btr.h	82;"	d
BTR_INSERT_IGNORE_UNIQUE_OP	btr/btr0cur.cc	/^	BTR_INSERT_IGNORE_UNIQUE_OP,	\/*!< Insert, ignoring UNIQUE *\/$/;"	e	enum:btr_op_t	file:
BTR_INSERT_OP	btr/btr0cur.cc	/^	BTR_INSERT_OP,			\/*!< Insert, do not ignore UNIQUE *\/$/;"	e	enum:btr_op_t	file:
BTR_INTENTION_BOTH	btr/btr0cur.cc	/^	BTR_INTENTION_BOTH,$/;"	e	enum:btr_intention_t	file:
BTR_INTENTION_DELETE	btr/btr0cur.cc	/^	BTR_INTENTION_DELETE,$/;"	e	enum:btr_intention_t	file:
BTR_INTENTION_INSERT	btr/btr0cur.cc	/^	BTR_INTENTION_INSERT$/;"	e	enum:btr_intention_t	file:
BTR_KEEP_IBUF_BITMAP	include/btr0cur.h	/^	BTR_KEEP_IBUF_BITMAP = 32$/;"	e	enum:__anon10
BTR_KEEP_POS_FLAG	include/btr0cur.h	/^	BTR_KEEP_POS_FLAG = 8,$/;"	e	enum:__anon10
BTR_KEEP_SYS_FLAG	include/btr0cur.h	/^	BTR_KEEP_SYS_FLAG = 4,$/;"	e	enum:__anon10
BTR_LATCH_FOR_DELETE	include/btr0btr.h	111;"	d
BTR_LATCH_FOR_INSERT	include/btr0btr.h	107;"	d
BTR_LATCH_MODE_WITHOUT_FLAGS	include/btr0btr.h	125;"	d
BTR_LATCH_MODE_WITHOUT_INTENTION	include/btr0btr.h	138;"	d
BTR_MAX_LEVELS	include/btr0btr.h	53;"	d
BTR_MAX_NODE_LEVEL	include/btr0btr.ic	32;"	d	file:
BTR_MODIFY_EXTERNAL	include/btr0btr.h	119;"	d
BTR_MODIFY_LEAF	include/btr0btr.h	/^	BTR_MODIFY_LEAF	= RW_X_LATCH,$/;"	e	enum:btr_latch_mode
BTR_MODIFY_PREV	include/btr0btr.h	/^	BTR_MODIFY_PREV = 36,$/;"	e	enum:btr_latch_mode
BTR_MODIFY_TREE	include/btr0btr.h	/^	BTR_MODIFY_TREE = 33,$/;"	e	enum:btr_latch_mode
BTR_NO_LATCHES	include/btr0btr.h	/^	BTR_NO_LATCHES = RW_NO_LATCH,$/;"	e	enum:btr_latch_mode
BTR_NO_LOCKING_FLAG	include/btr0cur.h	/^	BTR_NO_LOCKING_FLAG = 2,$/;"	e	enum:__anon10
BTR_NO_OP	btr/btr0cur.cc	/^	BTR_NO_OP = 0,			\/*!< Not buffered *\/$/;"	e	enum:btr_op_t	file:
BTR_NO_UNDO_LOG_FLAG	include/btr0cur.h	/^	BTR_NO_UNDO_LOG_FLAG = 1,$/;"	e	enum:__anon10
BTR_N_LEAF_PAGES	include/btr0btr.h	693;"	d
BTR_PAGE_MAX_REC_SIZE	include/btr0btr.h	42;"	d
BTR_PATH_ARRAY_N_SLOTS	include/btr0cur.h	886;"	d
BTR_PCUR_AFTER	include/btr0pcur.h	/^	BTR_PCUR_AFTER		= 3,$/;"	e	enum:btr_pcur_pos_t
BTR_PCUR_AFTER_LAST_IN_TREE	include/btr0pcur.h	/^	BTR_PCUR_AFTER_LAST_IN_TREE	= 5	\/* in an empty tree *\/$/;"	e	enum:btr_pcur_pos_t
BTR_PCUR_BEFORE	include/btr0pcur.h	/^	BTR_PCUR_BEFORE		= 2,$/;"	e	enum:btr_pcur_pos_t
BTR_PCUR_BEFORE_FIRST_IN_TREE	include/btr0pcur.h	/^	BTR_PCUR_BEFORE_FIRST_IN_TREE	= 4,	\/* in an empty tree *\/$/;"	e	enum:btr_pcur_pos_t
BTR_PCUR_IS_POSITIONED	include/btr0pcur.h	/^	BTR_PCUR_IS_POSITIONED$/;"	e	enum:pcur_pos_t
BTR_PCUR_IS_POSITIONED_OPTIMISTIC	include/btr0pcur.h	/^	BTR_PCUR_IS_POSITIONED_OPTIMISTIC,$/;"	e	enum:pcur_pos_t
BTR_PCUR_NOT_POSITIONED	include/btr0pcur.h	/^	BTR_PCUR_NOT_POSITIONED = 0,$/;"	e	enum:pcur_pos_t
BTR_PCUR_ON	include/btr0pcur.h	/^	BTR_PCUR_ON		= 1,$/;"	e	enum:btr_pcur_pos_t
BTR_PCUR_WAS_POSITIONED	include/btr0pcur.h	/^	BTR_PCUR_WAS_POSITIONED,$/;"	e	enum:pcur_pos_t
BTR_RTREE_DELETE_MARK	include/btr0btr.h	123;"	d
BTR_RTREE_UNDO_INS	include/btr0btr.h	115;"	d
BTR_SEARCH_BUILD_LIMIT	btr/btr0sea.cc	89;"	d	file:
BTR_SEARCH_HASH_ANALYSIS	include/btr0sea.h	341;"	d
BTR_SEARCH_LEAF	include/btr0btr.h	/^	BTR_SEARCH_LEAF = RW_S_LATCH,$/;"	e	enum:btr_latch_mode
BTR_SEARCH_MAGIC_N	include/btr0sea.h	314;"	d
BTR_SEARCH_ON_HASH_LIMIT	include/btr0sea.h	349;"	d
BTR_SEARCH_ON_PATTERN_LIMIT	include/btr0sea.h	345;"	d
BTR_SEARCH_PAGE_BUILD_LIMIT	btr/btr0sea.cc	85;"	d	file:
BTR_SEARCH_PREV	include/btr0btr.h	/^	BTR_SEARCH_PREV = 35,$/;"	e	enum:btr_latch_mode
BTR_SEARCH_TREE	include/btr0btr.h	/^	BTR_SEARCH_TREE = 37,$/;"	e	enum:btr_latch_mode
BTR_SEA_TIMEOUT	include/btr0sea.h	354;"	d
BTR_STORE_INSERT	include/btr0cur.h	/^	BTR_STORE_INSERT = 0,$/;"	e	enum:blob_op
BTR_STORE_INSERT_BULK	include/btr0cur.h	/^	BTR_STORE_INSERT_BULK$/;"	e	enum:blob_op
BTR_STORE_INSERT_UPDATE	include/btr0cur.h	/^	BTR_STORE_INSERT_UPDATE,$/;"	e	enum:blob_op
BTR_STORE_UPDATE	include/btr0cur.h	/^	BTR_STORE_UPDATE,$/;"	e	enum:blob_op
BTR_TABLE_STATS_FROM_SAMPLE	btr/btr0cur.cc	148;"	d	file:
BTR_TOTAL_SIZE	include/btr0btr.h	694;"	d
BUFFER_BLOCK_SIZE	os/os0file.cc	117;"	d	file:
BUF_BLOCK_FILE_PAGE	include/buf0buf.h	/^	BUF_BLOCK_FILE_PAGE,		\/*!< contains a buffered file page *\/$/;"	e	enum:buf_page_state
BUF_BLOCK_MEMORY	include/buf0buf.h	/^	BUF_BLOCK_MEMORY,		\/*!< contains some main memory$/;"	e	enum:buf_page_state
BUF_BLOCK_NOT_USED	include/buf0buf.h	/^	BUF_BLOCK_NOT_USED,		\/*!< is in the free list;$/;"	e	enum:buf_page_state
BUF_BLOCK_POOL_WATCH	include/buf0buf.h	/^	BUF_BLOCK_POOL_WATCH,		\/*!< a sentinel for the buffer pool$/;"	e	enum:buf_page_state
BUF_BLOCK_READY_FOR_USE	include/buf0buf.h	/^	BUF_BLOCK_READY_FOR_USE,	\/*!< when buf_LRU_get_free_block$/;"	e	enum:buf_page_state
BUF_BLOCK_REMOVE_HASH	include/buf0buf.h	/^	BUF_BLOCK_REMOVE_HASH		\/*!< hash index should be removed$/;"	e	enum:buf_page_state
BUF_BLOCK_ZIP_DIRTY	include/buf0buf.h	/^	BUF_BLOCK_ZIP_DIRTY,		\/*!< contains a compressed$/;"	e	enum:buf_page_state
BUF_BLOCK_ZIP_PAGE	include/buf0buf.h	/^	BUF_BLOCK_ZIP_PAGE,		\/*!< contains a clean$/;"	e	enum:buf_page_state
BUF_BUDDY_HIGH	include/buf0types.h	136;"	d
BUF_BUDDY_LOW	include/buf0types.h	124;"	d
BUF_BUDDY_LOW_SHIFT	include/buf0types.h	121;"	d
BUF_BUDDY_SIZES	include/buf0types.h	127;"	d
BUF_BUDDY_SIZES_MAX	include/buf0types.h	130;"	d
BUF_BUDDY_STAMP_FREE	buf/buf0buddy.cc	72;"	d	file:
BUF_BUDDY_STAMP_NONFREE	buf/buf0buddy.cc	76;"	d	file:
BUF_BUDDY_STAMP_OFFSET	buf/buf0buddy.cc	68;"	d	file:
BUF_BUDDY_STATE_FREE	buf/buf0buddy.cc	/^	BUF_BUDDY_STATE_FREE,	\/*!< If the buddy to completely free *\/$/;"	e	enum:buf_buddy_state_t	file:
BUF_BUDDY_STATE_PARTIALLY_USED	buf/buf0buddy.cc	/^	BUF_BUDDY_STATE_PARTIALLY_USED\/*!< Some sub-blocks in the buddy$/;"	e	enum:buf_buddy_state_t	file:
BUF_BUDDY_STATE_USED	buf/buf0buddy.cc	/^	BUF_BUDDY_STATE_USED,	\/*!< Buddy currently in used *\/$/;"	e	enum:buf_buddy_state_t	file:
BUF_DUMP_CREATE	buf/buf0dump.cc	69;"	d	file:
BUF_DUMP_PAGE	buf/buf0dump.cc	71;"	d	file:
BUF_DUMP_SPACE	buf/buf0dump.cc	70;"	d	file:
BUF_FLUSH_LIST	include/buf0types.h	/^	BUF_FLUSH_LIST,			\/*!< flush via the flush list$/;"	e	enum:buf_flush_t
BUF_FLUSH_LRU	include/buf0types.h	/^	BUF_FLUSH_LRU = 0,		\/*!< flush via the LRU list *\/$/;"	e	enum:buf_flush_t
BUF_FLUSH_N_TYPES	include/buf0types.h	/^	BUF_FLUSH_N_TYPES		\/*!< index of last element + 1  *\/$/;"	e	enum:buf_flush_t
BUF_FLUSH_SINGLE_PAGE	include/buf0types.h	/^	BUF_FLUSH_SINGLE_PAGE,		\/*!< flush via the LRU list$/;"	e	enum:buf_flush_t
BUF_FLUSH_VALIDATE_SKIP	buf/buf0flu.cc	240;"	d	file:
BUF_GET	include/buf0buf.h	49;"	d
BUF_GET_IF_IN_POOL	include/buf0buf.h	50;"	d
BUF_GET_IF_IN_POOL_OR_WATCH	include/buf0buf.h	59;"	d
BUF_GET_NO_LATCH	include/buf0buf.h	53;"	d
BUF_GET_POSSIBLY_FREED	include/buf0buf.h	63;"	d
BUF_IO_NONE	include/buf0types.h	/^	BUF_IO_NONE = 0,		\/**< no pending I\/O *\/$/;"	e	enum:buf_io_fix
BUF_IO_PIN	include/buf0types.h	/^	BUF_IO_PIN			\/**< disallow relocation of$/;"	e	enum:buf_io_fix
BUF_IO_READ	include/buf0types.h	/^	BUF_IO_READ,			\/**< read pending *\/$/;"	e	enum:buf_io_fix
BUF_IO_WRITE	include/buf0types.h	/^	BUF_IO_WRITE,			\/**< write pending *\/$/;"	e	enum:buf_io_fix
BUF_KEEP_OLD	include/buf0buf.h	74;"	d
BUF_LRU_DROP_SEARCH_SIZE	buf/buf0lru.cc	/^static const ulint BUF_LRU_DROP_SEARCH_SIZE = 1024;$/;"	v	file:
BUF_LRU_IO_TO_UNZIP_FACTOR	buf/buf0lru.cc	/^static const ulint BUF_LRU_IO_TO_UNZIP_FACTOR = 50;$/;"	v	file:
BUF_LRU_MIN_LEN	buf/buf0flu.cc	200;"	d	file:
BUF_LRU_NON_OLD_MIN_LEN	buf/buf0lru.cc	65;"	d	file:
BUF_LRU_OLD_MIN_LEN	include/buf0lru.h	51;"	d
BUF_LRU_OLD_RATIO_DIV	include/buf0lru.h	241;"	d
BUF_LRU_OLD_RATIO_MAX	include/buf0lru.h	245;"	d
BUF_LRU_OLD_RATIO_MIN	include/buf0lru.h	251;"	d
BUF_LRU_OLD_TOLERANCE	buf/buf0lru.cc	/^static const ulint BUF_LRU_OLD_TOLERANCE = 20;$/;"	v	file:
BUF_LRU_SEARCH_SCAN_THRESHOLD	buf/buf0lru.cc	/^static const ulint BUF_LRU_SEARCH_SCAN_THRESHOLD = 100;$/;"	v	file:
BUF_LRU_STAT_N_INTERVAL	buf/buf0lru.cc	/^static const ulint BUF_LRU_STAT_N_INTERVAL = 50;$/;"	v	file:
BUF_MAKE_YOUNG	include/buf0buf.h	69;"	d
BUF_NO_CHECKSUM_MAGIC	include/buf0buf.h	112;"	d
BUF_PAGE_PRINT_NO_CRASH	include/buf0buf.h	/^	BUF_PAGE_PRINT_NO_CRASH	= 1,$/;"	e	enum:buf_page_print_flags
BUF_PAGE_PRINT_NO_FULL	include/buf0buf.h	/^	BUF_PAGE_PRINT_NO_FULL = 2$/;"	e	enum:buf_page_print_flags
BUF_PAGE_READ_MAX_RETRIES	buf/buf0buf.cc	/^static const ulint	BUF_PAGE_READ_MAX_RETRIES = 100;$/;"	v	file:
BUF_PAGE_STATE_BITS	include/buf0buf.h	1530;"	d
BUF_PEEK_IF_IN_POOL	include/buf0buf.h	51;"	d
BUF_POOL_SIZE_THRESHOLD	include/srv0start.h	54;"	d
BUF_POOL_WATCH_SIZE	include/buf0buf.h	85;"	d
BUF_POOL_ZIP_FOLD	include/buf0buf.h	1870;"	d
BUF_POOL_ZIP_FOLD_BPAGE	include/buf0buf.h	1871;"	d
BUF_POOL_ZIP_FOLD_PTR	include/buf0buf.h	1869;"	d
BUF_READ_AHEAD_AREA	include/buf0rea.h	150;"	d
BUF_READ_AHEAD_PAGES	buf/buf0buf.cc	/^static const ulint	BUF_READ_AHEAD_PAGES = 64;$/;"	v	file:
BUF_READ_AHEAD_PEND_LIMIT	buf/buf0rea.cc	51;"	d	file:
BUF_READ_AHEAD_PORTION	buf/buf0buf.cc	/^static const ulint	BUF_READ_AHEAD_PORTION = 32;$/;"	v	file:
BUF_READ_AHEAD_RANDOM_THRESHOLD	buf/buf0rea.cc	45;"	d	file:
BUF_READ_ANY_PAGE	include/buf0rea.h	156;"	d
BUF_READ_IBUF_PAGES_ONLY	include/buf0rea.h	154;"	d
BUF_REMOVE_ALL_NO_WRITE	include/buf0types.h	/^	BUF_REMOVE_ALL_NO_WRITE,	\/*!< Remove all pages from the buffer$/;"	e	enum:buf_remove_t
BUF_REMOVE_FLUSH_NO_WRITE	include/buf0types.h	/^	BUF_REMOVE_FLUSH_NO_WRITE,	\/*!< Remove only, from the flush list,$/;"	e	enum:buf_remove_t
BUF_REMOVE_FLUSH_WRITE	include/buf0types.h	/^	BUF_REMOVE_FLUSH_WRITE		\/*!< Flush dirty pages to disk only$/;"	e	enum:buf_remove_t
BUG_REPORT_MSG	handler/ha_innodb.cc	/^const char*	BUG_REPORT_MSG =$/;"	v
Block	os/os0file.cc	/^	Block() : m_ptr(), m_in_use() { }$/;"	f	struct:Block
Block	os/os0file.cc	/^struct Block {$/;"	s	file:
Block	os/os0file.cc	/^typedef byte	Block;$/;"	t	file:
BlockMutexPolicy	include/sync0policy.h	/^	BlockMutexPolicy()$/;"	f	class:BlockMutexPolicy
BlockMutexPolicy	include/sync0policy.h	/^class BlockMutexPolicy$/;"	c
BlockWaitMutex	sync/sync0arr.cc	/^typedef BlockSyncArrayMutex::MutexType BlockWaitMutex;$/;"	t	file:
Blocks	os/os0file.cc	/^typedef std::vector<Block> Blocks;$/;"	t	file:
BtrBulk	include/btr0bulk.h	/^	BtrBulk($/;"	f	class:BtrBulk
BtrBulk	include/btr0bulk.h	/^class BtrBulk$/;"	c
BufPoolMutex	include/buf0types.h	/^typedef ib_mutex_t BufPoolMutex;$/;"	t
BufPoolZipMutex	include/buf0types.h	/^typedef BPageMutex BufPoolZipMutex;$/;"	t
CACHE_LINE_SIZE	include/ut0counter.h	36;"	d
CACHE_LINE_SIZE	include/ut0counter.h	38;"	d
CACHE_MIN_IDLE_TIME_US	trx/trx0i_s.cc	1202;"	d	file:
CACHE_STORAGE_HASH_CELLS	trx/trx0i_s.cc	170;"	d	file:
CACHE_STORAGE_INITIAL_SIZE	trx/trx0i_s.cc	168;"	d	file:
CALL_AND_TEST	row/row0row.cc	1309;"	d	file:
CAS	include/os0atomic.h	326;"	d
CFG	include/fil0fil.h	/^	CFG = 3,$/;"	e	enum:ib_extention
CFP	include/fil0fil.h	/^	CFP = 4$/;"	e	enum:ib_extention
CHANGE_BUFFER_DEFAULT_SIZE	include/ibuf0ibuf.h	40;"	d
CHARSET_INFO	include/ha_prototypes.h	/^typedef struct charset_info_st CHARSET_INFO;$/;"	t	typeref:struct:charset_info_st
CHAR_COLL_MASK	include/data0type.h	260;"	d
CHECK_ABORTED_OK	include/dict0dict.h	/^	CHECK_ABORTED_OK,$/;"	e	enum:check_name
CHECK_ALL_COMPLETE	include/dict0dict.h	/^	CHECK_ALL_COMPLETE,$/;"	e	enum:check_name
CHECK_PARTIAL_OK	include/dict0dict.h	/^	CHECK_PARTIAL_OK$/;"	e	enum:check_name
CHRONO_PRINT	include/ut0dbg.h	138;"	d
COMMIT_NODE_SEND	include/trx0trx.h	/^	COMMIT_NODE_SEND = 1,	\/*!< about to send a commit signal to$/;"	e	enum:commit_node_state
COMMIT_NODE_WAIT	include/trx0trx.h	/^	COMMIT_NODE_WAIT	\/*!< commit signal sent to the transaction,$/;"	e	enum:commit_node_state
CONTAIN_CMP	gis/gis0geo.cc	43;"	d	file:
COUNT_ALL_NON_BORING_AND_SKIP_DEL_MARKED	dict/dict0stats.cc	/^	COUNT_ALL_NON_BORING_AND_SKIP_DEL_MARKED,\/* scan all records on$/;"	e	enum:page_scan_method_t	file:
COUNT_ALL_NON_BORING_INCLUDE_DEL_MARKED	dict/dict0stats.cc	/^	COUNT_ALL_NON_BORING_INCLUDE_DEL_MARKED\/* scan all records on$/;"	e	enum:page_scan_method_t	file:
CREATE_TYPES_NAMES	dict/dict0dict.cc	6257;"	d	file:
Callback	row/row0trunc.cc	/^	Callback(table_id_t table_id, bool noredo)$/;"	f	class:Callback
Callback	row/row0trunc.cc	/^class Callback$/;"	c	file:
Check	buf/buf0flu.cc	/^struct	Check {$/;"	s	file:
Check	fil/fil0fil.cc	/^	Check() : size(0), n_open(0) {}$/;"	f	struct:Check
Check	fil/fil0fil.cc	/^struct	Check {$/;"	s	file:
CheckInFreeList	include/buf0buf.h	/^struct	CheckInFreeList {$/;"	s
CheckInLRUList	include/buf0buf.h	/^struct	CheckInLRUList {$/;"	s
CheckUnzipLRUAndLRUList	include/buf0buf.h	/^struct	CheckUnzipLRUAndLRUList {$/;"	s
CheckZipFree	buf/buf0buddy.cc	/^	CheckZipFree(ulint i) : m_i(i) {}$/;"	f	struct:CheckZipFree
CheckZipFree	buf/buf0buddy.cc	/^struct	CheckZipFree {$/;"	s	file:
Command	mtr/mtr0mtr.cc	/^	explicit Command(mtr_t* mtr)$/;"	f	class:mtr_t::Command
Command	mtr/mtr0mtr.cc	/^class mtr_t::Command {$/;"	c	class:mtr_t	file:
Compression	include/os0file.h	/^	Compression() : m_type(NONE) { };$/;"	f	struct:Compression
Compression	include/os0file.h	/^	explicit Compression(Type type)$/;"	f	struct:Compression
Compression	include/os0file.h	/^struct Compression {$/;"	s
Context	include/sync0policy.h	/^		Context()$/;"	f	struct:MutexDebug::Context
Context	include/sync0policy.h	/^		Context(latch_id_t id)$/;"	f	struct:MutexDebug::Context
Context	include/sync0policy.h	/^	struct Context : public latch_t {$/;"	s	class:MutexDebug
Count	handler/ha_innodb.cc	/^		typedef latch_meta_t::CounterType::Count Count;$/;"	t	struct:ShowStatus::GetCount	file:
Count	include/sync0policy.h	/^	typedef typename latch_meta_t::CounterType::Count Count;$/;"	t	class:BlockMutexPolicy
Count	include/sync0types.h	/^	struct Count {$/;"	s	class:LatchCounter
Counter	include/sync0policy.h	/^	typedef latch_meta_t::CounterType Counter;$/;"	t	class:BlockMutexPolicy
Counter	include/sync0policy.h	/^	typedef latch_meta_t::CounterType Counter;$/;"	t	struct:GenericPolicy
CounterType	include/sync0types.h	/^	typedef Counter CounterType;$/;"	t	class:LatchMeta
Counters	include/sync0types.h	/^	typedef std::vector<Count*> Counters;$/;"	t	class:LatchCounter
CreateIndex	row/row0trunc.cc	/^	CreateIndex(dict_table_t* table, bool noredo)$/;"	f	class:CreateIndex
CreateIndex	row/row0trunc.cc	/^class CreateIndex : public Callback {$/;"	c	file:
CreateTracker	sync/sync0debug.cc	/^struct CreateTracker {$/;"	s	file:
DATA_BIG_COL	include/data0type.h	250;"	d
DATA_BIG_LEN_MTYPE	include/data0type.h	247;"	d
DATA_BINARY	include/data0type.h	55;"	d
DATA_BINARY_TYPE	include/data0type.h	182;"	d
DATA_BLOB	include/data0type.h	56;"	d
DATA_CHAR	include/data0type.h	52;"	d
DATA_DECIMAL	include/data0type.h	71;"	d
DATA_DOUBLE	include/data0type.h	70;"	d
DATA_ENGLISH	include/data0type.h	145;"	d
DATA_ERROR	include/data0type.h	148;"	d
DATA_FILE	include/os0file.h	/^		DATA_FILE = 8,$/;"	e	enum:IORequest::__anon12
DATA_FIXBINARY	include/data0type.h	54;"	d
DATA_FLOAT	include/data0type.h	69;"	d
DATA_FTS_DOC_ID	include/data0type.h	173;"	d
DATA_GEOMETRY	include/data0type.h	87;"	d
DATA_GEOMETRY_MTYPE	include/data0type.h	237;"	d
DATA_GIS_MBR	include/data0type.h	190;"	d
DATA_INT	include/data0type.h	62;"	d
DATA_ITT_N_SYS_COLS	include/data0type.h	169;"	d
DATA_LARGE_BINARY	include/data0type.h	253;"	d
DATA_LARGE_MTYPE	include/data0type.h	242;"	d
DATA_LONG_TRUE_VARCHAR	include/data0type.h	193;"	d
DATA_MBMAX	include/data0type.h	210;"	d
DATA_MBMAXLEN	include/data0type.h	230;"	d
DATA_MBMINLEN	include/data0type.h	226;"	d
DATA_MBMINMAXLEN	include/data0type.h	222;"	d
DATA_MBR_LEN	include/data0type.h	191;"	d
DATA_MISSING	include/data0type.h	45;"	d
DATA_MTYPE_CURRENT_MAX	include/data0type.h	100;"	d
DATA_MTYPE_CURRENT_MIN	include/data0type.h	99;"	d
DATA_MTYPE_MAX	include/data0type.h	96;"	d
DATA_MYSQL	include/data0type.h	73;"	d
DATA_MYSQL_BINARY_CHARSET_COLL	include/data0type.h	32;"	d
DATA_MYSQL_TRUE_VARCHAR	include/data0type.h	152;"	d
DATA_MYSQL_TYPE_MASK	include/data0type.h	150;"	d
DATA_NEW_ORDER_NULL_TYPE_BUF_SIZE	include/data0type.h	207;"	d
DATA_NOT_NULL	include/data0type.h	178;"	d
DATA_N_SYS_COLS	include/data0type.h	167;"	d
DATA_ORDER_NULL_TYPE_BUF_SIZE	include/data0type.h	204;"	d
DATA_POINT	include/data0type.h	92;"	d
DATA_POINT_LEN	include/data0type.h	219;"	d
DATA_POINT_MTYPE	include/data0type.h	233;"	d
DATA_ROLL_PTR	include/data0type.h	164;"	d
DATA_ROLL_PTR_LEN	include/data0type.h	165;"	d
DATA_ROW_ID	include/data0type.h	158;"	d
DATA_ROW_ID_LEN	include/data0type.h	159;"	d
DATA_SYS	include/data0type.h	64;"	d
DATA_SYS_CHILD	include/data0type.h	63;"	d
DATA_SYS_PRTYPE_MASK	include/data0type.h	175;"	d
DATA_TRX_ID	include/data0type.h	161;"	d
DATA_TRX_ID_LEN	include/data0type.h	162;"	d
DATA_TUPLE_MAGIC_N	include/data0data.h	616;"	d
DATA_UNSIGNED	include/data0type.h	180;"	d
DATA_VARCHAR	include/data0type.h	46;"	d
DATA_VARMYSQL	include/data0type.h	72;"	d
DATA_VAR_POINT	include/data0type.h	93;"	d
DATA_VIRTUAL	include/data0type.h	197;"	d
DBLWR_RECOVER	include/os0file.h	/^		DBLWR_RECOVER = 4,$/;"	e	enum:IORequest::__anon12
DBUG_INJECT_CRASH	handler/handler0alter.cc	8204;"	d	file:
DBUG_INJECT_CRASH	handler/handler0alter.cc	8211;"	d	file:
DB_CANNOT_ADD_CONSTRAINT	include/db0err.h	/^	DB_CANNOT_ADD_CONSTRAINT,	\/*!< adding a foreign key constraint$/;"	e	enum:dberr_t
DB_CANNOT_DROP_CONSTRAINT	include/db0err.h	/^	DB_CANNOT_DROP_CONSTRAINT,	\/*!< dropping a foreign key constraint$/;"	e	enum:dberr_t
DB_CANNOT_OPEN_FILE	include/db0err.h	/^	DB_CANNOT_OPEN_FILE,		\/*!< Cannot open a file *\/$/;"	e	enum:dberr_t
DB_CANT_CREATE_GEOMETRY_OBJECT	include/db0err.h	/^	DB_CANT_CREATE_GEOMETRY_OBJECT,	\/*!< Cannot create specified Geometry$/;"	e	enum:dberr_t
DB_CHILD_NO_INDEX	include/db0err.h	/^	DB_CHILD_NO_INDEX,		\/*!< the child (foreign) table does$/;"	e	enum:dberr_t
DB_CLUSTER_NOT_FOUND	include/db0err.h	/^	DB_CLUSTER_NOT_FOUND = 30,$/;"	e	enum:dberr_t
DB_COMPUTE_VALUE_FAILED	include/db0err.h	/^	DB_COMPUTE_VALUE_FAILED,	\/*!< Compute generated value failed *\/$/;"	e	enum:dberr_t
DB_CORRUPTION	include/db0err.h	/^	DB_CORRUPTION,			\/*!< data structure corruption$/;"	e	enum:dberr_t
DB_DATA_MISMATCH	include/db0err.h	/^	DB_DATA_MISMATCH = 2000,	\/*!< Column update or read failed$/;"	e	enum:dberr_t
DB_DEADLOCK	include/db0err.h	/^	DB_DEADLOCK,$/;"	e	enum:dberr_t
DB_DUPLICATE_KEY	include/db0err.h	/^	DB_DUPLICATE_KEY,$/;"	e	enum:dberr_t
DB_END_OF_INDEX	include/db0err.h	/^	DB_END_OF_INDEX,$/;"	e	enum:dberr_t
DB_ERROR	include/db0err.h	/^	DB_ERROR,$/;"	e	enum:dberr_t
DB_FAIL	include/db0err.h	/^	DB_FAIL = 1000,$/;"	e	enum:dberr_t
DB_FORCED_ABORT	include/db0err.h	/^	DB_FORCED_ABORT,		\/*!< Transaction was forced to rollback$/;"	e	enum:dberr_t
DB_FOREIGN_DUPLICATE_KEY	include/db0err.h	/^	DB_FOREIGN_DUPLICATE_KEY,	\/*!< foreign key constraints$/;"	e	enum:dberr_t
DB_FOREIGN_EXCEED_MAX_CASCADE	include/db0err.h	/^	DB_FOREIGN_EXCEED_MAX_CASCADE,	\/*!< Foreign key constraint related$/;"	e	enum:dberr_t
DB_FTS_EXCEED_RESULT_CACHE_LIMIT	include/db0err.h	/^	DB_FTS_EXCEED_RESULT_CACHE_LIMIT,	\/*!< FTS query memory$/;"	e	enum:dberr_t
DB_FTS_INVALID_DOCID	include/db0err.h	/^	DB_FTS_INVALID_DOCID,		\/* FTS Doc ID cannot be zero *\/$/;"	e	enum:dberr_t
DB_FTS_TOO_MANY_WORDS_IN_PHRASE	include/db0err.h	/^	DB_FTS_TOO_MANY_WORDS_IN_PHRASE,$/;"	e	enum:dberr_t
DB_IDENTIFIER_TOO_LONG	include/db0err.h	/^	DB_IDENTIFIER_TOO_LONG,		\/*!< Identifier name too long *\/$/;"	e	enum:dberr_t
DB_INDEX_CORRUPT	include/db0err.h	/^	DB_INDEX_CORRUPT,		\/*!< we have corrupted index *\/$/;"	e	enum:dberr_t
DB_INTERRUPTED	include/db0err.h	/^	DB_INTERRUPTED,$/;"	e	enum:dberr_t
DB_INVALID_NULL	include/db0err.h	/^	DB_INVALID_NULL,		\/*!< a NOT NULL column was found to$/;"	e	enum:dberr_t
DB_IO_DECOMPRESS_FAIL	include/db0err.h	/^	DB_IO_DECOMPRESS_FAIL,		\/*!< Failure to decompress a page$/;"	e	enum:dberr_t
DB_IO_DECRYPT_FAIL	include/db0err.h	/^	DB_IO_DECRYPT_FAIL,		\/*!< Failure to decrypt a page$/;"	e	enum:dberr_t
DB_IO_ERROR	include/db0err.h	/^	DB_IO_ERROR = 100,		\/*!< Generic IO error *\/$/;"	e	enum:dberr_t
DB_IO_NO_ENCRYPT_TABLESPACE	include/db0err.h	/^	DB_IO_NO_ENCRYPT_TABLESPACE,	\/*!< The tablespace doesn't support$/;"	e	enum:dberr_t
DB_IO_NO_PUNCH_HOLE	include/db0err.h	/^	DB_IO_NO_PUNCH_HOLE,		\/*!< Punch hole not supported by$/;"	e	enum:dberr_t
DB_IO_NO_PUNCH_HOLE_FS	include/db0err.h	/^	DB_IO_NO_PUNCH_HOLE_FS,		\/*!< The file system doesn't support$/;"	e	enum:dberr_t
DB_IO_NO_PUNCH_HOLE_TABLESPACE	include/db0err.h	/^	DB_IO_NO_PUNCH_HOLE_TABLESPACE,	\/*!< The tablespace doesn't support$/;"	e	enum:dberr_t
DB_IO_PARTIAL_FAILED	include/db0err.h	/^	DB_IO_PARTIAL_FAILED,		\/*!< Partial IO request failed *\/$/;"	e	enum:dberr_t
DB_LOCK_TABLE_FULL	include/db0err.h	/^	DB_LOCK_TABLE_FULL,		\/*!< lock structs have exhausted the$/;"	e	enum:dberr_t
DB_LOCK_WAIT	include/db0err.h	/^	DB_LOCK_WAIT,$/;"	e	enum:dberr_t
DB_LOCK_WAIT_TIMEOUT	include/db0err.h	/^	DB_LOCK_WAIT_TIMEOUT,		\/*!< lock wait lasted too long *\/$/;"	e	enum:dberr_t
DB_MISSING_HISTORY	include/db0err.h	/^	DB_MISSING_HISTORY,		\/*!< required history data has been$/;"	e	enum:dberr_t
DB_MUST_GET_MORE_FILE_SPACE	include/db0err.h	/^	DB_MUST_GET_MORE_FILE_SPACE,	\/*!< the database has to be stopped$/;"	e	enum:dberr_t
DB_NOT_FOUND	include/db0err.h	/^	DB_NOT_FOUND,			\/*!< Generic error code for "Not found"$/;"	e	enum:dberr_t
DB_NO_FK_ON_S_BASE_COL	include/db0err.h	/^	DB_NO_FK_ON_S_BASE_COL,		\/*!< Cannot add foreign constrain$/;"	e	enum:dberr_t
DB_NO_REFERENCED_ROW	include/db0err.h	/^	DB_NO_REFERENCED_ROW,		\/*!< referenced key value not found$/;"	e	enum:dberr_t
DB_NO_SAVEPOINT	include/db0err.h	/^	DB_NO_SAVEPOINT,		\/*!< no savepoint exists with the given$/;"	e	enum:dberr_t
DB_ONLINE_LOG_TOO_BIG	include/db0err.h	/^	DB_ONLINE_LOG_TOO_BIG,		\/*!< Modification log grew too big$/;"	e	enum:dberr_t
DB_OUT_OF_FILE_SPACE	include/db0err.h	/^	DB_OUT_OF_FILE_SPACE,$/;"	e	enum:dberr_t
DB_OUT_OF_MEMORY	include/db0err.h	/^	DB_OUT_OF_MEMORY,$/;"	e	enum:dberr_t
DB_OVERFLOW	include/db0err.h	/^	DB_OVERFLOW,$/;"	e	enum:dberr_t
DB_PARENT_NO_INDEX	include/db0err.h	/^	DB_PARENT_NO_INDEX,		\/*!< the parent table does not$/;"	e	enum:dberr_t
DB_QUE_THR_SUSPENDED	include/db0err.h	/^	DB_QUE_THR_SUSPENDED,$/;"	e	enum:dberr_t
DB_READ_ONLY	include/db0err.h	/^	DB_READ_ONLY,			\/*!< Update operation attempted in$/;"	e	enum:dberr_t
DB_RECORD_NOT_FOUND	include/db0err.h	/^	DB_RECORD_NOT_FOUND = 1500,$/;"	e	enum:dberr_t
DB_ROLLBACK	include/db0err.h	/^	DB_ROLLBACK,$/;"	e	enum:dberr_t
DB_ROW_IS_REFERENCED	include/db0err.h	/^	DB_ROW_IS_REFERENCED,		\/*!< cannot delete or update a row$/;"	e	enum:dberr_t
DB_SCHEMA_NOT_LOCKED	include/db0err.h	/^	DB_SCHEMA_NOT_LOCKED		\/*!< If an API function expects the$/;"	e	enum:dberr_t
DB_STATS_DO_NOT_EXIST	include/db0err.h	/^	DB_STATS_DO_NOT_EXIST,		\/*!< an operation that requires the$/;"	e	enum:dberr_t
DB_STRONG_FAIL	include/db0err.h	/^	DB_STRONG_FAIL,$/;"	e	enum:dberr_t
DB_SUCCESS	include/db0err.h	/^	DB_SUCCESS = 10,$/;"	e	enum:dberr_t
DB_SUCCESS_LOCKED_REC	include/db0err.h	/^	DB_SUCCESS_LOCKED_REC = 9,	\/*!< like DB_SUCCESS, but a new$/;"	e	enum:dberr_t
DB_TABLESPACE_DELETED	include/db0err.h	/^	DB_TABLESPACE_DELETED,		\/*!< tablespace was deleted or is$/;"	e	enum:dberr_t
DB_TABLESPACE_EXISTS	include/db0err.h	/^	DB_TABLESPACE_EXISTS,		\/*!< we cannot create a new single-table$/;"	e	enum:dberr_t
DB_TABLESPACE_NOT_FOUND	include/db0err.h	/^	DB_TABLESPACE_NOT_FOUND,	\/*<! Attempt to delete a tablespace$/;"	e	enum:dberr_t
DB_TABLESPACE_TRUNCATED	include/db0err.h	/^	DB_TABLESPACE_TRUNCATED,	\/*!< tablespace was truncated *\/$/;"	e	enum:dberr_t
DB_TABLE_CORRUPT	include/db0err.h	/^	DB_TABLE_CORRUPT,		\/*!< Table\/clustered index is$/;"	e	enum:dberr_t
DB_TABLE_IN_FK_CHECK	include/db0err.h	/^	DB_TABLE_IN_FK_CHECK,		\/* table is being used in foreign$/;"	e	enum:dberr_t
DB_TABLE_IS_BEING_USED	include/db0err.h	/^	DB_TABLE_IS_BEING_USED,$/;"	e	enum:dberr_t
DB_TABLE_NOT_FOUND	include/db0err.h	/^	DB_TABLE_NOT_FOUND,$/;"	e	enum:dberr_t
DB_TEMP_FILE_WRITE_FAIL	include/db0err.h	/^	DB_TEMP_FILE_WRITE_FAIL,	\/*!< Temp file write failure *\/$/;"	e	enum:dberr_t
DB_TOO_BIG_INDEX_COL	include/db0err.h	/^	DB_TOO_BIG_INDEX_COL,		\/*!< index column size exceeds$/;"	e	enum:dberr_t
DB_TOO_BIG_RECORD	include/db0err.h	/^	DB_TOO_BIG_RECORD,		\/*!< a record in an index would not fit$/;"	e	enum:dberr_t
DB_TOO_MANY_CONCURRENT_TRXS	include/db0err.h	/^	DB_TOO_MANY_CONCURRENT_TRXS,	\/*!< when InnoDB runs out of the$/;"	e	enum:dberr_t
DB_UNDERFLOW	include/db0err.h	/^	DB_UNDERFLOW,$/;"	e	enum:dberr_t
DB_UNDO_RECORD_TOO_BIG	include/db0err.h	/^	DB_UNDO_RECORD_TOO_BIG,		\/*!< the undo log record is too big *\/$/;"	e	enum:dberr_t
DB_UNSUPPORTED	include/db0err.h	/^	DB_UNSUPPORTED,			\/*!< when InnoDB sees any artefact or$/;"	e	enum:dberr_t
DB_WRONG_FILE_NAME	include/db0err.h	/^	DB_WRONG_FILE_NAME,		\/*!< Invalid Filename *\/$/;"	e	enum:dberr_t
DB_ZIP_OVERFLOW	include/db0err.h	/^	DB_ZIP_OVERFLOW,$/;"	e	enum:dberr_t
DEBUG_FTS_SORT_PRINT	include/row0ftsort.h	154;"	d
DEBUG_FTS_SORT_PRINT	include/row0ftsort.h	160;"	d
DEBUG_PRINTF	dict/dict0stats.cc	118;"	d	file:
DEBUG_PRINTF	dict/dict0stats.cc	120;"	d	file:
DECLARE_THREAD	include/os0thread.h	52;"	d
DECLARE_THREAD	include/os0thread.h	69;"	d
DEFAULT_COMPRESSION_LEVEL	include/page0zip.h	61;"	d
DEFAULT_ROW_FORMAT_COMPACT	handler/ha_innodb.cc	/^	DEFAULT_ROW_FORMAT_COMPACT = 1,$/;"	e	enum:default_row_format_enum	file:
DEFAULT_ROW_FORMAT_DYNAMIC	handler/ha_innodb.cc	/^	DEFAULT_ROW_FORMAT_DYNAMIC = 2,$/;"	e	enum:default_row_format_enum	file:
DEFAULT_ROW_FORMAT_REDUNDANT	handler/ha_innodb.cc	/^	DEFAULT_ROW_FORMAT_REDUNDANT = 0,$/;"	e	enum:default_row_format_enum	file:
DEPLOY_FENCE	mach/mach0data.cc	119;"	d	file:
DEPLOY_FENCE	mach/mach0data.cc	64;"	d	file:
DEPRECATED_FORMAT_PARAMETER	handler/ha_innodb.cc	3463;"	d	file:
DFS_IOCTL_ATOMIC_WRITE_SET	fil/fil0fil.cc	541;"	d	file:
DICT_ANTELOPE_MAX_INDEX_COL_LEN	include/dict0mem.h	669;"	d
DICT_BG_YIELD	include/dict0stats_bg.h	69;"	d
DICT_CLUSTERED	include/dict0mem.h	63;"	d
DICT_COLUMNS_ID	include/dict0boot.h	124;"	d
DICT_COL__SYS_COLUMNS__LEN	include/dict0boot.h	/^	DICT_COL__SYS_COLUMNS__LEN		= 5,$/;"	e	enum:dict_col_sys_columns_enum
DICT_COL__SYS_COLUMNS__MTYPE	include/dict0boot.h	/^	DICT_COL__SYS_COLUMNS__MTYPE		= 3,$/;"	e	enum:dict_col_sys_columns_enum
DICT_COL__SYS_COLUMNS__NAME	include/dict0boot.h	/^	DICT_COL__SYS_COLUMNS__NAME		= 2,$/;"	e	enum:dict_col_sys_columns_enum
DICT_COL__SYS_COLUMNS__POS	include/dict0boot.h	/^	DICT_COL__SYS_COLUMNS__POS		= 1,$/;"	e	enum:dict_col_sys_columns_enum
DICT_COL__SYS_COLUMNS__PREC	include/dict0boot.h	/^	DICT_COL__SYS_COLUMNS__PREC		= 6,$/;"	e	enum:dict_col_sys_columns_enum
DICT_COL__SYS_COLUMNS__PRTYPE	include/dict0boot.h	/^	DICT_COL__SYS_COLUMNS__PRTYPE		= 4,$/;"	e	enum:dict_col_sys_columns_enum
DICT_COL__SYS_COLUMNS__TABLE_ID	include/dict0boot.h	/^	DICT_COL__SYS_COLUMNS__TABLE_ID		= 0,$/;"	e	enum:dict_col_sys_columns_enum
DICT_COL__SYS_DATAFILES__PATH	include/dict0boot.h	/^	DICT_COL__SYS_DATAFILES__PATH			= 1,$/;"	e	enum:dict_col_sys_datafiles_enum
DICT_COL__SYS_DATAFILES__SPACE	include/dict0boot.h	/^	DICT_COL__SYS_DATAFILES__SPACE			= 0,$/;"	e	enum:dict_col_sys_datafiles_enum
DICT_COL__SYS_FIELDS__COL_NAME	include/dict0boot.h	/^	DICT_COL__SYS_FIELDS__COL_NAME		= 2,$/;"	e	enum:dict_col_sys_fields_enum
DICT_COL__SYS_FIELDS__INDEX_ID	include/dict0boot.h	/^	DICT_COL__SYS_FIELDS__INDEX_ID		= 0,$/;"	e	enum:dict_col_sys_fields_enum
DICT_COL__SYS_FIELDS__POS	include/dict0boot.h	/^	DICT_COL__SYS_FIELDS__POS		= 1,$/;"	e	enum:dict_col_sys_fields_enum
DICT_COL__SYS_FOREIGN_COLS__FOR_COL_NAME	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN_COLS__FOR_COL_NAME	= 2,$/;"	e	enum:dict_col_sys_foreign_cols_enum
DICT_COL__SYS_FOREIGN_COLS__ID	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN_COLS__ID			= 0,$/;"	e	enum:dict_col_sys_foreign_cols_enum
DICT_COL__SYS_FOREIGN_COLS__POS	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN_COLS__POS			= 1,$/;"	e	enum:dict_col_sys_foreign_cols_enum
DICT_COL__SYS_FOREIGN_COLS__REF_COL_NAME	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN_COLS__REF_COL_NAME	= 3,$/;"	e	enum:dict_col_sys_foreign_cols_enum
DICT_COL__SYS_FOREIGN__FOR_NAME	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN__FOR_NAME		= 1,$/;"	e	enum:dict_col_sys_foreign_enum
DICT_COL__SYS_FOREIGN__ID	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN__ID		= 0,$/;"	e	enum:dict_col_sys_foreign_enum
DICT_COL__SYS_FOREIGN__N_COLS	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN__N_COLS		= 3,$/;"	e	enum:dict_col_sys_foreign_enum
DICT_COL__SYS_FOREIGN__REF_NAME	include/dict0boot.h	/^	DICT_COL__SYS_FOREIGN__REF_NAME		= 2,$/;"	e	enum:dict_col_sys_foreign_enum
DICT_COL__SYS_INDEXES__ID	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__ID		= 1,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_INDEXES__MERGE_THRESHOLD	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__MERGE_THRESHOLD	= 7,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_INDEXES__NAME	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__NAME		= 2,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_INDEXES__N_FIELDS	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__N_FIELDS		= 3,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_INDEXES__PAGE_NO	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__PAGE_NO		= 6,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_INDEXES__SPACE	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__SPACE		= 5,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_INDEXES__TABLE_ID	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__TABLE_ID		= 0,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_INDEXES__TYPE	include/dict0boot.h	/^	DICT_COL__SYS_INDEXES__TYPE		= 4,$/;"	e	enum:dict_col_sys_indexes_enum
DICT_COL__SYS_TABLESPACES__FLAGS	include/dict0boot.h	/^	DICT_COL__SYS_TABLESPACES__FLAGS		= 2,$/;"	e	enum:dict_col_sys_tablespaces_enum
DICT_COL__SYS_TABLESPACES__NAME	include/dict0boot.h	/^	DICT_COL__SYS_TABLESPACES__NAME			= 1,$/;"	e	enum:dict_col_sys_tablespaces_enum
DICT_COL__SYS_TABLESPACES__SPACE	include/dict0boot.h	/^	DICT_COL__SYS_TABLESPACES__SPACE		= 0,$/;"	e	enum:dict_col_sys_tablespaces_enum
DICT_COL__SYS_TABLES__CLUSTER_ID	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__CLUSTER_ID	= 6,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_TABLES__ID	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__ID		= 1,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_TABLES__MIX_ID	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__MIX_ID		= 4,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_TABLES__MIX_LEN	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__MIX_LEN		= 5,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_TABLES__NAME	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__NAME		= 0,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_TABLES__N_COLS	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__N_COLS		= 2,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_TABLES__SPACE	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__SPACE		= 7,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_TABLES__TYPE	include/dict0boot.h	/^	DICT_COL__SYS_TABLES__TYPE		= 3,$/;"	e	enum:dict_col_sys_tables_enum
DICT_COL__SYS_VIRTUAL__BASE_POS	include/dict0boot.h	/^	DICT_COL__SYS_VIRTUAL__BASE_POS		= 2,$/;"	e	enum:dict_col_sys_virtual_enum
DICT_COL__SYS_VIRTUAL__POS	include/dict0boot.h	/^	DICT_COL__SYS_VIRTUAL__POS		= 1,$/;"	e	enum:dict_col_sys_virtual_enum
DICT_COL__SYS_VIRTUAL__TABLE_ID	include/dict0boot.h	/^	DICT_COL__SYS_VIRTUAL__TABLE_ID		= 0,$/;"	e	enum:dict_col_sys_virtual_enum
DICT_CORRUPT	include/dict0mem.h	68;"	d
DICT_ERR_IGNORE_ALL	include/dict0types.h	/^	DICT_ERR_IGNORE_ALL = 0xFFFF	\/*!< ignore all errors *\/$/;"	e	enum:dict_err_ignore_t
DICT_ERR_IGNORE_CORRUPT	include/dict0types.h	/^	DICT_ERR_IGNORE_CORRUPT = 2,	\/*!< skip corrupted indexes *\/$/;"	e	enum:dict_err_ignore_t
DICT_ERR_IGNORE_FK_NOKEY	include/dict0types.h	/^	DICT_ERR_IGNORE_FK_NOKEY = 4,	\/*!< ignore error if any foreign$/;"	e	enum:dict_err_ignore_t
DICT_ERR_IGNORE_INDEX_ROOT	include/dict0types.h	/^	DICT_ERR_IGNORE_INDEX_ROOT = 1,	\/*!< ignore error if index root$/;"	e	enum:dict_err_ignore_t
DICT_ERR_IGNORE_NONE	include/dict0types.h	/^	DICT_ERR_IGNORE_NONE = 0,	\/*!< no error to ignore *\/$/;"	e	enum:dict_err_ignore_t
DICT_ERR_IGNORE_RECOVER_LOCK	include/dict0types.h	/^	DICT_ERR_IGNORE_RECOVER_LOCK = 8,$/;"	e	enum:dict_err_ignore_t
DICT_FIELDS_ID	include/dict0boot.h	126;"	d
DICT_FK_MAX_RECURSIVE_LOAD	include/dict0mem.h	282;"	d
DICT_FLD_LEN_FLAGS	include/dict0boot.h	349;"	d
DICT_FLD_LEN_SPACE	include/dict0boot.h	348;"	d
DICT_FLD__SYS_COLUMNS__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__DB_ROLL_PTR	= 3,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__DB_TRX_ID	= 2,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__LEN	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__LEN		= 7,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__MTYPE	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__MTYPE		= 5,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__NAME	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__NAME		= 4,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__POS	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__POS		= 1,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__PREC	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__PREC		= 8,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__PRTYPE	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__PRTYPE		= 6,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_COLUMNS__TABLE_ID	include/dict0boot.h	/^	DICT_FLD__SYS_COLUMNS__TABLE_ID		= 0,$/;"	e	enum:dict_fld_sys_columns_enum
DICT_FLD__SYS_DATAFILES__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_DATAFILES__DB_ROLL_PTR		= 2,$/;"	e	enum:dict_fld_sys_datafiles_enum
DICT_FLD__SYS_DATAFILES__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_DATAFILES__DB_TRX_ID		= 1,$/;"	e	enum:dict_fld_sys_datafiles_enum
DICT_FLD__SYS_DATAFILES__PATH	include/dict0boot.h	/^	DICT_FLD__SYS_DATAFILES__PATH			= 3,$/;"	e	enum:dict_fld_sys_datafiles_enum
DICT_FLD__SYS_DATAFILES__SPACE	include/dict0boot.h	/^	DICT_FLD__SYS_DATAFILES__SPACE			= 0,$/;"	e	enum:dict_fld_sys_datafiles_enum
DICT_FLD__SYS_FIELDS__COL_NAME	include/dict0boot.h	/^	DICT_FLD__SYS_FIELDS__COL_NAME		= 4,$/;"	e	enum:dict_fld_sys_fields_enum
DICT_FLD__SYS_FIELDS__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_FIELDS__DB_ROLL_PTR	= 3,$/;"	e	enum:dict_fld_sys_fields_enum
DICT_FLD__SYS_FIELDS__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_FIELDS__DB_TRX_ID		= 2,$/;"	e	enum:dict_fld_sys_fields_enum
DICT_FLD__SYS_FIELDS__INDEX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_FIELDS__INDEX_ID		= 0,$/;"	e	enum:dict_fld_sys_fields_enum
DICT_FLD__SYS_FIELDS__POS	include/dict0boot.h	/^	DICT_FLD__SYS_FIELDS__POS		= 1,$/;"	e	enum:dict_fld_sys_fields_enum
DICT_FLD__SYS_FOREIGN_COLS__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_COLS__DB_ROLL_PTR		= 3,$/;"	e	enum:dict_fld_sys_foreign_cols_enum
DICT_FLD__SYS_FOREIGN_COLS__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_COLS__DB_TRX_ID		= 2,$/;"	e	enum:dict_fld_sys_foreign_cols_enum
DICT_FLD__SYS_FOREIGN_COLS__FOR_COL_NAME	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_COLS__FOR_COL_NAME	= 4,$/;"	e	enum:dict_fld_sys_foreign_cols_enum
DICT_FLD__SYS_FOREIGN_COLS__ID	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_COLS__ID			= 0,$/;"	e	enum:dict_fld_sys_foreign_cols_enum
DICT_FLD__SYS_FOREIGN_COLS__POS	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_COLS__POS			= 1,$/;"	e	enum:dict_fld_sys_foreign_cols_enum
DICT_FLD__SYS_FOREIGN_COLS__REF_COL_NAME	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_COLS__REF_COL_NAME	= 5,$/;"	e	enum:dict_fld_sys_foreign_cols_enum
DICT_FLD__SYS_FOREIGN_FOR_NAME__ID	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_FOR_NAME__ID	= 1,$/;"	e	enum:dict_fld_sys_foreign_for_name_enum
DICT_FLD__SYS_FOREIGN_FOR_NAME__NAME	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN_FOR_NAME__NAME	= 0,$/;"	e	enum:dict_fld_sys_foreign_for_name_enum
DICT_FLD__SYS_FOREIGN__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN__DB_ROLL_PTR	= 2,$/;"	e	enum:dict_fld_sys_foreign_enum
DICT_FLD__SYS_FOREIGN__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN__DB_TRX_ID	= 1,$/;"	e	enum:dict_fld_sys_foreign_enum
DICT_FLD__SYS_FOREIGN__FOR_NAME	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN__FOR_NAME		= 3,$/;"	e	enum:dict_fld_sys_foreign_enum
DICT_FLD__SYS_FOREIGN__ID	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN__ID		= 0,$/;"	e	enum:dict_fld_sys_foreign_enum
DICT_FLD__SYS_FOREIGN__N_COLS	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN__N_COLS		= 5,$/;"	e	enum:dict_fld_sys_foreign_enum
DICT_FLD__SYS_FOREIGN__REF_NAME	include/dict0boot.h	/^	DICT_FLD__SYS_FOREIGN__REF_NAME		= 4,$/;"	e	enum:dict_fld_sys_foreign_enum
DICT_FLD__SYS_INDEXES__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__DB_ROLL_PTR	= 3,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__DB_TRX_ID	= 2,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__ID	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__ID		= 1,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__MERGE_THRESHOLD	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__MERGE_THRESHOLD	= 9,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__NAME	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__NAME		= 4,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__N_FIELDS	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__N_FIELDS		= 5,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__PAGE_NO	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__PAGE_NO		= 8,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__SPACE	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__SPACE		= 7,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__TABLE_ID	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__TABLE_ID		= 0,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_INDEXES__TYPE	include/dict0boot.h	/^	DICT_FLD__SYS_INDEXES__TYPE		= 6,$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_FLD__SYS_TABLESPACES__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_TABLESPACES__DB_ROLL_PTR		= 2,$/;"	e	enum:dict_fld_sys_tablespaces_enum
DICT_FLD__SYS_TABLESPACES__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_TABLESPACES__DB_TRX_ID		= 1,$/;"	e	enum:dict_fld_sys_tablespaces_enum
DICT_FLD__SYS_TABLESPACES__FLAGS	include/dict0boot.h	/^	DICT_FLD__SYS_TABLESPACES__FLAGS		= 4,$/;"	e	enum:dict_fld_sys_tablespaces_enum
DICT_FLD__SYS_TABLESPACES__NAME	include/dict0boot.h	/^	DICT_FLD__SYS_TABLESPACES__NAME			= 3,$/;"	e	enum:dict_fld_sys_tablespaces_enum
DICT_FLD__SYS_TABLESPACES__SPACE	include/dict0boot.h	/^	DICT_FLD__SYS_TABLESPACES__SPACE		= 0,$/;"	e	enum:dict_fld_sys_tablespaces_enum
DICT_FLD__SYS_TABLES__CLUSTER_ID	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__CLUSTER_ID	= 8,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__DB_ROLL_PTR	= 2,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__DB_TRX_ID		= 1,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__ID	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__ID		= 3,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__MIX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__MIX_ID		= 6,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__MIX_LEN	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__MIX_LEN		= 7,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__NAME	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__NAME		= 0,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__N_COLS	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__N_COLS		= 4,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__SPACE	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__SPACE		= 9,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLES__TYPE	include/dict0boot.h	/^	DICT_FLD__SYS_TABLES__TYPE		= 5,$/;"	e	enum:dict_fld_sys_tables_enum
DICT_FLD__SYS_TABLE_IDS__ID	include/dict0boot.h	/^	DICT_FLD__SYS_TABLE_IDS__ID		= 0,$/;"	e	enum:dict_fld_sys_table_ids_enum
DICT_FLD__SYS_TABLE_IDS__NAME	include/dict0boot.h	/^	DICT_FLD__SYS_TABLE_IDS__NAME		= 1,$/;"	e	enum:dict_fld_sys_table_ids_enum
DICT_FLD__SYS_VIRTUAL__BASE_POS	include/dict0boot.h	/^	DICT_FLD__SYS_VIRTUAL__BASE_POS		= 2,$/;"	e	enum:dict_fld_sys_virtual_enum
DICT_FLD__SYS_VIRTUAL__DB_ROLL_PTR	include/dict0boot.h	/^	DICT_FLD__SYS_VIRTUAL__DB_ROLL_PTR	= 4,$/;"	e	enum:dict_fld_sys_virtual_enum
DICT_FLD__SYS_VIRTUAL__DB_TRX_ID	include/dict0boot.h	/^	DICT_FLD__SYS_VIRTUAL__DB_TRX_ID	= 3,$/;"	e	enum:dict_fld_sys_virtual_enum
DICT_FLD__SYS_VIRTUAL__POS	include/dict0boot.h	/^	DICT_FLD__SYS_VIRTUAL__POS		= 1,$/;"	e	enum:dict_fld_sys_virtual_enum
DICT_FLD__SYS_VIRTUAL__TABLE_ID	include/dict0boot.h	/^	DICT_FLD__SYS_VIRTUAL__TABLE_ID		= 0,$/;"	e	enum:dict_fld_sys_virtual_enum
DICT_FOREIGN_ON_DELETE_CASCADE	include/dict0mem.h	1249;"	d
DICT_FOREIGN_ON_DELETE_NO_ACTION	include/dict0mem.h	1253;"	d
DICT_FOREIGN_ON_DELETE_SET_NULL	include/dict0mem.h	1250;"	d
DICT_FOREIGN_ON_UPDATE_CASCADE	include/dict0mem.h	1251;"	d
DICT_FOREIGN_ON_UPDATE_NO_ACTION	include/dict0mem.h	1254;"	d
DICT_FOREIGN_ON_UPDATE_SET_NULL	include/dict0mem.h	1252;"	d
DICT_FTS	include/dict0mem.h	70;"	d
DICT_HDR	include/dict0boot.h	138;"	d
DICT_HDR_COLUMNS	include/dict0boot.h	149;"	d
DICT_HDR_FIELDS	include/dict0boot.h	151;"	d
DICT_HDR_FIRST_ID	include/dict0boot.h	130;"	d
DICT_HDR_FSEG_HEADER	include/dict0boot.h	153;"	d
DICT_HDR_INDEXES	include/dict0boot.h	150;"	d
DICT_HDR_INDEX_ID	include/dict0boot.h	144;"	d
DICT_HDR_MAX_SPACE_ID	include/dict0boot.h	145;"	d
DICT_HDR_MIX_ID_LOW	include/dict0boot.h	146;"	d
DICT_HDR_PAGE_NO	include/dict0boot.h	120;"	d
DICT_HDR_PAGE_NO	include/dict0types.h	45;"	d
DICT_HDR_ROW_ID	include/dict0boot.h	142;"	d
DICT_HDR_ROW_ID_WRITE_MARGIN	include/dict0boot.h	354;"	d
DICT_HDR_SPACE	include/dict0boot.h	119;"	d
DICT_HDR_SPACE	include/dict0types.h	44;"	d
DICT_HDR_TABLES	include/dict0boot.h	147;"	d
DICT_HDR_TABLE_ID	include/dict0boot.h	143;"	d
DICT_HDR_TABLE_IDS	include/dict0boot.h	148;"	d
DICT_HEAP_SIZE	dict/dict0dict.cc	112;"	d	file:
DICT_HEAP_SIZE	dict/dict0mem.cc	52;"	d	file:
DICT_IBUF	include/dict0mem.h	67;"	d
DICT_IBUF_ID_MIN	include/dict0types.h	49;"	d
DICT_INDEXES_ID	include/dict0boot.h	125;"	d
DICT_INDEX_MAGIC_N	include/dict0mem.h	928;"	d
DICT_INDEX_MERGE_THRESHOLD_DEFAULT	include/dict0mem.h	872;"	d
DICT_INDEX_SPATIAL_NODEPTR_SIZE	include/dict0dict.h	1207;"	d
DICT_IT_BITS	include/dict0mem.h	76;"	d
DICT_MAX_FIELD_LEN_BY_FORMAT	include/dict0mem.h	676;"	d
DICT_MAX_FIELD_LEN_BY_FORMAT_FLAG	include/dict0mem.h	681;"	d
DICT_MAX_FIXED_COL_LEN	include/dict0mem.h	687;"	d
DICT_NUM_COLS__SYS_COLUMNS	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_COLUMNS		= 7$/;"	e	enum:dict_col_sys_columns_enum
DICT_NUM_COLS__SYS_DATAFILES	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_DATAFILES			= 2$/;"	e	enum:dict_col_sys_datafiles_enum
DICT_NUM_COLS__SYS_FIELDS	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_FIELDS		= 3$/;"	e	enum:dict_col_sys_fields_enum
DICT_NUM_COLS__SYS_FOREIGN	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_FOREIGN		= 4$/;"	e	enum:dict_col_sys_foreign_enum
DICT_NUM_COLS__SYS_FOREIGN_COLS	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_FOREIGN_COLS			= 4$/;"	e	enum:dict_col_sys_foreign_cols_enum
DICT_NUM_COLS__SYS_INDEXES	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_INDEXES		= 8$/;"	e	enum:dict_col_sys_indexes_enum
DICT_NUM_COLS__SYS_TABLES	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_TABLES		= 8$/;"	e	enum:dict_col_sys_tables_enum
DICT_NUM_COLS__SYS_TABLESPACES	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_TABLESPACES			= 3$/;"	e	enum:dict_col_sys_tablespaces_enum
DICT_NUM_COLS__SYS_VIRTUAL	include/dict0boot.h	/^	DICT_NUM_COLS__SYS_VIRTUAL		= 3$/;"	e	enum:dict_col_sys_virtual_enum
DICT_NUM_FIELDS__SYS_COLUMNS	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_COLUMNS		= 9$/;"	e	enum:dict_fld_sys_columns_enum
DICT_NUM_FIELDS__SYS_DATAFILES	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_DATAFILES			= 4$/;"	e	enum:dict_fld_sys_datafiles_enum
DICT_NUM_FIELDS__SYS_FIELDS	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_FIELDS		= 5$/;"	e	enum:dict_fld_sys_fields_enum
DICT_NUM_FIELDS__SYS_FOREIGN	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_FOREIGN		= 6$/;"	e	enum:dict_fld_sys_foreign_enum
DICT_NUM_FIELDS__SYS_FOREIGN_COLS	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_FOREIGN_COLS		= 6$/;"	e	enum:dict_fld_sys_foreign_cols_enum
DICT_NUM_FIELDS__SYS_FOREIGN_FOR_NAME	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_FOREIGN_FOR_NAME	= 2$/;"	e	enum:dict_fld_sys_foreign_for_name_enum
DICT_NUM_FIELDS__SYS_INDEXES	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_INDEXES		= 10$/;"	e	enum:dict_fld_sys_indexes_enum
DICT_NUM_FIELDS__SYS_TABLES	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_TABLES		= 10$/;"	e	enum:dict_fld_sys_tables_enum
DICT_NUM_FIELDS__SYS_TABLESPACES	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_TABLESPACES		= 5$/;"	e	enum:dict_fld_sys_tablespaces_enum
DICT_NUM_FIELDS__SYS_TABLE_IDS	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_TABLE_IDS		= 2$/;"	e	enum:dict_fld_sys_table_ids_enum
DICT_NUM_FIELDS__SYS_VIRTUAL	include/dict0boot.h	/^	DICT_NUM_FIELDS__SYS_VIRTUAL		= 5$/;"	e	enum:dict_fld_sys_virtual_enum
DICT_N_COLS_COMPACT	include/dict0mem.h	115;"	d
DICT_POOL_PER_TABLE_HASH	dict/dict0dict.cc	114;"	d	file:
DICT_POOL_PER_VARYING	dict/dict0dict.cc	116;"	d	file:
DICT_SPATIAL	include/dict0mem.h	72;"	d
DICT_STATS_AUTO_RECALC_OFF	include/dict0mem.h	1571;"	d
DICT_STATS_AUTO_RECALC_ON	include/dict0mem.h	1570;"	d
DICT_STATS_EMPTY_TABLE	include/dict0stats.h	/^	DICT_STATS_EMPTY_TABLE,	\/* Write all zeros (or 1 where it makes sense)$/;"	e	enum:dict_stats_upd_option_t
DICT_STATS_FETCH_ONLY_IF_NOT_IN_MEMORY	include/dict0stats.h	/^	DICT_STATS_FETCH_ONLY_IF_NOT_IN_MEMORY \/* fetch the stats$/;"	e	enum:dict_stats_upd_option_t
DICT_STATS_PERSISTENT_OFF	include/dict0mem.h	1554;"	d
DICT_STATS_PERSISTENT_ON	include/dict0mem.h	1553;"	d
DICT_STATS_RECALC_PERSISTENT	include/dict0stats.h	/^	DICT_STATS_RECALC_PERSISTENT,\/* (re) calculate the$/;"	e	enum:dict_stats_upd_option_t
DICT_STATS_RECALC_TRANSIENT	include/dict0stats.h	/^	DICT_STATS_RECALC_TRANSIENT,\/* (re) calculate the statistics$/;"	e	enum:dict_stats_upd_option_t
DICT_TABLES_ID	include/dict0boot.h	123;"	d
DICT_TABLE_IDS_ID	include/dict0boot.h	128;"	d
DICT_TABLE_IN_DDL	include/dict0mem.h	1316;"	d
DICT_TABLE_LOAD_FROM_CACHE	include/dict0load.h	/^	DICT_TABLE_LOAD_FROM_CACHE = 1	\/*!< Check first whether dict_table_t$/;"	e	enum:dict_table_info_t
DICT_TABLE_LOAD_FROM_RECORD	include/dict0load.h	/^	DICT_TABLE_LOAD_FROM_RECORD = 0,\/*!< Directly populate a dict_table_t$/;"	e	enum:dict_table_info_t
DICT_TABLE_MAGIC_N	include/dict0mem.h	1711;"	d
DICT_TABLE_OP_DROP_ORPHAN	include/dict0dict.h	/^	DICT_TABLE_OP_DROP_ORPHAN,$/;"	e	enum:dict_table_op_t
DICT_TABLE_OP_LOAD_TABLESPACE	include/dict0dict.h	/^	DICT_TABLE_OP_LOAD_TABLESPACE$/;"	e	enum:dict_table_op_t
DICT_TABLE_OP_NORMAL	include/dict0dict.h	/^	DICT_TABLE_OP_NORMAL = 0,$/;"	e	enum:dict_table_op_t
DICT_TF2_BITS	include/dict0mem.h	227;"	d
DICT_TF2_BIT_MASK	include/dict0mem.h	229;"	d
DICT_TF2_DISCARDED	include/dict0mem.h	249;"	d
DICT_TF2_ENCRYPTION	include/dict0mem.h	262;"	d
DICT_TF2_FLAG_IS_SET	include/dict0mem.h	269;"	d
DICT_TF2_FLAG_SET	include/dict0mem.h	266;"	d
DICT_TF2_FLAG_UNSET	include/dict0mem.h	272;"	d
DICT_TF2_FTS	include/dict0mem.h	238;"	d
DICT_TF2_FTS_ADD_DOC_ID	include/dict0mem.h	242;"	d
DICT_TF2_FTS_AUX_HEX_NAME	include/dict0mem.h	253;"	d
DICT_TF2_FTS_HAS_DOC_ID	include/dict0mem.h	235;"	d
DICT_TF2_INTRINSIC	include/dict0mem.h	259;"	d
DICT_TF2_TEMPORARY	include/dict0mem.h	232;"	d
DICT_TF2_UNUSED_BIT_MASK	include/dict0mem.h	228;"	d
DICT_TF2_USE_FILE_PER_TABLE	include/dict0mem.h	246;"	d
DICT_TF_BITS	include/dict0mem.h	145;"	d
DICT_TF_BIT_MASK	include/dict0mem.h	152;"	d
DICT_TF_COMPACT	include/dict0mem.h	111;"	d
DICT_TF_GET_COMPACT	include/dict0mem.h	194;"	d
DICT_TF_GET_UNUSED	include/dict0mem.h	214;"	d
DICT_TF_GET_ZIP_SSIZE	include/dict0mem.h	198;"	d
DICT_TF_HAS_ATOMIC_BLOBS	include/dict0mem.h	202;"	d
DICT_TF_HAS_DATA_DIR	include/dict0mem.h	206;"	d
DICT_TF_HAS_SHARED_SPACE	include/dict0mem.h	210;"	d
DICT_TF_MASK_ATOMIC_BLOBS	include/dict0mem.h	181;"	d
DICT_TF_MASK_COMPACT	include/dict0mem.h	173;"	d
DICT_TF_MASK_DATA_DIR	include/dict0mem.h	185;"	d
DICT_TF_MASK_SHARED_SPACE	include/dict0mem.h	189;"	d
DICT_TF_MASK_ZIP_SSIZE	include/dict0mem.h	177;"	d
DICT_TF_POS_ATOMIC_BLOBS	include/dict0mem.h	160;"	d
DICT_TF_POS_COMPACT	include/dict0mem.h	155;"	d
DICT_TF_POS_DATA_DIR	include/dict0mem.h	163;"	d
DICT_TF_POS_SHARED_SPACE	include/dict0mem.h	166;"	d
DICT_TF_POS_UNUSED	include/dict0mem.h	169;"	d
DICT_TF_POS_ZIP_SSIZE	include/dict0mem.h	157;"	d
DICT_TF_REDUNDANT	include/dict0mem.h	109;"	d
DICT_TF_WIDTH_ATOMIC_BLOBS	include/dict0mem.h	128;"	d
DICT_TF_WIDTH_COMPACT	include/dict0mem.h	118;"	d
DICT_TF_WIDTH_DATA_DIR	include/dict0mem.h	134;"	d
DICT_TF_WIDTH_SHARED_SPACE	include/dict0mem.h	142;"	d
DICT_TF_WIDTH_ZIP_SSIZE	include/dict0mem.h	121;"	d
DICT_UNIQUE	include/dict0mem.h	66;"	d
DICT_VIRTUAL	include/dict0mem.h	74;"	d
DISABLE_PARTIAL_IO_WARNINGS	include/os0file.h	/^		DISABLE_PARTIAL_IO_WARNINGS = 32,$/;"	e	enum:IORequest::__anon12
DISJOINT_CMP	gis/gis0geo.cc	53;"	d	file:
DISPLAY	fil/fil0fil.cc	7503;"	d	file:
DONE	include/os0once.h	/^	static const state_t	DONE = 2;$/;"	m	class:os_once
DOT_CFG	include/fil0fil.h	309;"	d
DOT_CPF	include/fil0fil.h	310;"	d
DOT_IBD	include/fil0fil.h	307;"	d
DOT_ISL	include/fil0fil.h	308;"	d
DO_NOT_WAKE	include/os0file.h	/^		DO_NOT_WAKE = 64,$/;"	e	enum:IORequest::__anon12
DTUPLE_EST_ALLOC	include/data0data.h	302;"	d
DYN_ARRAY_DATA_SIZE	include/dyn0types.h	34;"	d
DYN_BLOCK_FULL_FLAG	include/dyn0types.h	37;"	d
DYN_BLOCK_MAGIC_N	include/dyn0types.h	30;"	d
Datafile	include/fsp0file.h	/^	Datafile()$/;"	f	class:Datafile
Datafile	include/fsp0file.h	/^	Datafile(const Datafile& file)$/;"	f	class:Datafile
Datafile	include/fsp0file.h	/^	Datafile(const char* name, ulint flags, ulint size, ulint order)$/;"	f	class:Datafile
Datafile	include/fsp0file.h	/^class Datafile {$/;"	c
DeadlockChecker	lock/lock0lock.cc	/^	DeadlockChecker($/;"	f	class:DeadlockChecker	file:
DeadlockChecker	lock/lock0lock.cc	/^class DeadlockChecker {$/;"	c	file:
DebugCheck	mtr/mtr0mtr.cc	/^struct DebugCheck {$/;"	s	file:
DictSysMutex	include/dict0types.h	/^typedef ib_mutex_t DictSysMutex;$/;"	t
DropIndex	row/row0trunc.cc	/^	DropIndex(dict_table_t* table, bool noredo)$/;"	f	class:DropIndex
DropIndex	row/row0trunc.cc	/^class DropIndex : public Callback {$/;"	c	file:
ECHO	fts/fts0blex.cc	615;"	d	file:
ECHO	fts/fts0tlex.cc	611;"	d	file:
ECHO	pars/lexyy.cc	1101;"	d	file:
ENCRYPTION_INFO_SIZE_V1	include/os0file.h	/^static const ulint ENCRYPTION_INFO_SIZE_V1 = (ENCRYPTION_MAGIC_SIZE \\$/;"	v
ENCRYPTION_INFO_SIZE_V2	include/os0file.h	/^static const ulint ENCRYPTION_INFO_SIZE_V2 = (ENCRYPTION_MAGIC_SIZE \\$/;"	v
ENCRYPTION_KEY_LEN	include/os0file.h	/^static const ulint ENCRYPTION_KEY_LEN = 32;$/;"	v
ENCRYPTION_KEY_MAGIC_V1	include/os0file.h	/^static const char ENCRYPTION_KEY_MAGIC_V1[] = "lCA";$/;"	v
ENCRYPTION_KEY_MAGIC_V2	include/os0file.h	/^static const char ENCRYPTION_KEY_MAGIC_V2[] = "lCB";$/;"	v
ENCRYPTION_MAGIC_SIZE	include/os0file.h	/^static const ulint ENCRYPTION_MAGIC_SIZE = 3;$/;"	v
ENCRYPTION_MASTER_KEY_NAME_MAX_LEN	include/os0file.h	/^static const ulint ENCRYPTION_MASTER_KEY_NAME_MAX_LEN = 100;$/;"	v
ENCRYPTION_MASTER_KEY_PRIFIX	include/os0file.h	/^static const char ENCRYPTION_MASTER_KEY_PRIFIX[] = "INNODBKey";$/;"	v
ENCRYPTION_MASTER_KEY_PRIFIX_LEN	include/os0file.h	/^static const ulint ENCRYPTION_MASTER_KEY_PRIFIX_LEN = 9;$/;"	v
ENCRYPTION_SERVER_UUID_LEN	include/os0file.h	/^static const ulint ENCRYPTION_SERVER_UUID_LEN = 36;$/;"	v
ENCRYPTION_VERSION_1	include/os0file.h	/^		ENCRYPTION_VERSION_1 = 0,$/;"	e	enum:Encryption::Version
ENCRYPTION_VERSION_2	include/os0file.h	/^		ENCRYPTION_VERSION_2 = 1,$/;"	e	enum:Encryption::Version
END	include/ut0stage.h	/^		END = 7,$/;"	e	enum:ut_stage_alter_t::__anon11
END_OF_ST_FIELD_INFO	handler/i_s.cc	172;"	d	file:
EOB_ACT_CONTINUE_SCAN	fts/fts0blex.cc	183;"	d	file:
EOB_ACT_CONTINUE_SCAN	fts/fts0tlex.cc	183;"	d	file:
EOB_ACT_CONTINUE_SCAN	pars/lexyy.cc	175;"	d	file:
EOB_ACT_END_OF_FILE	fts/fts0blex.cc	184;"	d	file:
EOB_ACT_END_OF_FILE	fts/fts0tlex.cc	184;"	d	file:
EOB_ACT_END_OF_FILE	pars/lexyy.cc	176;"	d	file:
EOB_ACT_LAST_MATCH	fts/fts0blex.cc	185;"	d	file:
EOB_ACT_LAST_MATCH	fts/fts0tlex.cc	185;"	d	file:
EOB_ACT_LAST_MATCH	pars/lexyy.cc	177;"	d	file:
EQUAL_CMP	gis/gis0geo.cc	58;"	d	file:
EQ_CURRENT_THD	handler/ha_innodb.cc	131;"	d	file:
ERROR_CREATING_MSG	handler/ha_innodb.cc	/^const char*	ERROR_CREATING_MSG =$/;"	v
EXIT_SUCCESS	fts/fts0pars.cc	284;"	d	file:
EXIT_SUCCESS	fts/fts0pars.cc	312;"	d	file:
Element	include/ut0pool.h	/^	struct Element {$/;"	s	struct:Pool
Encryption	include/os0file.h	/^	Encryption() : m_type(NONE) { };$/;"	f	struct:Encryption
Encryption	include/os0file.h	/^	Encryption(const Encryption& other)$/;"	f	struct:Encryption
Encryption	include/os0file.h	/^	explicit Encryption(Type type)$/;"	f	struct:Encryption
Encryption	include/os0file.h	/^struct Encryption {$/;"	s
EventMutex	include/ut0mutex.h	/^typedef OSMutex EventMutex;$/;"	t
FALSE	include/univ.i	481;"	d	file:
FALSE	include/ut0rbt.h	44;"	d
FIELD_REF_SIZE	include/page0size.h	32;"	d
FILENAME_CHARSET_MAXNAMLEN	include/univ.i	369;"	d	file:
FILE_FORMAT_NAME_N	trx/trx0sys.cc	/^static const ulint	FILE_FORMAT_NAME_N$/;"	v	file:
FILE_LOGFILE	page/page0zip.cc	868;"	d	file:
FILE_LOGFILE	page/page0zip.cc	873;"	d	file:
FILE_STATUS_NOT_REGULAR_FILE_ERROR	include/fsp0sysspace.h	/^		FILE_STATUS_NOT_REGULAR_FILE_ERROR \/** not a regular file *\/$/;"	e	enum:SysTablespace::file_status_t
FILE_STATUS_READ_WRITE_ERROR	include/fsp0sysspace.h	/^		FILE_STATUS_READ_WRITE_ERROR,	\/** not readable\/writable *\/$/;"	e	enum:SysTablespace::file_status_t
FILE_STATUS_RW_PERMISSION_ERROR	include/fsp0sysspace.h	/^		FILE_STATUS_RW_PERMISSION_ERROR,\/** permission error *\/$/;"	e	enum:SysTablespace::file_status_t
FILE_STATUS_VOID	include/fsp0sysspace.h	/^		FILE_STATUS_VOID = 0,		\/** status not set *\/$/;"	e	enum:SysTablespace::file_status_t
FIL_ADDR_BYTE	include/fil0fil.h	421;"	d
FIL_ADDR_PAGE	include/fil0fil.h	420;"	d
FIL_ADDR_SIZE	include/fil0fil.h	423;"	d
FIL_IBD_FILE_INITIAL_SIZE	include/fil0fil.h	409;"	d
FIL_LOAD_ID_CHANGED	include/fil0fil.h	/^	FIL_LOAD_ID_CHANGED,$/;"	e	enum:fil_load_status
FIL_LOAD_INVALID	include/fil0fil.h	/^	FIL_LOAD_INVALID$/;"	e	enum:fil_load_status
FIL_LOAD_NOT_FOUND	include/fil0fil.h	/^	FIL_LOAD_NOT_FOUND,$/;"	e	enum:fil_load_status
FIL_LOAD_OK	include/fil0fil.h	/^	FIL_LOAD_OK,$/;"	e	enum:fil_load_status
FIL_NODE_MAGIC_N	include/fil0fil.h	296;"	d
FIL_NULL	include/fil0fil.h	412;"	d
FIL_OPERATION_CLOSE	fil/fil0fil.cc	/^	FIL_OPERATION_CLOSE,	\/*!< close a single-table tablespace *\/$/;"	e	enum:fil_operation_t	file:
FIL_OPERATION_DELETE	fil/fil0fil.cc	/^	FIL_OPERATION_DELETE,	\/*!< delete a single-table tablespace *\/$/;"	e	enum:fil_operation_t	file:
FIL_OPERATION_TRUNCATE	fil/fil0fil.cc	/^	FIL_OPERATION_TRUNCATE	\/*!< truncate a single-table tablespace *\/$/;"	e	enum:fil_operation_t	file:
FIL_PAGE_ALGORITHM_V1	include/fil0fil.h	/^static const ulint FIL_PAGE_ALGORITHM_V1 = FIL_PAGE_VERSION + 1;$/;"	v
FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID	include/fil0fil.h	508;"	d
FIL_PAGE_COMPRESSED	include/fil0fil.h	542;"	d
FIL_PAGE_COMPRESSED_AND_ENCRYPTED	include/fil0fil.h	544;"	d
FIL_PAGE_COMPRESS_SIZE_V1	include/fil0fil.h	/^static const ulint FIL_PAGE_COMPRESS_SIZE_V1 = FIL_PAGE_ORIGINAL_SIZE_V1 + 2;$/;"	v
FIL_PAGE_DATA	include/fil0fil.h	512;"	d
FIL_PAGE_DATA_END	include/fil0fil.h	520;"	d
FIL_PAGE_ENCRYPTED	include/fil0fil.h	543;"	d
FIL_PAGE_ENCRYPTED_RTREE	include/fil0fil.h	546;"	d
FIL_PAGE_END_LSN_OLD_CHKSUM	include/fil0fil.h	516;"	d
FIL_PAGE_FILE_FLUSH_LSN	include/fil0fil.h	478;"	d
FIL_PAGE_IBUF_BITMAP	include/fil0fil.h	531;"	d
FIL_PAGE_IBUF_FREE_LIST	include/fil0fil.h	528;"	d
FIL_PAGE_INDEX	include/fil0fil.h	524;"	d
FIL_PAGE_INODE	include/fil0fil.h	527;"	d
FIL_PAGE_LSN	include/fil0fil.h	461;"	d
FIL_PAGE_NEXT	include/fil0fil.h	451;"	d
FIL_PAGE_OFFSET	include/fil0fil.h	443;"	d
FIL_PAGE_ORIGINAL_SIZE_V1	include/fil0fil.h	/^static const ulint FIL_PAGE_ORIGINAL_SIZE_V1 = FIL_PAGE_ORIGINAL_TYPE_V1 + 2;$/;"	v
FIL_PAGE_ORIGINAL_TYPE_V1	include/fil0fil.h	/^static const ulint FIL_PAGE_ORIGINAL_TYPE_V1 = FIL_PAGE_ALGORITHM_V1 + 1;$/;"	v
FIL_PAGE_PREV	include/fil0fil.h	444;"	d
FIL_PAGE_RTREE	include/fil0fil.h	525;"	d
FIL_PAGE_SPACE_ID	include/fil0fil.h	510;"	d
FIL_PAGE_SPACE_OR_CHKSUM	include/fil0fil.h	439;"	d
FIL_PAGE_TYPE	include/fil0fil.h	463;"	d
FIL_PAGE_TYPE_ALLOCATED	include/fil0fil.h	530;"	d
FIL_PAGE_TYPE_BLOB	include/fil0fil.h	536;"	d
FIL_PAGE_TYPE_FSP_HDR	include/fil0fil.h	534;"	d
FIL_PAGE_TYPE_LAST	include/fil0fil.h	549;"	d
FIL_PAGE_TYPE_SYS	include/fil0fil.h	532;"	d
FIL_PAGE_TYPE_TRX_SYS	include/fil0fil.h	533;"	d
FIL_PAGE_TYPE_UNKNOWN	include/fil0fil.h	539;"	d
FIL_PAGE_TYPE_XDES	include/fil0fil.h	535;"	d
FIL_PAGE_TYPE_ZBLOB	include/fil0fil.h	537;"	d
FIL_PAGE_TYPE_ZBLOB2	include/fil0fil.h	538;"	d
FIL_PAGE_UNDO_LOG	include/fil0fil.h	526;"	d
FIL_PAGE_VERSION	include/fil0fil.h	/^static const ulint FIL_PAGE_VERSION = FIL_PAGE_FILE_FLUSH_LSN;$/;"	v
FIL_RTREE_SPLIT_SEQ_NUM	include/fil0fil.h	505;"	d
FIL_SPACE_MAGIC_N	include/fil0fil.h	242;"	d
FIL_TYPE_IMPORT	include/fil0fil.h	/^	FIL_TYPE_IMPORT,$/;"	e	enum:fil_type_t
FIL_TYPE_LOG	include/fil0fil.h	/^	FIL_TYPE_LOG$/;"	e	enum:fil_type_t
FIL_TYPE_TABLESPACE	include/fil0fil.h	/^	FIL_TYPE_TABLESPACE,$/;"	e	enum:fil_type_t
FIL_TYPE_TEMPORARY	include/fil0fil.h	/^	FIL_TYPE_TEMPORARY,$/;"	e	enum:fil_type_t
FIL_VALIDATE_SKIP	fil/fil0fil.cc	241;"	d	file:
FK_MAX_CASCADE_DEL	include/dict0mem.h	290;"	d
FLEXINT_H	fts/fts0blex.cc	31;"	d	file:
FLEXINT_H	fts/fts0tlex.cc	31;"	d	file:
FLEXINT_H	include/fts0blex.h	34;"	d
FLEXINT_H	include/fts0tlex.h	34;"	d
FLEXINT_H	pars/lexyy.cc	31;"	d	file:
FLEX_BETA	fts/fts0blex.cc	15;"	d	file:
FLEX_BETA	fts/fts0tlex.cc	15;"	d	file:
FLEX_BETA	include/fts0blex.h	18;"	d
FLEX_BETA	include/fts0tlex.h	18;"	d
FLEX_BETA	pars/lexyy.cc	15;"	d	file:
FLEX_SCANNER	fts/fts0blex.cc	10;"	d	file:
FLEX_SCANNER	fts/fts0tlex.cc	10;"	d	file:
FLEX_SCANNER	include/fts0blex.h	13;"	d
FLEX_SCANNER	include/fts0tlex.h	13;"	d
FLEX_SCANNER	pars/lexyy.cc	10;"	d	file:
FLST_BASE_NODE_SIZE	include/fut0lst.h	45;"	d
FLST_FIRST	include/fut0lst.ic	40;"	d	file:
FLST_LAST	include/fut0lst.ic	42;"	d	file:
FLST_LEN	include/fut0lst.ic	39;"	d	file:
FLST_NEXT	include/fut0lst.ic	34;"	d	file:
FLST_NODE_SIZE	include/fut0lst.h	49;"	d
FLST_PREV	include/fut0lst.ic	31;"	d	file:
FLUSH	include/ut0stage.h	/^		FLUSH = 4,$/;"	e	enum:ut_stage_alter_t::__anon11
FORCE_RECOVERY_MSG	handler/ha_innodb.cc	/^const char*	FORCE_RECOVERY_MSG =$/;"	v
FOREIGN_KEY_CONSTRAINTS_MSG	handler/ha_innodb.cc	/^const char*	FOREIGN_KEY_CONSTRAINTS_MSG =$/;"	v
FSEG_ARR_OFFSET	include/fsp0fsp.h	126;"	d
FSEG_FILLFACTOR	include/fsp0fsp.h	164;"	d
FSEG_FRAG_ARR	include/fsp0fsp.h	142;"	d
FSEG_FRAG_ARR_N_SLOTS	include/fsp0fsp.h	146;"	d
FSEG_FRAG_LIMIT	include/fsp0fsp.h	174;"	d
FSEG_FRAG_SLOT_SIZE	include/fsp0fsp.h	149;"	d
FSEG_FREE	include/fsp0fsp.h	133;"	d
FSEG_FREE_LIST_LIMIT	include/fsp0fsp.h	181;"	d
FSEG_FREE_LIST_MAX_LEN	include/fsp0fsp.h	186;"	d
FSEG_FULL	include/fsp0fsp.h	138;"	d
FSEG_HDR_OFFSET	include/fsp0types.h	79;"	d
FSEG_HDR_PAGE_NO	include/fsp0types.h	78;"	d
FSEG_HDR_SPACE	include/fsp0types.h	77;"	d
FSEG_HEADER_SIZE	include/fsp0types.h	81;"	d
FSEG_ID	include/fsp0fsp.h	128;"	d
FSEG_INODE_PAGE_NODE	include/fsp0fsp.h	122;"	d
FSEG_INODE_SIZE	include/fsp0fsp.h	153;"	d
FSEG_MAGIC_N	include/fsp0fsp.h	140;"	d
FSEG_MAGIC_N_VALUE	include/fsp0fsp.h	162;"	d
FSEG_NOT_FULL	include/fsp0fsp.h	136;"	d
FSEG_NOT_FULL_N_USED	include/fsp0fsp.h	130;"	d
FSEG_PAGE_DATA	include/fsp0types.h	68;"	d
FSP_BLOB	include/fsp0types.h	/^	FSP_BLOB	\/* reservation being done for BLOB insertion *\/$/;"	e	enum:fsp_reserve_t
FSP_CLEANING	include/fsp0types.h	/^	FSP_CLEANING,	\/* reservation done during purge operations *\/$/;"	e	enum:fsp_reserve_t
FSP_DICT_HDR_PAGE_NO	include/fsp0types.h	177;"	d
FSP_DOWN	include/fsp0types.h	40;"	d
FSP_EXTENT_SIZE	include/fsp0types.h	54;"	d
FSP_EXTENT_SIZE_MAX	include/fsp0types.h	61;"	d
FSP_EXTENT_SIZE_MIN	include/fsp0types.h	64;"	d
FSP_FIRST_INODE_PAGE_NO	include/fsp0types.h	160;"	d
FSP_FIRST_RSEG_PAGE_NO	include/fsp0types.h	175;"	d
FSP_FLAGS_GET_ENCRYPTION	include/fsp0types.h	356;"	d
FSP_FLAGS_GET_PAGE_SSIZE	include/fsp0types.h	340;"	d
FSP_FLAGS_GET_POST_ANTELOPE	include/fsp0types.h	328;"	d
FSP_FLAGS_GET_SHARED	include/fsp0types.h	348;"	d
FSP_FLAGS_GET_TEMPORARY	include/fsp0types.h	352;"	d
FSP_FLAGS_GET_UNUSED	include/fsp0types.h	360;"	d
FSP_FLAGS_GET_ZIP_SSIZE	include/fsp0types.h	332;"	d
FSP_FLAGS_HAS_ATOMIC_BLOBS	include/fsp0types.h	336;"	d
FSP_FLAGS_HAS_DATA_DIR	include/fsp0types.h	344;"	d
FSP_FLAGS_MASK	include/fsp0types.h	265;"	d
FSP_FLAGS_MASK_ATOMIC_BLOBS	include/fsp0types.h	303;"	d
FSP_FLAGS_MASK_DATA_DIR	include/fsp0types.h	311;"	d
FSP_FLAGS_MASK_ENCRYPTION	include/fsp0types.h	323;"	d
FSP_FLAGS_MASK_PAGE_SSIZE	include/fsp0types.h	307;"	d
FSP_FLAGS_MASK_POST_ANTELOPE	include/fsp0types.h	295;"	d
FSP_FLAGS_MASK_SHARED	include/fsp0types.h	315;"	d
FSP_FLAGS_MASK_TEMPORARY	include/fsp0types.h	319;"	d
FSP_FLAGS_MASK_ZIP_SSIZE	include/fsp0types.h	299;"	d
FSP_FLAGS_POS_ATOMIC_BLOBS	include/fsp0types.h	273;"	d
FSP_FLAGS_POS_DATA_DIR	include/fsp0types.h	279;"	d
FSP_FLAGS_POS_ENCRYPTION	include/fsp0types.h	288;"	d
FSP_FLAGS_POS_PAGE_SSIZE	include/fsp0types.h	276;"	d
FSP_FLAGS_POS_POST_ANTELOPE	include/fsp0types.h	268;"	d
FSP_FLAGS_POS_SHARED	include/fsp0types.h	282;"	d
FSP_FLAGS_POS_TEMPORARY	include/fsp0types.h	285;"	d
FSP_FLAGS_POS_UNUSED	include/fsp0types.h	291;"	d
FSP_FLAGS_POS_ZIP_SSIZE	include/fsp0types.h	270;"	d
FSP_FLAGS_WIDTH	include/fsp0types.h	255;"	d
FSP_FLAGS_WIDTH_ATOMIC_BLOBS	include/fsp0types.h	238;"	d
FSP_FLAGS_WIDTH_DATA_DIR	include/fsp0types.h	243;"	d
FSP_FLAGS_WIDTH_ENCRYPTION	include/fsp0types.h	253;"	d
FSP_FLAGS_WIDTH_PAGE_SSIZE	include/fsp0types.h	240;"	d
FSP_FLAGS_WIDTH_POST_ANTELOPE	include/fsp0types.h	232;"	d
FSP_FLAGS_WIDTH_SHARED	include/fsp0types.h	246;"	d
FSP_FLAGS_WIDTH_TEMPORARY	include/fsp0types.h	250;"	d
FSP_FLAGS_WIDTH_ZIP_SSIZE	include/fsp0types.h	234;"	d
FSP_FRAG_N_USED	include/fsp0fsp.h	79;"	d
FSP_FREE	include/fsp0fsp.h	81;"	d
FSP_FREE_ADD	include/fsp0fsp.h	103;"	d
FSP_FREE_FRAG	include/fsp0fsp.h	82;"	d
FSP_FREE_LIMIT	include/fsp0fsp.h	67;"	d
FSP_FULL_FRAG	include/fsp0fsp.h	85;"	d
FSP_HEADER_OFFSET	include/fsp0fsp.h	46;"	d
FSP_HEADER_SIZE	include/fsp0fsp.h	101;"	d
FSP_IBUF_BITMAP_OFFSET	include/fsp0types.h	155;"	d
FSP_IBUF_HEADER_PAGE_NO	include/fsp0types.h	163;"	d
FSP_IBUF_TREE_ROOT_PAGE_NO	include/fsp0types.h	166;"	d
FSP_NORMAL	include/fsp0types.h	/^	FSP_NORMAL,	\/* reservation during normal B-tree operations *\/$/;"	e	enum:fsp_reserve_t
FSP_NOT_USED	include/fsp0fsp.h	61;"	d
FSP_NO_DIR	include/fsp0types.h	41;"	d
FSP_SEG_ID	include/fsp0fsp.h	88;"	d
FSP_SEG_INODES_FREE	include/fsp0fsp.h	95;"	d
FSP_SEG_INODES_FULL	include/fsp0fsp.h	91;"	d
FSP_SEG_INODES_PER_PAGE	include/fsp0fsp.h	157;"	d
FSP_SIZE	include/fsp0fsp.h	65;"	d
FSP_SPACE_FLAGS	include/fsp0fsp.h	77;"	d
FSP_SPACE_ID	include/fsp0fsp.h	60;"	d
FSP_TRX_SYS_PAGE_NO	include/fsp0types.h	172;"	d
FSP_UNDO	include/fsp0types.h	/^	FSP_UNDO,	\/* reservation done for undo logging *\/$/;"	e	enum:fsp_reserve_t
FSP_UP	include/fsp0types.h	39;"	d
FSP_XDES_OFFSET	include/fsp0types.h	154;"	d
FTB_DEC	include/fts0tokenize.h	44;"	d
FTB_EGAL	include/fts0tokenize.h	41;"	d
FTB_INC	include/fts0tokenize.h	43;"	d
FTB_LBR	include/fts0tokenize.h	45;"	d
FTB_LQUOT	include/fts0tokenize.h	49;"	d
FTB_NEG	include/fts0tokenize.h	47;"	d
FTB_NO	include/fts0tokenize.h	42;"	d
FTB_RBR	include/fts0tokenize.h	46;"	d
FTB_RQUOT	include/fts0tokenize.h	50;"	d
FTB_TRUNC	include/fts0tokenize.h	48;"	d
FTB_YES	include/fts0tokenize.h	40;"	d
FTSORT_PRINT	include/row0ftsort.h	151;"	d
FTS_AST_LIST	include/fts0ast.h	/^	FTS_AST_LIST,				\/*!< Expression list *\/$/;"	e	enum:fts_ast_type_t
FTS_AST_NUMB	include/fts0ast.h	/^	FTS_AST_NUMB,				\/*!< Number *\/$/;"	e	enum:fts_ast_type_t
FTS_AST_OPER	include/fts0ast.h	/^	FTS_AST_OPER,				\/*!< Operator *\/$/;"	e	enum:fts_ast_type_t
FTS_AST_PARSER_PHRASE_LIST	include/fts0ast.h	/^	FTS_AST_PARSER_PHRASE_LIST,		\/*!< Phase for plugin parser$/;"	e	enum:fts_ast_type_t
FTS_AST_SUBEXP_LIST	include/fts0ast.h	/^	FTS_AST_SUBEXP_LIST			\/*!< Sub-Expression list *\/$/;"	e	enum:fts_ast_type_t
FTS_AST_TERM	include/fts0ast.h	/^	FTS_AST_TERM,				\/*!< Term (or word) *\/$/;"	e	enum:fts_ast_type_t
FTS_AST_TEXT	include/fts0ast.h	/^	FTS_AST_TEXT,				\/*!< Text string *\/$/;"	e	enum:fts_ast_type_t
FTS_AUX_INDEX_TABLE_NUM_COLS	include/fts0fts.h	115;"	d
FTS_AUX_MIN_TABLE_ID_LENGTH	include/fts0priv.h	110;"	d
FTS_BACKGROUND_THREAD_WAIT_COUNT	include/fts0priv.h	57;"	d
FTS_BOOL	include/fts0fts.h	86;"	d
FTS_CACHE_SIZE_LOWER_LIMIT_IN_MB	fts/fts0fts.cc	/^static const ulint FTS_CACHE_SIZE_LOWER_LIMIT_IN_MB = 1;$/;"	v	file:
FTS_CACHE_SIZE_UPPER_LIMIT_IN_MB	fts/fts0fts.cc	/^static const ulint FTS_CACHE_SIZE_UPPER_LIMIT_IN_MB = 1024;$/;"	v	file:
FTS_CHILD_COMPLETE	include/row0ftsort.h	147;"	d
FTS_CHILD_EXITING	include/row0ftsort.h	148;"	d
FTS_COMMON_TABLE	include/fts0fts.h	/^	FTS_COMMON_TABLE		\/*!< FTS auxiliary table that is common$/;"	e	enum:fts_table_type_t
FTS_CONFIG_KEY	handler/i_s.cc	3976;"	d	file:
FTS_CONFIG_TABLE_KEY_COL_LEN	include/fts0fts.h	120;"	d
FTS_CONFIG_TABLE_NUM_COLS	include/fts0fts.h	114;"	d
FTS_CONFIG_TABLE_VALUE_COL_LEN	include/fts0fts.h	121;"	d
FTS_CONFIG_VALUE	handler/i_s.cc	3985;"	d	file:
FTS_DEADLOCK_RETRY_WAIT	fts/fts0fts.cc	/^static const ulint FTS_DEADLOCK_RETRY_WAIT = 100000;$/;"	v	file:
FTS_DEBUG_PRINT	fts/fts0opt.cc	1350;"	d	file:
FTS_DECR_RATING	include/fts0ast.h	/^	FTS_DECR_RATING,			\/*!< Decrease the rank for this$/;"	e	enum:fts_ast_oper_t
FTS_DELETE	include/fts0fts.h	/^	FTS_DELETE,$/;"	e	enum:fts_row_state
FTS_DELETED_TABLE_COL_LEN	include/fts0fts.h	118;"	d
FTS_DELETED_TABLE_NUM_COLS	include/fts0fts.h	113;"	d
FTS_DISTANCE	include/fts0ast.h	/^	FTS_DISTANCE,				\/*!< Proximity distance *\/$/;"	e	enum:fts_ast_oper_t
FTS_DOC_ID_COL_NAME	include/fts0fts.h	50;"	d
FTS_DOC_ID_FORMAT	include/fts0fts.h	72;"	d
FTS_DOC_ID_INDEX_NAME	include/fts0fts.h	53;"	d
FTS_DOC_ID_INDEX_NAME_LEN	include/fts0fts.h	55;"	d
FTS_DOC_ID_LEN	include/fts0fts.h	58;"	d
FTS_DOC_ID_MAX_STEP	include/fts0fts.h	104;"	d
FTS_ELEM	fts/fts0que.cc	48;"	d	file:
FTS_EXIST	include/fts0ast.h	/^	FTS_EXIST,				\/*!< Include rows that contain$/;"	e	enum:fts_ast_oper_t
FTS_EXIST_DOC_ID_INDEX	handler/ha_innodb.h	/^	FTS_EXIST_DOC_ID_INDEX,$/;"	e	enum:fts_doc_id_index_enum
FTS_EXIST_SKIP	include/fts0ast.h	/^	FTS_EXIST_SKIP				\/*!< Transient node operator$/;"	e	enum:fts_ast_oper_t
FTS_EXPAND	include/fts0fts.h	88;"	d
FTS_FETCH_DOC_BY_ID_EQUAL	include/fts0priv.h	173;"	d
FTS_FETCH_DOC_BY_ID_LARGE	include/fts0priv.h	174;"	d
FTS_FETCH_DOC_BY_ID_SMALL	include/fts0priv.h	175;"	d
FTS_IGNORE	include/fts0ast.h	/^	FTS_IGNORE,				\/*!< Ignore rows that contain$/;"	e	enum:fts_ast_oper_t
FTS_IGNORE_SKIP	include/fts0ast.h	/^	FTS_IGNORE_SKIP,			\/*!< Transient node operator$/;"	e	enum:fts_ast_oper_t
FTS_ILIST_MAX_SIZE	include/fts0priv.h	66;"	d
FTS_INCORRECT_DOC_ID_INDEX	handler/ha_innodb.h	/^	FTS_INCORRECT_DOC_ID_INDEX,$/;"	e	enum:fts_doc_id_index_enum
FTS_INCR_RATING	include/fts0ast.h	/^	FTS_INCR_RATING,			\/*!< Increase the rank for this$/;"	e	enum:fts_ast_oper_t
FTS_INDEX_DOC_COUNT_LEN	include/fts0fts.h	126;"	d
FTS_INDEX_FIRST_DOC_ID_LEN	include/fts0fts.h	124;"	d
FTS_INDEX_ILIST_LEN	include/fts0fts.h	128;"	d
FTS_INDEX_LAST_DOC_ID_LEN	include/fts0fts.h	125;"	d
FTS_INDEX_TABLE	include/fts0fts.h	/^	FTS_INDEX_TABLE,		\/*!< FTS auxiliary table that is$/;"	e	enum:fts_table_type_t
FTS_INDEX_TABLE_IND_NAME	include/fts0fts.h	94;"	d
FTS_INDEX_WORD_LEN	include/fts0fts.h	123;"	d
FTS_INIT_FTS_TABLE	include/fts0fts.h	177;"	d
FTS_INIT_INDEX_TABLE	include/fts0fts.h	186;"	d
FTS_INSERT	include/fts0fts.h	/^	FTS_INSERT = 0,$/;"	e	enum:fts_row_state
FTS_INVALID	include/fts0fts.h	/^	FTS_INVALID$/;"	e	enum:fts_row_state
FTS_IS_OBSOLETE_AUX_TABLE	fts/fts0fts.cc	51;"	d	file:
FTS_LAST_OPTIMIZED_WORD	include/fts0priv.h	77;"	d
FTS_MAX_BACKGROUND_THREAD_WAIT	include/fts0priv.h	54;"	d
FTS_MAX_CACHE_SIZE_IN_MB	fts/fts0fts.cc	47;"	d	file:
FTS_MAX_CONFIG_NAME_LEN	include/fts0priv.h	60;"	d
FTS_MAX_CONFIG_VALUE_LEN	include/fts0priv.h	63;"	d
FTS_MAX_ID_LEN	fts/fts0fts.cc	/^static const ulint FTS_MAX_ID_LEN = 32;$/;"	v	file:
FTS_MAX_INT_LEN	include/fts0priv.h	113;"	d
FTS_MAX_WORD_LEN	include/fts0fts.h	107;"	d
FTS_MAX_WORD_LEN_IN_CHAR	include/fts0fts.h	110;"	d
FTS_MODIFY	include/fts0fts.h	/^	FTS_MODIFY,$/;"	e	enum:fts_row_state
FTS_MSG_ADD_TABLE	fts/fts0opt.cc	/^	FTS_MSG_ADD_TABLE,		\/*!< Add table to the optimize thread's$/;"	e	enum:fts_msg_type_t	file:
FTS_MSG_DEL_TABLE	fts/fts0opt.cc	/^	FTS_MSG_DEL_TABLE,		\/*!< Remove a table from the optimize$/;"	e	enum:fts_msg_type_t	file:
FTS_MSG_STOP	fts/fts0opt.cc	/^	FTS_MSG_STOP,			\/*!< Stop optimizing and exit thread *\/$/;"	e	enum:fts_msg_type_t	file:
FTS_MSG_SYNC_TABLE	fts/fts0opt.cc	/^	FTS_MSG_SYNC_TABLE		\/*!< Sync fts cache of a table *\/$/;"	e	enum:fts_msg_type_t	file:
FTS_NEGATE	include/fts0ast.h	/^	FTS_NEGATE,				\/*!< Include rows that contain$/;"	e	enum:fts_ast_oper_t
FTS_NL	include/fts0fts.h	85;"	d
FTS_NONE	include/fts0ast.h	/^	FTS_NONE,				\/*!< No operator *\/$/;"	e	enum:fts_ast_oper_t
FTS_NOTHING	include/fts0fts.h	/^	FTS_NOTHING,$/;"	e	enum:fts_row_state
FTS_NOT_EXIST_DOC_ID_INDEX	handler/ha_innodb.h	/^	FTS_NOT_EXIST_DOC_ID_INDEX$/;"	e	enum:fts_doc_id_index_enum
FTS_NO_RANKING	include/fts0fts.h	89;"	d
FTS_NULL_DOC_ID	include/fts0fts.h	47;"	d
FTS_NUMB	fts/fts0pars.cc	/^     FTS_NUMB = 261$/;"	e	enum:yytokentype	file:
FTS_NUMB	include/fts0pars.h	/^     FTS_NUMB = 261$/;"	e	enum:yytokentype
FTS_NUM_AUX_INDEX	include/fts0fts.h	97;"	d
FTS_NUM_FIELDS_SORT	include/fts0fts.h	62;"	d
FTS_OPER	fts/fts0pars.cc	/^     FTS_OPER = 258,$/;"	e	enum:yytokentype	file:
FTS_OPER	include/fts0pars.h	/^     FTS_OPER = 258,$/;"	e	enum:yytokentype
FTS_OPTIMIZE_END_TIME	include/fts0priv.h	90;"	d
FTS_OPTIMIZE_INTERVAL_IN_SECS	fts/fts0opt.cc	/^static const ulint FTS_OPTIMIZE_INTERVAL_IN_SECS = 300;$/;"	v	file:
FTS_OPTIMIZE_LIMIT_IN_SECS	include/fts0priv.h	71;"	d
FTS_OPTIMIZE_START_TIME	include/fts0priv.h	87;"	d
FTS_OPTIMIZE_THRESHOLD	include/fts0fts.h	100;"	d
FTS_OPT_RANKING	include/fts0fts.h	92;"	d
FTS_PARENT_COMPLETE	include/row0ftsort.h	145;"	d
FTS_PARENT_EXITING	include/row0ftsort.h	146;"	d
FTS_PASS_EXIST	fts/fts0ast.cc	/^	FTS_PASS_EXIST,		\/*!< Exist visit pass,$/;"	e	enum:fts_ast_visit_pass_t	file:
FTS_PASS_FIRST	fts/fts0ast.cc	/^	FTS_PASS_FIRST,		\/*!< First visit pass,$/;"	e	enum:fts_ast_visit_pass_t	file:
FTS_PASS_IGNORE	fts/fts0ast.cc	/^	FTS_PASS_IGNORE		\/*!< Ignore visit pass,$/;"	e	enum:fts_ast_visit_pass_t	file:
FTS_PENDING_DOC_MEMORY_LIMIT	row/row0merge.cc	260;"	d	file:
FTS_PHRASE	include/fts0fts.h	91;"	d
FTS_PLL_MERGE	include/row0ftsort.h	56;"	d
FTS_PROXIMITY	include/fts0fts.h	90;"	d
FTS_QUEUE_WAIT_IN_USECS	fts/fts0opt.cc	/^static const ulint FTS_QUEUE_WAIT_IN_USECS = 5000000;$/;"	v	file:
FTS_SORTED	include/fts0fts.h	87;"	d
FTS_STATE_DONE	fts/fts0opt.cc	/^	FTS_STATE_DONE,$/;"	e	enum:fts_state_t	file:
FTS_STATE_EMPTY	fts/fts0opt.cc	/^	FTS_STATE_EMPTY$/;"	e	enum:fts_state_t	file:
FTS_STATE_LOADED	fts/fts0opt.cc	/^	FTS_STATE_LOADED,$/;"	e	enum:fts_state_t	file:
FTS_STATE_RUNNING	fts/fts0opt.cc	/^	FTS_STATE_RUNNING,$/;"	e	enum:fts_state_t	file:
FTS_STATE_SUSPENDED	fts/fts0opt.cc	/^	FTS_STATE_SUSPENDED,$/;"	e	enum:fts_state_t	file:
FTS_STOPWORD_TABLE_NAME	include/fts0priv.h	93;"	d
FTS_SYNCED_DOC_ID	include/fts0priv.h	74;"	d
FTS_TABLE_STATE	include/fts0priv.h	100;"	d
FTS_TABLE_STATE_DELETED	include/fts0priv.h	/^	FTS_TABLE_STATE_DELETED		\/*!< All aux tables to be dropped when$/;"	e	enum:fts_table_state_enum
FTS_TABLE_STATE_OPTIMIZING	include/fts0priv.h	/^	FTS_TABLE_STATE_OPTIMIZING,	\/*!< This is a substate of RUNNING *\/$/;"	e	enum:fts_table_state_enum
FTS_TABLE_STATE_RUNNING	include/fts0priv.h	/^	FTS_TABLE_STATE_RUNNING = 0,	\/*!< Auxiliary tables created OK *\/$/;"	e	enum:fts_table_state_enum
FTS_TERM	fts/fts0pars.cc	/^     FTS_TERM = 260,$/;"	e	enum:yytokentype	file:
FTS_TERM	include/fts0pars.h	/^     FTS_TERM = 260,$/;"	e	enum:yytokentype
FTS_TEXT	fts/fts0pars.cc	/^     FTS_TEXT = 259,$/;"	e	enum:yytokentype	file:
FTS_TEXT	include/fts0pars.h	/^     FTS_TEXT = 259,$/;"	e	enum:yytokentype
FTS_TOTAL_DELETED_COUNT	include/fts0priv.h	81;"	d
FTS_TOTAL_WORD_COUNT	include/fts0priv.h	84;"	d
FTS_USE_STOPWORD	include/fts0priv.h	96;"	d
FTS_WORD_NODES_INIT_SIZE	fts/fts0opt.cc	/^static const ulint FTS_WORD_NODES_INIT_SIZE = 64;$/;"	v	file:
FTS_ZIP_BLOCK_SIZE	fts/fts0opt.cc	/^static ulint FTS_ZIP_BLOCK_SIZE	= 1024;$/;"	v	file:
FT_WORD	include/fts0tokenize.h	/^} FT_WORD;$/;"	t	typeref:struct:st_ft_word
FetchIndexRootPages	row/row0import.cc	/^struct FetchIndexRootPages : public AbstractCallback {$/;"	s	file:
FilSpace	include/fil0fil.h	/^	FilSpace() : m_space(NULL) {}$/;"	f	class:FilSpace
FilSpace	include/fil0fil.h	/^	explicit FilSpace(ulint space_id)$/;"	f	class:FilSpace
FilSpace	include/fil0fil.h	/^class FilSpace$/;"	c
File	sync/sync0debug.cc	/^	struct File {$/;"	s	struct:CreateTracker	file:
Files	sync/sync0debug.cc	/^		Files;$/;"	t	struct:CreateTracker	file:
Find	mtr/mtr0mtr.cc	/^	Find(const void* object, ulint type)$/;"	f	struct:Find
Find	mtr/mtr0mtr.cc	/^struct Find {$/;"	s	file:
FindPage	mtr/mtr0mtr.cc	/^	FindPage(const void* ptr, ulint flags)$/;"	f	struct:FindPage
FindPage	mtr/mtr0mtr.cc	/^struct FindPage$/;"	s	file:
FlaggedCheck	mtr/mtr0mtr.cc	/^	FlaggedCheck(const void* ptr, ulint flags)$/;"	f	struct:FlaggedCheck
FlaggedCheck	mtr/mtr0mtr.cc	/^struct FlaggedCheck {$/;"	s	file:
FlushHp	include/buf0buf.h	/^	FlushHp(const buf_pool_t* buf_pool, const ib_mutex_t* mutex)$/;"	f	class:FlushHp
FlushHp	include/buf0buf.h	/^class FlushHp: public HazardPointer {$/;"	c
FlushListMutex	include/buf0types.h	/^typedef ib_mutex_t FlushListMutex;$/;"	t
FlushObserver	buf/buf0flu.cc	/^FlushObserver::FlushObserver($/;"	f	class:FlushObserver
FlushObserver	include/buf0flu.h	/^class FlushObserver {$/;"	c
FlushOrderMutex	include/log0log.h	/^typedef ib_mutex_t	FlushOrderMutex;$/;"	t
Folder	fil/fil0fil.cc	/^Folder::Folder(const char* path, size_t len)$/;"	f	class:Folder
Folder	include/fil0fil.h	/^	Folder() : m_folder(NULL) {}$/;"	f	class:Folder
Folder	include/fil0fil.h	/^class Folder$/;"	c
GEO_DATA_HEADER_SIZE	include/gis0rtree.h	76;"	d
GenericGetNode	include/ut0lst.h	/^	GenericGetNode(node_type Type::* node) : m_node(node) {}$/;"	f	struct:GenericGetNode
GenericGetNode	include/ut0lst.h	/^struct GenericGetNode {$/;"	s
GenericPolicy	include/sync0policy.h	/^struct GenericPolicy$/;"	s
GetCount	handler/ha_innodb.cc	/^	struct GetCount {$/;"	s	struct:ShowStatus	file:
HASH_ASSERT_OWN	include/hash0hash.h	101;"	d
HASH_ASSERT_OWN	include/hash0hash.h	97;"	d
HASH_ASSERT_VALID	include/hash0hash.h	133;"	d
HASH_ASSERT_VALID	include/hash0hash.h	136;"	d
HASH_DELETE	include/hash0hash.h	143;"	d
HASH_DELETE_AND_COMPACT	include/hash0hash.h	258;"	d
HASH_GET_FIRST	include/hash0hash.h	172;"	d
HASH_GET_NEXT	include/hash0hash.h	178;"	d
HASH_INSERT	include/hash0hash.h	107;"	d
HASH_INVALIDATE	include/hash0hash.h	134;"	d
HASH_INVALIDATE	include/hash0hash.h	137;"	d
HASH_MIGRATE	include/hash0hash.h	317;"	d
HASH_SEARCH	include/hash0hash.h	182;"	d
HASH_SEARCH_ALL	include/hash0hash.h	203;"	d
HASH_TABLE_MAGIC_N	include/hash0hash.h	569;"	d
HASH_TABLE_SYNC_MUTEX	include/hash0hash.h	/^	HASH_TABLE_SYNC_MUTEX,		\/*!< Use mutexes to control$/;"	e	enum:hash_table_sync_t
HASH_TABLE_SYNC_NONE	include/hash0hash.h	/^	HASH_TABLE_SYNC_NONE = 0,	\/*!< Don't use any internal$/;"	e	enum:hash_table_sync_t
HASH_TABLE_SYNC_RW_LOCK	include/hash0hash.h	/^	HASH_TABLE_SYNC_RW_LOCK		\/*!< Use rw_locks to control$/;"	e	enum:hash_table_sync_t
HAVE_MEMORY_BARRIER	include/os0atomic.h	330;"	d
HAVE_MEMORY_BARRIER	include/os0atomic.h	338;"	d
HAVE_MEMORY_BARRIER	include/os0atomic.h	345;"	d
HAVE_MEMORY_BARRIER	include/os0atomic.h	352;"	d
HAVE_UT_CHRONO_T	include/ut0dbg.h	80;"	d
HA_INNODB_PROTOTYPES_H	include/ha_prototypes.h	30;"	d
HA_INNOPART_DISABLED_TABLE_FLAGS	handler/ha_innopart.h	/^const handler::Table_flags	HA_INNOPART_DISABLED_TABLE_FLAGS =$/;"	v
HA_STORAGE_DEFAULT_HASH_CELLS	include/ha0storage.h	39;"	d
HA_STORAGE_DEFAULT_HEAP_BYTES	include/ha0storage.h	35;"	d
Ha_innopart_share	handler/ha_innopart.cc	/^Ha_innopart_share::Ha_innopart_share($/;"	f	class:Ha_innopart_share
Ha_innopart_share	handler/ha_innopart.h	/^	Ha_innopart_share() {};$/;"	f	class:Ha_innopart_share
Ha_innopart_share	handler/ha_innopart.h	/^class Ha_innopart_share : public Partition_share$/;"	c
Handles	os/os0file.cc	/^	typedef std::vector<HANDLE, ut_allocator<HANDLE> > Handles;$/;"	t	class:AIO	file:
HazardPointer	include/buf0buf.h	/^	HazardPointer(const buf_pool_t* buf_pool, const ib_mutex_t* mutex)$/;"	f	class:HazardPointer
HazardPointer	include/buf0buf.h	/^class HazardPointer {$/;"	c
IBD	include/fil0fil.h	/^	IBD = 1,$/;"	e	enum:ib_extention
IBUF_BITMAP	ibuf/ibuf0ibuf.cc	42;"	d	file:
IBUF_BITMAP_BUFFERED	ibuf/ibuf0ibuf.cc	239;"	d	file:
IBUF_BITMAP_FREE	ibuf/ibuf0ibuf.cc	237;"	d	file:
IBUF_BITMAP_IBUF	ibuf/ibuf0ibuf.cc	241;"	d	file:
IBUF_BITS_PER_PAGE	ibuf/ibuf0ibuf.cc	37;"	d	file:
IBUF_CONTRACT_DO_NOT_INSERT	ibuf/ibuf0ibuf.cc	/^const ulint		IBUF_CONTRACT_DO_NOT_INSERT = 10;$/;"	v
IBUF_CONTRACT_ON_INSERT_NON_SYNC	ibuf/ibuf0ibuf.cc	/^const ulint		IBUF_CONTRACT_ON_INSERT_NON_SYNC = 0;$/;"	v
IBUF_CONTRACT_ON_INSERT_SYNC	ibuf/ibuf0ibuf.cc	/^const ulint		IBUF_CONTRACT_ON_INSERT_SYNC = 5;$/;"	v
IBUF_COUNT_N_PAGES	ibuf/ibuf0ibuf.cc	210;"	d	file:
IBUF_COUNT_N_SPACES	ibuf/ibuf0ibuf.cc	208;"	d	file:
IBUF_HEADER	include/ibuf0ibuf.h	452;"	d
IBUF_HEADER_PAGE_NO	include/ibuf0ibuf.h	445;"	d
IBUF_MAX_N_PAGES_MERGED	ibuf/ibuf0ibuf.cc	/^const ulint		IBUF_MAX_N_PAGES_MERGED = IBUF_MERGE_AREA;$/;"	v
IBUF_MERGE_AREA	ibuf/ibuf0ibuf.cc	/^const ulint		IBUF_MERGE_AREA = 8;$/;"	v
IBUF_MERGE_THRESHOLD	ibuf/ibuf0ibuf.cc	/^const ulint		IBUF_MERGE_THRESHOLD = 4;$/;"	v
IBUF_OP_COUNT	include/ibuf0ibuf.h	/^	IBUF_OP_COUNT = 3$/;"	e	enum:__anon1
IBUF_OP_DELETE	include/ibuf0ibuf.h	/^	IBUF_OP_DELETE = 2,$/;"	e	enum:__anon1
IBUF_OP_DELETE_MARK	include/ibuf0ibuf.h	/^	IBUF_OP_DELETE_MARK = 1,$/;"	e	enum:__anon1
IBUF_OP_INSERT	include/ibuf0ibuf.h	/^	IBUF_OP_INSERT = 0,$/;"	e	enum:__anon1
IBUF_PAGE_SIZE_PER_FREE_SPACE	include/ibuf0ibuf.ic	36;"	d	file:
IBUF_REC_COMPACT	ibuf/ibuf0ibuf.cc	276;"	d	file:
IBUF_REC_FIELD_MARKER	ibuf/ibuf0ibuf.cc	249;"	d	file:
IBUF_REC_FIELD_METADATA	ibuf/ibuf0ibuf.cc	253;"	d	file:
IBUF_REC_FIELD_PAGE	ibuf/ibuf0ibuf.cc	251;"	d	file:
IBUF_REC_FIELD_SPACE	ibuf/ibuf0ibuf.cc	247;"	d	file:
IBUF_REC_FIELD_USER	ibuf/ibuf0ibuf.cc	254;"	d	file:
IBUF_REC_INFO_SIZE	ibuf/ibuf0ibuf.cc	264;"	d	file:
IBUF_REC_OFFSET_COUNTER	ibuf/ibuf0ibuf.cc	271;"	d	file:
IBUF_REC_OFFSET_FLAGS	ibuf/ibuf0ibuf.cc	273;"	d	file:
IBUF_REC_OFFSET_TYPE	ibuf/ibuf0ibuf.cc	272;"	d	file:
IBUF_SPACE_ID	include/ibuf0ibuf.h	456;"	d
IBUF_TREE_ROOT_PAGE_NO	include/ibuf0ibuf.h	446;"	d
IBUF_TREE_SEG_HEADER	include/ibuf0ibuf.h	453;"	d
IBUF_USE_ALL	include/ibuf0ibuf.h	/^	IBUF_USE_ALL,		\/* insert+delete+purge *\/$/;"	e	enum:__anon2
IBUF_USE_COUNT	include/ibuf0ibuf.h	/^	IBUF_USE_COUNT		\/* number of entries in ibuf_use_t *\/$/;"	e	enum:__anon2
IBUF_USE_DELETE	include/ibuf0ibuf.h	/^	IBUF_USE_DELETE,	\/* delete+purge *\/$/;"	e	enum:__anon2
IBUF_USE_DELETE_MARK	include/ibuf0ibuf.h	/^	IBUF_USE_DELETE_MARK,	\/* delete *\/$/;"	e	enum:__anon2
IBUF_USE_INSERT	include/ibuf0ibuf.h	/^	IBUF_USE_INSERT,	\/* insert *\/$/;"	e	enum:__anon2
IBUF_USE_INSERT_DELETE_MARK	include/ibuf0ibuf.h	/^	IBUF_USE_INSERT_DELETE_MARK,	\/* insert+delete *\/$/;"	e	enum:__anon2
IBUF_USE_NONE	include/ibuf0ibuf.h	/^	IBUF_USE_NONE = 0,$/;"	e	enum:__anon2
IB_ATOMICS_STARTUP_MSG	include/os0atomic.h	151;"	d
IB_ATOMICS_STARTUP_MSG	include/os0atomic.h	267;"	d
IB_ATOMICS_STARTUP_MSG	include/os0atomic.h	270;"	d
IB_BINARY	include/api0api.h	/^	IB_BINARY =	3,		\/*!< Fixed length binary, similar to$/;"	e	enum:__anon14
IB_BLOB	include/api0api.h	/^	IB_BLOB	=	5,		\/*!< Binary large object, or$/;"	e	enum:__anon14
IB_CFG_BINLOG_ENABLED	include/api0api.h	358;"	d
IB_CFG_CB	include/api0api.h	/^	IB_CFG_CB			\/*!< The configuration parameter is$/;"	e	enum:__anon13
IB_CFG_DISABLE_ROWLOCK	include/api0api.h	360;"	d
IB_CFG_IBOOL	include/api0api.h	/^	IB_CFG_IBOOL,			\/*!< The configuration parameter is$/;"	e	enum:__anon13
IB_CFG_MDL_ENABLED	include/api0api.h	359;"	d
IB_CFG_TEXT	include/api0api.h	/^	IB_CFG_TEXT,			\/*!< The configuration parameter is$/;"	e	enum:__anon13
IB_CFG_ULINT	include/api0api.h	/^	IB_CFG_ULINT,			\/*!< The configuration parameter is$/;"	e	enum:__anon13
IB_CFG_ULONG	include/api0api.h	/^	IB_CFG_ULONG,			\/*!< The configuration parameter is$/;"	e	enum:__anon13
IB_CHAR	include/api0api.h	/^	IB_CHAR =	2,		\/*!< Fixed length character string. The$/;"	e	enum:__anon14
IB_CHAR_ANYCHARSET	include/api0api.h	/^	IB_CHAR_ANYCHARSET =	13	\/*!< Any charset, fixed length *\/$/;"	e	enum:__anon14
IB_CLOSEST_MATCH	include/api0api.h	/^	IB_CLOSEST_MATCH,		\/*!< Closest match possible *\/$/;"	e	enum:__anon20
IB_CLUSTERED	include/api0api.h	/^	IB_CLUSTERED = 1,	\/*!< clustered index *\/$/;"	e	enum:__anon18
IB_COL_CUSTOM1	include/api0api.h	/^	IB_COL_CUSTOM1 = 8,		\/*!< Custom precision type, this is$/;"	e	enum:__anon16
IB_COL_CUSTOM2	include/api0api.h	/^	IB_COL_CUSTOM2 = 16,		\/*!< Custom precision type, this is$/;"	e	enum:__anon16
IB_COL_CUSTOM3	include/api0api.h	/^	IB_COL_CUSTOM3 = 32		\/*!< Custom precision type, this is$/;"	e	enum:__anon16
IB_COL_NONE	include/api0api.h	/^	IB_COL_NONE = 0,		\/*!< No special attributes. *\/$/;"	e	enum:__anon16
IB_COL_NOT_NULL	include/api0api.h	/^	IB_COL_NOT_NULL = 1,		\/*!< Column data can't be NULL. *\/$/;"	e	enum:__anon16
IB_COL_NOT_USED	include/api0api.h	/^	IB_COL_NOT_USED = 4,		\/*!< Future use, reserved. *\/$/;"	e	enum:__anon16
IB_COL_UNSIGNED	include/api0api.h	/^	IB_COL_UNSIGNED = 2,		\/*!< Column is IB_INT and unsigned. *\/$/;"	e	enum:__anon16
IB_CUR_G	include/api0api.h	/^	IB_CUR_G = 1,			\/*!< If search key is not found then$/;"	e	enum:__anon19
IB_CUR_GE	include/api0api.h	/^	IB_CUR_GE = 2,			\/*!< If the search key not found then$/;"	e	enum:__anon19
IB_CUR_L	include/api0api.h	/^	IB_CUR_L = 3,			\/*!< If search key is not found then$/;"	e	enum:__anon19
IB_CUR_LE	include/api0api.h	/^	IB_CUR_LE = 4			\/*!< If search key is not found then$/;"	e	enum:__anon19
IB_DECIMAL	include/api0api.h	/^	IB_DECIMAL =	11,		\/*!< Decimal stored as an ASCII$/;"	e	enum:__anon14
IB_DOUBLE	include/api0api.h	/^	IB_DOUBLE =	10,		\/*!> C (double) floating point value. *\/$/;"	e	enum:__anon14
IB_EXACT_MATCH	include/api0api.h	/^	IB_EXACT_MATCH,			\/*!< Search using a complete key$/;"	e	enum:__anon20
IB_EXACT_PREFIX	include/api0api.h	/^	IB_EXACT_PREFIX			\/*!< Search using a key prefix which$/;"	e	enum:__anon20
IB_EXPORT_CFG_VERSION_V1	include/row0quiesce.h	36;"	d
IB_FALSE	include/api0api.h	43;"	d
IB_FLOAT	include/api0api.h	/^	IB_FLOAT =	9,		\/*!< C (float)  floating point value. *\/$/;"	e	enum:__anon14
IB_ID_FMT	include/univ.i	433;"	d	file:
IB_ID_MAX	include/univ.i	472;"	d	file:
IB_INT	include/api0api.h	/^	IB_INT =	6,		\/*!< Integer: can be any size$/;"	e	enum:__anon14
IB_LIKE_EXACT	include/data0type.h	/^	IB_LIKE_EXACT,	\/**< e.g.  STRING *\/$/;"	e	enum:ib_like_t
IB_LIKE_PREFIX	include/data0type.h	/^	IB_LIKE_PREFIX	\/**< e.g., STRING% *\/$/;"	e	enum:ib_like_t
IB_LIST_H	include/ut0list.h	47;"	d
IB_LOCK_IS	include/api0api.h	/^	IB_LOCK_IS = 0,			\/*!< Intention shared, an intention$/;"	e	enum:__anon17
IB_LOCK_IX	include/api0api.h	/^	IB_LOCK_IX,			\/*!< Intention exclusive, an intention$/;"	e	enum:__anon17
IB_LOCK_NONE	include/api0api.h	/^	IB_LOCK_NONE,			\/*!< This is used internally to note$/;"	e	enum:__anon17
IB_LOCK_NUM	include/api0api.h	/^	IB_LOCK_NUM = IB_LOCK_NONE	\/*!< number of lock modes *\/$/;"	e	enum:__anon17
IB_LOCK_S	include/api0api.h	/^	IB_LOCK_S,			\/*!< Shared locks should be used to$/;"	e	enum:__anon17
IB_LOCK_TABLE_X	include/api0api.h	/^	IB_LOCK_TABLE_X,		\/*!< exclusive table lock *\/$/;"	e	enum:__anon17
IB_LOCK_X	include/api0api.h	/^	IB_LOCK_X,			\/*!< Exclusive locks should be used to$/;"	e	enum:__anon17
IB_LOG_LEVEL_ERROR	include/ha_prototypes.h	/^	IB_LOG_LEVEL_ERROR,$/;"	e	enum:ib_log_level_t
IB_LOG_LEVEL_FATAL	include/ha_prototypes.h	/^	IB_LOG_LEVEL_FATAL$/;"	e	enum:ib_log_level_t
IB_LOG_LEVEL_INFO	include/ha_prototypes.h	/^	IB_LOG_LEVEL_INFO,$/;"	e	enum:ib_log_level_t
IB_LOG_LEVEL_WARN	include/ha_prototypes.h	/^	IB_LOG_LEVEL_WARN,$/;"	e	enum:ib_log_level_t
IB_MEMORY_BARRIER_STARTUP_MSG	include/os0atomic.h	334;"	d
IB_MEMORY_BARRIER_STARTUP_MSG	include/os0atomic.h	341;"	d
IB_MEMORY_BARRIER_STARTUP_MSG	include/os0atomic.h	348;"	d
IB_MEMORY_BARRIER_STARTUP_MSG	include/os0atomic.h	356;"	d
IB_MEMORY_BARRIER_STARTUP_MSG	include/os0atomic.h	362;"	d
IB_N_SLOTS	include/ut0counter.h	42;"	d
IB_RBT_BLACK	include/ut0rbt.h	/^	IB_RBT_BLACK$/;"	e	enum:ib_rbt_color_t
IB_RBT_RED	include/ut0rbt.h	/^	IB_RBT_RED,$/;"	e	enum:ib_rbt_color_t
IB_SQL_NULL	include/api0api.h	415;"	d
IB_STRONG_MEMORY_MODEL	include/os0atomic.h	55;"	d
IB_SYS	include/api0api.h	/^	IB_SYS =	8,		\/*!< System column, this column can$/;"	e	enum:__anon14
IB_TBL_COMPACT	include/api0api.h	/^	IB_TBL_COMPACT,			\/*!< Compact row format, the column$/;"	e	enum:__anon15
IB_TBL_COMPRESSED	include/api0api.h	/^	IB_TBL_COMPRESSED		\/*!< Similar to dynamic format but$/;"	e	enum:__anon15
IB_TBL_DYNAMIC	include/api0api.h	/^	IB_TBL_DYNAMIC,			\/*!< Compact row format. BLOB prefixes$/;"	e	enum:__anon15
IB_TBL_REDUNDANT	include/api0api.h	/^	IB_TBL_REDUNDANT,		\/*!< Redundant row format, the column$/;"	e	enum:__anon15
IB_TO_STR	include/univ.i	43;"	d	file:
IB_TRUE	include/api0api.h	41;"	d
IB_TRX_READ_COMMITTED	include/api0api.h	/^	IB_TRX_READ_COMMITTED = 1,	\/*!< Somewhat Oracle-like isolation,$/;"	e	enum:__anon22
IB_TRX_READ_UNCOMMITTED	include/api0api.h	/^	IB_TRX_READ_UNCOMMITTED = 0,	\/*!< Dirty read: non-locking SELECTs are$/;"	e	enum:__anon22
IB_TRX_REPEATABLE_READ	include/api0api.h	/^	IB_TRX_REPEATABLE_READ = 2,	\/*!< All consistent reads in the same$/;"	e	enum:__anon22
IB_TRX_SERIALIZABLE	include/api0api.h	/^	IB_TRX_SERIALIZABLE = 3		\/*!< All plain SELECTs are converted to$/;"	e	enum:__anon22
IB_UINT64_MAX	include/univ.i	468;"	d	file:
IB_UNIQUE	include/api0api.h	/^	IB_UNIQUE = 2		\/*!< unique index *\/$/;"	e	enum:__anon18
IB_VARBINARY	include/api0api.h	/^	IB_VARBINARY =	4,		\/*!< Variable length binary *\/$/;"	e	enum:__anon14
IB_VARCHAR	include/api0api.h	/^	IB_VARCHAR =	1,		\/*!< Character varying length. The$/;"	e	enum:__anon14
IB_VARCHAR_ANYCHARSET	include/api0api.h	/^	IB_VARCHAR_ANYCHARSET =	12,	\/*!< Any charset, varying length *\/$/;"	e	enum:__anon14
IB_VECTOR_H	include/ut0vec.h	27;"	d
IB_VEC_OFFSET	include/ut0vec.ic	28;"	d	file:
IB_WORK_QUEUE_H	include/ut0wqueue.h	33;"	d
IDX_BLOCKING_LOCK_ID	handler/i_s.cc	1104;"	d	file:
IDX_BLOCKING_TRX_ID	handler/i_s.cc	1095;"	d	file:
IDX_BUFFER_BLOCK_ID	handler/i_s.cc	5030;"	d	file:
IDX_BUFFER_PAGE_ACCESS_TIME	handler/i_s.cc	5111;"	d	file:
IDX_BUFFER_PAGE_DATA_SIZE	handler/i_s.cc	5147;"	d	file:
IDX_BUFFER_PAGE_FIX_COUNT	handler/i_s.cc	5075;"	d	file:
IDX_BUFFER_PAGE_FLUSH_TYPE	handler/i_s.cc	5066;"	d	file:
IDX_BUFFER_PAGE_FREE_CLOCK	handler/i_s.cc	5192;"	d	file:
IDX_BUFFER_PAGE_HASHED	handler/i_s.cc	5084;"	d	file:
IDX_BUFFER_PAGE_INDEX_NAME	handler/i_s.cc	5129;"	d	file:
IDX_BUFFER_PAGE_IO_FIX	handler/i_s.cc	5174;"	d	file:
IDX_BUFFER_PAGE_IS_OLD	handler/i_s.cc	5183;"	d	file:
IDX_BUFFER_PAGE_NEWEST_MOD	handler/i_s.cc	5093;"	d	file:
IDX_BUFFER_PAGE_NUM	handler/i_s.cc	5048;"	d	file:
IDX_BUFFER_PAGE_NUM_RECS	handler/i_s.cc	5138;"	d	file:
IDX_BUFFER_PAGE_OLDEST_MOD	handler/i_s.cc	5102;"	d	file:
IDX_BUFFER_PAGE_SPACE	handler/i_s.cc	5039;"	d	file:
IDX_BUFFER_PAGE_STATE	handler/i_s.cc	5165;"	d	file:
IDX_BUFFER_PAGE_TABLE_NAME	handler/i_s.cc	5120;"	d	file:
IDX_BUFFER_PAGE_TYPE	handler/i_s.cc	5057;"	d	file:
IDX_BUFFER_PAGE_ZIP_SIZE	handler/i_s.cc	5156;"	d	file:
IDX_BUFFER_POOL_ID	handler/i_s.cc	5021;"	d	file:
IDX_BUF_LRU_PAGE_ACCESS_TIME	handler/i_s.cc	5834;"	d	file:
IDX_BUF_LRU_PAGE_DATA_SIZE	handler/i_s.cc	5870;"	d	file:
IDX_BUF_LRU_PAGE_FIX_COUNT	handler/i_s.cc	5798;"	d	file:
IDX_BUF_LRU_PAGE_FLUSH_TYPE	handler/i_s.cc	5789;"	d	file:
IDX_BUF_LRU_PAGE_FREE_CLOCK	handler/i_s.cc	5915;"	d	file:
IDX_BUF_LRU_PAGE_HASHED	handler/i_s.cc	5807;"	d	file:
IDX_BUF_LRU_PAGE_INDEX_NAME	handler/i_s.cc	5852;"	d	file:
IDX_BUF_LRU_PAGE_IO_FIX	handler/i_s.cc	5897;"	d	file:
IDX_BUF_LRU_PAGE_IS_OLD	handler/i_s.cc	5906;"	d	file:
IDX_BUF_LRU_PAGE_NEWEST_MOD	handler/i_s.cc	5816;"	d	file:
IDX_BUF_LRU_PAGE_NUM	handler/i_s.cc	5771;"	d	file:
IDX_BUF_LRU_PAGE_NUM_RECS	handler/i_s.cc	5861;"	d	file:
IDX_BUF_LRU_PAGE_OLDEST_MOD	handler/i_s.cc	5825;"	d	file:
IDX_BUF_LRU_PAGE_SPACE	handler/i_s.cc	5762;"	d	file:
IDX_BUF_LRU_PAGE_STATE	handler/i_s.cc	5888;"	d	file:
IDX_BUF_LRU_PAGE_TABLE_NAME	handler/i_s.cc	5843;"	d	file:
IDX_BUF_LRU_PAGE_TYPE	handler/i_s.cc	5780;"	d	file:
IDX_BUF_LRU_PAGE_ZIP_SIZE	handler/i_s.cc	5879;"	d	file:
IDX_BUF_LRU_POOL_ID	handler/i_s.cc	5744;"	d	file:
IDX_BUF_LRU_POS	handler/i_s.cc	5753;"	d	file:
IDX_BUF_STATS_FLUSH_LIST	handler/i_s.cc	4556;"	d	file:
IDX_BUF_STATS_FLUSH_LIST_LEN	handler/i_s.cc	4520;"	d	file:
IDX_BUF_STATS_FLUSH_LRU	handler/i_s.cc	4547;"	d	file:
IDX_BUF_STATS_FREE_BUFFERS	handler/i_s.cc	4493;"	d	file:
IDX_BUF_STATS_GET	handler/i_s.cc	4655;"	d	file:
IDX_BUF_STATS_HIT_RATE	handler/i_s.cc	4664;"	d	file:
IDX_BUF_STATS_LRU_IO_CUR	handler/i_s.cc	4736;"	d	file:
IDX_BUF_STATS_LRU_IO_SUM	handler/i_s.cc	4727;"	d	file:
IDX_BUF_STATS_LRU_LEN	handler/i_s.cc	4502;"	d	file:
IDX_BUF_STATS_MADE_YOUNG_PCT	handler/i_s.cc	4673;"	d	file:
IDX_BUF_STATS_NOT_MADE_YOUNG_PCT	handler/i_s.cc	4682;"	d	file:
IDX_BUF_STATS_OLD_LRU_LEN	handler/i_s.cc	4511;"	d	file:
IDX_BUF_STATS_PAGE_CREATED	handler/i_s.cc	4610;"	d	file:
IDX_BUF_STATS_PAGE_CREATE_RATE	handler/i_s.cc	4637;"	d	file:
IDX_BUF_STATS_PAGE_NOT_YOUNG	handler/i_s.cc	4574;"	d	file:
IDX_BUF_STATS_PAGE_NOT_YOUNG_RATE	handler/i_s.cc	4592;"	d	file:
IDX_BUF_STATS_PAGE_READ	handler/i_s.cc	4601;"	d	file:
IDX_BUF_STATS_PAGE_READ_RATE	handler/i_s.cc	4628;"	d	file:
IDX_BUF_STATS_PAGE_WRITTEN	handler/i_s.cc	4619;"	d	file:
IDX_BUF_STATS_PAGE_WRITTEN_RATE	handler/i_s.cc	4646;"	d	file:
IDX_BUF_STATS_PAGE_YOUNG	handler/i_s.cc	4565;"	d	file:
IDX_BUF_STATS_PAGE_YOUNG_RATE	handler/i_s.cc	4583;"	d	file:
IDX_BUF_STATS_PENDING_READ	handler/i_s.cc	4538;"	d	file:
IDX_BUF_STATS_PENDING_ZIP	handler/i_s.cc	4529;"	d	file:
IDX_BUF_STATS_POOL_ID	handler/i_s.cc	4475;"	d	file:
IDX_BUF_STATS_POOL_SIZE	handler/i_s.cc	4484;"	d	file:
IDX_BUF_STATS_READ_AHEAD_EVICTED	handler/i_s.cc	4700;"	d	file:
IDX_BUF_STATS_READ_AHEAD_EVICT_RATE	handler/i_s.cc	4718;"	d	file:
IDX_BUF_STATS_READ_AHEAD_RATE	handler/i_s.cc	4709;"	d	file:
IDX_BUF_STATS_READ_AHREAD	handler/i_s.cc	4691;"	d	file:
IDX_BUF_STATS_UNZIP_CUR	handler/i_s.cc	4754;"	d	file:
IDX_BUF_STATS_UNZIP_SUM	handler/i_s.cc	4745;"	d	file:
IDX_COMPRESS_OPS	handler/i_s.cc	1677;"	d	file:
IDX_COMPRESS_OPS_OK	handler/i_s.cc	1686;"	d	file:
IDX_COMPRESS_TIME	handler/i_s.cc	1695;"	d	file:
IDX_DATABASE_NAME	handler/i_s.cc	1650;"	d	file:
IDX_INDEX_NAME	handler/i_s.cc	1668;"	d	file:
IDX_LOCK_DATA	handler/i_s.cc	895;"	d	file:
IDX_LOCK_ID	handler/i_s.cc	813;"	d	file:
IDX_LOCK_INDEX	handler/i_s.cc	859;"	d	file:
IDX_LOCK_MODE	handler/i_s.cc	831;"	d	file:
IDX_LOCK_PAGE	handler/i_s.cc	877;"	d	file:
IDX_LOCK_REC	handler/i_s.cc	886;"	d	file:
IDX_LOCK_SPACE	handler/i_s.cc	868;"	d	file:
IDX_LOCK_TABLE	handler/i_s.cc	850;"	d	file:
IDX_LOCK_TRX_ID	handler/i_s.cc	822;"	d	file:
IDX_LOCK_TYPE	handler/i_s.cc	841;"	d	file:
IDX_REQUESTED_LOCK_ID	handler/i_s.cc	1086;"	d	file:
IDX_REQUESTING_TRX_ID	handler/i_s.cc	1077;"	d	file:
IDX_TABLE_NAME	handler/i_s.cc	1659;"	d	file:
IDX_TEMP_TABLE_ID	handler/i_s.cc	4189;"	d	file:
IDX_TEMP_TABLE_IS_COMPRESSED	handler/i_s.cc	4234;"	d	file:
IDX_TEMP_TABLE_NAME	handler/i_s.cc	4198;"	d	file:
IDX_TEMP_TABLE_N_COLS	handler/i_s.cc	4207;"	d	file:
IDX_TEMP_TABLE_PTT	handler/i_s.cc	4225;"	d	file:
IDX_TEMP_TABLE_SPACE_ID	handler/i_s.cc	4216;"	d	file:
IDX_TRX_ADAPTIVE_HASH_LATCHED	handler/i_s.cc	538;"	d	file:
IDX_TRX_ADAPTIVE_HASH_TIMEOUT	handler/i_s.cc	547;"	d	file:
IDX_TRX_AUTOCOMMIT_NON_LOCKING	handler/i_s.cc	565;"	d	file:
IDX_TRX_CONNCURRENCY_TICKETS	handler/i_s.cc	493;"	d	file:
IDX_TRX_FOREIGN_KEY_CHECKS	handler/i_s.cc	520;"	d	file:
IDX_TRX_ID	handler/i_s.cc	358;"	d	file:
IDX_TRX_ISOLATION_LEVEL	handler/i_s.cc	502;"	d	file:
IDX_TRX_LAST_FOREIGN_KEY_ERROR	handler/i_s.cc	529;"	d	file:
IDX_TRX_LOCK_MEMORY_BYTES	handler/i_s.cc	466;"	d	file:
IDX_TRX_LOCK_STRUCTS	handler/i_s.cc	457;"	d	file:
IDX_TRX_MYSQL_THREAD_ID	handler/i_s.cc	412;"	d	file:
IDX_TRX_OPERATION_STATE	handler/i_s.cc	430;"	d	file:
IDX_TRX_QUERY	handler/i_s.cc	421;"	d	file:
IDX_TRX_READ_ONLY	handler/i_s.cc	556;"	d	file:
IDX_TRX_REQUESTED_LOCK_ID	handler/i_s.cc	385;"	d	file:
IDX_TRX_ROWS_LOCKED	handler/i_s.cc	475;"	d	file:
IDX_TRX_ROWS_MODIFIED	handler/i_s.cc	484;"	d	file:
IDX_TRX_STARTED	handler/i_s.cc	376;"	d	file:
IDX_TRX_STATE	handler/i_s.cc	367;"	d	file:
IDX_TRX_TABLES_IN_USE	handler/i_s.cc	439;"	d	file:
IDX_TRX_TABLES_LOCKED	handler/i_s.cc	448;"	d	file:
IDX_TRX_UNIQUE_CHECKS	handler/i_s.cc	511;"	d	file:
IDX_TRX_WAIT_STARTED	handler/i_s.cc	394;"	d	file:
IDX_TRX_WEIGHT	handler/i_s.cc	403;"	d	file:
IDX_UNCOMPRESS_OPS	handler/i_s.cc	1704;"	d	file:
IDX_UNCOMPRESS_TIME	handler/i_s.cc	1713;"	d	file:
IGNORE_MISSING	include/os0file.h	/^		IGNORE_MISSING = 128,$/;"	e	enum:IORequest::__anon12
IMPORT_PAGE_STATUS_ALL_ZERO	row/row0import.cc	/^		IMPORT_PAGE_STATUS_ALL_ZERO,	\/*!< Page is all zeros *\/$/;"	e	enum:PageConverter::import_page_status_t	file:
IMPORT_PAGE_STATUS_CORRUPTED	row/row0import.cc	/^		IMPORT_PAGE_STATUS_CORRUPTED	\/*!< Page is corrupted *\/$/;"	e	enum:PageConverter::import_page_status_t	file:
IMPORT_PAGE_STATUS_OK	row/row0import.cc	/^		IMPORT_PAGE_STATUS_OK,		\/*!< Page is OK *\/$/;"	e	enum:PageConverter::import_page_status_t	file:
INDEX_ADD_TO_CACHE	include/dict0crea.h	373;"	d
INDEX_BUILD_FIELD_DEF	include/dict0crea.h	371;"	d
INDEX_BUILD_INDEX_DEF	include/dict0crea.h	370;"	d
INDEX_CREATE_INDEX_TREE	include/dict0crea.h	372;"	d
INDEX_EQ	dict/dict0stats.cc	651;"	d	file:
INDEX_STATS_NAME	dict/dict0stats.cc	114;"	d	file:
INDEX_STATS_NAME	include/dict0stats.h	35;"	d
INDEX_STATS_NAME_PRINT	dict/dict0stats.cc	115;"	d	file:
INITIAL	fts/fts0blex.cc	487;"	d	file:
INITIAL	fts/fts0tlex.cc	483;"	d	file:
INITIAL	include/fts0blex.h	231;"	d
INITIAL	include/fts0tlex.h	231;"	d
INITIAL	pars/lexyy.cc	1008;"	d	file:
INIT_LOG_FILE0	srv/srv0start.cc	370;"	d	file:
INNOBASE_ALTER_DATA	handler/handler0alter.cc	/^static const Alter_inplace_info::HA_ALTER_FLAGS INNOBASE_ALTER_DATA$/;"	v	file:
INNOBASE_ALTER_NOREBUILD	handler/handler0alter.cc	/^static const Alter_inplace_info::HA_ALTER_FLAGS INNOBASE_ALTER_NOREBUILD$/;"	v	file:
INNOBASE_ALTER_REBUILD	handler/handler0alter.cc	/^static const Alter_inplace_info::HA_ALTER_FLAGS INNOBASE_ALTER_REBUILD$/;"	v	file:
INNOBASE_FOREIGN_OPERATIONS	handler/handler0alter.cc	/^static const Alter_inplace_info::HA_ALTER_FLAGS INNOBASE_FOREIGN_OPERATIONS$/;"	v	file:
INNOBASE_FST0AST_H	include/fts0ast.h	27;"	d
INNOBASE_FTS0PLUGIN_H	include/fts0plugin.h	27;"	d
INNOBASE_FTS0PRIV_H	include/fts0priv.h	27;"	d
INNOBASE_FTS0TYPES_H	include/fts0types.h	27;"	d
INNOBASE_FTS0TYPES_IC	include/fts0types.ic	27;"	d	file:
INNOBASE_FTS0VLC_IC	include/fts0vlc.ic	27;"	d	file:
INNOBASE_INPLACE_IGNORE	handler/handler0alter.cc	/^static const Alter_inplace_info::HA_ALTER_FLAGS INNOBASE_INPLACE_IGNORE$/;"	v	file:
INNOBASE_ONLINE_CREATE	handler/handler0alter.cc	/^static const Alter_inplace_info::HA_ALTER_FLAGS INNOBASE_ONLINE_CREATE$/;"	v	file:
INNOBASE_SHARE	handler/ha_innodb.h	/^} INNOBASE_SHARE;$/;"	t	typeref:struct:st_innobase_share
INNOBASE_UT0RBT_H	include/ut0rbt.h	26;"	d
INNOBASE_WAKE_INTERVAL	api/api0api.cc	202;"	d	file:
INNOBASE_WAKE_INTERVAL	handler/ha_innodb.cc	308;"	d	file:
INNODB_FTS0OPT_H	include/fts0opt.h	26;"	d
INNODB_PARAMETERS_MSG	handler/ha_innodb.cc	/^const char*	INNODB_PARAMETERS_MSG =$/;"	v
INNODB_RW_LOCKS_USE_ATOMICS	include/os0atomic.h	150;"	d
INNODB_RW_LOCKS_USE_ATOMICS	include/os0atomic.h	266;"	d
INNODB_VERSION_BUGFIX	include/univ.i	47;"	d	file:
INNODB_VERSION_MAJOR	include/univ.i	45;"	d	file:
INNODB_VERSION_MINOR	include/univ.i	46;"	d	file:
INNODB_VERSION_SHORT	include/univ.i	55;"	d	file:
INNODB_VERSION_STR	include/univ.i	58;"	d	file:
INSERT	include/ut0stage.h	/^		INSERT = 3,$/;"	e	enum:ut_stage_alter_t::__anon11
INSIDE_HA_INNOBASE_CC	handler/ha_innodb.cc	129;"	d	file:
INSIDE_HA_INNOPART_CC	handler/ha_innopart.cc	57;"	d	file:
INS_DIRECT	include/row0ins.h	246;"	d
INS_NODE_ALLOC_ROW_ID	include/row0ins.h	251;"	d
INS_NODE_INSERT_ENTRIES	include/row0ins.h	252;"	d
INS_NODE_MAGIC_N	include/row0ins.h	241;"	d
INS_NODE_SET_IX_LOCK	include/row0ins.h	250;"	d
INS_SEARCHED	include/row0ins.h	244;"	d
INS_VALUES	include/row0ins.h	245;"	d
INT16_MAX	fts/fts0blex.cc	73;"	d	file:
INT16_MAX	fts/fts0tlex.cc	73;"	d	file:
INT16_MAX	include/fts0blex.h	76;"	d
INT16_MAX	include/fts0tlex.h	76;"	d
INT16_MAX	pars/lexyy.cc	73;"	d	file:
INT16_MIN	fts/fts0blex.cc	64;"	d	file:
INT16_MIN	fts/fts0tlex.cc	64;"	d	file:
INT16_MIN	include/fts0blex.h	67;"	d
INT16_MIN	include/fts0tlex.h	67;"	d
INT16_MIN	pars/lexyy.cc	64;"	d	file:
INT32_MAX	fts/fts0blex.cc	76;"	d	file:
INT32_MAX	fts/fts0tlex.cc	76;"	d	file:
INT32_MAX	include/fts0blex.h	79;"	d
INT32_MAX	include/fts0tlex.h	79;"	d
INT32_MAX	pars/lexyy.cc	76;"	d	file:
INT32_MIN	fts/fts0blex.cc	67;"	d	file:
INT32_MIN	fts/fts0tlex.cc	67;"	d	file:
INT32_MIN	include/fts0blex.h	70;"	d
INT32_MIN	include/fts0tlex.h	70;"	d
INT32_MIN	pars/lexyy.cc	67;"	d	file:
INT8_MAX	fts/fts0blex.cc	70;"	d	file:
INT8_MAX	fts/fts0tlex.cc	70;"	d	file:
INT8_MAX	include/fts0blex.h	73;"	d
INT8_MAX	include/fts0tlex.h	73;"	d
INT8_MAX	pars/lexyy.cc	70;"	d	file:
INT8_MIN	fts/fts0blex.cc	61;"	d	file:
INT8_MIN	fts/fts0tlex.cc	61;"	d	file:
INT8_MIN	include/fts0blex.h	64;"	d
INT8_MIN	include/fts0tlex.h	64;"	d
INT8_MIN	pars/lexyy.cc	61;"	d	file:
INTERSECT_CMP	gis/gis0geo.cc	38;"	d	file:
IN_PROGRESS	include/os0once.h	/^	static const state_t	IN_PROGRESS = 1;$/;"	m	class:os_once
IOEvents	os/os0file.cc	/^	typedef std::vector<io_event> IOEvents;$/;"	t	class:AIO	file:
IORequest	include/os0file.h	/^	IORequest()$/;"	f	class:IORequest
IORequest	include/os0file.h	/^	explicit IORequest(ulint type)$/;"	f	class:IORequest
IORequest	include/os0file.h	/^class IORequest {$/;"	c
IORequestLogRead	include/os0file.h	511;"	d
IORequestLogWrite	include/os0file.h	512;"	d
IORequestRead	include/os0file.h	509;"	d
IORequestWrite	include/os0file.h	510;"	d
IO_BUFFER_SIZE	row/row0import.cc	55;"	d	file:
IO_IBUF_SEGMENT	os/os0file.cc	/^static const ulint IO_IBUF_SEGMENT = 0;$/;"	v	file:
IO_LOG_SEGMENT	os/os0file.cc	/^static const ulint IO_LOG_SEGMENT = 1;$/;"	v	file:
ISL	include/fil0fil.h	/^	ISL = 2,$/;"	e	enum:ib_extention
IS_FOUND	ha/ha0storage.cc	56;"	d	file:
IS_LOCK_S_OR_X	lock/lock0lock.cc	4517;"	d	file:
I_S_FTS_DOC_COUNT	handler/i_s.cc	3262;"	d	file:
I_S_FTS_DOC_ID	handler/i_s.cc	2963;"	d	file:
I_S_FTS_FIRST_DOC_ID	handler/i_s.cc	3244;"	d	file:
I_S_FTS_ILIST_DOC_ID	handler/i_s.cc	3271;"	d	file:
I_S_FTS_ILIST_DOC_POS	handler/i_s.cc	3280;"	d	file:
I_S_FTS_LAST_DOC_ID	handler/i_s.cc	3253;"	d	file:
I_S_FTS_WORD	handler/i_s.cc	3235;"	d	file:
I_S_INNODB_LOCKS	include/trx0i_s.h	/^	I_S_INNODB_LOCKS,	\/*!< INFORMATION_SCHEMA.innodb_locks *\/$/;"	e	enum:i_s_table
I_S_INNODB_LOCK_WAITS	include/trx0i_s.h	/^	I_S_INNODB_LOCK_WAITS	\/*!< INFORMATION_SCHEMA.innodb_lock_waits *\/$/;"	e	enum:i_s_table
I_S_INNODB_TRX	include/trx0i_s.h	/^	I_S_INNODB_TRX,		\/*!< INFORMATION_SCHEMA.innodb_trx *\/$/;"	e	enum:i_s_table
I_S_PAGE_TYPE_BITS	handler/i_s.cc	80;"	d	file:
I_S_PAGE_TYPE_IBUF	handler/i_s.cc	76;"	d	file:
I_S_PAGE_TYPE_INDEX	handler/i_s.cc	67;"	d	file:
I_S_PAGE_TYPE_LAST	handler/i_s.cc	78;"	d	file:
I_S_PAGE_TYPE_RTREE	handler/i_s.cc	73;"	d	file:
I_S_PAGE_TYPE_UNKNOWN	handler/i_s.cc	70;"	d	file:
Impl	include/mtr0mtr.h	/^	struct Impl {$/;"	s	struct:mtr_t
Index	row/row0import.cc	/^		Index(index_id_t id, ulint page_no)$/;"	f	struct:FetchIndexRootPages::Index
Index	row/row0import.cc	/^	struct Index {$/;"	s	struct:FetchIndexRootPages	file:
IndexIterator	row/row0trunc.cc	/^	explicit IndexIterator(dict_index_t* index)$/;"	f	class:IndexIterator
IndexIterator	row/row0trunc.cc	/^class IndexIterator {$/;"	c	file:
IndexPurge	row/row0import.cc	/^class IndexPurge {$/;"	c	file:
Indexes	row/row0import.cc	/^	typedef std::vector<Index, ut_allocator<Index> >	Indexes;$/;"	t	struct:FetchIndexRootPages	file:
Infos	sync/sync0rw.cc	/^typedef std::vector<rw_lock_debug_t*> Infos;$/;"	t	file:
Iterate	mtr/mtr0mtr.cc	/^	explicit Iterate(Functor& functor)$/;"	f	struct:Iterate
Iterate	mtr/mtr0mtr.cc	/^struct Iterate {$/;"	s	file:
LATCH_ADD_MUTEX	include/sync0types.h	514;"	d
LATCH_ADD_MUTEX	include/sync0types.h	532;"	d
LATCH_ADD_RWLOCK	include/sync0types.h	523;"	d
LATCH_ADD_RWLOCK	include/sync0types.h	526;"	d
LATCH_ADD_RWLOCK	include/sync0types.h	534;"	d
LATCH_ID_AUTOINC	include/sync0types.h	/^	LATCH_ID_AUTOINC,$/;"	e	enum:latch_id_t
LATCH_ID_BTR_SEARCH	include/sync0types.h	/^	LATCH_ID_BTR_SEARCH,$/;"	e	enum:latch_id_t
LATCH_ID_BUF_BLOCK_DEBUG	include/sync0types.h	/^	LATCH_ID_BUF_BLOCK_DEBUG,$/;"	e	enum:latch_id_t
LATCH_ID_BUF_BLOCK_LOCK	include/sync0types.h	/^	LATCH_ID_BUF_BLOCK_LOCK,$/;"	e	enum:latch_id_t
LATCH_ID_BUF_BLOCK_MUTEX	include/sync0types.h	/^	LATCH_ID_BUF_BLOCK_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_BUF_CHUNK_MAP_LATCH	include/sync0types.h	/^	LATCH_ID_BUF_CHUNK_MAP_LATCH,$/;"	e	enum:latch_id_t
LATCH_ID_BUF_DBLWR	include/sync0types.h	/^	LATCH_ID_BUF_DBLWR,$/;"	e	enum:latch_id_t
LATCH_ID_BUF_POOL	include/sync0types.h	/^	LATCH_ID_BUF_POOL,$/;"	e	enum:latch_id_t
LATCH_ID_BUF_POOL_ZIP	include/sync0types.h	/^	LATCH_ID_BUF_POOL_ZIP,$/;"	e	enum:latch_id_t
LATCH_ID_CACHE_LAST_READ	include/sync0types.h	/^	LATCH_ID_CACHE_LAST_READ,$/;"	e	enum:latch_id_t
LATCH_ID_CHECKPOINT	include/sync0types.h	/^	LATCH_ID_CHECKPOINT,$/;"	e	enum:latch_id_t
LATCH_ID_DICT_FOREIGN_ERR	include/sync0types.h	/^	LATCH_ID_DICT_FOREIGN_ERR,$/;"	e	enum:latch_id_t
LATCH_ID_DICT_OPERATION	include/sync0types.h	/^	LATCH_ID_DICT_OPERATION,$/;"	e	enum:latch_id_t
LATCH_ID_DICT_SYS	include/sync0types.h	/^	LATCH_ID_DICT_SYS,$/;"	e	enum:latch_id_t
LATCH_ID_DICT_TABLE_STATS	include/sync0types.h	/^	LATCH_ID_DICT_TABLE_STATS,$/;"	e	enum:latch_id_t
LATCH_ID_EVENT_MANAGER	include/sync0types.h	/^	LATCH_ID_EVENT_MANAGER,$/;"	e	enum:latch_id_t
LATCH_ID_EVENT_MUTEX	include/sync0types.h	/^	LATCH_ID_EVENT_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_FILE_FORMAT_MAX	include/sync0types.h	/^	LATCH_ID_FILE_FORMAT_MAX,$/;"	e	enum:latch_id_t
LATCH_ID_FIL_SPACE	include/sync0types.h	/^	LATCH_ID_FIL_SPACE,$/;"	e	enum:latch_id_t
LATCH_ID_FIL_SYSTEM	include/sync0types.h	/^	LATCH_ID_FIL_SYSTEM,$/;"	e	enum:latch_id_t
LATCH_ID_FLUSH_LIST	include/sync0types.h	/^	LATCH_ID_FLUSH_LIST,$/;"	e	enum:latch_id_t
LATCH_ID_FTS_BG_THREADS	include/sync0types.h	/^	LATCH_ID_FTS_BG_THREADS,$/;"	e	enum:latch_id_t
LATCH_ID_FTS_CACHE	include/sync0types.h	/^	LATCH_ID_FTS_CACHE,$/;"	e	enum:latch_id_t
LATCH_ID_FTS_CACHE_INIT	include/sync0types.h	/^	LATCH_ID_FTS_CACHE_INIT,$/;"	e	enum:latch_id_t
LATCH_ID_FTS_DELETE	include/sync0types.h	/^	LATCH_ID_FTS_DELETE,$/;"	e	enum:latch_id_t
LATCH_ID_FTS_DOC_ID	include/sync0types.h	/^	LATCH_ID_FTS_DOC_ID,$/;"	e	enum:latch_id_t
LATCH_ID_FTS_OPTIMIZE	include/sync0types.h	/^	LATCH_ID_FTS_OPTIMIZE,$/;"	e	enum:latch_id_t
LATCH_ID_FTS_PLL_TOKENIZE	include/sync0types.h	/^	LATCH_ID_FTS_PLL_TOKENIZE,$/;"	e	enum:latch_id_t
LATCH_ID_HASH_TABLE_MUTEX	include/sync0types.h	/^	LATCH_ID_HASH_TABLE_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_HASH_TABLE_RW_LOCK	include/sync0types.h	/^	LATCH_ID_HASH_TABLE_RW_LOCK,$/;"	e	enum:latch_id_t
LATCH_ID_IBUF	include/sync0types.h	/^	LATCH_ID_IBUF,$/;"	e	enum:latch_id_t
LATCH_ID_IBUF_BITMAP	include/sync0types.h	/^	LATCH_ID_IBUF_BITMAP,$/;"	e	enum:latch_id_t
LATCH_ID_IBUF_INDEX_TREE	include/sync0types.h	/^	LATCH_ID_IBUF_INDEX_TREE,$/;"	e	enum:latch_id_t
LATCH_ID_IBUF_PESSIMISTIC_INSERT	include/sync0types.h	/^	LATCH_ID_IBUF_PESSIMISTIC_INSERT,$/;"	e	enum:latch_id_t
LATCH_ID_INDEX_ONLINE_LOG	include/sync0types.h	/^	LATCH_ID_INDEX_ONLINE_LOG,$/;"	e	enum:latch_id_t
LATCH_ID_INDEX_TREE	include/sync0types.h	/^	LATCH_ID_INDEX_TREE,$/;"	e	enum:latch_id_t
LATCH_ID_LIST	include/sync0types.h	/^	LATCH_ID_LIST,$/;"	e	enum:latch_id_t
LATCH_ID_LOCK_SYS	include/sync0types.h	/^	LATCH_ID_LOCK_SYS,$/;"	e	enum:latch_id_t
LATCH_ID_LOCK_SYS_WAIT	include/sync0types.h	/^	LATCH_ID_LOCK_SYS_WAIT,$/;"	e	enum:latch_id_t
LATCH_ID_LOG_FLUSH_ORDER	include/sync0types.h	/^	LATCH_ID_LOG_FLUSH_ORDER,$/;"	e	enum:latch_id_t
LATCH_ID_LOG_SYS	include/sync0types.h	/^	LATCH_ID_LOG_SYS,$/;"	e	enum:latch_id_t
LATCH_ID_LOG_WRITE	include/sync0types.h	/^	LATCH_ID_LOG_WRITE,$/;"	e	enum:latch_id_t
LATCH_ID_MASTER_KEY_ID_MUTEX	include/sync0types.h	/^	LATCH_ID_MASTER_KEY_ID_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_MAX	include/sync0types.h	/^	LATCH_ID_MAX = LATCH_ID_TEST_MUTEX$/;"	e	enum:latch_id_t
LATCH_ID_MUTEX_LIST	include/sync0types.h	/^	LATCH_ID_MUTEX_LIST,$/;"	e	enum:latch_id_t
LATCH_ID_NONE	include/sync0types.h	/^	LATCH_ID_NONE = 0,$/;"	e	enum:latch_id_t
LATCH_ID_NOREDO_RSEG	include/sync0types.h	/^	LATCH_ID_NOREDO_RSEG,$/;"	e	enum:latch_id_t
LATCH_ID_OS_AIO_IBUF_MUTEX	include/sync0types.h	/^	LATCH_ID_OS_AIO_IBUF_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_OS_AIO_LOG_MUTEX	include/sync0types.h	/^	LATCH_ID_OS_AIO_LOG_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_OS_AIO_READ_MUTEX	include/sync0types.h	/^	LATCH_ID_OS_AIO_READ_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_OS_AIO_SYNC_MUTEX	include/sync0types.h	/^	LATCH_ID_OS_AIO_SYNC_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_OS_AIO_WRITE_MUTEX	include/sync0types.h	/^	LATCH_ID_OS_AIO_WRITE_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_PAGE_CLEANER	include/sync0types.h	/^	LATCH_ID_PAGE_CLEANER,$/;"	e	enum:latch_id_t
LATCH_ID_PAGE_ZIP_STAT_PER_INDEX	include/sync0types.h	/^	LATCH_ID_PAGE_ZIP_STAT_PER_INDEX,$/;"	e	enum:latch_id_t
LATCH_ID_PURGE_SYS_PQ	include/sync0types.h	/^	LATCH_ID_PURGE_SYS_PQ,$/;"	e	enum:latch_id_t
LATCH_ID_RECALC_POOL	include/sync0types.h	/^	LATCH_ID_RECALC_POOL,$/;"	e	enum:latch_id_t
LATCH_ID_RECV_SYS	include/sync0types.h	/^	LATCH_ID_RECV_SYS,$/;"	e	enum:latch_id_t
LATCH_ID_RECV_WRITER	include/sync0types.h	/^	LATCH_ID_RECV_WRITER,$/;"	e	enum:latch_id_t
LATCH_ID_REDO_RSEG	include/sync0types.h	/^	LATCH_ID_REDO_RSEG,$/;"	e	enum:latch_id_t
LATCH_ID_ROW_DROP_LIST	include/sync0types.h	/^	LATCH_ID_ROW_DROP_LIST,$/;"	e	enum:latch_id_t
LATCH_ID_RTR_ACTIVE_MUTEX	include/sync0types.h	/^	LATCH_ID_RTR_ACTIVE_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_RTR_MATCH_MUTEX	include/sync0types.h	/^	LATCH_ID_RTR_MATCH_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_RTR_PATH_MUTEX	include/sync0types.h	/^	LATCH_ID_RTR_PATH_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_RTR_SSN_MUTEX	include/sync0types.h	/^	LATCH_ID_RTR_SSN_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_RW_LOCK_DEBUG	include/sync0types.h	/^	LATCH_ID_RW_LOCK_DEBUG,$/;"	e	enum:latch_id_t
LATCH_ID_RW_LOCK_LIST	include/sync0types.h	/^	LATCH_ID_RW_LOCK_LIST,$/;"	e	enum:latch_id_t
LATCH_ID_RW_LOCK_MUTEX	include/sync0types.h	/^	LATCH_ID_RW_LOCK_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_SRV_DICT_TMPFILE	include/sync0types.h	/^	LATCH_ID_SRV_DICT_TMPFILE,$/;"	e	enum:latch_id_t
LATCH_ID_SRV_INNODB_MONITOR	include/sync0types.h	/^	LATCH_ID_SRV_INNODB_MONITOR,$/;"	e	enum:latch_id_t
LATCH_ID_SRV_MISC_TMPFILE	include/sync0types.h	/^	LATCH_ID_SRV_MISC_TMPFILE,$/;"	e	enum:latch_id_t
LATCH_ID_SRV_MONITOR_FILE	include/sync0types.h	/^	LATCH_ID_SRV_MONITOR_FILE,$/;"	e	enum:latch_id_t
LATCH_ID_SRV_SYS	include/sync0types.h	/^	LATCH_ID_SRV_SYS,$/;"	e	enum:latch_id_t
LATCH_ID_SRV_SYS_TASKS	include/sync0types.h	/^	LATCH_ID_SRV_SYS_TASKS,$/;"	e	enum:latch_id_t
LATCH_ID_SYNC_ARRAY_MUTEX	include/sync0types.h	/^	LATCH_ID_SYNC_ARRAY_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_SYNC_DEBUG_MUTEX	include/sync0types.h	/^	LATCH_ID_SYNC_DEBUG_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_SYNC_THREAD	include/sync0types.h	/^	LATCH_ID_SYNC_THREAD,$/;"	e	enum:latch_id_t
LATCH_ID_TEST_MUTEX	include/sync0types.h	/^	LATCH_ID_TEST_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_THREAD_MUTEX	include/sync0types.h	/^	LATCH_ID_THREAD_MUTEX,$/;"	e	enum:latch_id_t
LATCH_ID_TRX	include/sync0types.h	/^	LATCH_ID_TRX,$/;"	e	enum:latch_id_t
LATCH_ID_TRX_I_S_CACHE	include/sync0types.h	/^	LATCH_ID_TRX_I_S_CACHE,$/;"	e	enum:latch_id_t
LATCH_ID_TRX_POOL	include/sync0types.h	/^	LATCH_ID_TRX_POOL,$/;"	e	enum:latch_id_t
LATCH_ID_TRX_POOL_MANAGER	include/sync0types.h	/^	LATCH_ID_TRX_POOL_MANAGER,$/;"	e	enum:latch_id_t
LATCH_ID_TRX_PURGE	include/sync0types.h	/^	LATCH_ID_TRX_PURGE,$/;"	e	enum:latch_id_t
LATCH_ID_TRX_SYS	include/sync0types.h	/^	LATCH_ID_TRX_SYS,$/;"	e	enum:latch_id_t
LATCH_ID_TRX_UNDO	include/sync0types.h	/^	LATCH_ID_TRX_UNDO,$/;"	e	enum:latch_id_t
LATCH_ID_WORK_QUEUE	include/sync0types.h	/^	LATCH_ID_WORK_QUEUE,$/;"	e	enum:latch_id_t
LATCH_ID_ZIP_PAD_MUTEX	include/sync0types.h	/^	LATCH_ID_ZIP_PAD_MUTEX,$/;"	e	enum:latch_id_t
LCG_a	page/page0cur.cc	66;"	d	file:
LCG_c	page/page0cur.cc	67;"	d	file:
LEVEL_MAP_INSERT	sync/sync0debug.cc	451;"	d	file:
LIMIT_OPTIMISTIC_INSERT_DEBUG	include/btr0cur.ic	30;"	d	file:
LIMIT_OPTIMISTIC_INSERT_DEBUG	include/btr0cur.ic	36;"	d	file:
LINE_MBR_WEIGHTS	include/gis0geo.h	35;"	d
LOCKS_HASH_CELLS_NUM	trx/trx0i_s.cc	163;"	d	file:
LOCK_AUTO_INC	include/lock0types.h	/^	LOCK_AUTO_INC,	\/* locks the auto-inc counter of a table$/;"	e	enum:lock_mode
LOCK_GAP	include/lock0lock.h	957;"	d
LOCK_INSERT_INTENTION	include/lock0lock.h	972;"	d
LOCK_IS	include/lock0types.h	/^	LOCK_IS = 0,	\/* intention shared *\/$/;"	e	enum:lock_mode
LOCK_IX	include/lock0types.h	/^	LOCK_IX,	\/* intention exclusive *\/$/;"	e	enum:lock_mode
LOCK_MAX_DEPTH_IN_DEADLOCK_CHECK	include/lock0priv.h	/^static const ulint	LOCK_MAX_DEPTH_IN_DEADLOCK_CHECK = 200;$/;"	v
LOCK_MAX_N_STEPS_IN_DEADLOCK_CHECK	include/lock0priv.h	/^static const ulint	LOCK_MAX_N_STEPS_IN_DEADLOCK_CHECK = 1000000;$/;"	v
LOCK_MODE_MASK	include/lock0lock.h	937;"	d
LOCK_MODULE_IMPLEMENTATION	lock/lock0iter.cc	27;"	d	file:
LOCK_MODULE_IMPLEMENTATION	lock/lock0lock.cc	26;"	d	file:
LOCK_MODULE_IMPLEMENTATION	lock/lock0prdt.cc	26;"	d	file:
LOCK_MODULE_IMPLEMENTATION	lock/lock0wait.cc	26;"	d	file:
LOCK_NONE	include/lock0types.h	/^	LOCK_NONE,	\/* this is used elsewhere to note consistent read *\/$/;"	e	enum:lock_mode
LOCK_NONE_UNSET	include/lock0types.h	/^	LOCK_NONE_UNSET = 255$/;"	e	enum:lock_mode
LOCK_NUM	include/lock0types.h	/^	LOCK_NUM = LOCK_NONE, \/* number of lock modes *\/$/;"	e	enum:lock_mode
LOCK_ORDINARY	include/lock0lock.h	954;"	d
LOCK_PAGE_BITMAP_MARGIN	include/lock0priv.h	/^static const ulint	LOCK_PAGE_BITMAP_MARGIN = 64;$/;"	v
LOCK_PRDT_PAGE	include/lock0lock.h	981;"	d
LOCK_PREDICATE	include/lock0lock.h	980;"	d
LOCK_REC	include/lock0lock.h	942;"	d
LOCK_REC_FAIL	include/lock0priv.h	/^        LOCK_REC_FAIL,$/;"	e	enum:lock_rec_req_status
LOCK_REC_NOT_GAP	include/lock0lock.h	964;"	d
LOCK_REC_SUCCESS	include/lock0priv.h	/^        LOCK_REC_SUCCESS,$/;"	e	enum:lock_rec_req_status
LOCK_REC_SUCCESS_CREATED	include/lock0priv.h	/^        LOCK_REC_SUCCESS_CREATED$/;"	e	enum:lock_rec_req_status
LOCK_RELEASE_INTERVAL	include/lock0priv.h	/^static const ulint	LOCK_RELEASE_INTERVAL = 1000;$/;"	v
LOCK_S	include/lock0types.h	/^	LOCK_S,		\/* shared *\/$/;"	e	enum:lock_mode
LOCK_TABLE	include/lock0lock.h	941;"	d
LOCK_TYPE_MASK	include/lock0lock.h	943;"	d
LOCK_WAIT	include/lock0lock.h	949;"	d
LOCK_X	include/lock0types.h	/^	LOCK_X,		\/* exclusive *\/$/;"	e	enum:lock_mode
LOG	include/os0file.h	/^		LOG = 16,$/;"	e	enum:IORequest::__anon12
LOGFILE	page/page0zip.cc	870;"	d	file:
LOGFILE	page/page0zip.cc	875;"	d	file:
LOG_BLOCK_CHECKPOINT_NO	include/log0log.h	512;"	d
LOG_BLOCK_CHECKSUM	include/log0log.h	522;"	d
LOG_BLOCK_FIRST_REC_GROUP	include/log0log.h	501;"	d
LOG_BLOCK_FLUSH_BIT_MASK	include/log0log.h	496;"	d
LOG_BLOCK_HDR_DATA_LEN	include/log0log.h	499;"	d
LOG_BLOCK_HDR_NO	include/log0log.h	491;"	d
LOG_BLOCK_HDR_SIZE	include/log0log.h	518;"	d
LOG_BLOCK_TRL_SIZE	include/log0log.h	527;"	d
LOG_BUFFER_SIZE	include/log0log.h	488;"	d
LOG_BUF_FLUSH_MARGIN	log/log0log.cc	108;"	d	file:
LOG_BUF_FLUSH_RATIO	log/log0log.cc	107;"	d	file:
LOG_BUF_WRITE_MARGIN	log/log0log.cc	104;"	d	file:
LOG_CHECKPOINT	include/log0log.h	483;"	d
LOG_CHECKPOINT_1	include/log0log.h	562;"	d
LOG_CHECKPOINT_2	include/log0log.h	568;"	d
LOG_CHECKPOINT_EXTRA_FREE	include/log0log.h	62;"	d
LOG_CHECKPOINT_FREE_PER_THREAD	include/log0log.h	61;"	d
LOG_CHECKPOINT_LOG_BUF_SIZE	include/log0log.h	533;"	d
LOG_CHECKPOINT_LSN	include/log0log.h	531;"	d
LOG_CHECKPOINT_NO	include/log0log.h	530;"	d
LOG_CHECKPOINT_OFFSET	include/log0log.h	532;"	d
LOG_FILE_HDR_SIZE	include/log0log.h	571;"	d
LOG_FLUSH	include/log0log.h	482;"	d
LOG_GROUP_CORRUPTED	include/log0log.h	/^	LOG_GROUP_CORRUPTED$/;"	e	enum:log_group_state_t
LOG_GROUP_OK	include/log0log.h	/^	LOG_GROUP_OK,$/;"	e	enum:log_group_state_t
LOG_HEADER_CREATOR	include/log0log.h	551;"	d
LOG_HEADER_CREATOR_CURRENT	include/log0log.h	555;"	d
LOG_HEADER_CREATOR_END	include/log0log.h	553;"	d
LOG_HEADER_FORMAT	include/log0log.h	540;"	d
LOG_HEADER_FORMAT_CURRENT	include/log0log.h	559;"	d
LOG_HEADER_PAD1	include/log0log.h	544;"	d
LOG_HEADER_START_LSN	include/log0log.h	547;"	d
LOG_INDEX	include/ut0stage.h	/^		LOG_INDEX = 5,$/;"	e	enum:ut_stage_alter_t::__anon11
LOG_NO_CHECKSUM_MAGIC	include/log0log.h	56;"	d
LOG_POOL_CHECKPOINT_RATIO_ASYNC	log/log0log.cc	113;"	d	file:
LOG_POOL_PREFLUSH_RATIO_ASYNC	log/log0log.cc	120;"	d	file:
LOG_POOL_PREFLUSH_RATIO_SYNC	log/log0log.cc	116;"	d	file:
LOG_START_LSN	include/log0log.h	486;"	d
LOG_TABLE	include/ut0stage.h	/^		LOG_TABLE = 6,$/;"	e	enum:ut_stage_alter_t::__anon11
LOG_UNLOCK_FLUSH_LOCK	log/log0log.cc	124;"	d	file:
LOG_UNLOCK_NONE_FLUSHED_LOCK	log/log0log.cc	123;"	d	file:
LOOP_READ_BYTES	include/ut0mem.ic	191;"	d	file:
LRU	fil/fil0fil.cc	/^	UT_LIST_BASE_NODE_T(fil_node_t) LRU;$/;"	m	struct:fil_system_t	file:
LRU	include/buf0buf.h	/^	UT_LIST_BASE_NODE_T(buf_page_t) LRU;$/;"	m	struct:buf_pool_t
LRU	include/buf0buf.h	/^	UT_LIST_NODE_T(buf_page_t) LRU;$/;"	m	class:buf_page_t
LRU	include/fil0fil.h	/^	UT_LIST_NODE_T(fil_node_t) LRU;$/;"	m	struct:fil_node_t
LRUHp	include/buf0buf.h	/^	LRUHp(const buf_pool_t* buf_pool, const ib_mutex_t* mutex)$/;"	f	class:LRUHp
LRUHp	include/buf0buf.h	/^class LRUHp: public HazardPointer {$/;"	c
LRUItr	include/buf0buf.h	/^	LRUItr(const buf_pool_t* buf_pool, const ib_mutex_t* mutex)$/;"	f	class:LRUItr
LRUItr	include/buf0buf.h	/^class LRUItr: public LRUHp {$/;"	c
LRU_bytes	include/buf0buf.h	/^	ulint	LRU_bytes;		\/*!< LRU size in bytes *\/$/;"	m	struct:buf_pools_list_size_t
LRU_bytes	include/buf0buf.h	/^	ulint	LRU_bytes;	\/*!< LRU size in bytes *\/$/;"	m	struct:buf_pool_stat_t
LRU_old	include/buf0buf.h	/^	buf_page_t*	LRU_old;	\/*!< pointer to the about$/;"	m	struct:buf_pool_t
LRU_old_len	include/buf0buf.h	/^	ulint		LRU_old_len;	\/*!< length of the LRU list from$/;"	m	struct:buf_pool_t
LRU_old_ratio	include/buf0buf.h	/^	ulint		LRU_old_ratio;  \/*!< Reserve this much of the buffer$/;"	m	struct:buf_pool_t
LSN_MAX	include/log0log.h	45;"	d
LSN_MAX	include/log0types.h	40;"	d
LSN_PF	include/log0log.h	47;"	d
LSN_PF	include/log0types.h	42;"	d
LZ4	include/os0file.h	/^		LZ4 = 2$/;"	e	enum:Compression::Type
LatchCounter	include/sync0types.h	/^class LatchCounter {$/;"	c
LatchDebug	sync/sync0debug.cc	/^LatchDebug::LatchDebug()$/;"	f	class:LatchDebug
LatchDebug	sync/sync0debug.cc	/^struct LatchDebug {$/;"	s	file:
LatchMeta	include/sync0types.h	/^	LatchMeta($/;"	f	class:LatchMeta
LatchMeta	include/sync0types.h	/^	LatchMeta()$/;"	f	class:LatchMeta
LatchMeta	include/sync0types.h	/^class LatchMeta {$/;"	c
LatchMetaData	include/sync0types.h	/^typedef std::vector<latch_meta_t*, ut_allocator<latch_meta_t*> > LatchMetaData;$/;"	t
Latched	sync/sync0debug.cc	/^	Latched() : m_latch(), m_level(SYNC_UNKNOWN) { }$/;"	f	struct:Latched
Latched	sync/sync0debug.cc	/^	Latched(const latch_t*	latch,$/;"	f	struct:Latched
Latched	sync/sync0debug.cc	/^struct Latched {$/;"	s	file:
Latches	sync/sync0debug.cc	/^typedef std::vector<Latched, ut_allocator<Latched> > Latches;$/;"	t	file:
Levels	sync/sync0debug.cc	/^		Levels;$/;"	t	struct:LatchDebug	file:
LinuxAIOHandler	os/os0file.cc	/^	LinuxAIOHandler(ulint global_segment)$/;"	f	class:LinuxAIOHandler
LinuxAIOHandler	os/os0file.cc	/^class LinuxAIOHandler {$/;"	c	file:
LockMutex	include/lock0lock.h	/^typedef ib_mutex_t LockMutex;$/;"	t
LogSysMutex	include/log0log.h	/^typedef ib_mutex_t	LogSysMutex;$/;"	t
MAXBQUALSIZE	include/trx0xa.h	38;"	d
MAXGTRIDSIZE	include/trx0xa.h	37;"	d
MAX_ALLOWED_FOR_ALLOC	trx/trx0i_s.cc	123;"	d	file:
MAX_ALLOWED_FOR_STORAGE	trx/trx0i_s.cc	116;"	d	file:
MAX_BLOCKS	os/os0file.cc	/^static const size_t	MAX_BLOCKS = 128;$/;"	v	file:
MAX_BUFFER_POOLS	include/buf0buf.h	81;"	d
MAX_BUFFER_POOLS_BITS	include/buf0buf.h	78;"	d
MAX_BUF_INFO_CACHED	handler/i_s.cc	/^const ulint	MAX_BUF_INFO_CACHED = 10000;$/;"	v
MAX_CHAR_COLL_NUM	include/data0type.h	257;"	d
MAX_COMPRESSION_LEN	include/univ.i	392;"	d	file:
MAX_DATABASE_NAME_LEN	include/univ.i	380;"	d	file:
MAX_DATA_SIZE	include/dyn0buf.h	/^			MAX_DATA_SIZE = SIZE$/;"	e	enum:dyn_buf_t::block_t::__anon8
MAX_DATA_SIZE	include/dyn0buf.h	/^	enum { MAX_DATA_SIZE = block_t::MAX_DATA_SIZE};$/;"	e	enum:dyn_buf_t::__anon9
MAX_DB_UTF8_LEN	include/univ.i	397;"	d	file:
MAX_DETAILED_ERROR_LEN	trx/trx0trx.cc	/^static const ulint MAX_DETAILED_ERROR_LEN = 256;$/;"	v	file:
MAX_DOC_ID_OPT_VAL	include/fts0fts.h	66;"	d
MAX_FULL_NAME_LEN	include/univ.i	387;"	d	file:
MAX_KEY_LENGTH_BITS	include/dict0mem.h	877;"	d
MAX_MUTEX_NOWAIT	srv/srv0srv.cc	237;"	d	file:
MAX_NUM_FK_COLUMNS	include/dict0dict.h	1678;"	d
MAX_N_POINTERS	ha/ha0ha.cc	/^static const ulint MAX_N_POINTERS$/;"	v	file:
MAX_PAGE_HASH_LOCKS	include/buf0buf.h	88;"	d
MAX_PROXIMITY_ITEM	fts/fts0que.cc	54;"	d	file:
MAX_RESERVED	include/srv0mon.h	110;"	d
MAX_SECTOR_SIZE	os/os0file.cc	/^static const ulint	MAX_SECTOR_SIZE = 4096;$/;"	v	file:
MAX_SRCH_KEY_VAL_BUFFER	row/row0mysql.cc	869;"	d	file:
MAX_STACK_SIZE	include/lock0priv.h	/^static const ulint MAX_STACK_SIZE = 4096;$/;"	v
MAX_TABLE_NAME_LEN	include/univ.i	376;"	d	file:
MAX_TABLE_UTF8_LEN	include/univ.i	402;"	d	file:
MAX_TRX_BLOCK_SIZE	trx/trx0trx.cc	/^static const ulint MAX_TRX_BLOCK_SIZE = 1024 * 1024 * 4;$/;"	v	file:
MBR_CONTAIN_CMP	include/gis0rtree.h	49;"	d
MBR_DISJOINT_CMP	include/gis0rtree.h	64;"	d
MBR_EQUAL_CMP	include/gis0rtree.h	54;"	d
MBR_INTERSECT_CMP	include/gis0rtree.h	59;"	d
MBR_WITHIN_CMP	include/gis0rtree.h	67;"	d
MEM_BLOCK_HEADER_SIZE	include/mem0mem.h	411;"	d
MEM_BLOCK_MAGIC_N	include/mem0mem.h	407;"	d
MEM_BLOCK_STANDARD_SIZE	include/mem0mem.h	72;"	d
MEM_BLOCK_START_SIZE	include/mem0mem.h	71;"	d
MEM_CHUNKS_IN_TABLE_CACHE	trx/trx0i_s.cc	70;"	d	file:
MEM_FREED_BLOCK_MAGIC_N	include/mem0mem.h	408;"	d
MEM_HEAP_BTR_SEARCH	include/mem0mem.h	52;"	d
MEM_HEAP_BUFFER	include/mem0mem.h	51;"	d
MEM_HEAP_DYNAMIC	include/mem0mem.h	50;"	d
MEM_HEAP_FOR_BTR_SEARCH	include/mem0mem.h	61;"	d
MEM_HEAP_FOR_LOCK_HEAP	include/mem0mem.h	64;"	d
MEM_HEAP_FOR_PAGE_HASH	include/mem0mem.h	62;"	d
MEM_HEAP_FOR_RECV_SYS	include/mem0mem.h	63;"	d
MEM_MAX_ALLOC_IN_BUF	include/mem0mem.h	77;"	d
MEM_SPACE_NEEDED	include/mem0mem.h	81;"	d
METRIC_AVG_VALUE_RESET	handler/i_s.cc	2398;"	d	file:
METRIC_AVG_VALUE_START	handler/i_s.cc	2362;"	d	file:
METRIC_DESC	handler/i_s.cc	2461;"	d	file:
METRIC_MAX_VALUE_RESET	handler/i_s.cc	2380;"	d	file:
METRIC_MAX_VALUE_START	handler/i_s.cc	2344;"	d	file:
METRIC_MIN_VALUE_RESET	handler/i_s.cc	2389;"	d	file:
METRIC_MIN_VALUE_START	handler/i_s.cc	2353;"	d	file:
METRIC_NAME	handler/i_s.cc	2317;"	d	file:
METRIC_RESET_TIME	handler/i_s.cc	2434;"	d	file:
METRIC_START_TIME	handler/i_s.cc	2407;"	d	file:
METRIC_STATUS	handler/i_s.cc	2443;"	d	file:
METRIC_STOP_TIME	handler/i_s.cc	2416;"	d	file:
METRIC_SUBSYS	handler/i_s.cc	2326;"	d	file:
METRIC_TIME_ELAPSED	handler/i_s.cc	2425;"	d	file:
METRIC_TYPE	handler/i_s.cc	2452;"	d	file:
METRIC_VALUE_RESET	handler/i_s.cc	2371;"	d	file:
METRIC_VALUE_START	handler/i_s.cc	2335;"	d	file:
MF	fil/fil0fil.cc	7502;"	d	file:
MICROSECS_IN_A_SECOND	os/os0event.cc	/^static const ulint MICROSECS_IN_A_SECOND = 1000000;$/;"	v	file:
MIN_EXPECTED_TABLESPACE_SIZE	srv/srv0start.cc	/^static const ulint MIN_EXPECTED_TABLESPACE_SIZE = 5 * 1024 * 1024;$/;"	v	file:
MIN_RECALC_INTERVAL	dict/dict0stats_bg.cc	41;"	d	file:
MIN_RESERVED	include/srv0mon.h	109;"	d
MIN_TRX_IDS	read/read0read.cc	/^static const ulint MIN_TRX_IDS = 32;$/;"	v	file:
MK_ALL_UINT16_WITH_A	include/ut0mem.ic	133;"	d	file:
MK_UINT16	include/ut0mem.ic	119;"	d	file:
MLOG_1BYTE	include/mtr0types.h	/^	MLOG_1BYTE = 1,$/;"	e	enum:mlog_id_t
MLOG_2BYTES	include/mtr0types.h	/^	MLOG_2BYTES = 2,$/;"	e	enum:mlog_id_t
MLOG_4BYTES	include/mtr0types.h	/^	MLOG_4BYTES = 4,$/;"	e	enum:mlog_id_t
MLOG_8BYTES	include/mtr0types.h	/^	MLOG_8BYTES = 8,$/;"	e	enum:mlog_id_t
MLOG_BIGGEST_TYPE	include/mtr0types.h	/^	MLOG_BIGGEST_TYPE = MLOG_INDEX_LOAD$/;"	e	enum:mlog_id_t
MLOG_BUF_MARGIN	include/mtr0log.h	252;"	d
MLOG_CHECKPOINT	include/mtr0types.h	/^	MLOG_CHECKPOINT = 56,$/;"	e	enum:mlog_id_t
MLOG_COMP_LIST_END_COPY_CREATED	include/mtr0types.h	/^	MLOG_COMP_LIST_END_COPY_CREATED = 45,$/;"	e	enum:mlog_id_t
MLOG_COMP_LIST_END_DELETE	include/mtr0types.h	/^	MLOG_COMP_LIST_END_DELETE = 43,$/;"	e	enum:mlog_id_t
MLOG_COMP_LIST_START_DELETE	include/mtr0types.h	/^	MLOG_COMP_LIST_START_DELETE = 44,$/;"	e	enum:mlog_id_t
MLOG_COMP_PAGE_CREATE	include/mtr0types.h	/^	MLOG_COMP_PAGE_CREATE = 37,$/;"	e	enum:mlog_id_t
MLOG_COMP_PAGE_CREATE_RTREE	include/mtr0types.h	/^	MLOG_COMP_PAGE_CREATE_RTREE = 58,$/;"	e	enum:mlog_id_t
MLOG_COMP_PAGE_REORGANIZE	include/mtr0types.h	/^	MLOG_COMP_PAGE_REORGANIZE = 46,$/;"	e	enum:mlog_id_t
MLOG_COMP_REC_CLUST_DELETE_MARK	include/mtr0types.h	/^	MLOG_COMP_REC_CLUST_DELETE_MARK = 39,$/;"	e	enum:mlog_id_t
MLOG_COMP_REC_DELETE	include/mtr0types.h	/^	MLOG_COMP_REC_DELETE = 42,$/;"	e	enum:mlog_id_t
MLOG_COMP_REC_INSERT	include/mtr0types.h	/^	MLOG_COMP_REC_INSERT = 38,$/;"	e	enum:mlog_id_t
MLOG_COMP_REC_MIN_MARK	include/mtr0types.h	/^	MLOG_COMP_REC_MIN_MARK = 36,$/;"	e	enum:mlog_id_t
MLOG_COMP_REC_SEC_DELETE_MARK	include/mtr0types.h	/^	MLOG_COMP_REC_SEC_DELETE_MARK = 40,$/;"	e	enum:mlog_id_t
MLOG_COMP_REC_UPDATE_IN_PLACE	include/mtr0types.h	/^	MLOG_COMP_REC_UPDATE_IN_PLACE = 41,$/;"	e	enum:mlog_id_t
MLOG_DUMMY_RECORD	include/mtr0types.h	/^	MLOG_DUMMY_RECORD = 32,$/;"	e	enum:mlog_id_t
MLOG_FILE_CREATE2	include/mtr0types.h	/^	MLOG_FILE_CREATE2 = 47,$/;"	e	enum:mlog_id_t
MLOG_FILE_DELETE	include/mtr0types.h	/^	MLOG_FILE_DELETE = 35,$/;"	e	enum:mlog_id_t
MLOG_FILE_NAME	include/mtr0types.h	/^	MLOG_FILE_NAME = 55,$/;"	e	enum:mlog_id_t
MLOG_FILE_RENAME2	include/mtr0types.h	/^	MLOG_FILE_RENAME2 = 54,$/;"	e	enum:mlog_id_t
MLOG_IBUF_BITMAP_INIT	include/mtr0types.h	/^	MLOG_IBUF_BITMAP_INIT = 27,$/;"	e	enum:mlog_id_t
MLOG_INDEX_LOAD	include/mtr0types.h	/^	MLOG_INDEX_LOAD = 61,$/;"	e	enum:mlog_id_t
MLOG_INIT_FILE_PAGE	include/mtr0types.h	/^	MLOG_INIT_FILE_PAGE = 29,$/;"	e	enum:mlog_id_t
MLOG_INIT_FILE_PAGE2	include/mtr0types.h	/^	MLOG_INIT_FILE_PAGE2 = 59,$/;"	e	enum:mlog_id_t
MLOG_LIST_END_COPY_CREATED	include/mtr0types.h	/^	MLOG_LIST_END_COPY_CREATED = 17,$/;"	e	enum:mlog_id_t
MLOG_LIST_END_DELETE	include/mtr0types.h	/^	MLOG_LIST_END_DELETE = 15,$/;"	e	enum:mlog_id_t
MLOG_LIST_START_DELETE	include/mtr0types.h	/^	MLOG_LIST_START_DELETE = 16,$/;"	e	enum:mlog_id_t
MLOG_LSN	include/mtr0types.h	/^	MLOG_LSN = 28,$/;"	e	enum:mlog_id_t
MLOG_MULTI_REC_END	include/mtr0types.h	/^	MLOG_MULTI_REC_END = 31,$/;"	e	enum:mlog_id_t
MLOG_PAGE_CREATE	include/mtr0types.h	/^	MLOG_PAGE_CREATE = 19,$/;"	e	enum:mlog_id_t
MLOG_PAGE_CREATE_RTREE	include/mtr0types.h	/^	MLOG_PAGE_CREATE_RTREE = 57,$/;"	e	enum:mlog_id_t
MLOG_PAGE_REORGANIZE	include/mtr0types.h	/^	MLOG_PAGE_REORGANIZE = 18,$/;"	e	enum:mlog_id_t
MLOG_REC_CLUST_DELETE_MARK	include/mtr0types.h	/^	MLOG_REC_CLUST_DELETE_MARK = 10,$/;"	e	enum:mlog_id_t
MLOG_REC_DELETE	include/mtr0types.h	/^	MLOG_REC_DELETE = 14,$/;"	e	enum:mlog_id_t
MLOG_REC_INSERT	include/mtr0types.h	/^	MLOG_REC_INSERT = 9,$/;"	e	enum:mlog_id_t
MLOG_REC_MIN_MARK	include/mtr0types.h	/^	MLOG_REC_MIN_MARK = 26,$/;"	e	enum:mlog_id_t
MLOG_REC_SEC_DELETE_MARK	include/mtr0types.h	/^	MLOG_REC_SEC_DELETE_MARK = 11,$/;"	e	enum:mlog_id_t
MLOG_REC_UPDATE_IN_PLACE	include/mtr0types.h	/^	MLOG_REC_UPDATE_IN_PLACE = 13,$/;"	e	enum:mlog_id_t
MLOG_SINGLE_REC_FLAG	include/mtr0types.h	/^	MLOG_SINGLE_REC_FLAG = 128,$/;"	e	enum:mlog_id_t
MLOG_TRUNCATE	include/mtr0types.h	/^	MLOG_TRUNCATE = 60,$/;"	e	enum:mlog_id_t
MLOG_UNDO_ERASE_END	include/mtr0types.h	/^	MLOG_UNDO_ERASE_END = 21,$/;"	e	enum:mlog_id_t
MLOG_UNDO_HDR_CREATE	include/mtr0types.h	/^	MLOG_UNDO_HDR_CREATE = 25,$/;"	e	enum:mlog_id_t
MLOG_UNDO_HDR_DISCARD	include/mtr0types.h	/^	MLOG_UNDO_HDR_DISCARD = 23,$/;"	e	enum:mlog_id_t
MLOG_UNDO_HDR_REUSE	include/mtr0types.h	/^	MLOG_UNDO_HDR_REUSE = 24,$/;"	e	enum:mlog_id_t
MLOG_UNDO_INIT	include/mtr0types.h	/^	MLOG_UNDO_INIT = 22,$/;"	e	enum:mlog_id_t
MLOG_UNDO_INSERT	include/mtr0types.h	/^	MLOG_UNDO_INSERT = 20,$/;"	e	enum:mlog_id_t
MLOG_WRITE_STRING	include/mtr0types.h	/^	MLOG_WRITE_STRING = 30,$/;"	e	enum:mlog_id_t
MLOG_ZIP_PAGE_COMPRESS	include/mtr0types.h	/^	MLOG_ZIP_PAGE_COMPRESS = 51,$/;"	e	enum:mlog_id_t
MLOG_ZIP_PAGE_COMPRESS_NO_DATA	include/mtr0types.h	/^	MLOG_ZIP_PAGE_COMPRESS_NO_DATA = 52,$/;"	e	enum:mlog_id_t
MLOG_ZIP_PAGE_REORGANIZE	include/mtr0types.h	/^	MLOG_ZIP_PAGE_REORGANIZE = 53,$/;"	e	enum:mlog_id_t
MLOG_ZIP_WRITE_BLOB_PTR	include/mtr0types.h	/^	MLOG_ZIP_WRITE_BLOB_PTR = 49,$/;"	e	enum:mlog_id_t
MLOG_ZIP_WRITE_HEADER	include/mtr0types.h	/^	MLOG_ZIP_WRITE_HEADER = 50,$/;"	e	enum:mlog_id_t
MLOG_ZIP_WRITE_NODE_PTR	include/mtr0types.h	/^	MLOG_ZIP_WRITE_NODE_PTR = 48,$/;"	e	enum:mlog_id_t
MODIFICATIONS_NOT_ALLOWED_MSG_FORCE_RECOVERY	row/row0mysql.cc	/^const char* MODIFICATIONS_NOT_ALLOWED_MSG_FORCE_RECOVERY =$/;"	v
MONITOR_ADAPTIVE_HASH_PAGE_ADDED	include/srv0mon.h	/^	MONITOR_ADAPTIVE_HASH_PAGE_ADDED,$/;"	e	enum:monitor_id_t
MONITOR_ADAPTIVE_HASH_PAGE_REMOVED	include/srv0mon.h	/^	MONITOR_ADAPTIVE_HASH_PAGE_REMOVED,$/;"	e	enum:monitor_id_t
MONITOR_ADAPTIVE_HASH_ROW_ADDED	include/srv0mon.h	/^	MONITOR_ADAPTIVE_HASH_ROW_ADDED,$/;"	e	enum:monitor_id_t
MONITOR_ADAPTIVE_HASH_ROW_REMOVED	include/srv0mon.h	/^	MONITOR_ADAPTIVE_HASH_ROW_REMOVED,$/;"	e	enum:monitor_id_t
MONITOR_ADAPTIVE_HASH_ROW_REMOVE_NOT_FOUND	include/srv0mon.h	/^	MONITOR_ADAPTIVE_HASH_ROW_REMOVE_NOT_FOUND,$/;"	e	enum:monitor_id_t
MONITOR_ADAPTIVE_HASH_ROW_UPDATED	include/srv0mon.h	/^	MONITOR_ADAPTIVE_HASH_ROW_UPDATED,$/;"	e	enum:monitor_id_t
MONITOR_ALL_COUNTER	include/srv0mon.h	/^	MONITOR_ALL_COUNTER,$/;"	e	enum:monitor_id_t
MONITOR_ALTER_TABLE_LOG_FILES	include/srv0mon.h	/^	MONITOR_ALTER_TABLE_LOG_FILES,$/;"	e	enum:monitor_id_t
MONITOR_ALTER_TABLE_SORT_FILES	include/srv0mon.h	/^	MONITOR_ALTER_TABLE_SORT_FILES,$/;"	e	enum:monitor_id_t
MONITOR_ATOMIC_DEC	include/srv0mon.h	594;"	d
MONITOR_ATOMIC_INC	include/srv0mon.h	579;"	d
MONITOR_BACKGROUND_DROP_INDEX	include/srv0mon.h	/^	MONITOR_BACKGROUND_DROP_INDEX,$/;"	e	enum:monitor_id_t
MONITOR_BACKGROUND_DROP_TABLE	include/srv0mon.h	/^	MONITOR_BACKGROUND_DROP_TABLE,$/;"	e	enum:monitor_id_t
MONITOR_BLOB_PAGE_READ	include/srv0mon.h	/^	MONITOR_BLOB_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_BLOB_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_BLOB_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_BUF_PAGE	srv/srv0mon.cc	44;"	d	file:
MONITOR_BUF_PAGE_READ	srv/srv0mon.cc	50;"	d	file:
MONITOR_BUF_PAGE_WRITTEN	srv/srv0mon.cc	53;"	d	file:
MONITOR_CHECK_DEFINED	include/srv0mon.h	615;"	d
MONITOR_CHECK_DEFINED	include/srv0mon.h	620;"	d
MONITOR_DEADLOCK	include/srv0mon.h	/^	MONITOR_DEADLOCK,$/;"	e	enum:monitor_id_t
MONITOR_DEC	include/srv0mon.h	606;"	d
MONITOR_DEC	include/srv0mon.h	869;"	d
MONITOR_DEC_NOCHECK	include/srv0mon.h	652;"	d
MONITOR_DEC_VALUE	include/srv0mon.h	632;"	d
MONITOR_DEFAULT_ON	include/srv0mon.h	/^	MONITOR_DEFAULT_ON = 32,\/*!< Monitor will be turned on by default at$/;"	e	enum:monitor_type_t
MONITOR_DEFAULT_START	include/srv0mon.h	/^	MONITOR_DEFAULT_START = 0,$/;"	e	enum:monitor_id_t
MONITOR_DISPLAY_CURRENT	include/srv0mon.h	/^	MONITOR_DISPLAY_CURRENT = 8, \/*!< Display current value of the$/;"	e	enum:monitor_type_t
MONITOR_DML_PURGE_DELAY	include/srv0mon.h	/^	MONITOR_DML_PURGE_DELAY,$/;"	e	enum:monitor_id_t
MONITOR_EXISTING	include/srv0mon.h	/^	MONITOR_EXISTING = 2,	\/*!< The monitor carries information from$/;"	e	enum:monitor_type_t
MONITOR_FIELD	include/srv0mon.h	502;"	d
MONITOR_FLUSH_ADAPTIVE_AVG_PASS	include/srv0mon.h	/^	MONITOR_FLUSH_ADAPTIVE_AVG_PASS,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_ADAPTIVE_AVG_TIME_EST	include/srv0mon.h	/^	MONITOR_FLUSH_ADAPTIVE_AVG_TIME_EST,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_ADAPTIVE_AVG_TIME_SLOT	include/srv0mon.h	/^	MONITOR_FLUSH_ADAPTIVE_AVG_TIME_SLOT,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_ADAPTIVE_AVG_TIME_THREAD	include/srv0mon.h	/^	MONITOR_FLUSH_ADAPTIVE_AVG_TIME_THREAD,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_ADAPTIVE_COUNT	include/srv0mon.h	/^	MONITOR_FLUSH_ADAPTIVE_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_ADAPTIVE_PAGES	include/srv0mon.h	/^	MONITOR_FLUSH_ADAPTIVE_PAGES,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_ADAPTIVE_TOTAL_PAGE	include/srv0mon.h	/^	MONITOR_FLUSH_ADAPTIVE_TOTAL_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_AVG_PAGE_RATE	include/srv0mon.h	/^	MONITOR_FLUSH_AVG_PAGE_RATE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_AVG_PASS	include/srv0mon.h	/^	MONITOR_FLUSH_AVG_PASS,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_AVG_TIME	include/srv0mon.h	/^	MONITOR_FLUSH_AVG_TIME,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BACKGROUND_COUNT	include/srv0mon.h	/^	MONITOR_FLUSH_BACKGROUND_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BACKGROUND_PAGES	include/srv0mon.h	/^	MONITOR_FLUSH_BACKGROUND_PAGES,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BACKGROUND_TOTAL_PAGE	include/srv0mon.h	/^	MONITOR_FLUSH_BACKGROUND_TOTAL_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BATCH_COUNT	include/srv0mon.h	/^	MONITOR_FLUSH_BATCH_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BATCH_PAGES	include/srv0mon.h	/^	MONITOR_FLUSH_BATCH_PAGES,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BATCH_SCANNED	include/srv0mon.h	/^	MONITOR_FLUSH_BATCH_SCANNED,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BATCH_SCANNED_NUM_CALL	include/srv0mon.h	/^	MONITOR_FLUSH_BATCH_SCANNED_NUM_CALL,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BATCH_SCANNED_PER_CALL	include/srv0mon.h	/^	MONITOR_FLUSH_BATCH_SCANNED_PER_CALL,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_BATCH_TOTAL_PAGE	include/srv0mon.h	/^	MONITOR_FLUSH_BATCH_TOTAL_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_LSN_AVG_RATE	include/srv0mon.h	/^	MONITOR_FLUSH_LSN_AVG_RATE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_NEIGHBOR_COUNT	include/srv0mon.h	/^	MONITOR_FLUSH_NEIGHBOR_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_NEIGHBOR_PAGES	include/srv0mon.h	/^	MONITOR_FLUSH_NEIGHBOR_PAGES,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_NEIGHBOR_TOTAL_PAGE	include/srv0mon.h	/^	MONITOR_FLUSH_NEIGHBOR_TOTAL_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_N_TO_FLUSH_BY_AGE	include/srv0mon.h	/^	MONITOR_FLUSH_N_TO_FLUSH_BY_AGE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_N_TO_FLUSH_REQUESTED	include/srv0mon.h	/^	MONITOR_FLUSH_N_TO_FLUSH_REQUESTED,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_PCT_FOR_DIRTY	include/srv0mon.h	/^	MONITOR_FLUSH_PCT_FOR_DIRTY,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_PCT_FOR_LSN	include/srv0mon.h	/^	MONITOR_FLUSH_PCT_FOR_LSN,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_SYNC_COUNT	include/srv0mon.h	/^	MONITOR_FLUSH_SYNC_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_SYNC_PAGES	include/srv0mon.h	/^	MONITOR_FLUSH_SYNC_PAGES,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_SYNC_TOTAL_PAGE	include/srv0mon.h	/^	MONITOR_FLUSH_SYNC_TOTAL_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_FLUSH_SYNC_WAITS	include/srv0mon.h	/^	MONITOR_FLUSH_SYNC_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_FSP_HDR_PAGE_READ	include/srv0mon.h	/^	MONITOR_FSP_HDR_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_FSP_HDR_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_FSP_HDR_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_GET_VALUE	include/srv0mon.h	/^	MONITOR_GET_VALUE		\/*!< Option for$/;"	e	enum:mon_option_t
MONITOR_GROUP_MODULE	include/srv0mon.h	/^	MONITOR_GROUP_MODULE = 16, \/*!< Monitor can be turned on\/off$/;"	e	enum:monitor_type_t
MONITOR_HIDDEN	include/srv0mon.h	/^	MONITOR_HIDDEN = 256	\/*!< Do not display this monitor in the$/;"	e	enum:monitor_type_t
MONITOR_IBUF_BITMAP_PAGE_READ	include/srv0mon.h	/^	MONITOR_IBUF_BITMAP_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_IBUF_BITMAP_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_IBUF_BITMAP_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_IBUF_FREELIST_PAGE_READ	include/srv0mon.h	/^	MONITOR_IBUF_FREELIST_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_IBUF_FREELIST_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_IBUF_FREELIST_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_ICP_ATTEMPTS	include/srv0mon.h	/^	MONITOR_ICP_ATTEMPTS,$/;"	e	enum:monitor_id_t
MONITOR_ICP_MATCH	include/srv0mon.h	/^	MONITOR_ICP_MATCH,$/;"	e	enum:monitor_id_t
MONITOR_ICP_NO_MATCH	include/srv0mon.h	/^	MONITOR_ICP_NO_MATCH,$/;"	e	enum:monitor_id_t
MONITOR_ICP_OUT_OF_RANGE	include/srv0mon.h	/^	MONITOR_ICP_OUT_OF_RANGE,$/;"	e	enum:monitor_id_t
MONITOR_INC	include/srv0mon.h	568;"	d
MONITOR_INC	include/srv0mon.h	868;"	d
MONITOR_INC_NOCHECK	include/srv0mon.h	644;"	d
MONITOR_INC_TIME_IN_MICRO_SECS	include/srv0mon.h	677;"	d
MONITOR_INC_VALUE	include/srv0mon.h	623;"	d
MONITOR_INC_VALUE_CUMULATIVE	include/srv0mon.h	695;"	d
MONITOR_INDEX_DISCARD	include/srv0mon.h	/^	MONITOR_INDEX_DISCARD,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_IBUF_LEAF_PAGE_READ	include/srv0mon.h	/^	MONITOR_INDEX_IBUF_LEAF_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_IBUF_LEAF_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_INDEX_IBUF_LEAF_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_IBUF_NON_LEAF_PAGE_READ	include/srv0mon.h	/^	MONITOR_INDEX_IBUF_NON_LEAF_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_IBUF_NON_LEAF_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_INDEX_IBUF_NON_LEAF_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_LEAF_PAGE_READ	include/srv0mon.h	/^	MONITOR_INDEX_LEAF_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_LEAF_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_INDEX_LEAF_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_MERGE_ATTEMPTS	include/srv0mon.h	/^	MONITOR_INDEX_MERGE_ATTEMPTS,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_MERGE_SUCCESSFUL	include/srv0mon.h	/^	MONITOR_INDEX_MERGE_SUCCESSFUL,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_NON_LEAF_PAGE_READ	include/srv0mon.h	/^	MONITOR_INDEX_NON_LEAF_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_NON_LEAF_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_INDEX_NON_LEAF_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_REORG_ATTEMPTS	include/srv0mon.h	/^	MONITOR_INDEX_REORG_ATTEMPTS,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_REORG_SUCCESSFUL	include/srv0mon.h	/^	MONITOR_INDEX_REORG_SUCCESSFUL,$/;"	e	enum:monitor_id_t
MONITOR_INDEX_SPLIT	include/srv0mon.h	/^	MONITOR_INDEX_SPLIT,$/;"	e	enum:monitor_id_t
MONITOR_INIT	include/srv0mon.h	556;"	d
MONITOR_INIT_ZERO_VALUE	include/srv0mon.h	547;"	d
MONITOR_INODE_PAGE_READ	include/srv0mon.h	/^	MONITOR_INODE_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_INODE_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_INODE_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_IS_ON	include/srv0mon.h	487;"	d
MONITOR_LAST_VALUE	include/srv0mon.h	523;"	d
MONITOR_LATCHES	include/srv0mon.h	/^	MONITOR_LATCHES,$/;"	e	enum:monitor_id_t
MONITOR_LOCKREC_WAIT	include/srv0mon.h	/^	MONITOR_LOCKREC_WAIT,$/;"	e	enum:monitor_id_t
MONITOR_LOG_IO	include/srv0mon.h	/^	MONITOR_LOG_IO,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_EVICT_COUNT	include/srv0mon.h	/^	MONITOR_LRU_BATCH_EVICT_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_EVICT_PAGES	include/srv0mon.h	/^	MONITOR_LRU_BATCH_EVICT_PAGES,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_EVICT_TOTAL_PAGE	include/srv0mon.h	/^	MONITOR_LRU_BATCH_EVICT_TOTAL_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_FLUSH_AVG_PASS	include/srv0mon.h	/^	MONITOR_LRU_BATCH_FLUSH_AVG_PASS,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_FLUSH_AVG_TIME_EST	include/srv0mon.h	/^	MONITOR_LRU_BATCH_FLUSH_AVG_TIME_EST,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_FLUSH_AVG_TIME_SLOT	include/srv0mon.h	/^	MONITOR_LRU_BATCH_FLUSH_AVG_TIME_SLOT,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_FLUSH_AVG_TIME_THREAD	include/srv0mon.h	/^	MONITOR_LRU_BATCH_FLUSH_AVG_TIME_THREAD,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_FLUSH_COUNT	include/srv0mon.h	/^	MONITOR_LRU_BATCH_FLUSH_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_FLUSH_PAGES	include/srv0mon.h	/^	MONITOR_LRU_BATCH_FLUSH_PAGES,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_FLUSH_TOTAL_PAGE	include/srv0mon.h	/^	MONITOR_LRU_BATCH_FLUSH_TOTAL_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_SCANNED	include/srv0mon.h	/^	MONITOR_LRU_BATCH_SCANNED,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_SCANNED_NUM_CALL	include/srv0mon.h	/^	MONITOR_LRU_BATCH_SCANNED_NUM_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LRU_BATCH_SCANNED_PER_CALL	include/srv0mon.h	/^	MONITOR_LRU_BATCH_SCANNED_PER_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LRU_GET_FREE_LOOPS	include/srv0mon.h	/^	MONITOR_LRU_GET_FREE_LOOPS,$/;"	e	enum:monitor_id_t
MONITOR_LRU_GET_FREE_SEARCH	include/srv0mon.h	/^	MONITOR_LRU_GET_FREE_SEARCH,$/;"	e	enum:monitor_id_t
MONITOR_LRU_GET_FREE_WAITS	include/srv0mon.h	/^	MONITOR_LRU_GET_FREE_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_LRU_SEARCH_SCANNED	include/srv0mon.h	/^	MONITOR_LRU_SEARCH_SCANNED,$/;"	e	enum:monitor_id_t
MONITOR_LRU_SEARCH_SCANNED_NUM_CALL	include/srv0mon.h	/^	MONITOR_LRU_SEARCH_SCANNED_NUM_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LRU_SEARCH_SCANNED_PER_CALL	include/srv0mon.h	/^	MONITOR_LRU_SEARCH_SCANNED_PER_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LRU_SINGLE_FLUSH_FAILURE_COUNT	include/srv0mon.h	/^	MONITOR_LRU_SINGLE_FLUSH_FAILURE_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_LRU_SINGLE_FLUSH_SCANNED	include/srv0mon.h	/^	MONITOR_LRU_SINGLE_FLUSH_SCANNED,$/;"	e	enum:monitor_id_t
MONITOR_LRU_SINGLE_FLUSH_SCANNED_NUM_CALL	include/srv0mon.h	/^	MONITOR_LRU_SINGLE_FLUSH_SCANNED_NUM_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LRU_SINGLE_FLUSH_SCANNED_PER_CALL	include/srv0mon.h	/^	MONITOR_LRU_SINGLE_FLUSH_SCANNED_PER_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LRU_UNZIP_SEARCH_SCANNED	include/srv0mon.h	/^	MONITOR_LRU_UNZIP_SEARCH_SCANNED,$/;"	e	enum:monitor_id_t
MONITOR_LRU_UNZIP_SEARCH_SCANNED_NUM_CALL	include/srv0mon.h	/^	MONITOR_LRU_UNZIP_SEARCH_SCANNED_NUM_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LRU_UNZIP_SEARCH_SCANNED_PER_CALL	include/srv0mon.h	/^	MONITOR_LRU_UNZIP_SEARCH_SCANNED_PER_CALL,$/;"	e	enum:monitor_id_t
MONITOR_LSN_CHECKPOINT_AGE	include/srv0mon.h	/^	MONITOR_LSN_CHECKPOINT_AGE,$/;"	e	enum:monitor_id_t
MONITOR_MASTER_ACTIVE_LOOPS	include/srv0mon.h	/^	MONITOR_MASTER_ACTIVE_LOOPS,$/;"	e	enum:monitor_id_t
MONITOR_MASTER_IDLE_LOOPS	include/srv0mon.h	/^	MONITOR_MASTER_IDLE_LOOPS,$/;"	e	enum:monitor_id_t
MONITOR_MASTER_THREAD_SLEEP	include/srv0mon.h	/^	MONITOR_MASTER_THREAD_SLEEP,$/;"	e	enum:monitor_id_t
MONITOR_MAX_MIN_NOT_INIT	include/srv0mon.h	551;"	d
MONITOR_MAX_VALUE	include/srv0mon.h	508;"	d
MONITOR_MAX_VALUE_START	include/srv0mon.h	517;"	d
MONITOR_MIN_VALUE	include/srv0mon.h	511;"	d
MONITOR_MIN_VALUE_START	include/srv0mon.h	520;"	d
MONITOR_MODULE	include/srv0mon.h	/^	MONITOR_MODULE = 1,	\/*!< This is a monitor module type,$/;"	e	enum:monitor_type_t
MONITOR_MODULE_ADAPTIVE_HASH	include/srv0mon.h	/^	MONITOR_MODULE_ADAPTIVE_HASH,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_BUFFER	include/srv0mon.h	/^	MONITOR_MODULE_BUFFER,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_BUF_PAGE	include/srv0mon.h	/^	MONITOR_MODULE_BUF_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_DDL_STATS	include/srv0mon.h	/^	MONITOR_MODULE_DDL_STATS,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_DML_STATS	include/srv0mon.h	/^	MONITOR_MODULE_DML_STATS,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_FIL_SYSTEM	include/srv0mon.h	/^	MONITOR_MODULE_FIL_SYSTEM,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_IBUF_SYSTEM	include/srv0mon.h	/^	MONITOR_MODULE_IBUF_SYSTEM,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_ICP	include/srv0mon.h	/^	MONITOR_MODULE_ICP,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_INDEX	include/srv0mon.h	/^	MONITOR_MODULE_INDEX,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_LATCHES	include/srv0mon.h	/^	MONITOR_MODULE_LATCHES,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_LOCK	include/srv0mon.h	/^	MONITOR_MODULE_LOCK,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_METADATA	include/srv0mon.h	/^	MONITOR_MODULE_METADATA,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_OS	include/srv0mon.h	/^	MONITOR_MODULE_OS,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_PAGE	include/srv0mon.h	/^	MONITOR_MODULE_PAGE,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_PURGE	include/srv0mon.h	/^	MONITOR_MODULE_PURGE,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_RECOVERY	include/srv0mon.h	/^	MONITOR_MODULE_RECOVERY,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_SERVER	include/srv0mon.h	/^	MONITOR_MODULE_SERVER,$/;"	e	enum:monitor_id_t
MONITOR_MODULE_TRX	include/srv0mon.h	/^	MONITOR_MODULE_TRX,$/;"	e	enum:monitor_id_t
MONITOR_NONE	include/srv0mon.h	/^	MONITOR_NONE = 0,	\/*!< No monitoring *\/$/;"	e	enum:monitor_type_t
MONITOR_NO_AVERAGE	include/srv0mon.h	/^	MONITOR_NO_AVERAGE = 4,	\/*!< Set this status if we don't want to$/;"	e	enum:monitor_type_t
MONITOR_NO_MATCH	include/srv0mon.h	437;"	d
MONITOR_NUM_CHECKPOINT	include/srv0mon.h	/^	MONITOR_NUM_CHECKPOINT,$/;"	e	enum:monitor_id_t
MONITOR_NUM_RECLOCK	include/srv0mon.h	/^	MONITOR_NUM_RECLOCK,$/;"	e	enum:monitor_id_t
MONITOR_NUM_RECLOCK_REQ	include/srv0mon.h	/^	MONITOR_NUM_RECLOCK_REQ,$/;"	e	enum:monitor_id_t
MONITOR_NUM_TABLELOCK	include/srv0mon.h	/^	MONITOR_NUM_TABLELOCK,$/;"	e	enum:monitor_id_t
MONITOR_NUM_UNDO_SLOT_CACHED	include/srv0mon.h	/^	MONITOR_NUM_UNDO_SLOT_CACHED,$/;"	e	enum:monitor_id_t
MONITOR_NUM_UNDO_SLOT_USED	include/srv0mon.h	/^	MONITOR_NUM_UNDO_SLOT_USED,$/;"	e	enum:monitor_id_t
MONITOR_N_DEL_ROW_PURGE	include/srv0mon.h	/^	MONITOR_N_DEL_ROW_PURGE,$/;"	e	enum:monitor_id_t
MONITOR_N_UPD_EXIST_EXTERN	include/srv0mon.h	/^	MONITOR_N_UPD_EXIST_EXTERN,$/;"	e	enum:monitor_id_t
MONITOR_OFF	include/srv0mon.h	482;"	d
MONITOR_OLVD_ROW_DELETED	include/srv0mon.h	/^	MONITOR_OLVD_ROW_DELETED,$/;"	e	enum:monitor_id_t
MONITOR_OLVD_ROW_INSERTED	include/srv0mon.h	/^	MONITOR_OLVD_ROW_INSERTED,$/;"	e	enum:monitor_id_t
MONITOR_OLVD_ROW_READ	include/srv0mon.h	/^	MONITOR_OLVD_ROW_READ,$/;"	e	enum:monitor_id_t
MONITOR_OLVD_ROW_UPDTATED	include/srv0mon.h	/^	MONITOR_OLVD_ROW_UPDTATED,$/;"	e	enum:monitor_id_t
MONITOR_ON	include/srv0mon.h	478;"	d
MONITOR_ONLINE_CREATE_INDEX	include/srv0mon.h	/^	MONITOR_ONLINE_CREATE_INDEX,$/;"	e	enum:monitor_id_t
MONITOR_OS_PENDING_READS	include/srv0mon.h	/^	MONITOR_OS_PENDING_READS,$/;"	e	enum:monitor_id_t
MONITOR_OS_PENDING_WRITES	include/srv0mon.h	/^	MONITOR_OS_PENDING_WRITES,$/;"	e	enum:monitor_id_t
MONITOR_OTHER_PAGE_READ	include/srv0mon.h	/^	MONITOR_OTHER_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_OTHER_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_OTHER_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_ADAPTIVE_HASH_SEARCH	include/srv0mon.h	/^	MONITOR_OVLD_ADAPTIVE_HASH_SEARCH,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_ADAPTIVE_HASH_SEARCH_BTREE	include/srv0mon.h	/^	MONITOR_OVLD_ADAPTIVE_HASH_SEARCH_BTREE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUFFER_POOL_SIZE	include/srv0mon.h	/^	MONITOR_OVLD_BUFFER_POOL_SIZE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_OLDEST_LSN	include/srv0mon.h	/^	MONITOR_OVLD_BUF_OLDEST_LSN,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_BYTES_DATA	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_BYTES_DATA,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_BYTES_DIRTY	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_BYTES_DIRTY,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_PAGES_DATA	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_PAGES_DATA,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_PAGES_DIRTY	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_PAGES_DIRTY,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_PAGES_FREE	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_PAGES_FREE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_PAGE_MISC	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_PAGE_MISC,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_PAGE_TOTAL	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_PAGE_TOTAL,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_READS	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_READS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_READ_AHEAD	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_READ_AHEAD,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_READ_AHEAD_EVICTED	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_READ_AHEAD_EVICTED,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_READ_REQUESTS	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_READ_REQUESTS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_WAIT_FREE	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_WAIT_FREE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BUF_POOL_WRITE_REQUEST	include/srv0mon.h	/^	MONITOR_OVLD_BUF_POOL_WRITE_REQUEST,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BYTE_READ	include/srv0mon.h	/^	MONITOR_OVLD_BYTE_READ,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_BYTE_WRITTEN	include/srv0mon.h	/^	MONITOR_OVLD_BYTE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_MERGES	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_MERGES,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_MERGE_DELETE	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_MERGE_DELETE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_MERGE_DISCARD_DELETE	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_MERGE_DISCARD_DELETE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_MERGE_DISCARD_INSERT	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_MERGE_DISCARD_INSERT,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_MERGE_DISCARD_PURGE	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_MERGE_DISCARD_PURGE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_MERGE_INSERT	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_MERGE_INSERT,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_MERGE_PURGE	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_MERGE_PURGE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_IBUF_SIZE	include/srv0mon.h	/^	MONITOR_OVLD_IBUF_SIZE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LOCK_AVG_WAIT_TIME	include/srv0mon.h	/^	MONITOR_OVLD_LOCK_AVG_WAIT_TIME,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LOCK_MAX_WAIT_TIME	include/srv0mon.h	/^	MONITOR_OVLD_LOCK_MAX_WAIT_TIME,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LOCK_WAIT_TIME	include/srv0mon.h	/^	MONITOR_OVLD_LOCK_WAIT_TIME,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LOG_PADDED	include/srv0mon.h	/^	MONITOR_OVLD_LOG_PADDED,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LOG_WAITS	include/srv0mon.h	/^	MONITOR_OVLD_LOG_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LOG_WRITES	include/srv0mon.h	/^	MONITOR_OVLD_LOG_WRITES,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LOG_WRITE_REQUEST	include/srv0mon.h	/^	MONITOR_OVLD_LOG_WRITE_REQUEST,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LSN_CHECKPOINT	include/srv0mon.h	/^	MONITOR_OVLD_LSN_CHECKPOINT,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LSN_CURRENT	include/srv0mon.h	/^	MONITOR_OVLD_LSN_CURRENT,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_LSN_FLUSHDISK	include/srv0mon.h	/^	MONITOR_OVLD_LSN_FLUSHDISK,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_MAX_AGE_ASYNC	include/srv0mon.h	/^	MONITOR_OVLD_MAX_AGE_ASYNC,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_MAX_AGE_SYNC	include/srv0mon.h	/^	MONITOR_OVLD_MAX_AGE_SYNC,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_N_FILE_OPENED	include/srv0mon.h	/^	MONITOR_OVLD_N_FILE_OPENED,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_OS_FILE_READ	include/srv0mon.h	/^	MONITOR_OVLD_OS_FILE_READ,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_OS_FILE_WRITE	include/srv0mon.h	/^	MONITOR_OVLD_OS_FILE_WRITE,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_OS_FSYNC	include/srv0mon.h	/^	MONITOR_OVLD_OS_FSYNC,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_OS_LOG_FSYNC	include/srv0mon.h	/^	MONITOR_OVLD_OS_LOG_FSYNC,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_OS_LOG_PENDING_FSYNC	include/srv0mon.h	/^	MONITOR_OVLD_OS_LOG_PENDING_FSYNC,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_OS_LOG_PENDING_WRITES	include/srv0mon.h	/^	MONITOR_OVLD_OS_LOG_PENDING_WRITES,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_OS_LOG_WRITTEN	include/srv0mon.h	/^	MONITOR_OVLD_OS_LOG_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_PAGES_READ	include/srv0mon.h	/^	MONITOR_OVLD_PAGES_READ,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_PAGES_WRITTEN	include/srv0mon.h	/^	MONITOR_OVLD_PAGES_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_PAGE_CREATED	include/srv0mon.h	/^	MONITOR_OVLD_PAGE_CREATED,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_ROW_LOCK_CURRENT_WAIT	include/srv0mon.h	/^	MONITOR_OVLD_ROW_LOCK_CURRENT_WAIT,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_ROW_LOCK_WAIT	include/srv0mon.h	/^	MONITOR_OVLD_ROW_LOCK_WAIT,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_SX_OS_WAITS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_SX_OS_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_SX_SPIN_ROUNDS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_SX_SPIN_ROUNDS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_SX_SPIN_WAITS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_SX_SPIN_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_S_OS_WAITS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_S_OS_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_S_SPIN_ROUNDS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_S_SPIN_ROUNDS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_S_SPIN_WAITS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_S_SPIN_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_X_OS_WAITS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_X_OS_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_X_SPIN_ROUNDS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_X_SPIN_ROUNDS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_RWLOCK_X_SPIN_WAITS	include/srv0mon.h	/^	MONITOR_OVLD_RWLOCK_X_SPIN_WAITS,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_SERVER_ACTIVITY	include/srv0mon.h	/^	MONITOR_OVLD_SERVER_ACTIVITY,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_SRV_DBLWR_PAGES_WRITTEN	include/srv0mon.h	/^	MONITOR_OVLD_SRV_DBLWR_PAGES_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_SRV_DBLWR_WRITES	include/srv0mon.h	/^	MONITOR_OVLD_SRV_DBLWR_WRITES,$/;"	e	enum:monitor_id_t
MONITOR_OVLD_SRV_PAGE_SIZE	include/srv0mon.h	/^	MONITOR_OVLD_SRV_PAGE_SIZE,$/;"	e	enum:monitor_id_t
MONITOR_PAD_DECREMENTS	include/srv0mon.h	/^	MONITOR_PAD_DECREMENTS,$/;"	e	enum:monitor_id_t
MONITOR_PAD_INCREMENTS	include/srv0mon.h	/^	MONITOR_PAD_INCREMENTS,$/;"	e	enum:monitor_id_t
MONITOR_PAGE_COMPRESS	include/srv0mon.h	/^	MONITOR_PAGE_COMPRESS,$/;"	e	enum:monitor_id_t
MONITOR_PAGE_DECOMPRESS	include/srv0mon.h	/^	MONITOR_PAGE_DECOMPRESS,$/;"	e	enum:monitor_id_t
MONITOR_PENDING_ALTER_TABLE	include/srv0mon.h	/^	MONITOR_PENDING_ALTER_TABLE,$/;"	e	enum:monitor_id_t
MONITOR_PENDING_CHECKPOINT_WRITE	include/srv0mon.h	/^	MONITOR_PENDING_CHECKPOINT_WRITE,$/;"	e	enum:monitor_id_t
MONITOR_PENDING_LOG_FLUSH	include/srv0mon.h	/^	MONITOR_PENDING_LOG_FLUSH,$/;"	e	enum:monitor_id_t
MONITOR_PURGE_INVOKED	include/srv0mon.h	/^	MONITOR_PURGE_INVOKED,$/;"	e	enum:monitor_id_t
MONITOR_PURGE_N_PAGE_HANDLED	include/srv0mon.h	/^	MONITOR_PURGE_N_PAGE_HANDLED,$/;"	e	enum:monitor_id_t
MONITOR_PURGE_RESUME_COUNT	include/srv0mon.h	/^	MONITOR_PURGE_RESUME_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_PURGE_STOP_COUNT	include/srv0mon.h	/^	MONITOR_PURGE_STOP_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_RECLOCK_CREATED	include/srv0mon.h	/^	MONITOR_RECLOCK_CREATED,$/;"	e	enum:monitor_id_t
MONITOR_RECLOCK_REMOVED	include/srv0mon.h	/^	MONITOR_RECLOCK_REMOVED,$/;"	e	enum:monitor_id_t
MONITOR_RESET_ALL	include/srv0mon.h	733;"	d
MONITOR_RESET_ALL_VALUE	include/srv0mon.h	/^	MONITOR_RESET_ALL_VALUE,	\/*!< Reset all values *\/$/;"	e	enum:mon_option_t
MONITOR_RESET_VALUE	include/srv0mon.h	/^	MONITOR_RESET_VALUE,		\/*!< Reset current values *\/$/;"	e	enum:mon_option_t
MONITOR_RSEG_CUR_SIZE	include/srv0mon.h	/^	MONITOR_RSEG_CUR_SIZE,$/;"	e	enum:monitor_id_t
MONITOR_RSEG_HISTORY_LEN	include/srv0mon.h	/^	MONITOR_RSEG_HISTORY_LEN,$/;"	e	enum:monitor_id_t
MONITOR_RW_COUNTER	buf/buf0buf.cc	382;"	d	file:
MONITOR_SAVE_LAST	include/srv0mon.h	763;"	d
MONITOR_SAVE_START	include/srv0mon.h	755;"	d
MONITOR_SET	include/srv0mon.h	661;"	d
MONITOR_SET_DIFF	include/srv0mon.h	771;"	d
MONITOR_SET_MEMBER	include/srv0mon.h	/^	MONITOR_SET_MEMBER = 128,\/*!< Being part of a "monitor set" *\/$/;"	e	enum:monitor_type_t
MONITOR_SET_OFF	include/srv0mon.h	541;"	d
MONITOR_SET_OWNER	include/srv0mon.h	/^	MONITOR_SET_OWNER = 64,	\/*!< Owner of "monitor set", a set of$/;"	e	enum:monitor_type_t
MONITOR_SET_SIMPLE	include/srv0mon.h	725;"	d
MONITOR_SET_START	include/srv0mon.h	535;"	d
MONITOR_SET_UPD_MAX_ONLY	include/srv0mon.h	714;"	d
MONITOR_SRV_BACKGROUND_DROP_TABLE_MICROSECOND	include/srv0mon.h	/^	MONITOR_SRV_BACKGROUND_DROP_TABLE_MICROSECOND,$/;"	e	enum:monitor_id_t
MONITOR_SRV_CHECKPOINT_MICROSECOND	include/srv0mon.h	/^	MONITOR_SRV_CHECKPOINT_MICROSECOND,$/;"	e	enum:monitor_id_t
MONITOR_SRV_DICT_LRU_EVICT_COUNT	include/srv0mon.h	/^	MONITOR_SRV_DICT_LRU_EVICT_COUNT,$/;"	e	enum:monitor_id_t
MONITOR_SRV_DICT_LRU_MICROSECOND	include/srv0mon.h	/^	MONITOR_SRV_DICT_LRU_MICROSECOND,$/;"	e	enum:monitor_id_t
MONITOR_SRV_IBUF_MERGE_MICROSECOND	include/srv0mon.h	/^	MONITOR_SRV_IBUF_MERGE_MICROSECOND,$/;"	e	enum:monitor_id_t
MONITOR_SRV_LOG_FLUSH_MICROSECOND	include/srv0mon.h	/^	MONITOR_SRV_LOG_FLUSH_MICROSECOND,$/;"	e	enum:monitor_id_t
MONITOR_SRV_MEM_VALIDATE_MICROSECOND	include/srv0mon.h	/^	MONITOR_SRV_MEM_VALIDATE_MICROSECOND,$/;"	e	enum:monitor_id_t
MONITOR_SRV_PURGE_MICROSECOND	include/srv0mon.h	/^	MONITOR_SRV_PURGE_MICROSECOND,$/;"	e	enum:monitor_id_t
MONITOR_STARTED	include/srv0mon.h	/^	MONITOR_STARTED = 1,	\/*!< Monitor has been turned on *\/$/;"	e	enum:monitor_running_status
MONITOR_START_VALUE	include/srv0mon.h	526;"	d
MONITOR_STATUS	include/srv0mon.h	532;"	d
MONITOR_STOPPED	include/srv0mon.h	/^	MONITOR_STOPPED = 2	\/*!< Monitor has been turned off *\/$/;"	e	enum:monitor_running_status
MONITOR_SYSTEM_PAGE_READ	include/srv0mon.h	/^	MONITOR_SYSTEM_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_SYSTEM_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_SYSTEM_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_TABLELOCK_CREATED	include/srv0mon.h	/^	MONITOR_TABLELOCK_CREATED,$/;"	e	enum:monitor_id_t
MONITOR_TABLELOCK_REMOVED	include/srv0mon.h	/^	MONITOR_TABLELOCK_REMOVED,$/;"	e	enum:monitor_id_t
MONITOR_TABLELOCK_WAIT	include/srv0mon.h	/^	MONITOR_TABLELOCK_WAIT,$/;"	e	enum:monitor_id_t
MONITOR_TABLE_CLOSE	include/srv0mon.h	/^	MONITOR_TABLE_CLOSE,$/;"	e	enum:monitor_id_t
MONITOR_TABLE_OPEN	include/srv0mon.h	/^	MONITOR_TABLE_OPEN,$/;"	e	enum:monitor_id_t
MONITOR_TABLE_REFERENCE	include/srv0mon.h	/^	MONITOR_TABLE_REFERENCE,$/;"	e	enum:monitor_id_t
MONITOR_TIMEOUT	include/srv0mon.h	/^	MONITOR_TIMEOUT,$/;"	e	enum:monitor_id_t
MONITOR_TRX_ACTIVE	include/srv0mon.h	/^	MONITOR_TRX_ACTIVE,$/;"	e	enum:monitor_id_t
MONITOR_TRX_COMMIT_UNDO	include/srv0mon.h	/^	MONITOR_TRX_COMMIT_UNDO,$/;"	e	enum:monitor_id_t
MONITOR_TRX_NL_RO_COMMIT	include/srv0mon.h	/^	MONITOR_TRX_NL_RO_COMMIT,$/;"	e	enum:monitor_id_t
MONITOR_TRX_ROLLBACK	include/srv0mon.h	/^	MONITOR_TRX_ROLLBACK,$/;"	e	enum:monitor_id_t
MONITOR_TRX_ROLLBACK_ACTIVE	include/srv0mon.h	/^	MONITOR_TRX_ROLLBACK_ACTIVE,$/;"	e	enum:monitor_id_t
MONITOR_TRX_ROLLBACK_SAVEPOINT	include/srv0mon.h	/^	MONITOR_TRX_ROLLBACK_SAVEPOINT,$/;"	e	enum:monitor_id_t
MONITOR_TRX_RO_COMMIT	include/srv0mon.h	/^	MONITOR_TRX_RO_COMMIT,$/;"	e	enum:monitor_id_t
MONITOR_TRX_RW_COMMIT	include/srv0mon.h	/^	MONITOR_TRX_RW_COMMIT,$/;"	e	enum:monitor_id_t
MONITOR_TRX_SYSTEM_PAGE_READ	include/srv0mon.h	/^	MONITOR_TRX_SYSTEM_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_TRX_SYSTEM_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_TRX_SYSTEM_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_TURN_OFF	include/srv0mon.h	/^	MONITOR_TURN_OFF,		\/*!< Turn off the counter *\/$/;"	e	enum:mon_option_t
MONITOR_TURN_ON	include/srv0mon.h	/^	MONITOR_TURN_ON = 1,		\/*!< Turn on the counter *\/$/;"	e	enum:mon_option_t
MONITOR_UNDO_LOG_PAGE_READ	include/srv0mon.h	/^	MONITOR_UNDO_LOG_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_UNDO_LOG_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_UNDO_LOG_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_VALUE	include/srv0mon.h	505;"	d
MONITOR_VALUE_RESET	include/srv0mon.h	514;"	d
MONITOR_VALUE_SINCE_START	include/srv0mon.h	529;"	d
MONITOR_WILDCARD_MATCH	include/srv0mon.h	434;"	d
MONITOR_XDES_PAGE_READ	include/srv0mon.h	/^	MONITOR_XDES_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_XDES_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_XDES_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_ZBLOB2_PAGE_READ	include/srv0mon.h	/^	MONITOR_ZBLOB2_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_ZBLOB2_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_ZBLOB2_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MONITOR_ZBLOB_PAGE_READ	include/srv0mon.h	/^	MONITOR_ZBLOB_PAGE_READ,$/;"	e	enum:monitor_id_t
MONITOR_ZBLOB_PAGE_WRITTEN	include/srv0mon.h	/^	MONITOR_ZBLOB_PAGE_WRITTEN,$/;"	e	enum:monitor_id_t
MTR_LOG_ALL	include/mtr0types.h	/^	MTR_LOG_ALL = 21,$/;"	e	enum:mtr_log_t
MTR_LOG_NONE	include/mtr0types.h	/^	MTR_LOG_NONE = 22,$/;"	e	enum:mtr_log_t
MTR_LOG_NO_REDO	include/mtr0types.h	/^	MTR_LOG_NO_REDO = 23,$/;"	e	enum:mtr_log_t
MTR_LOG_SHORT_INSERTS	include/mtr0types.h	/^	MTR_LOG_SHORT_INSERTS = 24$/;"	e	enum:mtr_log_t
MTR_MAGIC_N	include/mtr0types.h	278;"	d
MTR_MEMO_BUF_FIX	include/mtr0types.h	/^	MTR_MEMO_BUF_FIX = RW_NO_LATCH,$/;"	e	enum:mtr_memo_type_t
MTR_MEMO_MODIFY	include/mtr0types.h	/^	MTR_MEMO_MODIFY = 32,$/;"	e	enum:mtr_memo_type_t
MTR_MEMO_PAGE_SX_FIX	include/mtr0types.h	/^	MTR_MEMO_PAGE_SX_FIX = RW_SX_LATCH,$/;"	e	enum:mtr_memo_type_t
MTR_MEMO_PAGE_S_FIX	include/mtr0types.h	/^	MTR_MEMO_PAGE_S_FIX = RW_S_LATCH,$/;"	e	enum:mtr_memo_type_t
MTR_MEMO_PAGE_X_FIX	include/mtr0types.h	/^	MTR_MEMO_PAGE_X_FIX = RW_X_LATCH,$/;"	e	enum:mtr_memo_type_t
MTR_MEMO_SX_LOCK	include/mtr0types.h	/^	MTR_MEMO_SX_LOCK = 256$/;"	e	enum:mtr_memo_type_t
MTR_MEMO_S_LOCK	include/mtr0types.h	/^	MTR_MEMO_S_LOCK = 64,$/;"	e	enum:mtr_memo_type_t
MTR_MEMO_X_LOCK	include/mtr0types.h	/^	MTR_MEMO_X_LOCK = 128,$/;"	e	enum:mtr_memo_type_t
MTR_STATE_ACTIVE	include/mtr0types.h	/^	MTR_STATE_ACTIVE = 12231,$/;"	e	enum:mtr_state_t
MTR_STATE_COMMITTED	include/mtr0types.h	/^	MTR_STATE_COMMITTED = 34676$/;"	e	enum:mtr_state_t
MTR_STATE_COMMITTING	include/mtr0types.h	/^	MTR_STATE_COMMITTING = 56456,$/;"	e	enum:mtr_state_t
MTR_STATE_INIT	include/mtr0types.h	/^	MTR_STATE_INIT = 0,$/;"	e	enum:mtr_state_t
MUTEX_MAGIC_N	include/sync0policy.h	37;"	d
MUTEX_NOWAIT	srv/srv0srv.cc	243;"	d	file:
MUTEX_STATE_LOCKED	include/sync0types.h	/^	MUTEX_STATE_LOCKED = 1,$/;"	e	enum:mutex_state_t
MUTEX_STATE_UNLOCKED	include/sync0types.h	/^	MUTEX_STATE_UNLOCKED = 0,$/;"	e	enum:mutex_state_t
MUTEX_STATE_WAITERS	include/sync0types.h	/^	MUTEX_STATE_WAITERS = 2$/;"	e	enum:mutex_state_t
MUTEX_TYPE	include/ut0mutex.h	87;"	d
MUTEX_TYPE	include/ut0mutex.h	91;"	d
MUTEX_TYPE	include/ut0mutex.h	95;"	d
MVCC	include/read0read.h	/^class MVCC {$/;"	c
MVCC	read/read0read.cc	/^MVCC::MVCC(ulint size)$/;"	f	class:MVCC
MYSQL_FETCH_CACHE_SIZE	include/row0mysql.h	662;"	d
MYSQL_FETCH_CACHE_THRESHOLD	include/row0mysql.h	664;"	d
MY_ATTRIBUTE	include/dyn0buf.h	/^			MY_ATTRIBUTE((warn_unused_result))$/;"	f	class:dyn_buf_t::block_t
MY_ATTRIBUTE	include/dyn0buf.h	/^		MY_ATTRIBUTE((warn_unused_result))$/;"	f	class:dyn_buf_t
MY_ATTRIBUTE	include/mtr0mtr.h	/^		MY_ATTRIBUTE((warn_unused_result))$/;"	f	struct:mtr_t
MY_ATTRIBUTE	include/os0file.h	/^		MY_ATTRIBUTE((warn_unused_result))$/;"	f	class:IORequest
MY_ATTRIBUTE	include/read0types.h	/^		MY_ATTRIBUTE((warn_unused_result))$/;"	f	class:ReadView
MY_ATTRIBUTE	os/os0file.cc	/^		MY_ATTRIBUTE((warn_unused_result))$/;"	f	class:AIO
MY_ATTRIBUTE	os/os0file.cc	/^		MY_ATTRIBUTE((warn_unused_result))$/;"	f	class:SimulatedAIOHandler
Mutex	include/sync0types.h	/^	typedef OSMutex Mutex;$/;"	t	class:LatchCounter
Mutex	sync/sync0debug.cc	/^	typedef OSMutex	Mutex;$/;"	t	struct:CreateTracker	file:
Mutex	sync/sync0debug.cc	/^	typedef OSMutex Mutex;$/;"	t	struct:LatchDebug	file:
MutexDebug	include/sync0policy.h	/^class MutexDebug {$/;"	c
MutexMonitor	include/ut0mutex.h	/^	MutexMonitor() { }$/;"	f	class:MutexMonitor
MutexMonitor	include/ut0mutex.h	/^class MutexMonitor {$/;"	c
MutexPolicy	include/ib0mutex.h	/^	typedef Policy<OSTrackMutex> MutexPolicy;$/;"	t	struct:OSTrackMutex
MutexPolicy	include/ib0mutex.h	/^	typedef Policy<TTASFutexMutex> MutexPolicy;$/;"	t	struct:TTASFutexMutex
MutexType	include/sync0policy.h	/^	typedef Mutex MutexType;$/;"	t	class:BlockMutexPolicy
MutexType	include/sync0policy.h	/^	typedef Mutex MutexType;$/;"	t	struct:GenericPolicy
NEG	include/pars0grm.h	/^     NEG = 359$/;"	e	enum:yytokentype
NEG	include/pars0grm.h	248;"	d
NEG	pars/pars0grm.cc	/^     NEG = 359$/;"	e	enum:yytokentype	file:
NEG	pars/pars0grm.cc	275;"	d	file:
NEVER_DONE	include/os0once.h	/^	static const state_t	NEVER_DONE = 0;$/;"	m	class:os_once
NEW_FT_INFO	handler/ha_innodb.h	/^} NEW_FT_INFO;$/;"	t	typeref:struct:new_ft_info
NONE	include/os0file.h	/^		NONE = 0,$/;"	e	enum:Compression::Type
NONE	include/os0file.h	/^		NONE = 0,$/;"	e	enum:Encryption::Type
NOT_STARTED	include/ut0stage.h	/^		NOT_STARTED = 0,$/;"	e	enum:ut_stage_alter_t::__anon11
NO_COMPRESSION	include/os0file.h	/^		NO_COMPRESSION = 512$/;"	e	enum:IORequest::__anon12
NO_EXT	include/fil0fil.h	/^	NO_EXT = 0,$/;"	e	enum:ib_extention
NUMA_MEMPOLICY_INTERLEAVE_IN_SCOPE	buf/buf0buf.cc	116;"	d	file:
NUMA_MEMPOLICY_INTERLEAVE_IN_SCOPE	buf/buf0buf.cc	118;"	d	file:
NUM_BITS_ULINT	include/srv0mon.h	469;"	d
NUM_MONITOR	include/srv0mon.h	/^	NUM_MONITOR$/;"	e	enum:monitor_id_t
NUM_RETRIES_ON_PARTIAL_IO	os/os0file.cc	/^static const ulint NUM_RETRIES_ON_PARTIAL_IO = 10;$/;"	v	file:
N_DIFF_REQUIRED	dict/dict0stats.cc	133;"	d	file:
N_PAGES_READ_LIMIT	btr/btr0cur.cc	5530;"	d	file:
N_SAMPLE_PAGES	dict/dict0stats.cc	124;"	d	file:
NoPolicy	include/sync0policy.h	/^	NoPolicy() { }$/;"	f	struct:NoPolicy
NoPolicy	include/sync0policy.h	/^struct NoPolicy {$/;"	s
NullElement	include/trx0purge.h	/^	static const TrxUndoRsegs	NullElement;$/;"	m	struct:TrxUndoRsegsIterator
NullValidate	include/ut0lst.h	/^struct	NullValidate { void operator()(const void* elem) { } };$/;"	s
OK	handler/i_s.cc	146;"	d	file:
ONLINE_INDEX_ABORTED	include/dict0mem.h	/^	ONLINE_INDEX_ABORTED,$/;"	e	enum:online_index_status
ONLINE_INDEX_ABORTED_DROPPED	include/dict0mem.h	/^	ONLINE_INDEX_ABORTED_DROPPED$/;"	e	enum:online_index_status
ONLINE_INDEX_COMPLETE	include/dict0mem.h	/^	ONLINE_INDEX_COMPLETE = 0,$/;"	e	enum:online_index_status
ONLINE_INDEX_CREATION	include/dict0mem.h	/^	ONLINE_INDEX_CREATION,$/;"	e	enum:online_index_status
OPERATING_SYSTEM_ERROR_MSG	handler/ha_innodb.cc	/^const char*	OPERATING_SYSTEM_ERROR_MSG =$/;"	v
OPT_COMPARISON	pars/pars0opt.cc	44;"	d	file:
OPT_END_COND	pars/pars0opt.cc	47;"	d	file:
OPT_EQUAL	pars/pars0opt.cc	43;"	d	file:
OPT_NOT_COND	pars/pars0opt.cc	46;"	d	file:
OPT_SCROLL_COND	pars/pars0opt.cc	49;"	d	file:
OPT_TEST_COND	pars/pars0opt.cc	48;"	d	file:
OSMutex	include/sync0types.h	/^struct OSMutex {$/;"	s
OSTrackMutex	include/ib0mutex.h	/^struct OSTrackMutex {$/;"	s
OS_AIO_IBUF	include/os0file.h	/^static const ulint OS_AIO_IBUF = 22;$/;"	v
OS_AIO_IO_SETUP_RETRY_ATTEMPTS	os/os0file.cc	/^static const int	OS_AIO_IO_SETUP_RETRY_ATTEMPTS = 5;$/;"	v	file:
OS_AIO_IO_SETUP_RETRY_SLEEP	os/os0file.cc	/^static const ulint	OS_AIO_IO_SETUP_RETRY_SLEEP = 500000UL;$/;"	v	file:
OS_AIO_LOG	include/os0file.h	/^static const ulint OS_AIO_LOG = 23;$/;"	v
OS_AIO_MERGE_N_CONSECUTIVE	os/os0file.cc	/^static const ulint	OS_AIO_MERGE_N_CONSECUTIVE = 64;$/;"	v	file:
OS_AIO_NORMAL	include/os0file.h	/^static const ulint OS_AIO_NORMAL = 21;$/;"	v
OS_AIO_N_PENDING_IOS_PER_THREAD	include/os0file.h	/^static const ulint OS_AIO_N_PENDING_IOS_PER_THREAD = 32;$/;"	v
OS_AIO_REAP_TIMEOUT	os/os0file.cc	/^static const ulint	OS_AIO_REAP_TIMEOUT = 500000000UL;$/;"	v	file:
OS_AIO_SYNC	include/os0file.h	/^static const ulint OS_AIO_SYNC = 24;$/;"	v
OS_AIO_VALIDATE_SKIP	os/os0file.cc	1456;"	d	file:
OS_DATA_FILE	include/os0file.h	/^static const ulint OS_DATA_FILE = 100;$/;"	v
OS_DATA_TEMP_FILE	include/os0file.h	/^static const ulint OS_DATA_TEMP_FILE = 102;$/;"	v
OS_FILE_ACCESS_VIOLATION	include/os0file.h	/^static const ulint OS_FILE_ACCESS_VIOLATION = 81;$/;"	v
OS_FILE_AIO	include/os0file.h	/^static const ulint OS_FILE_AIO = 61;$/;"	v
OS_FILE_AIO_INTERRUPTED	include/os0file.h	/^static const ulint OS_FILE_AIO_INTERRUPTED = 79;$/;"	v
OS_FILE_AIO_RESOURCES_RESERVED	include/os0file.h	/^static const ulint OS_FILE_AIO_RESOURCES_RESERVED = 75;$/;"	v
OS_FILE_ALREADY_EXISTS	include/os0file.h	/^static const ulint OS_FILE_ALREADY_EXISTS = 73;$/;"	v
OS_FILE_CLOSED	include/os0file.h	/^static const os_file_t OS_FILE_CLOSED = os_file_t(~0);$/;"	v
OS_FILE_CREATE	include/os0file.h	/^	OS_FILE_CREATE,			\/*!< to create new file (if$/;"	e	enum:os_file_create_t
OS_FILE_CREATE_PATH	include/os0file.h	/^	OS_FILE_CREATE_PATH,		\/*!< to create the directories *\/$/;"	e	enum:os_file_create_t
OS_FILE_DISK_FULL	include/os0file.h	/^static const ulint OS_FILE_DISK_FULL = 72;$/;"	v
OS_FILE_ERROR_MAX	include/os0file.h	/^static const ulint OS_FILE_ERROR_MAX = 100;$/;"	v
OS_FILE_ERROR_NOT_SPECIFIED	include/os0file.h	/^static const ulint OS_FILE_ERROR_NOT_SPECIFIED = 77;$/;"	v
OS_FILE_FROM_FD	include/os0file.h	84;"	d
OS_FILE_FROM_FD	include/os0file.h	96;"	d
OS_FILE_INSUFFICIENT_RESOURCE	include/os0file.h	/^static const ulint OS_FILE_INSUFFICIENT_RESOURCE = 78;$/;"	v
OS_FILE_LOG_BLOCK_SIZE	include/os0file.h	119;"	d
OS_FILE_MAX_PATH	include/os0file.h	901;"	d
OS_FILE_NORMAL	include/os0file.h	/^static const ulint OS_FILE_NORMAL = 62;$/;"	v
OS_FILE_NOT_FOUND	include/os0file.h	/^static const ulint OS_FILE_NOT_FOUND = 71;$/;"	v
OS_FILE_ON_ERROR_NO_EXIT	include/os0file.h	/^	OS_FILE_ON_ERROR_NO_EXIT = 128,	\/*!< do not exit on unknown errors *\/$/;"	e	enum:os_file_create_t
OS_FILE_ON_ERROR_SILENT	include/os0file.h	/^	OS_FILE_ON_ERROR_SILENT = 256	\/*!< don't print diagnostic messages to$/;"	e	enum:os_file_create_t
OS_FILE_OPEN	include/os0file.h	/^	OS_FILE_OPEN = 51,		\/*!< to open an existing file (if$/;"	e	enum:os_file_create_t
OS_FILE_OPEN_RAW	include/os0file.h	/^	OS_FILE_OPEN_RAW,		\/*!< to open a raw device or disk$/;"	e	enum:os_file_create_t
OS_FILE_OPEN_RETRY	include/os0file.h	/^	OS_FILE_OPEN_RETRY,		\/*!< open with retry *\/$/;"	e	enum:os_file_create_t
OS_FILE_OPERATION_ABORTED	include/os0file.h	/^static const ulint OS_FILE_OPERATION_ABORTED = 80;$/;"	v
OS_FILE_OVERWRITE	include/os0file.h	/^	OS_FILE_OVERWRITE,		\/*!< to create a new file, if exists$/;"	e	enum:os_file_create_t
OS_FILE_PATH_ERROR	include/os0file.h	/^static const ulint OS_FILE_PATH_ERROR = 74;$/;"	v
OS_FILE_READ_ALLOW_DELETE	include/os0file.h	/^static const ulint OS_FILE_READ_ALLOW_DELETE = 555;$/;"	v
OS_FILE_READ_ONLY	include/os0file.h	/^static const ulint OS_FILE_READ_ONLY = 333;$/;"	v
OS_FILE_READ_WRITE	include/os0file.h	/^static const ulint OS_FILE_READ_WRITE = 444;$/;"	v
OS_FILE_SHARING_VIOLATION	include/os0file.h	/^static const ulint OS_FILE_SHARING_VIOLATION = 76;$/;"	v
OS_FILE_TYPE_BLOCK	include/os0file.h	/^	OS_FILE_TYPE_BLOCK			\/* block device *\/$/;"	e	enum:os_file_type_t
OS_FILE_TYPE_DIR	include/os0file.h	/^	OS_FILE_TYPE_DIR,			\/* directory *\/$/;"	e	enum:os_file_type_t
OS_FILE_TYPE_FILE	include/os0file.h	/^	OS_FILE_TYPE_FILE,			\/* regular file *\/$/;"	e	enum:os_file_type_t
OS_FILE_TYPE_LINK	include/os0file.h	/^	OS_FILE_TYPE_LINK,			\/* symbolic link *\/$/;"	e	enum:os_file_type_t
OS_FILE_TYPE_UNKNOWN	include/os0file.h	/^	OS_FILE_TYPE_UNKNOWN = 0,$/;"	e	enum:os_file_type_t
OS_LOG_FILE	include/os0file.h	/^static const ulint OS_LOG_FILE = 101;$/;"	v
OS_MAP_ANON	os/os0proc.cc	41;"	d	file:
OS_MAP_ANON	os/os0proc.cc	43;"	d	file:
OS_PATH_SEPARATOR	include/univ.i	570;"	d	file:
OS_PATH_SEPARATOR	include/univ.i	575;"	d	file:
OS_PATH_SEPARATOR_ALT	include/univ.i	571;"	d	file:
OS_PATH_SEPARATOR_ALT	include/univ.i	576;"	d	file:
OS_SYNC_INFINITE_TIME	include/os0event.h	35;"	d
OS_SYNC_TIME_EXCEEDED	include/os0event.h	38;"	d
OS_THREAD_DUMMY_RETURN	include/univ.i	569;"	d	file:
OS_THREAD_DUMMY_RETURN	include/univ.i	574;"	d	file:
OS_THREAD_MAX_N	include/os0thread.h	36;"	d
OS_THREAD_PRIORITY_ABOVE_NORMAL	include/os0thread.h	42;"	d
OS_THREAD_PRIORITY_BACKGROUND	include/os0thread.h	40;"	d
OS_THREAD_PRIORITY_NONE	include/os0thread.h	39;"	d
OS_THREAD_PRIORITY_NORMAL	include/os0thread.h	41;"	d
OUT_OF_MEMORY_MSG	include/ut0new.h	140;"	d
OrderByWaits	handler/ha_innodb.cc	/^	struct OrderByWaits: public std::binary_function<Value, Value, bool>$/;"	s	struct:ShowStatus	file:
PAGE_BTR_IBUF_FREE_LIST	include/page0page.h	91;"	d
PAGE_BTR_IBUF_FREE_LIST_NODE	include/page0page.h	92;"	d
PAGE_BTR_SEG_LEAF	include/page0page.h	88;"	d
PAGE_BTR_SEG_TOP	include/page0page.h	98;"	d
PAGE_CLEANER_STATE_FINISHED	buf/buf0flu.cc	/^	PAGE_CLEANER_STATE_FINISHED$/;"	e	enum:page_cleaner_state_t	file:
PAGE_CLEANER_STATE_FLUSHING	buf/buf0flu.cc	/^	PAGE_CLEANER_STATE_FLUSHING,$/;"	e	enum:page_cleaner_state_t	file:
PAGE_CLEANER_STATE_NONE	buf/buf0flu.cc	/^	PAGE_CLEANER_STATE_NONE = 0,$/;"	e	enum:page_cleaner_state_t	file:
PAGE_CLEANER_STATE_REQUESTED	buf/buf0flu.cc	/^	PAGE_CLEANER_STATE_REQUESTED,$/;"	e	enum:page_cleaner_state_t	file:
PAGE_CUR_ADAPT	include/page0cur.h	39;"	d
PAGE_CUR_CONTAIN	include/page0types.h	/^	PAGE_CUR_CONTAIN		= 7,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_DISJOINT	include/page0types.h	/^	PAGE_CUR_DISJOINT		= 10,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_G	include/page0types.h	/^	PAGE_CUR_G	= 1,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_GE	include/page0types.h	/^	PAGE_CUR_GE	= 2,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_INTERSECT	include/page0types.h	/^	PAGE_CUR_INTERSECT		= 8,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_L	include/page0types.h	/^	PAGE_CUR_L	= 3,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_LE	include/page0types.h	/^	PAGE_CUR_LE	= 4,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_MBR_EQUAL	include/page0types.h	/^	PAGE_CUR_MBR_EQUAL		= 11,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_RTREE_GET_FATHER	include/page0types.h	/^	PAGE_CUR_RTREE_GET_FATHER	= 14$/;"	e	enum:page_cur_mode_t
PAGE_CUR_RTREE_INSERT	include/page0types.h	/^	PAGE_CUR_RTREE_INSERT		= 12,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_RTREE_LOCATE	include/page0types.h	/^	PAGE_CUR_RTREE_LOCATE		= 13,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_UNSUPP	include/page0types.h	/^	PAGE_CUR_UNSUPP	= 0,$/;"	e	enum:page_cur_mode_t
PAGE_CUR_WITHIN	include/page0types.h	/^	PAGE_CUR_WITHIN			= 9,$/;"	e	enum:page_cur_mode_t
PAGE_DATA	include/page0page.h	104;"	d
PAGE_DIR	include/page0page.h	152;"	d
PAGE_DIRECTION	include/page0page.h	68;"	d
PAGE_DIR_SLOT_MAX_N_OWNED	include/page0page.h	164;"	d
PAGE_DIR_SLOT_MIN_N_OWNED	include/page0page.h	165;"	d
PAGE_DIR_SLOT_SIZE	include/page0page.h	155;"	d
PAGE_EMPTY_DIR_START	include/page0page.h	159;"	d
PAGE_FREE	include/page0page.h	63;"	d
PAGE_GARBAGE	include/page0page.h	64;"	d
PAGE_HEADER	include/page0page.h	56;"	d
PAGE_HEADER_PRIV_END	include/page0page.h	76;"	d
PAGE_HEAP_NO_INFIMUM	include/page0page.h	128;"	d
PAGE_HEAP_NO_SUPREMUM	include/page0page.h	129;"	d
PAGE_HEAP_NO_USER_LOW	include/page0page.h	130;"	d
PAGE_HEAP_TOP	include/page0page.h	60;"	d
PAGE_INDEX_ID	include/page0page.h	82;"	d
PAGE_LAST_INSERT	include/page0page.h	65;"	d
PAGE_LEFT	include/page0page.h	136;"	d
PAGE_LEVEL	include/page0page.h	79;"	d
PAGE_MAX_TRX_ID	include/page0page.h	72;"	d
PAGE_NEW_INFIMUM	include/page0page.h	116;"	d
PAGE_NEW_SUPREMUM	include/page0page.h	119;"	d
PAGE_NEW_SUPREMUM_END	include/page0page.h	122;"	d
PAGE_NO_DIRECTION	include/page0page.h	140;"	d
PAGE_N_DIRECTION	include/page0page.h	69;"	d
PAGE_N_DIR_SLOTS	include/page0page.h	59;"	d
PAGE_N_HEAP	include/page0page.h	61;"	d
PAGE_N_RECS	include/page0page.h	71;"	d
PAGE_OLD_INFIMUM	include/page0page.h	107;"	d
PAGE_OLD_SUPREMUM	include/page0page.h	110;"	d
PAGE_OLD_SUPREMUM_END	include/page0page.h	113;"	d
PAGE_RIGHT	include/page0page.h	137;"	d
PAGE_SAME_PAGE	include/page0page.h	139;"	d
PAGE_SAME_REC	include/page0page.h	138;"	d
PAGE_SIZE_T_SIZE_BITS	include/page0size.h	/^	unsigned	m_logical:PAGE_SIZE_T_SIZE_BITS;$/;"	m	class:page_size_t
PAGE_SIZE_T_SIZE_BITS	include/page0size.h	/^	unsigned	m_physical:PAGE_SIZE_T_SIZE_BITS;$/;"	m	class:page_size_t
PAGE_SIZE_T_SIZE_BITS	include/page0size.h	39;"	d
PAGE_ZIP_CLUST_LEAF_SLOT_SIZE	include/page0zip.h	67;"	d
PAGE_ZIP_DIR_SLOT_DEL	include/page0zip.h	76;"	d
PAGE_ZIP_DIR_SLOT_MASK	include/page0zip.h	72;"	d
PAGE_ZIP_DIR_SLOT_OWNED	include/page0zip.h	74;"	d
PAGE_ZIP_DIR_SLOT_SIZE	include/page0zip.h	65;"	d
PAGE_ZIP_SSIZE_BITS	include/page0types.h	52;"	d
PAGE_ZIP_SSIZE_MAX	include/page0types.h	55;"	d
PAGE_ZIP_START	include/page0zip.h	63;"	d
PARSER_DEINIT	include/fts0plugin.h	36;"	d
PARSER_INIT	include/fts0plugin.h	35;"	d
PARS_AND_TOKEN	include/pars0grm.h	/^     PARS_AND_TOKEN = 265,$/;"	e	enum:yytokentype
PARS_AND_TOKEN	include/pars0grm.h	154;"	d
PARS_AND_TOKEN	pars/pars0grm.cc	/^     PARS_AND_TOKEN = 265,$/;"	e	enum:yytokentype	file:
PARS_AND_TOKEN	pars/pars0grm.cc	181;"	d	file:
PARS_ASC_TOKEN	include/pars0grm.h	/^     PARS_ASC_TOKEN = 301,$/;"	e	enum:yytokentype
PARS_ASC_TOKEN	include/pars0grm.h	190;"	d
PARS_ASC_TOKEN	pars/pars0grm.cc	/^     PARS_ASC_TOKEN = 301,$/;"	e	enum:yytokentype	file:
PARS_ASC_TOKEN	pars/pars0grm.cc	217;"	d	file:
PARS_ASSERT_TOKEN	include/pars0grm.h	/^     PARS_ASSERT_TOKEN = 337,$/;"	e	enum:yytokentype
PARS_ASSERT_TOKEN	include/pars0grm.h	226;"	d
PARS_ASSERT_TOKEN	pars/pars0grm.cc	/^     PARS_ASSERT_TOKEN = 337,$/;"	e	enum:yytokentype	file:
PARS_ASSERT_TOKEN	pars/pars0grm.cc	253;"	d	file:
PARS_ASSIGN_TOKEN	include/pars0grm.h	/^     PARS_ASSIGN_TOKEN = 318,$/;"	e	enum:yytokentype
PARS_ASSIGN_TOKEN	include/pars0grm.h	207;"	d
PARS_ASSIGN_TOKEN	pars/pars0grm.cc	/^     PARS_ASSIGN_TOKEN = 318,$/;"	e	enum:yytokentype	file:
PARS_ASSIGN_TOKEN	pars/pars0grm.cc	234;"	d	file:
PARS_BEGIN_TOKEN	include/pars0grm.h	/^     PARS_BEGIN_TOKEN = 281,$/;"	e	enum:yytokentype
PARS_BEGIN_TOKEN	include/pars0grm.h	170;"	d
PARS_BEGIN_TOKEN	pars/pars0grm.cc	/^     PARS_BEGIN_TOKEN = 281,$/;"	e	enum:yytokentype	file:
PARS_BEGIN_TOKEN	pars/pars0grm.cc	197;"	d	file:
PARS_BIGINT_TOKEN	include/pars0grm.h	/^     PARS_BIGINT_TOKEN = 358,$/;"	e	enum:yytokentype
PARS_BIGINT_TOKEN	include/pars0grm.h	247;"	d
PARS_BIGINT_TOKEN	pars/pars0grm.cc	/^     PARS_BIGINT_TOKEN = 358,$/;"	e	enum:yytokentype	file:
PARS_BIGINT_TOKEN	pars/pars0grm.cc	274;"	d	file:
PARS_BINARY_TOKEN	include/pars0grm.h	/^     PARS_BINARY_TOKEN = 274,$/;"	e	enum:yytokentype
PARS_BINARY_TOKEN	include/pars0grm.h	163;"	d
PARS_BINARY_TOKEN	pars/pars0grm.cc	/^     PARS_BINARY_TOKEN = 274,$/;"	e	enum:yytokentype	file:
PARS_BINARY_TOKEN	pars/pars0grm.cc	190;"	d	file:
PARS_BINARY_TO_NUMBER_TOKEN	include/pars0grm.h	/^     PARS_BINARY_TO_NUMBER_TOKEN = 329,$/;"	e	enum:yytokentype
PARS_BINARY_TO_NUMBER_TOKEN	include/pars0grm.h	218;"	d
PARS_BINARY_TO_NUMBER_TOKEN	pars/pars0grm.cc	/^     PARS_BINARY_TO_NUMBER_TOKEN = 329,$/;"	e	enum:yytokentype	file:
PARS_BINARY_TO_NUMBER_TOKEN	pars/pars0grm.cc	245;"	d	file:
PARS_BLOB_LIT	include/pars0grm.h	/^     PARS_BLOB_LIT = 262,$/;"	e	enum:yytokentype
PARS_BLOB_LIT	include/pars0grm.h	151;"	d
PARS_BLOB_LIT	pars/pars0grm.cc	/^     PARS_BLOB_LIT = 262,$/;"	e	enum:yytokentype	file:
PARS_BLOB_LIT	pars/pars0grm.cc	178;"	d	file:
PARS_BLOB_TOKEN	include/pars0grm.h	/^     PARS_BLOB_TOKEN = 275,$/;"	e	enum:yytokentype
PARS_BLOB_TOKEN	include/pars0grm.h	164;"	d
PARS_BLOB_TOKEN	pars/pars0grm.cc	/^     PARS_BLOB_TOKEN = 275,$/;"	e	enum:yytokentype	file:
PARS_BLOB_TOKEN	pars/pars0grm.cc	191;"	d	file:
PARS_BLOCK_SIZE_TOKEN	include/pars0grm.h	/^     PARS_BLOCK_SIZE_TOKEN = 357,$/;"	e	enum:yytokentype
PARS_BLOCK_SIZE_TOKEN	include/pars0grm.h	246;"	d
PARS_BLOCK_SIZE_TOKEN	pars/pars0grm.cc	/^     PARS_BLOCK_SIZE_TOKEN = 357,$/;"	e	enum:yytokentype	file:
PARS_BLOCK_SIZE_TOKEN	pars/pars0grm.cc	273;"	d	file:
PARS_BY_TOKEN	include/pars0grm.h	/^     PARS_BY_TOKEN = 300,$/;"	e	enum:yytokentype
PARS_BY_TOKEN	include/pars0grm.h	189;"	d
PARS_BY_TOKEN	pars/pars0grm.cc	/^     PARS_BY_TOKEN = 300,$/;"	e	enum:yytokentype	file:
PARS_BY_TOKEN	pars/pars0grm.cc	216;"	d	file:
PARS_CHAR_TOKEN	include/pars0grm.h	/^     PARS_CHAR_TOKEN = 279,$/;"	e	enum:yytokentype
PARS_CHAR_TOKEN	include/pars0grm.h	168;"	d
PARS_CHAR_TOKEN	pars/pars0grm.cc	/^     PARS_CHAR_TOKEN = 279,$/;"	e	enum:yytokentype	file:
PARS_CHAR_TOKEN	pars/pars0grm.cc	195;"	d	file:
PARS_CLOSE_TOKEN	include/pars0grm.h	/^     PARS_CLOSE_TOKEN = 324,$/;"	e	enum:yytokentype
PARS_CLOSE_TOKEN	include/pars0grm.h	213;"	d
PARS_CLOSE_TOKEN	pars/pars0grm.cc	/^     PARS_CLOSE_TOKEN = 324,$/;"	e	enum:yytokentype	file:
PARS_CLOSE_TOKEN	pars/pars0grm.cc	240;"	d	file:
PARS_CLUSTERED_TOKEN	include/pars0grm.h	/^     PARS_CLUSTERED_TOKEN = 315,$/;"	e	enum:yytokentype
PARS_CLUSTERED_TOKEN	include/pars0grm.h	204;"	d
PARS_CLUSTERED_TOKEN	pars/pars0grm.cc	/^     PARS_CLUSTERED_TOKEN = 315,$/;"	e	enum:yytokentype	file:
PARS_CLUSTERED_TOKEN	pars/pars0grm.cc	231;"	d	file:
PARS_COMMIT_TOKEN	include/pars0grm.h	/^     PARS_COMMIT_TOKEN = 341,$/;"	e	enum:yytokentype
PARS_COMMIT_TOKEN	include/pars0grm.h	230;"	d
PARS_COMMIT_TOKEN	pars/pars0grm.cc	/^     PARS_COMMIT_TOKEN = 341,$/;"	e	enum:yytokentype	file:
PARS_COMMIT_TOKEN	pars/pars0grm.cc	257;"	d	file:
PARS_COMPACT_TOKEN	include/pars0grm.h	/^     PARS_COMPACT_TOKEN = 356,$/;"	e	enum:yytokentype
PARS_COMPACT_TOKEN	include/pars0grm.h	245;"	d
PARS_COMPACT_TOKEN	pars/pars0grm.cc	/^     PARS_COMPACT_TOKEN = 356,$/;"	e	enum:yytokentype	file:
PARS_COMPACT_TOKEN	pars/pars0grm.cc	272;"	d	file:
PARS_CONCAT_TOKEN	include/pars0grm.h	/^     PARS_CONCAT_TOKEN = 332,$/;"	e	enum:yytokentype
PARS_CONCAT_TOKEN	include/pars0grm.h	221;"	d
PARS_CONCAT_TOKEN	pars/pars0grm.cc	/^     PARS_CONCAT_TOKEN = 332,$/;"	e	enum:yytokentype	file:
PARS_CONCAT_TOKEN	pars/pars0grm.cc	248;"	d	file:
PARS_COUNT_TOKEN	include/pars0grm.h	/^     PARS_COUNT_TOKEN = 292,$/;"	e	enum:yytokentype
PARS_COUNT_TOKEN	include/pars0grm.h	181;"	d
PARS_COUNT_TOKEN	pars/pars0grm.cc	/^     PARS_COUNT_TOKEN = 292,$/;"	e	enum:yytokentype	file:
PARS_COUNT_TOKEN	pars/pars0grm.cc	208;"	d	file:
PARS_CREATE_TOKEN	include/pars0grm.h	/^     PARS_CREATE_TOKEN = 311,$/;"	e	enum:yytokentype
PARS_CREATE_TOKEN	include/pars0grm.h	200;"	d
PARS_CREATE_TOKEN	pars/pars0grm.cc	/^     PARS_CREATE_TOKEN = 311,$/;"	e	enum:yytokentype	file:
PARS_CREATE_TOKEN	pars/pars0grm.cc	227;"	d	file:
PARS_CURRENT_TOKEN	include/pars0grm.h	/^     PARS_CURRENT_TOKEN = 309,$/;"	e	enum:yytokentype
PARS_CURRENT_TOKEN	include/pars0grm.h	198;"	d
PARS_CURRENT_TOKEN	pars/pars0grm.cc	/^     PARS_CURRENT_TOKEN = 309,$/;"	e	enum:yytokentype	file:
PARS_CURRENT_TOKEN	pars/pars0grm.cc	225;"	d	file:
PARS_CURSOR_TOKEN	include/pars0grm.h	/^     PARS_CURSOR_TOKEN = 320,$/;"	e	enum:yytokentype
PARS_CURSOR_TOKEN	include/pars0grm.h	209;"	d
PARS_CURSOR_TOKEN	pars/pars0grm.cc	/^     PARS_CURSOR_TOKEN = 320,$/;"	e	enum:yytokentype	file:
PARS_CURSOR_TOKEN	pars/pars0grm.cc	236;"	d	file:
PARS_DDOT_TOKEN	include/pars0grm.h	/^     PARS_DDOT_TOKEN = 297,$/;"	e	enum:yytokentype
PARS_DDOT_TOKEN	include/pars0grm.h	186;"	d
PARS_DDOT_TOKEN	pars/pars0grm.cc	/^     PARS_DDOT_TOKEN = 297,$/;"	e	enum:yytokentype	file:
PARS_DDOT_TOKEN	pars/pars0grm.cc	213;"	d	file:
PARS_DECLARE_TOKEN	include/pars0grm.h	/^     PARS_DECLARE_TOKEN = 319,$/;"	e	enum:yytokentype
PARS_DECLARE_TOKEN	include/pars0grm.h	208;"	d
PARS_DECLARE_TOKEN	pars/pars0grm.cc	/^     PARS_DECLARE_TOKEN = 319,$/;"	e	enum:yytokentype	file:
PARS_DECLARE_TOKEN	pars/pars0grm.cc	235;"	d	file:
PARS_DELETE_TOKEN	include/pars0grm.h	/^     PARS_DELETE_TOKEN = 308,$/;"	e	enum:yytokentype
PARS_DELETE_TOKEN	include/pars0grm.h	197;"	d
PARS_DELETE_TOKEN	pars/pars0grm.cc	/^     PARS_DELETE_TOKEN = 308,$/;"	e	enum:yytokentype	file:
PARS_DELETE_TOKEN	pars/pars0grm.cc	224;"	d	file:
PARS_DESC_TOKEN	include/pars0grm.h	/^     PARS_DESC_TOKEN = 302,$/;"	e	enum:yytokentype
PARS_DESC_TOKEN	include/pars0grm.h	191;"	d
PARS_DESC_TOKEN	pars/pars0grm.cc	/^     PARS_DESC_TOKEN = 302,$/;"	e	enum:yytokentype	file:
PARS_DESC_TOKEN	pars/pars0grm.cc	218;"	d	file:
PARS_DISTINCT_TOKEN	include/pars0grm.h	/^     PARS_DISTINCT_TOKEN = 293,$/;"	e	enum:yytokentype
PARS_DISTINCT_TOKEN	include/pars0grm.h	182;"	d
PARS_DISTINCT_TOKEN	pars/pars0grm.cc	/^     PARS_DISTINCT_TOKEN = 293,$/;"	e	enum:yytokentype	file:
PARS_DISTINCT_TOKEN	pars/pars0grm.cc	209;"	d	file:
PARS_DOES_NOT_FIT_IN_MEM_TOKEN	include/pars0grm.h	/^     PARS_DOES_NOT_FIT_IN_MEM_TOKEN = 316,$/;"	e	enum:yytokentype
PARS_DOES_NOT_FIT_IN_MEM_TOKEN	include/pars0grm.h	205;"	d
PARS_DOES_NOT_FIT_IN_MEM_TOKEN	pars/pars0grm.cc	/^     PARS_DOES_NOT_FIT_IN_MEM_TOKEN = 316,$/;"	e	enum:yytokentype	file:
PARS_DOES_NOT_FIT_IN_MEM_TOKEN	pars/pars0grm.cc	232;"	d	file:
PARS_ELSE_TOKEN	include/pars0grm.h	/^     PARS_ELSE_TOKEN = 285,$/;"	e	enum:yytokentype
PARS_ELSE_TOKEN	include/pars0grm.h	174;"	d
PARS_ELSE_TOKEN	pars/pars0grm.cc	/^     PARS_ELSE_TOKEN = 285,$/;"	e	enum:yytokentype	file:
PARS_ELSE_TOKEN	pars/pars0grm.cc	201;"	d	file:
PARS_ELSIF_TOKEN	include/pars0grm.h	/^     PARS_ELSIF_TOKEN = 286,$/;"	e	enum:yytokentype
PARS_ELSIF_TOKEN	include/pars0grm.h	175;"	d
PARS_ELSIF_TOKEN	pars/pars0grm.cc	/^     PARS_ELSIF_TOKEN = 286,$/;"	e	enum:yytokentype	file:
PARS_ELSIF_TOKEN	pars/pars0grm.cc	202;"	d	file:
PARS_END_TOKEN	include/pars0grm.h	/^     PARS_END_TOKEN = 282,$/;"	e	enum:yytokentype
PARS_END_TOKEN	include/pars0grm.h	171;"	d
PARS_END_TOKEN	pars/pars0grm.cc	/^     PARS_END_TOKEN = 282,$/;"	e	enum:yytokentype	file:
PARS_END_TOKEN	pars/pars0grm.cc	198;"	d	file:
PARS_EXIT_TOKEN	include/pars0grm.h	/^     PARS_EXIT_TOKEN = 345,$/;"	e	enum:yytokentype
PARS_EXIT_TOKEN	include/pars0grm.h	234;"	d
PARS_EXIT_TOKEN	pars/pars0grm.cc	/^     PARS_EXIT_TOKEN = 345,$/;"	e	enum:yytokentype	file:
PARS_EXIT_TOKEN	pars/pars0grm.cc	261;"	d	file:
PARS_FETCH_TOKEN	include/pars0grm.h	/^     PARS_FETCH_TOKEN = 323,$/;"	e	enum:yytokentype
PARS_FETCH_TOKEN	include/pars0grm.h	212;"	d
PARS_FETCH_TOKEN	pars/pars0grm.cc	/^     PARS_FETCH_TOKEN = 323,$/;"	e	enum:yytokentype	file:
PARS_FETCH_TOKEN	pars/pars0grm.cc	239;"	d	file:
PARS_FIXBINARY_LIT	include/pars0grm.h	/^     PARS_FIXBINARY_LIT = 261,$/;"	e	enum:yytokentype
PARS_FIXBINARY_LIT	include/pars0grm.h	150;"	d
PARS_FIXBINARY_LIT	pars/pars0grm.cc	/^     PARS_FIXBINARY_LIT = 261,$/;"	e	enum:yytokentype	file:
PARS_FIXBINARY_LIT	pars/pars0grm.cc	177;"	d	file:
PARS_FLOAT_LIT	include/pars0grm.h	/^     PARS_FLOAT_LIT = 259,$/;"	e	enum:yytokentype
PARS_FLOAT_LIT	include/pars0grm.h	148;"	d
PARS_FLOAT_LIT	pars/pars0grm.cc	/^     PARS_FLOAT_LIT = 259,$/;"	e	enum:yytokentype	file:
PARS_FLOAT_LIT	pars/pars0grm.cc	175;"	d	file:
PARS_FLOAT_TOKEN	include/pars0grm.h	/^     PARS_FLOAT_TOKEN = 278,$/;"	e	enum:yytokentype
PARS_FLOAT_TOKEN	include/pars0grm.h	167;"	d
PARS_FLOAT_TOKEN	pars/pars0grm.cc	/^     PARS_FLOAT_TOKEN = 278,$/;"	e	enum:yytokentype	file:
PARS_FLOAT_TOKEN	pars/pars0grm.cc	194;"	d	file:
PARS_FOR_TOKEN	include/pars0grm.h	/^     PARS_FOR_TOKEN = 296,$/;"	e	enum:yytokentype
PARS_FOR_TOKEN	include/pars0grm.h	185;"	d
PARS_FOR_TOKEN	pars/pars0grm.cc	/^     PARS_FOR_TOKEN = 296,$/;"	e	enum:yytokentype	file:
PARS_FOR_TOKEN	pars/pars0grm.cc	212;"	d	file:
PARS_FROM_TOKEN	include/pars0grm.h	/^     PARS_FROM_TOKEN = 294,$/;"	e	enum:yytokentype
PARS_FROM_TOKEN	include/pars0grm.h	183;"	d
PARS_FROM_TOKEN	pars/pars0grm.cc	/^     PARS_FROM_TOKEN = 294,$/;"	e	enum:yytokentype	file:
PARS_FROM_TOKEN	pars/pars0grm.cc	210;"	d	file:
PARS_FUNCTION_TOKEN	include/pars0grm.h	/^     PARS_FUNCTION_TOKEN = 346,$/;"	e	enum:yytokentype
PARS_FUNCTION_TOKEN	include/pars0grm.h	235;"	d
PARS_FUNCTION_TOKEN	pars/pars0grm.cc	/^     PARS_FUNCTION_TOKEN = 346,$/;"	e	enum:yytokentype	file:
PARS_FUNCTION_TOKEN	pars/pars0grm.cc	262;"	d	file:
PARS_FUNC_AGGREGATE	include/pars0pars.h	762;"	d
PARS_FUNC_ARITH	include/pars0pars.h	758;"	d
PARS_FUNC_CMP	include/pars0pars.h	760;"	d
PARS_FUNC_LOGICAL	include/pars0pars.h	759;"	d
PARS_FUNC_OTHER	include/pars0pars.h	763;"	d
PARS_FUNC_PREDEFINED	include/pars0pars.h	761;"	d
PARS_GE_TOKEN	include/pars0grm.h	/^     PARS_GE_TOKEN = 268,$/;"	e	enum:yytokentype
PARS_GE_TOKEN	include/pars0grm.h	157;"	d
PARS_GE_TOKEN	pars/pars0grm.cc	/^     PARS_GE_TOKEN = 268,$/;"	e	enum:yytokentype	file:
PARS_GE_TOKEN	pars/pars0grm.cc	184;"	d	file:
PARS_ID_TOKEN	include/pars0grm.h	/^     PARS_ID_TOKEN = 264,$/;"	e	enum:yytokentype
PARS_ID_TOKEN	include/pars0grm.h	153;"	d
PARS_ID_TOKEN	pars/pars0grm.cc	/^     PARS_ID_TOKEN = 264,$/;"	e	enum:yytokentype	file:
PARS_ID_TOKEN	pars/pars0grm.cc	180;"	d	file:
PARS_IF_TOKEN	include/pars0grm.h	/^     PARS_IF_TOKEN = 283,$/;"	e	enum:yytokentype
PARS_IF_TOKEN	include/pars0grm.h	172;"	d
PARS_IF_TOKEN	pars/pars0grm.cc	/^     PARS_IF_TOKEN = 283,$/;"	e	enum:yytokentype	file:
PARS_IF_TOKEN	pars/pars0grm.cc	199;"	d	file:
PARS_INDEX_TOKEN	include/pars0grm.h	/^     PARS_INDEX_TOKEN = 313,$/;"	e	enum:yytokentype
PARS_INDEX_TOKEN	include/pars0grm.h	202;"	d
PARS_INDEX_TOKEN	pars/pars0grm.cc	/^     PARS_INDEX_TOKEN = 313,$/;"	e	enum:yytokentype	file:
PARS_INDEX_TOKEN	pars/pars0grm.cc	229;"	d	file:
PARS_INPUT	include/pars0pars.h	87;"	d
PARS_INSERT_TOKEN	include/pars0grm.h	/^     PARS_INSERT_TOKEN = 303,$/;"	e	enum:yytokentype
PARS_INSERT_TOKEN	include/pars0grm.h	192;"	d
PARS_INSERT_TOKEN	pars/pars0grm.cc	/^     PARS_INSERT_TOKEN = 303,$/;"	e	enum:yytokentype	file:
PARS_INSERT_TOKEN	pars/pars0grm.cc	219;"	d	file:
PARS_INSTR_TOKEN	include/pars0grm.h	/^     PARS_INSTR_TOKEN = 333,$/;"	e	enum:yytokentype
PARS_INSTR_TOKEN	include/pars0grm.h	222;"	d
PARS_INSTR_TOKEN	pars/pars0grm.cc	/^     PARS_INSTR_TOKEN = 333,$/;"	e	enum:yytokentype	file:
PARS_INSTR_TOKEN	pars/pars0grm.cc	249;"	d	file:
PARS_INTEGER_TOKEN	include/pars0grm.h	/^     PARS_INTEGER_TOKEN = 277,$/;"	e	enum:yytokentype
PARS_INTEGER_TOKEN	include/pars0grm.h	166;"	d
PARS_INTEGER_TOKEN	pars/pars0grm.cc	/^     PARS_INTEGER_TOKEN = 277,$/;"	e	enum:yytokentype	file:
PARS_INTEGER_TOKEN	pars/pars0grm.cc	193;"	d	file:
PARS_INTO_TOKEN	include/pars0grm.h	/^     PARS_INTO_TOKEN = 304,$/;"	e	enum:yytokentype
PARS_INTO_TOKEN	include/pars0grm.h	193;"	d
PARS_INTO_TOKEN	pars/pars0grm.cc	/^     PARS_INTO_TOKEN = 304,$/;"	e	enum:yytokentype	file:
PARS_INTO_TOKEN	pars/pars0grm.cc	220;"	d	file:
PARS_INT_LIT	include/pars0grm.h	/^     PARS_INT_LIT = 258,$/;"	e	enum:yytokentype
PARS_INT_LIT	include/pars0grm.h	147;"	d
PARS_INT_LIT	pars/pars0grm.cc	/^     PARS_INT_LIT = 258,$/;"	e	enum:yytokentype	file:
PARS_INT_LIT	pars/pars0grm.cc	174;"	d	file:
PARS_INT_TOKEN	include/pars0grm.h	/^     PARS_INT_TOKEN = 276,$/;"	e	enum:yytokentype
PARS_INT_TOKEN	include/pars0grm.h	165;"	d
PARS_INT_TOKEN	pars/pars0grm.cc	/^     PARS_INT_TOKEN = 276,$/;"	e	enum:yytokentype	file:
PARS_INT_TOKEN	pars/pars0grm.cc	192;"	d	file:
PARS_IN_TOKEN	include/pars0grm.h	/^     PARS_IN_TOKEN = 272,$/;"	e	enum:yytokentype
PARS_IN_TOKEN	include/pars0grm.h	161;"	d
PARS_IN_TOKEN	pars/pars0grm.cc	/^     PARS_IN_TOKEN = 272,$/;"	e	enum:yytokentype	file:
PARS_IN_TOKEN	pars/pars0grm.cc	188;"	d	file:
PARS_IS_TOKEN	include/pars0grm.h	/^     PARS_IS_TOKEN = 280,$/;"	e	enum:yytokentype
PARS_IS_TOKEN	include/pars0grm.h	169;"	d
PARS_IS_TOKEN	pars/pars0grm.cc	/^     PARS_IS_TOKEN = 280,$/;"	e	enum:yytokentype	file:
PARS_IS_TOKEN	pars/pars0grm.cc	196;"	d	file:
PARS_LENGTH_TOKEN	include/pars0grm.h	/^     PARS_LENGTH_TOKEN = 334,$/;"	e	enum:yytokentype
PARS_LENGTH_TOKEN	include/pars0grm.h	223;"	d
PARS_LENGTH_TOKEN	pars/pars0grm.cc	/^     PARS_LENGTH_TOKEN = 334,$/;"	e	enum:yytokentype	file:
PARS_LENGTH_TOKEN	pars/pars0grm.cc	250;"	d	file:
PARS_LE_TOKEN	include/pars0grm.h	/^     PARS_LE_TOKEN = 269,$/;"	e	enum:yytokentype
PARS_LE_TOKEN	include/pars0grm.h	158;"	d
PARS_LE_TOKEN	pars/pars0grm.cc	/^     PARS_LE_TOKEN = 269,$/;"	e	enum:yytokentype	file:
PARS_LE_TOKEN	pars/pars0grm.cc	185;"	d	file:
PARS_LIKE_TOKEN	include/pars0grm.h	/^     PARS_LIKE_TOKEN = 350,$/;"	e	enum:yytokentype
PARS_LIKE_TOKEN	include/pars0grm.h	239;"	d
PARS_LIKE_TOKEN	pars/pars0grm.cc	/^     PARS_LIKE_TOKEN = 350,$/;"	e	enum:yytokentype	file:
PARS_LIKE_TOKEN	pars/pars0grm.cc	266;"	d	file:
PARS_LIKE_TOKEN_EXACT	include/pars0grm.h	/^     PARS_LIKE_TOKEN_EXACT = 351,$/;"	e	enum:yytokentype
PARS_LIKE_TOKEN_EXACT	include/pars0grm.h	240;"	d
PARS_LIKE_TOKEN_EXACT	pars/pars0grm.cc	/^     PARS_LIKE_TOKEN_EXACT = 351,$/;"	e	enum:yytokentype	file:
PARS_LIKE_TOKEN_EXACT	pars/pars0grm.cc	267;"	d	file:
PARS_LIKE_TOKEN_PREFIX	include/pars0grm.h	/^     PARS_LIKE_TOKEN_PREFIX = 352,$/;"	e	enum:yytokentype
PARS_LIKE_TOKEN_PREFIX	include/pars0grm.h	241;"	d
PARS_LIKE_TOKEN_PREFIX	pars/pars0grm.cc	/^     PARS_LIKE_TOKEN_PREFIX = 352,$/;"	e	enum:yytokentype	file:
PARS_LIKE_TOKEN_PREFIX	pars/pars0grm.cc	268;"	d	file:
PARS_LIKE_TOKEN_SUBSTR	include/pars0grm.h	/^     PARS_LIKE_TOKEN_SUBSTR = 354,$/;"	e	enum:yytokentype
PARS_LIKE_TOKEN_SUBSTR	include/pars0grm.h	243;"	d
PARS_LIKE_TOKEN_SUBSTR	pars/pars0grm.cc	/^     PARS_LIKE_TOKEN_SUBSTR = 354,$/;"	e	enum:yytokentype	file:
PARS_LIKE_TOKEN_SUBSTR	pars/pars0grm.cc	270;"	d	file:
PARS_LIKE_TOKEN_SUFFIX	include/pars0grm.h	/^     PARS_LIKE_TOKEN_SUFFIX = 353,$/;"	e	enum:yytokentype
PARS_LIKE_TOKEN_SUFFIX	include/pars0grm.h	242;"	d
PARS_LIKE_TOKEN_SUFFIX	pars/pars0grm.cc	/^     PARS_LIKE_TOKEN_SUFFIX = 353,$/;"	e	enum:yytokentype	file:
PARS_LIKE_TOKEN_SUFFIX	pars/pars0grm.cc	269;"	d	file:
PARS_LOCK_TOKEN	include/pars0grm.h	/^     PARS_LOCK_TOKEN = 347,$/;"	e	enum:yytokentype
PARS_LOCK_TOKEN	include/pars0grm.h	236;"	d
PARS_LOCK_TOKEN	pars/pars0grm.cc	/^     PARS_LOCK_TOKEN = 347,$/;"	e	enum:yytokentype	file:
PARS_LOCK_TOKEN	pars/pars0grm.cc	263;"	d	file:
PARS_LOOP_TOKEN	include/pars0grm.h	/^     PARS_LOOP_TOKEN = 287,$/;"	e	enum:yytokentype
PARS_LOOP_TOKEN	include/pars0grm.h	176;"	d
PARS_LOOP_TOKEN	pars/pars0grm.cc	/^     PARS_LOOP_TOKEN = 287,$/;"	e	enum:yytokentype	file:
PARS_LOOP_TOKEN	pars/pars0grm.cc	203;"	d	file:
PARS_MODE_TOKEN	include/pars0grm.h	/^     PARS_MODE_TOKEN = 349,$/;"	e	enum:yytokentype
PARS_MODE_TOKEN	include/pars0grm.h	238;"	d
PARS_MODE_TOKEN	pars/pars0grm.cc	/^     PARS_MODE_TOKEN = 349,$/;"	e	enum:yytokentype	file:
PARS_MODE_TOKEN	pars/pars0grm.cc	265;"	d	file:
PARS_NE_TOKEN	include/pars0grm.h	/^     PARS_NE_TOKEN = 270,$/;"	e	enum:yytokentype
PARS_NE_TOKEN	include/pars0grm.h	159;"	d
PARS_NE_TOKEN	pars/pars0grm.cc	/^     PARS_NE_TOKEN = 270,$/;"	e	enum:yytokentype	file:
PARS_NE_TOKEN	pars/pars0grm.cc	186;"	d	file:
PARS_NOTFOUND_TOKEN	include/pars0grm.h	/^     PARS_NOTFOUND_TOKEN = 325,$/;"	e	enum:yytokentype
PARS_NOTFOUND_TOKEN	include/pars0grm.h	214;"	d
PARS_NOTFOUND_TOKEN	pars/pars0grm.cc	/^     PARS_NOTFOUND_TOKEN = 325,$/;"	e	enum:yytokentype	file:
PARS_NOTFOUND_TOKEN	pars/pars0grm.cc	241;"	d	file:
PARS_NOT_PARAM	include/pars0pars.h	89;"	d
PARS_NOT_TOKEN	include/pars0grm.h	/^     PARS_NOT_TOKEN = 267,$/;"	e	enum:yytokentype
PARS_NOT_TOKEN	include/pars0grm.h	156;"	d
PARS_NOT_TOKEN	pars/pars0grm.cc	/^     PARS_NOT_TOKEN = 267,$/;"	e	enum:yytokentype	file:
PARS_NOT_TOKEN	pars/pars0grm.cc	183;"	d	file:
PARS_NULL_LIT	include/pars0grm.h	/^     PARS_NULL_LIT = 263,$/;"	e	enum:yytokentype
PARS_NULL_LIT	include/pars0grm.h	152;"	d
PARS_NULL_LIT	pars/pars0grm.cc	/^     PARS_NULL_LIT = 263,$/;"	e	enum:yytokentype	file:
PARS_NULL_LIT	pars/pars0grm.cc	179;"	d	file:
PARS_OF_TOKEN	include/pars0grm.h	/^     PARS_OF_TOKEN = 310,$/;"	e	enum:yytokentype
PARS_OF_TOKEN	include/pars0grm.h	199;"	d
PARS_OF_TOKEN	pars/pars0grm.cc	/^     PARS_OF_TOKEN = 310,$/;"	e	enum:yytokentype	file:
PARS_OF_TOKEN	pars/pars0grm.cc	226;"	d	file:
PARS_ON_TOKEN	include/pars0grm.h	/^     PARS_ON_TOKEN = 317,$/;"	e	enum:yytokentype
PARS_ON_TOKEN	include/pars0grm.h	206;"	d
PARS_ON_TOKEN	pars/pars0grm.cc	/^     PARS_ON_TOKEN = 317,$/;"	e	enum:yytokentype	file:
PARS_ON_TOKEN	pars/pars0grm.cc	233;"	d	file:
PARS_OPEN_TOKEN	include/pars0grm.h	/^     PARS_OPEN_TOKEN = 322,$/;"	e	enum:yytokentype
PARS_OPEN_TOKEN	include/pars0grm.h	211;"	d
PARS_OPEN_TOKEN	pars/pars0grm.cc	/^     PARS_OPEN_TOKEN = 322,$/;"	e	enum:yytokentype	file:
PARS_OPEN_TOKEN	pars/pars0grm.cc	238;"	d	file:
PARS_ORDER_TOKEN	include/pars0grm.h	/^     PARS_ORDER_TOKEN = 299,$/;"	e	enum:yytokentype
PARS_ORDER_TOKEN	include/pars0grm.h	188;"	d
PARS_ORDER_TOKEN	pars/pars0grm.cc	/^     PARS_ORDER_TOKEN = 299,$/;"	e	enum:yytokentype	file:
PARS_ORDER_TOKEN	pars/pars0grm.cc	215;"	d	file:
PARS_OR_TOKEN	include/pars0grm.h	/^     PARS_OR_TOKEN = 266,$/;"	e	enum:yytokentype
PARS_OR_TOKEN	include/pars0grm.h	155;"	d
PARS_OR_TOKEN	pars/pars0grm.cc	/^     PARS_OR_TOKEN = 266,$/;"	e	enum:yytokentype	file:
PARS_OR_TOKEN	pars/pars0grm.cc	182;"	d	file:
PARS_OUTPUT	include/pars0pars.h	88;"	d
PARS_OUT_TOKEN	include/pars0grm.h	/^     PARS_OUT_TOKEN = 273,$/;"	e	enum:yytokentype
PARS_OUT_TOKEN	include/pars0grm.h	162;"	d
PARS_OUT_TOKEN	pars/pars0grm.cc	/^     PARS_OUT_TOKEN = 273,$/;"	e	enum:yytokentype	file:
PARS_OUT_TOKEN	pars/pars0grm.cc	189;"	d	file:
PARS_PRINTF_TOKEN	include/pars0grm.h	/^     PARS_PRINTF_TOKEN = 336,$/;"	e	enum:yytokentype
PARS_PRINTF_TOKEN	include/pars0grm.h	225;"	d
PARS_PRINTF_TOKEN	pars/pars0grm.cc	/^     PARS_PRINTF_TOKEN = 336,$/;"	e	enum:yytokentype	file:
PARS_PRINTF_TOKEN	pars/pars0grm.cc	252;"	d	file:
PARS_PROCEDURE_TOKEN	include/pars0grm.h	/^     PARS_PROCEDURE_TOKEN = 271,$/;"	e	enum:yytokentype
PARS_PROCEDURE_TOKEN	include/pars0grm.h	160;"	d
PARS_PROCEDURE_TOKEN	pars/pars0grm.cc	/^     PARS_PROCEDURE_TOKEN = 271,$/;"	e	enum:yytokentype	file:
PARS_PROCEDURE_TOKEN	pars/pars0grm.cc	187;"	d	file:
PARS_READ_TOKEN	include/pars0grm.h	/^     PARS_READ_TOKEN = 298,$/;"	e	enum:yytokentype
PARS_READ_TOKEN	include/pars0grm.h	187;"	d
PARS_READ_TOKEN	pars/pars0grm.cc	/^     PARS_READ_TOKEN = 298,$/;"	e	enum:yytokentype	file:
PARS_READ_TOKEN	pars/pars0grm.cc	214;"	d	file:
PARS_REPLSTR_TOKEN	include/pars0grm.h	/^     PARS_REPLSTR_TOKEN = 331,$/;"	e	enum:yytokentype
PARS_REPLSTR_TOKEN	include/pars0grm.h	220;"	d
PARS_REPLSTR_TOKEN	pars/pars0grm.cc	/^     PARS_REPLSTR_TOKEN = 331,$/;"	e	enum:yytokentype	file:
PARS_REPLSTR_TOKEN	pars/pars0grm.cc	247;"	d	file:
PARS_RETURN_TOKEN	include/pars0grm.h	/^     PARS_RETURN_TOKEN = 289,$/;"	e	enum:yytokentype
PARS_RETURN_TOKEN	include/pars0grm.h	178;"	d
PARS_RETURN_TOKEN	pars/pars0grm.cc	/^     PARS_RETURN_TOKEN = 289,$/;"	e	enum:yytokentype	file:
PARS_RETURN_TOKEN	pars/pars0grm.cc	205;"	d	file:
PARS_RND_STR_TOKEN	include/pars0grm.h	/^     PARS_RND_STR_TOKEN = 339,$/;"	e	enum:yytokentype
PARS_RND_STR_TOKEN	include/pars0grm.h	228;"	d
PARS_RND_STR_TOKEN	pars/pars0grm.cc	/^     PARS_RND_STR_TOKEN = 339,$/;"	e	enum:yytokentype	file:
PARS_RND_STR_TOKEN	pars/pars0grm.cc	255;"	d	file:
PARS_RND_TOKEN	include/pars0grm.h	/^     PARS_RND_TOKEN = 338,$/;"	e	enum:yytokentype
PARS_RND_TOKEN	include/pars0grm.h	227;"	d
PARS_RND_TOKEN	pars/pars0grm.cc	/^     PARS_RND_TOKEN = 338,$/;"	e	enum:yytokentype	file:
PARS_RND_TOKEN	pars/pars0grm.cc	254;"	d	file:
PARS_ROLLBACK_TOKEN	include/pars0grm.h	/^     PARS_ROLLBACK_TOKEN = 342,$/;"	e	enum:yytokentype
PARS_ROLLBACK_TOKEN	include/pars0grm.h	231;"	d
PARS_ROLLBACK_TOKEN	pars/pars0grm.cc	/^     PARS_ROLLBACK_TOKEN = 342,$/;"	e	enum:yytokentype	file:
PARS_ROLLBACK_TOKEN	pars/pars0grm.cc	258;"	d	file:
PARS_ROW_PRINTF_TOKEN	include/pars0grm.h	/^     PARS_ROW_PRINTF_TOKEN = 340,$/;"	e	enum:yytokentype
PARS_ROW_PRINTF_TOKEN	include/pars0grm.h	229;"	d
PARS_ROW_PRINTF_TOKEN	pars/pars0grm.cc	/^     PARS_ROW_PRINTF_TOKEN = 340,$/;"	e	enum:yytokentype	file:
PARS_ROW_PRINTF_TOKEN	pars/pars0grm.cc	256;"	d	file:
PARS_SELECT_TOKEN	include/pars0grm.h	/^     PARS_SELECT_TOKEN = 290,$/;"	e	enum:yytokentype
PARS_SELECT_TOKEN	include/pars0grm.h	179;"	d
PARS_SELECT_TOKEN	pars/pars0grm.cc	/^     PARS_SELECT_TOKEN = 290,$/;"	e	enum:yytokentype	file:
PARS_SELECT_TOKEN	pars/pars0grm.cc	206;"	d	file:
PARS_SET_TOKEN	include/pars0grm.h	/^     PARS_SET_TOKEN = 307,$/;"	e	enum:yytokentype
PARS_SET_TOKEN	include/pars0grm.h	196;"	d
PARS_SET_TOKEN	pars/pars0grm.cc	/^     PARS_SET_TOKEN = 307,$/;"	e	enum:yytokentype	file:
PARS_SET_TOKEN	pars/pars0grm.cc	223;"	d	file:
PARS_SHARE_TOKEN	include/pars0grm.h	/^     PARS_SHARE_TOKEN = 348,$/;"	e	enum:yytokentype
PARS_SHARE_TOKEN	include/pars0grm.h	237;"	d
PARS_SHARE_TOKEN	pars/pars0grm.cc	/^     PARS_SHARE_TOKEN = 348,$/;"	e	enum:yytokentype	file:
PARS_SHARE_TOKEN	pars/pars0grm.cc	264;"	d	file:
PARS_SQL_TOKEN	include/pars0grm.h	/^     PARS_SQL_TOKEN = 321,$/;"	e	enum:yytokentype
PARS_SQL_TOKEN	include/pars0grm.h	210;"	d
PARS_SQL_TOKEN	pars/pars0grm.cc	/^     PARS_SQL_TOKEN = 321,$/;"	e	enum:yytokentype	file:
PARS_SQL_TOKEN	pars/pars0grm.cc	237;"	d	file:
PARS_STR_LIT	include/pars0grm.h	/^     PARS_STR_LIT = 260,$/;"	e	enum:yytokentype
PARS_STR_LIT	include/pars0grm.h	149;"	d
PARS_STR_LIT	pars/pars0grm.cc	/^     PARS_STR_LIT = 260,$/;"	e	enum:yytokentype	file:
PARS_STR_LIT	pars/pars0grm.cc	176;"	d	file:
PARS_SUBSTR_TOKEN	include/pars0grm.h	/^     PARS_SUBSTR_TOKEN = 330,$/;"	e	enum:yytokentype
PARS_SUBSTR_TOKEN	include/pars0grm.h	219;"	d
PARS_SUBSTR_TOKEN	pars/pars0grm.cc	/^     PARS_SUBSTR_TOKEN = 330,$/;"	e	enum:yytokentype	file:
PARS_SUBSTR_TOKEN	pars/pars0grm.cc	246;"	d	file:
PARS_SUM_TOKEN	include/pars0grm.h	/^     PARS_SUM_TOKEN = 291,$/;"	e	enum:yytokentype
PARS_SUM_TOKEN	include/pars0grm.h	180;"	d
PARS_SUM_TOKEN	pars/pars0grm.cc	/^     PARS_SUM_TOKEN = 291,$/;"	e	enum:yytokentype	file:
PARS_SUM_TOKEN	pars/pars0grm.cc	207;"	d	file:
PARS_SYSDATE_TOKEN	include/pars0grm.h	/^     PARS_SYSDATE_TOKEN = 335,$/;"	e	enum:yytokentype
PARS_SYSDATE_TOKEN	include/pars0grm.h	224;"	d
PARS_SYSDATE_TOKEN	pars/pars0grm.cc	/^     PARS_SYSDATE_TOKEN = 335,$/;"	e	enum:yytokentype	file:
PARS_SYSDATE_TOKEN	pars/pars0grm.cc	251;"	d	file:
PARS_TABLE_NAME_TOKEN	include/pars0grm.h	/^     PARS_TABLE_NAME_TOKEN = 355,$/;"	e	enum:yytokentype
PARS_TABLE_NAME_TOKEN	include/pars0grm.h	244;"	d
PARS_TABLE_NAME_TOKEN	pars/pars0grm.cc	/^     PARS_TABLE_NAME_TOKEN = 355,$/;"	e	enum:yytokentype	file:
PARS_TABLE_NAME_TOKEN	pars/pars0grm.cc	271;"	d	file:
PARS_TABLE_TOKEN	include/pars0grm.h	/^     PARS_TABLE_TOKEN = 312,$/;"	e	enum:yytokentype
PARS_TABLE_TOKEN	include/pars0grm.h	201;"	d
PARS_TABLE_TOKEN	pars/pars0grm.cc	/^     PARS_TABLE_TOKEN = 312,$/;"	e	enum:yytokentype	file:
PARS_TABLE_TOKEN	pars/pars0grm.cc	228;"	d	file:
PARS_THEN_TOKEN	include/pars0grm.h	/^     PARS_THEN_TOKEN = 284,$/;"	e	enum:yytokentype
PARS_THEN_TOKEN	include/pars0grm.h	173;"	d
PARS_THEN_TOKEN	pars/pars0grm.cc	/^     PARS_THEN_TOKEN = 284,$/;"	e	enum:yytokentype	file:
PARS_THEN_TOKEN	pars/pars0grm.cc	200;"	d	file:
PARS_TO_BINARY_TOKEN	include/pars0grm.h	/^     PARS_TO_BINARY_TOKEN = 328,$/;"	e	enum:yytokentype
PARS_TO_BINARY_TOKEN	include/pars0grm.h	217;"	d
PARS_TO_BINARY_TOKEN	pars/pars0grm.cc	/^     PARS_TO_BINARY_TOKEN = 328,$/;"	e	enum:yytokentype	file:
PARS_TO_BINARY_TOKEN	pars/pars0grm.cc	244;"	d	file:
PARS_TO_CHAR_TOKEN	include/pars0grm.h	/^     PARS_TO_CHAR_TOKEN = 326,$/;"	e	enum:yytokentype
PARS_TO_CHAR_TOKEN	include/pars0grm.h	215;"	d
PARS_TO_CHAR_TOKEN	pars/pars0grm.cc	/^     PARS_TO_CHAR_TOKEN = 326,$/;"	e	enum:yytokentype	file:
PARS_TO_CHAR_TOKEN	pars/pars0grm.cc	242;"	d	file:
PARS_TO_NUMBER_TOKEN	include/pars0grm.h	/^     PARS_TO_NUMBER_TOKEN = 327,$/;"	e	enum:yytokentype
PARS_TO_NUMBER_TOKEN	include/pars0grm.h	216;"	d
PARS_TO_NUMBER_TOKEN	pars/pars0grm.cc	/^     PARS_TO_NUMBER_TOKEN = 327,$/;"	e	enum:yytokentype	file:
PARS_TO_NUMBER_TOKEN	pars/pars0grm.cc	243;"	d	file:
PARS_UNIQUE_TOKEN	include/pars0grm.h	/^     PARS_UNIQUE_TOKEN = 314,$/;"	e	enum:yytokentype
PARS_UNIQUE_TOKEN	include/pars0grm.h	203;"	d
PARS_UNIQUE_TOKEN	pars/pars0grm.cc	/^     PARS_UNIQUE_TOKEN = 314,$/;"	e	enum:yytokentype	file:
PARS_UNIQUE_TOKEN	pars/pars0grm.cc	230;"	d	file:
PARS_UNSIGNED_TOKEN	include/pars0grm.h	/^     PARS_UNSIGNED_TOKEN = 344,$/;"	e	enum:yytokentype
PARS_UNSIGNED_TOKEN	include/pars0grm.h	233;"	d
PARS_UNSIGNED_TOKEN	pars/pars0grm.cc	/^     PARS_UNSIGNED_TOKEN = 344,$/;"	e	enum:yytokentype	file:
PARS_UNSIGNED_TOKEN	pars/pars0grm.cc	260;"	d	file:
PARS_UPDATE_TOKEN	include/pars0grm.h	/^     PARS_UPDATE_TOKEN = 306,$/;"	e	enum:yytokentype
PARS_UPDATE_TOKEN	include/pars0grm.h	195;"	d
PARS_UPDATE_TOKEN	pars/pars0grm.cc	/^     PARS_UPDATE_TOKEN = 306,$/;"	e	enum:yytokentype	file:
PARS_UPDATE_TOKEN	pars/pars0grm.cc	222;"	d	file:
PARS_VALUES_TOKEN	include/pars0grm.h	/^     PARS_VALUES_TOKEN = 305,$/;"	e	enum:yytokentype
PARS_VALUES_TOKEN	include/pars0grm.h	194;"	d
PARS_VALUES_TOKEN	pars/pars0grm.cc	/^     PARS_VALUES_TOKEN = 305,$/;"	e	enum:yytokentype	file:
PARS_VALUES_TOKEN	pars/pars0grm.cc	221;"	d	file:
PARS_WHERE_TOKEN	include/pars0grm.h	/^     PARS_WHERE_TOKEN = 295,$/;"	e	enum:yytokentype
PARS_WHERE_TOKEN	include/pars0grm.h	184;"	d
PARS_WHERE_TOKEN	pars/pars0grm.cc	/^     PARS_WHERE_TOKEN = 295,$/;"	e	enum:yytokentype	file:
PARS_WHERE_TOKEN	pars/pars0grm.cc	211;"	d	file:
PARS_WHILE_TOKEN	include/pars0grm.h	/^     PARS_WHILE_TOKEN = 288,$/;"	e	enum:yytokentype
PARS_WHILE_TOKEN	include/pars0grm.h	177;"	d
PARS_WHILE_TOKEN	pars/pars0grm.cc	/^     PARS_WHILE_TOKEN = 288,$/;"	e	enum:yytokentype	file:
PARS_WHILE_TOKEN	pars/pars0grm.cc	204;"	d	file:
PARS_WORK_TOKEN	include/pars0grm.h	/^     PARS_WORK_TOKEN = 343,$/;"	e	enum:yytokentype
PARS_WORK_TOKEN	include/pars0grm.h	232;"	d
PARS_WORK_TOKEN	pars/pars0grm.cc	/^     PARS_WORK_TOKEN = 343,$/;"	e	enum:yytokentype	file:
PARS_WORK_TOKEN	pars/pars0grm.cc	259;"	d	file:
PARTITION_IN_SHARED_TABLESPACE_WARNING	handler/ha_innodb.cc	/^const char PARTITION_IN_SHARED_TABLESPACE_WARNING[] =$/;"	v
PCT_IO	include/srv0srv.h	349;"	d
PFS_GROUP_BUFFER_SYNC	buf/buf0buf.cc	369;"	d	file:
PFS_MAX_BUFFER_MUTEX_LOCK_REGISTER	buf/buf0buf.cc	375;"	d	file:
PFS_SKIP_BUFFER_MUTEX_RWLOCK	include/sync0sync.h	44;"	d
PFS_SKIP_EVENT_MUTEX	include/sync0sync.h	47;"	d
PFX	dict/dict0stats.cc	2782;"	d	file:
PFX_LEN	dict/dict0stats.cc	2783;"	d	file:
PQMutex	include/trx0types.h	/^typedef ib_mutex_t PQMutex;$/;"	t
PRDT_HEAPNO	include/lock0priv.h	582;"	d
PREBUILT_HEAP_INITIAL_SIZE	row/row0mysql.cc	871;"	d	file:
PRINT_NUM_OF_LOCK_STRUCTS	lock/lock0lock.cc	4905;"	d	file:
PRINT_USED_CELLS	ha/ha0ha.cc	505;"	d	file:
PSI_KEY	handler/ha_innodb.cc	354;"	d	file:
PSI_RWLOCK_KEY	handler/ha_innodb.cc	356;"	d	file:
PUNCH_HOLE	include/os0file.h	/^		PUNCH_HOLE = 256,$/;"	e	enum:IORequest::__anon12
PURGE_STATE_DISABLED	include/trx0purge.h	/^	PURGE_STATE_DISABLED		\/*!< Purge was never started *\/$/;"	e	enum:purge_state_t
PURGE_STATE_EXIT	include/trx0purge.h	/^	PURGE_STATE_EXIT,		\/*!< Purge has been shutdown *\/$/;"	e	enum:purge_state_t
PURGE_STATE_INIT	include/trx0purge.h	/^	PURGE_STATE_INIT,		\/*!< Purge instance created *\/$/;"	e	enum:purge_state_t
PURGE_STATE_RUN	include/trx0purge.h	/^	PURGE_STATE_RUN,		\/*!< Purge should be running *\/$/;"	e	enum:purge_state_t
PURGE_STATE_STOP	include/trx0purge.h	/^	PURGE_STATE_STOP,		\/*!< Purge should be stopped *\/$/;"	e	enum:purge_state_t
PageBulk	include/btr0bulk.h	/^	PageBulk($/;"	f	class:PageBulk
PageBulk	include/btr0bulk.h	/^class PageBulk$/;"	c
PageCallback	include/fil0fil.h	/^struct PageCallback {$/;"	s
PageConverter	row/row0import.cc	/^class PageConverter : public AbstractCallback {$/;"	c	file:
Pool	include/ut0pool.h	/^	Pool(size_t size)$/;"	f	struct:Pool
Pool	include/ut0pool.h	/^struct Pool {$/;"	s
PoolManager	include/ut0pool.h	/^	PoolManager(size_t size)$/;"	f	struct:PoolManager
PoolManager	include/ut0pool.h	/^struct PoolManager {$/;"	s
PoolType	include/ut0pool.h	/^	typedef Pool PoolType;$/;"	t	struct:PoolManager
Pools	include/ut0pool.h	/^	typedef std::vector<PoolType*, ut_allocator<PoolType*> >	Pools;$/;"	t	struct:PoolManager
PrintNotStarted	lock/lock0lock.cc	/^	PrintNotStarted(FILE* file) : m_file(file) { }$/;"	f	struct:PrintNotStarted
PrintNotStarted	lock/lock0lock.cc	/^struct	PrintNotStarted {$/;"	s	file:
QRY_INS	api/api0api.cc	/^	QRY_INS,			\/*!< Insert operation *\/$/;"	e	enum:ib_qry_type_t	file:
QRY_NON	api/api0api.cc	/^	QRY_NON,			\/*!< None\/Sentinel *\/$/;"	e	enum:ib_qry_type_t	file:
QRY_SEL	api/api0api.cc	/^	QRY_SEL				\/*!< Select operation *\/$/;"	e	enum:ib_qry_type_t	file:
QRY_UPD	api/api0api.cc	/^	QRY_UPD,			\/*!< Update operation *\/$/;"	e	enum:ib_qry_type_t	file:
QUE_CUR_END	include/que0que.h	/^	QUE_CUR_END$/;"	e	enum:que_cur_t
QUE_CUR_NOT_DEFINED	include/que0que.h	/^	QUE_CUR_NOT_DEFINED,$/;"	e	enum:que_cur_t
QUE_CUR_START	include/que0que.h	/^	QUE_CUR_START,$/;"	e	enum:que_cur_t
QUE_FORK_ACTIVE	include/que0que.h	472;"	d
QUE_FORK_BEING_FREED	include/que0que.h	475;"	d
QUE_FORK_COMMAND_WAIT	include/que0que.h	473;"	d
QUE_FORK_EXECUTE	include/que0que.h	465;"	d
QUE_FORK_INSERT	include/que0que.h	459;"	d
QUE_FORK_INVALID	include/que0que.h	474;"	d
QUE_FORK_MYSQL_INTERFACE	include/que0que.h	468;"	d
QUE_FORK_PROCEDURE	include/que0que.h	466;"	d
QUE_FORK_PROCEDURE_CALL	include/que0que.h	467;"	d
QUE_FORK_PURGE	include/que0que.h	464;"	d
QUE_FORK_RECOVERY	include/que0que.h	469;"	d
QUE_FORK_ROLLBACK	include/que0que.h	461;"	d
QUE_FORK_SELECT_NON_SCROLL	include/que0que.h	457;"	d
QUE_FORK_SELECT_SCROLL	include/que0que.h	458;"	d
QUE_FORK_UPDATE	include/que0que.h	460;"	d
QUE_MAX_LOOPS_WITHOUT_CHECK	que/que0que.cc	49;"	d	file:
QUE_NODE_AGGREGATE	include/que0que.h	486;"	d
QUE_NODE_ASSIGNMENT	include/que0que.h	502;"	d
QUE_NODE_CALL	include/que0que.h	510;"	d
QUE_NODE_COL_ASSIGNMENT	include/que0que.h	505;"	d
QUE_NODE_COMMIT	include/que0que.h	490;"	d
QUE_NODE_CONTROL_STAT	include/que0que.h	478;"	d
QUE_NODE_CREATE_INDEX	include/que0que.h	494;"	d
QUE_NODE_CREATE_TABLE	include/que0que.h	493;"	d
QUE_NODE_CURSOR	include/que0que.h	484;"	d
QUE_NODE_ELSIF	include/que0que.h	509;"	d
QUE_NODE_EXIT	include/que0que.h	511;"	d
QUE_NODE_FETCH	include/que0que.h	503;"	d
QUE_NODE_FOR	include/que0que.h	506;"	d
QUE_NODE_FORK	include/que0que.h	487;"	d
QUE_NODE_FUNC	include/que0que.h	497;"	d
QUE_NODE_IF	include/que0que.h	500;"	d
QUE_NODE_INSERT	include/que0que.h	482;"	d
QUE_NODE_LOCK	include/que0que.h	481;"	d
QUE_NODE_OPEN	include/que0que.h	504;"	d
QUE_NODE_ORDER	include/que0que.h	498;"	d
QUE_NODE_PROC	include/que0que.h	499;"	d
QUE_NODE_PURGE	include/que0que.h	492;"	d
QUE_NODE_RES_WORD	include/que0que.h	496;"	d
QUE_NODE_RETURN	include/que0que.h	507;"	d
QUE_NODE_ROLLBACK	include/que0que.h	491;"	d
QUE_NODE_ROW_PRINTF	include/que0que.h	508;"	d
QUE_NODE_SELECT	include/que0que.h	485;"	d
QUE_NODE_SYMBOL	include/que0que.h	495;"	d
QUE_NODE_THR	include/que0que.h	488;"	d
QUE_NODE_UNDO	include/que0que.h	489;"	d
QUE_NODE_UPDATE	include/que0que.h	483;"	d
QUE_NODE_WHILE	include/que0que.h	501;"	d
QUE_THR_COMMAND_WAIT	include/que0que.h	/^	QUE_THR_COMMAND_WAIT,$/;"	e	enum:que_thr_state_t
QUE_THR_COMPLETED	include/que0que.h	/^	QUE_THR_COMPLETED,$/;"	e	enum:que_thr_state_t
QUE_THR_LOCK_NOLOCK	include/que0que.h	/^	QUE_THR_LOCK_NOLOCK,$/;"	e	enum:que_thr_lock_t
QUE_THR_LOCK_ROW	include/que0que.h	/^	QUE_THR_LOCK_ROW,$/;"	e	enum:que_thr_lock_t
QUE_THR_LOCK_TABLE	include/que0que.h	/^	QUE_THR_LOCK_TABLE$/;"	e	enum:que_thr_lock_t
QUE_THR_LOCK_WAIT	include/que0que.h	/^	QUE_THR_LOCK_WAIT,$/;"	e	enum:que_thr_state_t
QUE_THR_MAGIC_FREED	include/que0que.h	408;"	d
QUE_THR_MAGIC_N	include/que0que.h	407;"	d
QUE_THR_PROCEDURE_WAIT	include/que0que.h	/^	QUE_THR_PROCEDURE_WAIT,$/;"	e	enum:que_thr_state_t
QUE_THR_RUNNING	include/que0que.h	/^	QUE_THR_RUNNING,$/;"	e	enum:que_thr_state_t
QUE_THR_SUSPENDED	include/que0que.h	/^	QUE_THR_SUSPENDED$/;"	e	enum:que_thr_state_t
QUIESCE_COMPLETE	include/dict0types.h	/^	QUIESCE_COMPLETE		\/*!< All done *\/$/;"	e	enum:ib_quiesce_t
QUIESCE_NONE	include/dict0types.h	/^	QUIESCE_NONE,$/;"	e	enum:ib_quiesce_t
QUIESCE_START	include/dict0types.h	/^	QUIESCE_START,			\/*!< Initialise, prepare to start *\/$/;"	e	enum:ib_quiesce_t
QUIT_ON_FIRST_NON_BORING	dict/dict0stats.cc	/^	QUIT_ON_FIRST_NON_BORING,\/* quit when the first record that differs$/;"	e	enum:page_scan_method_t	file:
RANKING_WORDS_INIT_LEN	fts/fts0que.cc	61;"	d	file:
RANK_DOWNGRADE	fts/fts0que.cc	50;"	d	file:
RANK_UPGRADE	fts/fts0que.cc	51;"	d	file:
READ	include/os0file.h	/^		READ = 1,$/;"	e	enum:IORequest::__anon12
READ_PK	include/ut0stage.h	/^		READ_PK = 1,$/;"	e	enum:ut_stage_alter_t::__anon11
RECALC_POOL_INITIAL_SLOTS	dict/dict0stats_bg.cc	/^static const ulint		RECALC_POOL_INITIAL_SLOTS = 128;$/;"	v	file:
RECOVERY_CRASH	include/srv0start.h	37;"	d
RECOVERY_CRASH	include/srv0start.h	39;"	d
RECV_BEING_PROCESSED	include/log0recv.h	/^	RECV_BEING_PROCESSED,$/;"	e	enum:recv_addr_state
RECV_BEING_READ	include/log0recv.h	/^	RECV_BEING_READ,$/;"	e	enum:recv_addr_state
RECV_DATA_BLOCK_SIZE	log/log0recv.cc	73;"	d	file:
RECV_DISCARDED	include/log0recv.h	/^	RECV_DISCARDED$/;"	e	enum:recv_addr_state
RECV_NOT_PROCESSED	include/log0recv.h	/^	RECV_NOT_PROCESSED,$/;"	e	enum:recv_addr_state
RECV_PARSING_BUF_SIZE	include/log0recv.h	404;"	d
RECV_PROCESSED	include/log0recv.h	/^	RECV_PROCESSED,$/;"	e	enum:recv_addr_state
RECV_READ_AHEAD_AREA	log/log0recv.cc	76;"	d	file:
RECV_SCAN_SIZE	include/log0recv.h	408;"	d
REC_1BYTE_OFFS_LIMIT	include/rem0rec.h	1087;"	d
REC_1BYTE_SQL_NULL_MASK	include/rem0rec.h	73;"	d
REC_2BYTE_EXTERN_MASK	include/rem0rec.h	79;"	d
REC_2BYTE_OFFS_LIMIT	include/rem0rec.h	1088;"	d
REC_2BYTE_SQL_NULL_MASK	include/rem0rec.h	75;"	d
REC_ANTELOPE_MAX_INDEX_COL_LEN	include/rem0types.h	55;"	d
REC_FORMAT_COMPACT	include/rem0types.h	/^	REC_FORMAT_COMPACT	= 1,	\/*!< COMPACT row format *\/$/;"	e	enum:rec_format_enum
REC_FORMAT_COMPRESSED	include/rem0types.h	/^	REC_FORMAT_COMPRESSED	= 2,	\/*!< COMPRESSED row format *\/$/;"	e	enum:rec_format_enum
REC_FORMAT_DYNAMIC	include/rem0types.h	/^	REC_FORMAT_DYNAMIC	= 3	\/*!< DYNAMIC row format *\/$/;"	e	enum:rec_format_enum
REC_FORMAT_REDUNDANT	include/rem0types.h	/^	REC_FORMAT_REDUNDANT	= 0,	\/*!< REDUNDANT row format *\/$/;"	e	enum:rec_format_enum
REC_HEAP_NO_MASK	include/rem0rec.ic	106;"	d	file:
REC_HEAP_NO_SHIFT	include/rem0rec.h	67;"	d
REC_INFO_BITS_MASK	include/rem0rec.ic	119;"	d	file:
REC_INFO_BITS_SHIFT	include/rem0rec.ic	120;"	d	file:
REC_INFO_DELETED_FLAG	include/rem0rec.h	44;"	d
REC_INFO_MIN_REC_FLAG	include/rem0rec.h	42;"	d
REC_LOCK_CACHE	lock/lock0lock.cc	/^static const ulint	REC_LOCK_CACHE = 8;$/;"	v	file:
REC_LOCK_SIZE	lock/lock0lock.cc	/^static const ulint	REC_LOCK_SIZE = sizeof(ib_lock_t) + 256;$/;"	v	file:
REC_MAX_DATA_SIZE	include/rem0rec.h	1092;"	d
REC_MAX_HEAP_NO	include/rem0types.h	34;"	d
REC_MAX_N_FIELDS	include/rem0types.h	33;"	d
REC_MAX_N_OWNED	include/rem0types.h	35;"	d
REC_MAX_N_USER_FIELDS	include/rem0types.h	44;"	d
REC_NEW_HEAP_NO	include/rem0rec.h	64;"	d
REC_NEW_INFO_BITS	include/rem0rec.ic	118;"	d	file:
REC_NEW_N_OWNED	include/rem0rec.ic	113;"	d	file:
REC_NEW_STATUS	include/rem0rec.ic	101;"	d	file:
REC_NEW_STATUS_MASK	include/rem0rec.ic	102;"	d	file:
REC_NEW_STATUS_SHIFT	include/rem0rec.ic	103;"	d	file:
REC_NEXT	include/rem0rec.ic	89;"	d	file:
REC_NEXT_MASK	include/rem0rec.ic	90;"	d	file:
REC_NEXT_SHIFT	include/rem0rec.ic	91;"	d	file:
REC_NODE_PTR_SIZE	include/rem0rec.h	70;"	d
REC_N_NEW_EXTRA_BYTES	include/rem0rec.h	52;"	d
REC_N_OLD_EXTRA_BYTES	include/rem0rec.h	49;"	d
REC_N_OWNED_MASK	include/rem0rec.ic	114;"	d	file:
REC_N_OWNED_SHIFT	include/rem0rec.ic	115;"	d	file:
REC_OFFS_COMPACT	include/rem0rec.ic	33;"	d	file:
REC_OFFS_EXTERNAL	include/rem0rec.ic	37;"	d	file:
REC_OFFS_HEADER_SIZE	include/rem0rec.h	83;"	d
REC_OFFS_HEADER_SIZE	include/rem0rec.h	86;"	d
REC_OFFS_MASK	include/rem0rec.ic	39;"	d	file:
REC_OFFS_NORMAL_SIZE	include/rem0rec.h	91;"	d
REC_OFFS_SMALL_SIZE	include/rem0rec.h	92;"	d
REC_OFFS_SQL_NULL	include/rem0rec.ic	35;"	d	file:
REC_OLD_HEAP_NO	include/rem0rec.ic	105;"	d	file:
REC_OLD_INFO_BITS	include/rem0rec.ic	117;"	d	file:
REC_OLD_N_FIELDS	include/rem0rec.ic	97;"	d	file:
REC_OLD_N_FIELDS_MASK	include/rem0rec.ic	98;"	d	file:
REC_OLD_N_FIELDS_SHIFT	include/rem0rec.ic	99;"	d	file:
REC_OLD_N_OWNED	include/rem0rec.ic	112;"	d	file:
REC_OLD_SHORT	include/rem0rec.ic	93;"	d	file:
REC_OLD_SHORT_MASK	include/rem0rec.ic	94;"	d	file:
REC_OLD_SHORT_SHIFT	include/rem0rec.ic	95;"	d	file:
REC_STATUS_INFIMUM	include/rem0rec.h	57;"	d
REC_STATUS_NODE_PTR	include/rem0rec.h	56;"	d
REC_STATUS_ORDINARY	include/rem0rec.h	55;"	d
REC_STATUS_SUPREMUM	include/rem0rec.h	58;"	d
REC_VERSION_56_MAX_INDEX_COL_LEN	include/rem0types.h	61;"	d
REFMAN	include/univ.i	63;"	d	file:
REJECT	fts/fts0blex.cc	447;"	d	file:
REJECT	fts/fts0tlex.cc	443;"	d	file:
REJECT	pars/lexyy.cc	911;"	d	file:
RETURN_IF_INNODB_NOT_STARTED	handler/i_s.cc	151;"	d	file:
ROLL_NODE_NONE	include/trx0roll.h	/^	ROLL_NODE_NONE = 0,		\/*!< Unknown state *\/$/;"	e	enum:roll_node_state
ROLL_NODE_SEND	include/trx0roll.h	/^	ROLL_NODE_SEND,			\/*!< about to send a rollback signal to$/;"	e	enum:roll_node_state
ROLL_NODE_WAIT	include/trx0roll.h	/^	ROLL_NODE_WAIT			\/*!< rollback signal sent to the$/;"	e	enum:roll_node_state
ROOT	ut/ut0rbt.cc	54;"	d	file:
ROW_BUFFERED	include/row0row.h	/^	ROW_BUFFERED,		\/*!< one of BTR_INSERT, BTR_DELETE, or$/;"	e	enum:row_search_result
ROW_BUILD_FOR_INSERT	include/row0row.h	77;"	d
ROW_BUILD_FOR_PURGE	include/row0row.h	75;"	d
ROW_BUILD_FOR_UNDO	include/row0row.h	76;"	d
ROW_BUILD_NORMAL	include/row0row.h	74;"	d
ROW_COPY_DATA	include/row0row.h	345;"	d
ROW_COPY_POINTERS	include/row0row.h	346;"	d
ROW_FOUND	include/row0row.h	/^	ROW_FOUND = 0,		\/*!< the record was found *\/$/;"	e	enum:row_search_result
ROW_LOG_HEADER_SIZE	row/row0log.cc	68;"	d	file:
ROW_MERGE_READ_GET_NEXT	row/row0ftsort.cc	40;"	d	file:
ROW_MERGE_WRITE_GET_NEXT	row/row0merge.cc	2680;"	d	file:
ROW_MERGE_WRITE_GET_NEXT	row/row0merge.cc	2688;"	d	file:
ROW_MERGE_WRITE_GET_NEXT_LOW	row/row0merge.cc	2658;"	d	file:
ROW_MYSQL_DUMMY_TEMPLATE	include/row0mysql.h	992;"	d
ROW_MYSQL_NO_TEMPLATE	include/row0mysql.h	991;"	d
ROW_MYSQL_REC_FIELDS	include/row0mysql.h	990;"	d
ROW_MYSQL_WHOLE_ROW	include/row0mysql.h	989;"	d
ROW_NOT_DELETED_REF	include/row0row.h	/^	ROW_NOT_DELETED_REF	\/*!< BTR_DELETE was specified, and$/;"	e	enum:row_search_result
ROW_NOT_FOUND	include/row0row.h	/^	ROW_NOT_FOUND,		\/*!< record not found *\/$/;"	e	enum:row_search_result
ROW_OP_DELETE	row/row0log.cc	/^	ROW_OP_DELETE$/;"	e	enum:row_op	file:
ROW_OP_INSERT	row/row0log.cc	/^	ROW_OP_INSERT = 0x61,$/;"	e	enum:row_op	file:
ROW_PREBUILT_ALLOCATED	include/row0mysql.h	666;"	d
ROW_PREBUILT_FETCH_MAGIC_N	include/row0mysql.h	987;"	d
ROW_PREBUILT_FREED	include/row0mysql.h	667;"	d
ROW_READ_DID_SEMI_CONSISTENT	include/row0mysql.h	1002;"	d
ROW_READ_TRY_SEMI_CONSISTENT	include/row0mysql.h	1001;"	d
ROW_READ_WITH_LOCKS	include/row0mysql.h	1000;"	d
ROW_RETRIEVE_ALL_COLS	include/row0mysql.h	997;"	d
ROW_RETRIEVE_PRIMARY_KEY	include/row0mysql.h	996;"	d
ROW_SEL_CLOSE_CURSOR	include/row0sel.h	/^	ROW_SEL_CLOSE_CURSOR	\/*!< close cursor *\/$/;"	e	enum:open_node_op
ROW_SEL_EXACT	include/row0sel.h	/^	ROW_SEL_EXACT = 1,	\/*!< search using a complete key value *\/$/;"	e	enum:row_sel_match_mode
ROW_SEL_EXACT_PREFIX	include/row0sel.h	/^	ROW_SEL_EXACT_PREFIX	\/*!< search using a key prefix which$/;"	e	enum:row_sel_match_mode
ROW_SEL_NEXT	include/row0sel.h	/^	ROW_SEL_NEXT = 1,	\/*!< ascending direction *\/$/;"	e	enum:row_sel_direction
ROW_SEL_OPEN_CURSOR	include/row0sel.h	/^	ROW_SEL_OPEN_CURSOR,	\/*!< open cursor *\/$/;"	e	enum:open_node_op
ROW_SEL_PREV	include/row0sel.h	/^	ROW_SEL_PREV = 2	\/*!< descending direction *\/$/;"	e	enum:row_sel_direction
ROW_T_DELETE	row/row0log.cc	/^	ROW_T_DELETE$/;"	e	enum:row_tab_op	file:
ROW_T_INSERT	row/row0log.cc	/^	ROW_T_INSERT = 0x41,$/;"	e	enum:row_tab_op	file:
ROW_T_UPDATE	row/row0log.cc	/^	ROW_T_UPDATE,$/;"	e	enum:row_tab_op	file:
RTREE_SEARCH_MODE	include/gis0rtree.h	72;"	d
RTR_LEAF_LATCH_NUM	include/gis0type.h	106;"	d
RTR_MAX_LEVELS	include/gis0type.h	101;"	d
RW_LOCK_FLAG_S	include/sync0types.h	/^	RW_LOCK_FLAG_S  = 1 << 0,$/;"	e	enum:rw_lock_flag_t
RW_LOCK_FLAG_SX	include/sync0types.h	/^	RW_LOCK_FLAG_SX = 1 << 2$/;"	e	enum:rw_lock_flag_t
RW_LOCK_FLAG_X	include/sync0types.h	/^	RW_LOCK_FLAG_X  = 1 << 1,$/;"	e	enum:rw_lock_flag_t
RW_LOCK_MAGIC_N	include/sync0rw.h	684;"	d
RW_LOCK_NOT_LOCKED	include/sync0types.h	/^	RW_LOCK_NOT_LOCKED,$/;"	e	enum:latch_level_t
RW_LOCK_S	include/sync0types.h	/^	RW_LOCK_S,$/;"	e	enum:latch_level_t
RW_LOCK_SX	include/sync0types.h	/^	RW_LOCK_SX,$/;"	e	enum:latch_level_t
RW_LOCK_X	include/sync0types.h	/^	RW_LOCK_X,$/;"	e	enum:latch_level_t
RW_LOCK_X_WAIT	include/sync0types.h	/^	RW_LOCK_X_WAIT,$/;"	e	enum:latch_level_t
RW_NO_LATCH	include/sync0rw.h	/^	RW_NO_LATCH = 8$/;"	e	enum:rw_lock_type_t
RW_SX_LATCH	include/sync0rw.h	/^	RW_SX_LATCH = 4,$/;"	e	enum:rw_lock_type_t
RW_S_LATCH	include/sync0rw.h	/^	RW_S_LATCH = 1,$/;"	e	enum:rw_lock_type_t
RW_X_LATCH	include/sync0rw.h	/^	RW_X_LATCH = 2,$/;"	e	enum:rw_lock_type_t
ReadView	include/read0types.h	/^class ReadView {$/;"	c
ReadView	read/read0read.cc	/^ReadView::ReadView()$/;"	f	class:ReadView
RecID	include/lock0priv.h	/^	RecID(const buf_block_t* block, ulint heap_no)$/;"	f	struct:RecID
RecID	include/lock0priv.h	/^	RecID(ulint space_id, ulint page_no, ulint heap_no)$/;"	f	struct:RecID
RecID	include/lock0priv.h	/^struct RecID {$/;"	s
RecIterator	row/row0import.cc	/^class RecIterator {$/;"	c	file:
RecLock	include/lock0priv.h	/^	RecLock(dict_index_t*	index,$/;"	f	class:RecLock
RecLock	include/lock0priv.h	/^	RecLock(que_thr_t*	thr,$/;"	f	class:RecLock
RecLock	include/lock0priv.h	/^class RecLock {$/;"	c
ReleaseAll	mtr/mtr0mtr.cc	/^struct ReleaseAll {$/;"	s	file:
ReleaseBlocks	mtr/mtr0mtr.cc	/^	ReleaseBlocks(lsn_t start_lsn, lsn_t end_lsn, FlushObserver* observer)$/;"	f	struct:ReleaseBlocks
ReleaseBlocks	mtr/mtr0mtr.cc	/^struct ReleaseBlocks {$/;"	s	file:
ReleaseLatches	mtr/mtr0mtr.cc	/^struct ReleaseLatches {$/;"	s	file:
RemoteDatafile	include/fsp0file.h	/^	RemoteDatafile()$/;"	f	class:RemoteDatafile
RemoteDatafile	include/fsp0file.h	/^	RemoteDatafile(const char* name, ulint size, ulint order)$/;"	f	class:RemoteDatafile
RemoteDatafile	include/fsp0file.h	/^class RemoteDatafile : public Datafile$/;"	c
RsegMutex	include/trx0types.h	/^typedef ib_mutex_t RsegMutex;$/;"	t
SEL_COST_LIMIT	row/row0sel.cc	76;"	d	file:
SEL_EXHAUSTED	row/row0sel.cc	80;"	d	file:
SEL_FOUND	row/row0sel.cc	79;"	d	file:
SEL_MAX_N_PREFETCH	row/row0sel.cc	67;"	d	file:
SEL_NODE_CLOSED	include/row0sel.h	/^	SEL_NODE_CLOSED,	\/*!< it is a declared cursor which is not$/;"	e	enum:sel_node_state
SEL_NODE_FETCH	include/row0sel.h	/^	SEL_NODE_FETCH,		\/*!< intention locks have been set *\/$/;"	e	enum:sel_node_state
SEL_NODE_NO_MORE_ROWS	include/row0sel.h	/^	SEL_NODE_NO_MORE_ROWS	\/*!< cursor has reached the result set end *\/$/;"	e	enum:sel_node_state
SEL_NODE_OPEN	include/row0sel.h	/^	SEL_NODE_OPEN,		\/*!< intention locks not yet set on tables *\/$/;"	e	enum:sel_node_state
SEL_PREFETCH_LIMIT	row/row0sel.cc	71;"	d	file:
SEL_RETRY	row/row0sel.cc	81;"	d	file:
SESS_ACTIVE	include/usr0sess.h	64;"	d
SESS_ERROR	include/usr0sess.h	65;"	d
SET_TRANSACTION_MSG	handler/ha_innodb.cc	/^const char*	SET_TRANSACTION_MSG =$/;"	v
SHOULD_QUIT	buf/buf0dump.cc	266;"	d	file:
SHUTTING_DOWN	buf/buf0dump.cc	53;"	d	file:
SHUTTING_DOWN	dict/dict0stats_bg.cc	43;"	d	file:
SIZEOF_NODE	ut/ut0rbt.cc	55;"	d	file:
SIZEOF_RBT_CREATE	fts/fts0que.cc	57;"	d	file:
SIZEOF_RBT_NODE_ADD	fts/fts0que.cc	58;"	d	file:
SIZE_OF_MLOG_CHECKPOINT	include/mtr0types.h	251;"	d
SORT	include/ut0stage.h	/^		SORT = 2,$/;"	e	enum:ut_stage_alter_t::__anon11
SPATIAL_MIXED	include/dict0types.h	/^	SPATIAL_MIXED	= 2,$/;"	e	enum:spatial_status_t
SPATIAL_NONE	include/dict0types.h	/^	SPATIAL_NONE	= 1,$/;"	e	enum:spatial_status_t
SPATIAL_ONLY	include/dict0types.h	/^	SPATIAL_ONLY	= 3$/;"	e	enum:spatial_status_t
SPATIAL_STATUS_MASK	include/dict0types.h	103;"	d
SPATIAL_STATUS_SHIFT	include/dict0types.h	100;"	d
SPATIAL_UNKNOWN	include/dict0types.h	/^	SPATIAL_UNKNOWN = 0,$/;"	e	enum:spatial_status_t
SPDIMS	include/univ.i	653;"	d	file:
SPLEN	include/gis0geo.h	30;"	d
SPTYPE	include/gis0geo.h	29;"	d
SRV_AUTO_EXTEND_INCREMENT	include/srv0srv.h	171;"	d
SRV_BUF_DUMP_FILENAME_DEFAULT	include/srv0srv.h	158;"	d
SRV_CHECKSUM_ALGORITHM_CRC32	include/buf0types.h	/^	SRV_CHECKSUM_ALGORITHM_CRC32,		\/*!< Write crc32, allow crc32,$/;"	e	enum:srv_checksum_algorithm_t
SRV_CHECKSUM_ALGORITHM_INNODB	include/buf0types.h	/^	SRV_CHECKSUM_ALGORITHM_INNODB,		\/*!< Write innodb, allow crc32,$/;"	e	enum:srv_checksum_algorithm_t
SRV_CHECKSUM_ALGORITHM_NONE	include/buf0types.h	/^	SRV_CHECKSUM_ALGORITHM_NONE,		\/*!< Write none, allow crc32,$/;"	e	enum:srv_checksum_algorithm_t
SRV_CHECKSUM_ALGORITHM_STRICT_CRC32	include/buf0types.h	/^	SRV_CHECKSUM_ALGORITHM_STRICT_CRC32,	\/*!< Write crc32, allow crc32$/;"	e	enum:srv_checksum_algorithm_t
SRV_CHECKSUM_ALGORITHM_STRICT_INNODB	include/buf0types.h	/^	SRV_CHECKSUM_ALGORITHM_STRICT_INNODB,	\/*!< Write innodb, allow$/;"	e	enum:srv_checksum_algorithm_t
SRV_CHECKSUM_ALGORITHM_STRICT_NONE	include/buf0types.h	/^	SRV_CHECKSUM_ALGORITHM_STRICT_NONE	\/*!< Write none, allow none$/;"	e	enum:srv_checksum_algorithm_t
SRV_FORCE_IGNORE_CORRUPT	include/srv0srv.h	/^	SRV_FORCE_IGNORE_CORRUPT = 1,	\/*!< let the server run even if it$/;"	e	enum:__anon3
SRV_FORCE_NO_BACKGROUND	include/srv0srv.h	/^	SRV_FORCE_NO_BACKGROUND	= 2,	\/*!< prevent the main thread from$/;"	e	enum:__anon3
SRV_FORCE_NO_IBUF_MERGE	include/srv0srv.h	/^	SRV_FORCE_NO_IBUF_MERGE = 4,	\/*!< prevent also ibuf operations:$/;"	e	enum:__anon3
SRV_FORCE_NO_LOG_REDO	include/srv0srv.h	/^	SRV_FORCE_NO_LOG_REDO = 6	\/*!< do not do the log roll-forward$/;"	e	enum:__anon3
SRV_FORCE_NO_TRX_UNDO	include/srv0srv.h	/^	SRV_FORCE_NO_TRX_UNDO = 3,	\/*!< do not run trx rollback after$/;"	e	enum:__anon3
SRV_FORCE_NO_UNDO_LOG_SCAN	include/srv0srv.h	/^	SRV_FORCE_NO_UNDO_LOG_SCAN = 5,	\/*!< do not look at undo logs when$/;"	e	enum:__anon3
SRV_LOG_SPACE_FIRST_ID	include/srv0start.h	50;"	d
SRV_MASTER	include/srv0srv.h	/^	SRV_MASTER			\/*!< the master thread, (whose type$/;"	e	enum:srv_thread_type
SRV_MASTER_CHECKPOINT_INTERVAL	srv/srv0srv.cc	475;"	d	file:
SRV_MASTER_DICT_LRU_INTERVAL	srv/srv0srv.cc	477;"	d	file:
SRV_MASTER_PURGE_INTERVAL	srv/srv0srv.cc	476;"	d	file:
SRV_MASTER_SLOT	srv/srv0srv.cc	/^static const ulint	SRV_MASTER_SLOT = 0;$/;"	v	file:
SRV_MAX_IO_CAPACITY_DUMMY_DEFAULT	include/srv0srv.h	343;"	d
SRV_MAX_IO_CAPACITY_LIMIT	include/srv0srv.h	344;"	d
SRV_MAX_N_IO_THREADS	include/srv0srv.h	440;"	d
SRV_MAX_N_PENDING_SYNC_IOS	srv/srv0start.cc	176;"	d	file:
SRV_NEW_RAW	include/fsp0file.h	/^	SRV_NEW_RAW,		\/*!< A 'newraw' partition, only to be$/;"	e	enum:device_t
SRV_NONE	include/srv0srv.h	/^	SRV_NONE,			\/*!< None *\/$/;"	e	enum:srv_thread_type
SRV_NOT_RAW	include/fsp0file.h	/^	SRV_NOT_RAW = 0,	\/*!< Not a raw partition *\/$/;"	e	enum:device_t
SRV_N_LOG_FILES_MAX	include/srv0srv.h	275;"	d
SRV_N_PENDING_IOS_PER_THREAD	os/os0file.cc	136;"	d	file:
SRV_OLD_RAW	include/fsp0file.h	/^	SRV_OLD_RAW		\/*!< An initialized raw partition *\/$/;"	e	enum:device_t
SRV_PURGE	include/srv0srv.h	/^	SRV_PURGE,			\/*!< Purge coordinator thread *\/$/;"	e	enum:srv_thread_type
SRV_PURGE_SLOT	srv/srv0srv.cc	/^static const ulint	SRV_PURGE_SLOT	= 1;$/;"	v	file:
SRV_SEMAPHORE_WAIT_EXTENSION	include/srv0srv.h	437;"	d
SRV_SHUTDOWN_CLEANUP	include/srv0start.h	/^	SRV_SHUTDOWN_CLEANUP,	\/*!< Cleaning up in$/;"	e	enum:srv_shutdown_t
SRV_SHUTDOWN_EXIT_THREADS	include/srv0start.h	/^	SRV_SHUTDOWN_EXIT_THREADS\/*!< Exit all threads *\/$/;"	e	enum:srv_shutdown_t
SRV_SHUTDOWN_FLUSH_PHASE	include/srv0start.h	/^	SRV_SHUTDOWN_FLUSH_PHASE,\/*!< At this phase the master and the$/;"	e	enum:srv_shutdown_t
SRV_SHUTDOWN_LAST_PHASE	include/srv0start.h	/^	SRV_SHUTDOWN_LAST_PHASE,\/*!< Last phase after ensuring that$/;"	e	enum:srv_shutdown_t
SRV_SHUTDOWN_NONE	include/srv0start.h	/^	SRV_SHUTDOWN_NONE = 0,	\/*!< Database running normally *\/$/;"	e	enum:srv_shutdown_t
SRV_START_STATE_IO	srv/srv0start.cc	/^	SRV_START_STATE_IO = 2,			\/*!< Started IO threads *\/$/;"	e	enum:srv_start_state_t	file:
SRV_START_STATE_LOCK_SYS	srv/srv0start.cc	/^	SRV_START_STATE_LOCK_SYS = 1,		\/*!< Started lock-timeout$/;"	e	enum:srv_start_state_t	file:
SRV_START_STATE_MASTER	srv/srv0start.cc	/^	SRV_START_STATE_MASTER = 8,		\/*!< Started master threadd. *\/$/;"	e	enum:srv_start_state_t	file:
SRV_START_STATE_MONITOR	srv/srv0start.cc	/^	SRV_START_STATE_MONITOR = 4,		\/*!< Started montior thread *\/$/;"	e	enum:srv_start_state_t	file:
SRV_START_STATE_NONE	srv/srv0start.cc	/^	SRV_START_STATE_NONE = 0,		\/*!< No thread started *\/$/;"	e	enum:srv_start_state_t	file:
SRV_START_STATE_PURGE	srv/srv0start.cc	/^	SRV_START_STATE_PURGE = 16,		\/*!< Started purge thread(s) *\/$/;"	e	enum:srv_start_state_t	file:
SRV_START_STATE_STAT	srv/srv0start.cc	/^	SRV_START_STATE_STAT = 32		\/*!< Started bufdump + dict stat$/;"	e	enum:srv_start_state_t	file:
SRV_STATS_NULLS_EQUAL	include/srv0srv.h	/^	SRV_STATS_NULLS_EQUAL,		\/* All NULL values are treated as$/;"	e	enum:srv_stats_method_name_enum
SRV_STATS_NULLS_IGNORED	include/srv0srv.h	/^	SRV_STATS_NULLS_IGNORED		\/* NULL values are ignored *\/$/;"	e	enum:srv_stats_method_name_enum
SRV_STATS_NULLS_UNEQUAL	include/srv0srv.h	/^	SRV_STATS_NULLS_UNEQUAL,	\/* All NULL values are treated as$/;"	e	enum:srv_stats_method_name_enum
SRV_UNDO_TABLESPACE_SIZE_IN_PAGES	srv/srv0srv.cc	/^const ulint SRV_UNDO_TABLESPACE_SIZE_IN_PAGES =$/;"	v
SRV_UNIX_FSYNC	include/srv0srv.h	/^	SRV_UNIX_FSYNC = 1,	\/*!< fsync, the default *\/$/;"	e	enum:srv_unix_flush_t
SRV_UNIX_LITTLESYNC	include/srv0srv.h	/^	SRV_UNIX_LITTLESYNC,	\/*!< do not call os_file_flush()$/;"	e	enum:srv_unix_flush_t
SRV_UNIX_NOSYNC	include/srv0srv.h	/^	SRV_UNIX_NOSYNC,	\/*!< do not flush after writing *\/$/;"	e	enum:srv_unix_flush_t
SRV_UNIX_O_DIRECT	include/srv0srv.h	/^	SRV_UNIX_O_DIRECT,	\/*!< invoke os_file_set_nocache() on$/;"	e	enum:srv_unix_flush_t
SRV_UNIX_O_DIRECT_NO_FSYNC	include/srv0srv.h	/^	SRV_UNIX_O_DIRECT_NO_FSYNC$/;"	e	enum:srv_unix_flush_t
SRV_UNIX_O_DSYNC	include/srv0srv.h	/^	SRV_UNIX_O_DSYNC,	\/*!< open log files in O_SYNC mode *\/$/;"	e	enum:srv_unix_flush_t
SRV_WIN_IO_NORMAL	include/srv0srv.h	/^	SRV_WIN_IO_NORMAL = 1,	\/*!< buffered I\/O *\/$/;"	e	enum:srv_win_flush_t
SRV_WIN_IO_UNBUFFERED	include/srv0srv.h	/^	SRV_WIN_IO_UNBUFFERED	\/*!< unbuffered I\/O; this is the default *\/$/;"	e	enum:srv_win_flush_t
SRV_WORKER	include/srv0srv.h	/^	SRV_WORKER,			\/*!< threads serving parallelized$/;"	e	enum:srv_thread_type
STATUS_ERR	buf/buf0dump.cc	/^	STATUS_ERR$/;"	e	enum:status_severity	file:
STATUS_INFO	buf/buf0dump.cc	/^	STATUS_INFO,$/;"	e	enum:status_severity	file:
STATUS_VERBOSE	buf/buf0dump.cc	/^	STATUS_VERBOSE,$/;"	e	enum:status_severity	file:
STOPWORD_FROM_DEFAULT	include/fts0fts.h	384;"	d
STOPWORD_NOT_INIT	include/fts0fts.h	382;"	d
STOPWORD_OFF	include/fts0fts.h	383;"	d
STOPWORD_USER_TABLE	include/fts0fts.h	385;"	d
STOPWORD_VALUE	handler/i_s.cc	2844;"	d	file:
STORE_IF_EXISTS	log/log0recv.cc	/^	STORE_IF_EXISTS$/;"	e	enum:store_t	file:
STORE_NO	log/log0recv.cc	/^	STORE_NO,$/;"	e	enum:store_t	file:
STORE_YES	log/log0recv.cc	/^	STORE_YES,$/;"	e	enum:store_t	file:
STRUCT_FLD	handler/i_s.cc	165;"	d	file:
STRUCT_FLD	handler/i_s.cc	167;"	d	file:
SYM_CLUST_FIELD_NO	include/pars0sym.h	114;"	d
SYM_COLUMN	include/pars0sym.h	/^	SYM_COLUMN,		\/*!< database table name *\/$/;"	e	enum:sym_tab_entry
SYM_CURSOR	include/pars0sym.h	/^	SYM_CURSOR,		\/*!< named cursor *\/$/;"	e	enum:sym_tab_entry
SYM_FUNCTION	include/pars0sym.h	/^	SYM_FUNCTION		\/*!< user function name *\/$/;"	e	enum:sym_tab_entry
SYM_IMPLICIT_VAR	include/pars0sym.h	/^	SYM_IMPLICIT_VAR,	\/*!< storage for a intermediate result$/;"	e	enum:sym_tab_entry
SYM_INDEX	include/pars0sym.h	/^	SYM_INDEX,		\/*!< database index name *\/$/;"	e	enum:sym_tab_entry
SYM_LIT	include/pars0sym.h	/^	SYM_LIT,		\/*!< literal *\/$/;"	e	enum:sym_tab_entry
SYM_PROCEDURE_NAME	include/pars0sym.h	/^	SYM_PROCEDURE_NAME,	\/*!< stored procedure name *\/$/;"	e	enum:sym_tab_entry
SYM_SEC_FIELD_NO	include/pars0sym.h	116;"	d
SYM_TABLE	include/pars0sym.h	/^	SYM_TABLE,		\/*!< database table name *\/$/;"	e	enum:sym_tab_entry
SYM_TABLE_REF_COUNTED	include/pars0sym.h	/^	SYM_TABLE_REF_COUNTED,	\/*!< database table name, ref counted. Must$/;"	e	enum:sym_tab_entry
SYM_UNSET	include/pars0sym.h	/^	SYM_UNSET,		\/*!< Unset entry. *\/$/;"	e	enum:sym_tab_entry
SYM_VAR	include/pars0sym.h	/^	SYM_VAR = 91,		\/*!< declared parameter or local$/;"	e	enum:sym_tab_entry
SYNC_ANY_LATCH	include/sync0types.h	/^	SYNC_ANY_LATCH,$/;"	e	enum:latch_level_t
SYNC_ARRAY_TIMEOUT	sync/sync0arr.cc	1101;"	d	file:
SYNC_ARRAY_TIMEOUT	sync/sync0arr.cc	1140;"	d	file:
SYNC_BUF_BLOCK	include/sync0types.h	/^	SYNC_BUF_BLOCK,$/;"	e	enum:latch_level_t
SYNC_BUF_FLUSH_LIST	include/sync0types.h	/^	SYNC_BUF_FLUSH_LIST,$/;"	e	enum:latch_level_t
SYNC_BUF_PAGE_HASH	include/sync0types.h	/^	SYNC_BUF_PAGE_HASH,$/;"	e	enum:latch_level_t
SYNC_BUF_POOL	include/sync0types.h	/^	SYNC_BUF_POOL,$/;"	e	enum:latch_level_t
SYNC_DICT	include/sync0types.h	/^	SYNC_DICT,$/;"	e	enum:latch_level_t
SYNC_DICT_AUTOINC_MUTEX	include/sync0types.h	/^	SYNC_DICT_AUTOINC_MUTEX,$/;"	e	enum:latch_level_t
SYNC_DICT_HEADER	include/sync0types.h	/^	SYNC_DICT_HEADER,$/;"	e	enum:latch_level_t
SYNC_DICT_OPERATION	include/sync0types.h	/^	SYNC_DICT_OPERATION,$/;"	e	enum:latch_level_t
SYNC_DOUBLEWRITE	include/sync0types.h	/^	SYNC_DOUBLEWRITE,$/;"	e	enum:latch_level_t
SYNC_EXTERN_STORAGE	include/sync0types.h	/^	SYNC_EXTERN_STORAGE,$/;"	e	enum:latch_level_t
SYNC_FILE_FORMAT_TAG	include/sync0types.h	/^	SYNC_FILE_FORMAT_TAG,$/;"	e	enum:latch_level_t
SYNC_FSP	include/sync0types.h	/^	SYNC_FSP,$/;"	e	enum:latch_level_t
SYNC_FSP_PAGE	include/sync0types.h	/^	SYNC_FSP_PAGE,$/;"	e	enum:latch_level_t
SYNC_FTS_BG_THREADS	include/sync0types.h	/^	SYNC_FTS_BG_THREADS,$/;"	e	enum:latch_level_t
SYNC_FTS_CACHE	include/sync0types.h	/^	SYNC_FTS_CACHE,$/;"	e	enum:latch_level_t
SYNC_FTS_CACHE_INIT	include/sync0types.h	/^	SYNC_FTS_CACHE_INIT,$/;"	e	enum:latch_level_t
SYNC_FTS_OPTIMIZE	include/sync0types.h	/^	SYNC_FTS_OPTIMIZE,$/;"	e	enum:latch_level_t
SYNC_FTS_TOKENIZE	include/sync0types.h	/^	SYNC_FTS_TOKENIZE,$/;"	e	enum:latch_level_t
SYNC_IBUF_BITMAP	include/sync0types.h	/^	SYNC_IBUF_BITMAP,$/;"	e	enum:latch_level_t
SYNC_IBUF_BITMAP_MUTEX	include/sync0types.h	/^	SYNC_IBUF_BITMAP_MUTEX,$/;"	e	enum:latch_level_t
SYNC_IBUF_HEADER	include/sync0types.h	/^	SYNC_IBUF_HEADER,$/;"	e	enum:latch_level_t
SYNC_IBUF_INDEX_TREE	include/sync0types.h	/^	SYNC_IBUF_INDEX_TREE,$/;"	e	enum:latch_level_t
SYNC_IBUF_MUTEX	include/sync0types.h	/^	SYNC_IBUF_MUTEX,$/;"	e	enum:latch_level_t
SYNC_IBUF_PESS_INSERT_MUTEX	include/sync0types.h	/^	SYNC_IBUF_PESS_INSERT_MUTEX,$/;"	e	enum:latch_level_t
SYNC_IBUF_TREE_NODE	include/sync0types.h	/^	SYNC_IBUF_TREE_NODE,$/;"	e	enum:latch_level_t
SYNC_IBUF_TREE_NODE_NEW	include/sync0types.h	/^	SYNC_IBUF_TREE_NODE_NEW,$/;"	e	enum:latch_level_t
SYNC_INDEX_ONLINE_LOG	include/sync0types.h	/^	SYNC_INDEX_ONLINE_LOG,$/;"	e	enum:latch_level_t
SYNC_INDEX_TREE	include/sync0types.h	/^	SYNC_INDEX_TREE,$/;"	e	enum:latch_level_t
SYNC_LEVEL_MAX	include/sync0types.h	/^	SYNC_LEVEL_MAX = SYNC_NO_ORDER_CHECK$/;"	e	enum:latch_level_t
SYNC_LEVEL_VARYING	include/sync0types.h	/^	SYNC_LEVEL_VARYING,$/;"	e	enum:latch_level_t
SYNC_LOCK_SYS	include/sync0types.h	/^	SYNC_LOCK_SYS,$/;"	e	enum:latch_level_t
SYNC_LOCK_WAIT_SYS	include/sync0types.h	/^	SYNC_LOCK_WAIT_SYS,$/;"	e	enum:latch_level_t
SYNC_LOG	include/sync0types.h	/^	SYNC_LOG,$/;"	e	enum:latch_level_t
SYNC_LOG_FLUSH_ORDER	include/sync0types.h	/^	SYNC_LOG_FLUSH_ORDER,$/;"	e	enum:latch_level_t
SYNC_LOG_WRITE	include/sync0types.h	/^	SYNC_LOG_WRITE,$/;"	e	enum:latch_level_t
SYNC_MONITOR_MUTEX	include/sync0types.h	/^	SYNC_MONITOR_MUTEX,$/;"	e	enum:latch_level_t
SYNC_MUTEX	include/sync0types.h	/^	SYNC_MUTEX = 1,$/;"	e	enum:latch_level_t
SYNC_NOREDO_RSEG	include/sync0types.h	/^	SYNC_NOREDO_RSEG,$/;"	e	enum:latch_level_t
SYNC_NO_ORDER_CHECK	include/sync0types.h	/^	SYNC_NO_ORDER_CHECK,$/;"	e	enum:latch_level_t
SYNC_PAGE_CLEANER	include/sync0types.h	/^	SYNC_PAGE_CLEANER,$/;"	e	enum:latch_level_t
SYNC_POOL	include/sync0types.h	/^	SYNC_POOL,$/;"	e	enum:latch_level_t
SYNC_POOL_MANAGER	include/sync0types.h	/^	SYNC_POOL_MANAGER,$/;"	e	enum:latch_level_t
SYNC_PURGE_LATCH	include/sync0types.h	/^	SYNC_PURGE_LATCH,$/;"	e	enum:latch_level_t
SYNC_PURGE_QUEUE	include/sync0types.h	/^	SYNC_PURGE_QUEUE,$/;"	e	enum:latch_level_t
SYNC_RECV	include/sync0types.h	/^	SYNC_RECV,$/;"	e	enum:latch_level_t
SYNC_RECV_WRITER	include/sync0types.h	/^	SYNC_RECV_WRITER,$/;"	e	enum:latch_level_t
SYNC_REC_LOCK	include/sync0types.h	/^	SYNC_REC_LOCK,$/;"	e	enum:latch_level_t
SYNC_REDO_RSEG	include/sync0types.h	/^	SYNC_REDO_RSEG,$/;"	e	enum:latch_level_t
SYNC_RSEG_HEADER	include/sync0types.h	/^	SYNC_RSEG_HEADER,$/;"	e	enum:latch_level_t
SYNC_RSEG_HEADER_NEW	include/sync0types.h	/^	SYNC_RSEG_HEADER_NEW,$/;"	e	enum:latch_level_t
SYNC_SEARCH_SYS	include/sync0types.h	/^	SYNC_SEARCH_SYS,$/;"	e	enum:latch_level_t
SYNC_STATS_AUTO_RECALC	include/sync0types.h	/^	SYNC_STATS_AUTO_RECALC,$/;"	e	enum:latch_level_t
SYNC_THREADS	include/sync0types.h	/^	SYNC_THREADS,$/;"	e	enum:latch_level_t
SYNC_TREE_NODE	include/sync0types.h	/^	SYNC_TREE_NODE,$/;"	e	enum:latch_level_t
SYNC_TREE_NODE_FROM_HASH	include/sync0types.h	/^	SYNC_TREE_NODE_FROM_HASH,$/;"	e	enum:latch_level_t
SYNC_TREE_NODE_NEW	include/sync0types.h	/^	SYNC_TREE_NODE_NEW,$/;"	e	enum:latch_level_t
SYNC_TRX	include/sync0types.h	/^	SYNC_TRX,$/;"	e	enum:latch_level_t
SYNC_TRX_I_S_LAST_READ	include/sync0types.h	/^	SYNC_TRX_I_S_LAST_READ,$/;"	e	enum:latch_level_t
SYNC_TRX_I_S_RWLOCK	include/sync0types.h	/^	SYNC_TRX_I_S_RWLOCK,$/;"	e	enum:latch_level_t
SYNC_TRX_SYS	include/sync0types.h	/^	SYNC_TRX_SYS,$/;"	e	enum:latch_level_t
SYNC_TRX_SYS_HEADER	include/sync0types.h	/^	SYNC_TRX_SYS_HEADER,$/;"	e	enum:latch_level_t
SYNC_TRX_UNDO	include/sync0types.h	/^	SYNC_TRX_UNDO,$/;"	e	enum:latch_level_t
SYNC_TRX_UNDO_PAGE	include/sync0types.h	/^	SYNC_TRX_UNDO_PAGE,$/;"	e	enum:latch_level_t
SYNC_UNKNOWN	include/sync0types.h	/^	SYNC_UNKNOWN = 0,$/;"	e	enum:latch_level_t
SYNC_WORK_QUEUE	include/sync0types.h	/^	SYNC_WORK_QUEUE,$/;"	e	enum:latch_level_t
SYSTEM_TABLE_NAME	dict/dict0load.cc	/^static const char* SYSTEM_TABLE_NAME[] = {$/;"	v	file:
SYS_COLUMNS	include/dict0load.h	/^	SYS_COLUMNS,$/;"	e	enum:dict_system_id_t
SYS_COLUMN_COLUMN_LEN	handler/i_s.cc	7248;"	d	file:
SYS_COLUMN_MTYPE	handler/i_s.cc	7230;"	d	file:
SYS_COLUMN_NAME	handler/i_s.cc	7212;"	d	file:
SYS_COLUMN_POSITION	handler/i_s.cc	7221;"	d	file:
SYS_COLUMN_TABLE_ID	handler/i_s.cc	7203;"	d	file:
SYS_COLUMN__PRTYPE	handler/i_s.cc	7239;"	d	file:
SYS_DATAFILES	include/dict0load.h	/^	SYS_DATAFILES,$/;"	e	enum:dict_system_id_t
SYS_DATAFILES_PATH	handler/i_s.cc	8720;"	d	file:
SYS_DATAFILES_SPACE	handler/i_s.cc	8711;"	d	file:
SYS_FIELDS	include/dict0load.h	/^	SYS_FIELDS,$/;"	e	enum:dict_system_id_t
SYS_FIELD_INDEX_ID	handler/i_s.cc	7664;"	d	file:
SYS_FIELD_NAME	handler/i_s.cc	7673;"	d	file:
SYS_FIELD_POS	handler/i_s.cc	7682;"	d	file:
SYS_FOREIGN	include/dict0load.h	/^	SYS_FOREIGN,$/;"	e	enum:dict_system_id_t
SYS_FOREIGN_COLS	include/dict0load.h	/^	SYS_FOREIGN_COLS,$/;"	e	enum:dict_system_id_t
SYS_FOREIGN_COL_FOR_NAME	handler/i_s.cc	8116;"	d	file:
SYS_FOREIGN_COL_ID	handler/i_s.cc	8107;"	d	file:
SYS_FOREIGN_COL_POS	handler/i_s.cc	8134;"	d	file:
SYS_FOREIGN_COL_REF_NAME	handler/i_s.cc	8125;"	d	file:
SYS_FOREIGN_FOR_NAME	handler/i_s.cc	7887;"	d	file:
SYS_FOREIGN_ID	handler/i_s.cc	7878;"	d	file:
SYS_FOREIGN_NUM_COL	handler/i_s.cc	7905;"	d	file:
SYS_FOREIGN_REF_NAME	handler/i_s.cc	7896;"	d	file:
SYS_FOREIGN_TYPE	handler/i_s.cc	7914;"	d	file:
SYS_INDEXES	include/dict0load.h	/^	SYS_INDEXES,$/;"	e	enum:dict_system_id_t
SYS_INDEX_ID	handler/i_s.cc	6936;"	d	file:
SYS_INDEX_MERGE_THRESHOLD	handler/i_s.cc	6999;"	d	file:
SYS_INDEX_NAME	handler/i_s.cc	6945;"	d	file:
SYS_INDEX_NUM_FIELDS	handler/i_s.cc	6972;"	d	file:
SYS_INDEX_PAGE_NO	handler/i_s.cc	6981;"	d	file:
SYS_INDEX_SPACE	handler/i_s.cc	6990;"	d	file:
SYS_INDEX_TABLE_ID	handler/i_s.cc	6954;"	d	file:
SYS_INDEX_TYPE	handler/i_s.cc	6963;"	d	file:
SYS_NUM_SYSTEM_TABLES	include/dict0load.h	/^	SYS_NUM_SYSTEM_TABLES$/;"	e	enum:dict_system_id_t
SYS_TABLES	include/dict0load.h	/^	SYS_TABLES = 0,$/;"	e	enum:dict_system_id_t
SYS_TABLESPACES	include/dict0load.h	/^	SYS_TABLESPACES,$/;"	e	enum:dict_system_id_t
SYS_TABLESPACES_ALLOC_SIZE	handler/i_s.cc	8418;"	d	file:
SYS_TABLESPACES_FILE_FORMAT	handler/i_s.cc	8355;"	d	file:
SYS_TABLESPACES_FILE_SIZE	handler/i_s.cc	8409;"	d	file:
SYS_TABLESPACES_FLAGS	handler/i_s.cc	8346;"	d	file:
SYS_TABLESPACES_FS_BLOCK_SIZE	handler/i_s.cc	8400;"	d	file:
SYS_TABLESPACES_NAME	handler/i_s.cc	8337;"	d	file:
SYS_TABLESPACES_PAGE_SIZE	handler/i_s.cc	8373;"	d	file:
SYS_TABLESPACES_ROW_FORMAT	handler/i_s.cc	8364;"	d	file:
SYS_TABLESPACES_SPACE	handler/i_s.cc	8328;"	d	file:
SYS_TABLESPACES_SPACE_TYPE	handler/i_s.cc	8391;"	d	file:
SYS_TABLESPACES_ZIP_PAGE_SIZE	handler/i_s.cc	8382;"	d	file:
SYS_TABLESTATS_AUTONINC	handler/i_s.cc	6681;"	d	file:
SYS_TABLESTATS_CLUST_SIZE	handler/i_s.cc	6654;"	d	file:
SYS_TABLESTATS_ID	handler/i_s.cc	6618;"	d	file:
SYS_TABLESTATS_INDEX_SIZE	handler/i_s.cc	6663;"	d	file:
SYS_TABLESTATS_INIT	handler/i_s.cc	6636;"	d	file:
SYS_TABLESTATS_MODIFIED	handler/i_s.cc	6672;"	d	file:
SYS_TABLESTATS_NAME	handler/i_s.cc	6627;"	d	file:
SYS_TABLESTATS_NROW	handler/i_s.cc	6645;"	d	file:
SYS_TABLESTATS_TABLE_REF_COUNT	handler/i_s.cc	6690;"	d	file:
SYS_TABLES_FILE_FORMAT	handler/i_s.cc	6359;"	d	file:
SYS_TABLES_FLAG	handler/i_s.cc	6332;"	d	file:
SYS_TABLES_ID	handler/i_s.cc	6314;"	d	file:
SYS_TABLES_NAME	handler/i_s.cc	6323;"	d	file:
SYS_TABLES_NUM_COLUMN	handler/i_s.cc	6341;"	d	file:
SYS_TABLES_ROW_FORMAT	handler/i_s.cc	6368;"	d	file:
SYS_TABLES_SPACE	handler/i_s.cc	6350;"	d	file:
SYS_TABLES_SPACE_TYPE	handler/i_s.cc	6386;"	d	file:
SYS_TABLES_ZIP_PAGE_SIZE	handler/i_s.cc	6377;"	d	file:
SYS_VIRTUAL	include/dict0load.h	/^	SYS_VIRTUAL,$/;"	e	enum:dict_system_id_t
SYS_VIRTUAL_BASE_POS	handler/i_s.cc	7471;"	d	file:
SYS_VIRTUAL_POS	handler/i_s.cc	7462;"	d	file:
SYS_VIRTUAL_TABLE_ID	handler/i_s.cc	7453;"	d	file:
ShowStatus	handler/ha_innodb.cc	/^	ShowStatus() { }$/;"	f	struct:ShowStatus
ShowStatus	handler/ha_innodb.cc	/^struct ShowStatus {$/;"	s	file:
SimulatedAIOHandler	os/os0file.cc	/^	SimulatedAIOHandler(AIO* array, ulint segment)$/;"	f	class:SimulatedAIOHandler
SimulatedAIOHandler	os/os0file.cc	/^class SimulatedAIOHandler {$/;"	c	file:
Slot	os/os0file.cc	/^	Slot() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:Slot
Slot	os/os0file.cc	/^struct Slot {$/;"	s	file:
Slots	os/os0file.cc	/^	typedef std::vector<Slot> Slots;$/;"	t	class:AIO	file:
SyncFileIO	os/os0file.cc	/^	SyncFileIO(os_file_t fh, void* buf, ulint n, os_offset_t offset)$/;"	f	class:SyncFileIO
SyncFileIO	os/os0file.cc	/^class SyncFileIO {$/;"	c	file:
SysIndexCallback	include/row0mysql.h	/^struct SysIndexCallback {$/;"	s
SysIndexIterator	row/row0trunc.cc	/^class SysIndexIterator {$/;"	c	file:
SysTablespace	include/fsp0sysspace.h	/^	SysTablespace()$/;"	f	class:SysTablespace
SysTablespace	include/fsp0sysspace.h	/^class SysTablespace : public Tablespace$/;"	c
TABLE_ADD_TO_CACHE	include/dict0crea.h	308;"	d
TABLE_BUILD_COL_DEF	include/dict0crea.h	306;"	d
TABLE_BUILD_TABLE_DEF	include/dict0crea.h	305;"	d
TABLE_BUILD_V_COL_DEF	include/dict0crea.h	307;"	d
TABLE_CACHE_INITIAL_ROWSNUM	trx/trx0i_s.cc	60;"	d	file:
TABLE_COMPLETED	include/dict0crea.h	309;"	d
TABLE_DICT_LOCKED	include/fts0fts.h	/^	TABLE_DICT_LOCKED = 16		\/*!< Set if the table has$/;"	e	enum:fts_status
TABLE_LOCK_CACHE	lock/lock0lock.cc	/^static const ulint	TABLE_LOCK_CACHE = 8;$/;"	v	file:
TABLE_LOCK_SIZE	lock/lock0lock.cc	/^static const ulint	TABLE_LOCK_SIZE = sizeof(ib_lock_t);$/;"	v	file:
TABLE_NOT_IN_THIS_DB	row/row0mysql.cc	4947;"	d	file:
TABLE_STATS_NAME	dict/dict0stats.cc	112;"	d	file:
TABLE_STATS_NAME	include/dict0stats.h	34;"	d
TABLE_STATS_NAME_PRINT	dict/dict0stats.cc	113;"	d	file:
TAS	include/os0atomic.h	325;"	d
TEMP_FILE_PREFIX	include/dict0types.h	87;"	d
TEMP_FILE_PREFIX_INNODB	include/dict0types.h	89;"	d
TEMP_FILE_PREFIX_LENGTH	include/dict0types.h	88;"	d
TEMP_INDEX_PREFIX_STR	include/ut0ut.h	51;"	d
TEMP_TABLE_PATH_PREFIX	include/dict0types.h	92;"	d
TEMP_TABLE_PREFIX	include/dict0types.h	91;"	d
TEST_CLUSTERED_INDEX_SIZE	dict/dict0stats.cc	3941;"	d	file:
TEST_DATABASE_NAME	dict/dict0stats.cc	3937;"	d	file:
TEST_IDX1_COL1_NAME	dict/dict0stats.cc	3945;"	d	file:
TEST_IDX1_INDEX_SIZE	dict/dict0stats.cc	3946;"	d	file:
TEST_IDX1_NAME	dict/dict0stats.cc	3944;"	d	file:
TEST_IDX1_N_DIFF1	dict/dict0stats.cc	3948;"	d	file:
TEST_IDX1_N_DIFF1_SAMPLE_SIZE	dict/dict0stats.cc	3949;"	d	file:
TEST_IDX1_N_LEAF_PAGES	dict/dict0stats.cc	3947;"	d	file:
TEST_IDX2_COL1_NAME	dict/dict0stats.cc	3952;"	d	file:
TEST_IDX2_COL2_NAME	dict/dict0stats.cc	3953;"	d	file:
TEST_IDX2_COL3_NAME	dict/dict0stats.cc	3954;"	d	file:
TEST_IDX2_COL4_NAME	dict/dict0stats.cc	3955;"	d	file:
TEST_IDX2_INDEX_SIZE	dict/dict0stats.cc	3956;"	d	file:
TEST_IDX2_NAME	dict/dict0stats.cc	3951;"	d	file:
TEST_IDX2_N_DIFF1	dict/dict0stats.cc	3958;"	d	file:
TEST_IDX2_N_DIFF1_SAMPLE_SIZE	dict/dict0stats.cc	3959;"	d	file:
TEST_IDX2_N_DIFF2	dict/dict0stats.cc	3960;"	d	file:
TEST_IDX2_N_DIFF2_SAMPLE_SIZE	dict/dict0stats.cc	3961;"	d	file:
TEST_IDX2_N_DIFF3	dict/dict0stats.cc	3962;"	d	file:
TEST_IDX2_N_DIFF3_SAMPLE_SIZE	dict/dict0stats.cc	3963;"	d	file:
TEST_IDX2_N_DIFF4	dict/dict0stats.cc	3964;"	d	file:
TEST_IDX2_N_DIFF4_SAMPLE_SIZE	dict/dict0stats.cc	3965;"	d	file:
TEST_IDX2_N_LEAF_PAGES	dict/dict0stats.cc	3957;"	d	file:
TEST_N_ROWS	dict/dict0stats.cc	3940;"	d	file:
TEST_SUM_OF_OTHER_INDEX_SIZES	dict/dict0stats.cc	3942;"	d	file:
TEST_TABLE_NAME	dict/dict0stats.cc	3938;"	d	file:
TPL_TYPE_KEY	api/api0api.cc	/^	TPL_TYPE_KEY			\/*!< Index key tuple *\/$/;"	e	enum:ib_tuple_type_t	file:
TPL_TYPE_ROW	api/api0api.cc	/^	TPL_TYPE_ROW,			\/*!< Data row tuple *\/$/;"	e	enum:ib_tuple_type_t	file:
TROUBLESHOOTING_MSG	handler/ha_innodb.cc	/^const char*	TROUBLESHOOTING_MSG =$/;"	v
TROUBLESHOOT_DATADICT_MSG	handler/ha_innodb.cc	/^const char*	TROUBLESHOOT_DATADICT_MSG =$/;"	v
TRUE	include/univ.i	480;"	d	file:
TRUE	include/ut0rbt.h	43;"	d
TRX_DICT_OP_INDEX	include/trx0types.h	/^	TRX_DICT_OP_INDEX = 2$/;"	e	enum:trx_dict_op_t
TRX_DICT_OP_NONE	include/trx0types.h	/^	TRX_DICT_OP_NONE = 0,$/;"	e	enum:trx_dict_op_t
TRX_DICT_OP_TABLE	include/trx0types.h	/^	TRX_DICT_OP_TABLE = 1,$/;"	e	enum:trx_dict_op_t
TRX_DUP_IGNORE	include/trx0trx.h	1325;"	d
TRX_DUP_REPLACE	include/trx0trx.h	1326;"	d
TRX_FORCE_ROLLBACK	include/trx0types.h	/^static const ib_uint32_t TRX_FORCE_ROLLBACK = 1 << 31;$/;"	v
TRX_FORCE_ROLLBACK_ASYNC	include/trx0types.h	/^static const ib_uint32_t TRX_FORCE_ROLLBACK_ASYNC = 1 << 30;$/;"	v
TRX_FORCE_ROLLBACK_DISABLE	include/trx0types.h	/^static const ib_uint32_t TRX_FORCE_ROLLBACK_DISABLE = 1 << 29;$/;"	v
TRX_FORCE_ROLLBACK_MASK	include/trx0types.h	/^static const ib_uint32_t TRX_FORCE_ROLLBACK_MASK = 0x1FFFFFFF;$/;"	v
TRX_ID_FMT	include/trx0types.h	40;"	d
TRX_ID_MAX	include/trx0types.h	145;"	d
TRX_ID_MAX_LEN	include/trx0types.h	/^static const ulint TRX_ID_MAX_LEN = 17;$/;"	v
TRX_ISO_READ_COMMITTED	include/trx0trx.h	1298;"	d
TRX_ISO_READ_UNCOMMITTED	include/trx0trx.h	1289;"	d
TRX_ISO_REPEATABLE_READ	include/trx0trx.h	1311;"	d
TRX_ISO_SERIALIZABLE	include/trx0trx.h	1319;"	d
TRX_I_S_LOCK_DATA_MAX_LEN	include/trx0i_s.h	41;"	d
TRX_I_S_LOCK_ID_MAX_LEN	include/trx0i_s.h	278;"	d
TRX_I_S_MEM_LIMIT	include/trx0i_s.h	37;"	d
TRX_I_S_STRING_COPY	include/trx0i_s.h	61;"	d
TRX_I_S_TRX_FK_ERROR_MAX_LEN	include/trx0i_s.h	53;"	d
TRX_I_S_TRX_ISOLATION_LEVEL_MAX_LEN	include/trx0i_s.h	57;"	d
TRX_I_S_TRX_OP_STATE_MAX_LEN	include/trx0i_s.h	49;"	d
TRX_I_S_TRX_QUERY_MAX_LEN	include/trx0i_s.h	45;"	d
TRX_MAGIC_N	include/trx0types.h	/^static const ulint TRX_MAGIC_N = 91118598;$/;"	v
TRX_QUE_COMMITTING	include/trx0types.h	/^	TRX_QUE_COMMITTING		\/*!< transaction is committing *\/$/;"	e	enum:trx_que_t
TRX_QUE_LOCK_WAIT	include/trx0types.h	/^	TRX_QUE_LOCK_WAIT,		\/*!< transaction is waiting for$/;"	e	enum:trx_que_t
TRX_QUE_ROLLING_BACK	include/trx0types.h	/^	TRX_QUE_ROLLING_BACK,		\/*!< transaction is rolling back *\/$/;"	e	enum:trx_que_t
TRX_QUE_RUNNING	include/trx0types.h	/^	TRX_QUE_RUNNING,		\/*!< transaction is running *\/$/;"	e	enum:trx_que_t
TRX_QUE_STATE_STR_MAX_LEN	include/trx0trx.h	486;"	d
TRX_ROLL_TRUNC_THRESHOLD	trx/trx0roll.cc	/^static const ulint TRX_ROLL_TRUNC_THRESHOLD = 1;$/;"	v	file:
TRX_RSEG	include/trx0rseg.h	235;"	d
TRX_RSEG_FSEG_HEADER	include/trx0rseg.h	245;"	d
TRX_RSEG_HISTORY	include/trx0rseg.h	243;"	d
TRX_RSEG_HISTORY_SIZE	include/trx0rseg.h	241;"	d
TRX_RSEG_MAX_N_TRXS	include/trx0rseg.h	159;"	d
TRX_RSEG_MAX_SIZE	include/trx0rseg.h	239;"	d
TRX_RSEG_N_SLOTS	include/trx0rseg.h	156;"	d
TRX_RSEG_SLOT_PAGE_NO	include/trx0rseg.h	228;"	d
TRX_RSEG_SLOT_SIZE	include/trx0rseg.h	232;"	d
TRX_RSEG_TYPE_NONE	include/trx0trx.h	/^	TRX_RSEG_TYPE_NONE = 0,		\/*!< void rollback segment type. *\/$/;"	e	enum:trx_rseg_type_t
TRX_RSEG_TYPE_NOREDO	include/trx0trx.h	/^	TRX_RSEG_TYPE_NOREDO		\/*!< non-redo rollback segment. *\/$/;"	e	enum:trx_rseg_type_t
TRX_RSEG_TYPE_REDO	include/trx0trx.h	/^	TRX_RSEG_TYPE_REDO,		\/*!< redo rollback segment. *\/$/;"	e	enum:trx_rseg_type_t
TRX_RSEG_UNDO_SLOTS	include/trx0rseg.h	248;"	d
TRX_STATE_ACTIVE	include/trx0types.h	/^	TRX_STATE_ACTIVE,$/;"	e	enum:trx_state_t
TRX_STATE_COMMITTED_IN_MEMORY	include/trx0types.h	/^	TRX_STATE_COMMITTED_IN_MEMORY$/;"	e	enum:trx_state_t
TRX_STATE_FORCED_ROLLBACK	include/trx0types.h	/^	TRX_STATE_FORCED_ROLLBACK,$/;"	e	enum:trx_state_t
TRX_STATE_NOT_STARTED	include/trx0types.h	/^	TRX_STATE_NOT_STARTED,$/;"	e	enum:trx_state_t
TRX_STATE_PREPARED	include/trx0types.h	/^	TRX_STATE_PREPARED,$/;"	e	enum:trx_state_t
TRX_SYS	include/trx0sys.h	432;"	d
TRX_SYS_DOUBLEWRITE	include/trx0sys.h	491;"	d
TRX_SYS_DOUBLEWRITE_BLOCK1	include/trx0sys.h	501;"	d
TRX_SYS_DOUBLEWRITE_BLOCK2	include/trx0sys.h	508;"	d
TRX_SYS_DOUBLEWRITE_BLOCK_SIZE	include/trx0sys.h	536;"	d
TRX_SYS_DOUBLEWRITE_FSEG	include/trx0sys.h	493;"	d
TRX_SYS_DOUBLEWRITE_MAGIC	include/trx0sys.h	496;"	d
TRX_SYS_DOUBLEWRITE_MAGIC_N	include/trx0sys.h	531;"	d
TRX_SYS_DOUBLEWRITE_REPEAT	include/trx0sys.h	514;"	d
TRX_SYS_DOUBLEWRITE_SPACE_ID_STORED	include/trx0sys.h	527;"	d
TRX_SYS_DOUBLEWRITE_SPACE_ID_STORED_N	include/trx0sys.h	533;"	d
TRX_SYS_FILE_FORMAT_TAG	include/trx0sys.h	543;"	d
TRX_SYS_FILE_FORMAT_TAG_MAGIC_N	include/trx0sys.h	552;"	d
TRX_SYS_FILE_FORMAT_TAG_MAGIC_N_HIGH	include/trx0sys.h	549;"	d
TRX_SYS_FILE_FORMAT_TAG_MAGIC_N_LOW	include/trx0sys.h	547;"	d
TRX_SYS_FSEG_HEADER	include/trx0sys.h	448;"	d
TRX_SYS_MYSQL_LOG_INFO	include/trx0sys.h	477;"	d
TRX_SYS_MYSQL_LOG_MAGIC_N	include/trx0sys.h	471;"	d
TRX_SYS_MYSQL_LOG_MAGIC_N_FLD	include/trx0sys.h	478;"	d
TRX_SYS_MYSQL_LOG_NAME	include/trx0sys.h	486;"	d
TRX_SYS_MYSQL_LOG_NAME_LEN	include/trx0sys.h	469;"	d
TRX_SYS_MYSQL_LOG_OFFSET_HIGH	include/trx0sys.h	482;"	d
TRX_SYS_MYSQL_LOG_OFFSET_LOW	include/trx0sys.h	484;"	d
TRX_SYS_N_RSEGS	include/trx0sys.h	462;"	d
TRX_SYS_OLD_N_RSEGS	include/trx0sys.h	466;"	d
TRX_SYS_PAGE_NO	include/trx0types.h	50;"	d
TRX_SYS_RSEGS	include/trx0sys.h	451;"	d
TRX_SYS_RSEG_PAGE_NO	include/trx0sys.ic	41;"	d	file:
TRX_SYS_RSEG_SLOT_SIZE	include/trx0sys.ic	46;"	d	file:
TRX_SYS_RSEG_SPACE	include/trx0sys.ic	37;"	d	file:
TRX_SYS_SPACE	include/trx0types.h	/^static const ulint TRX_SYS_SPACE = 0;$/;"	v
TRX_SYS_SYSTEM_RSEG_ID	include/trx0sys.h	429;"	d
TRX_SYS_TRX_ID_STORE	include/trx0sys.h	436;"	d
TRX_SYS_TRX_ID_WRITE_MARGIN	include/trx0sys.h	649;"	d
TRX_UNDO_ACTIVE	include/trx0undo.h	423;"	d
TRX_UNDO_CACHED	include/trx0undo.h	425;"	d
TRX_UNDO_CMPL_INFO_MULT	include/trx0rec.h	361;"	d
TRX_UNDO_DEL_MARKS	include/trx0undo.h	567;"	d
TRX_UNDO_DEL_MARK_REC	include/trx0rec.h	359;"	d
TRX_UNDO_DICT_TRANS	include/trx0undo.h	580;"	d
TRX_UNDO_FSEG_HEADER	include/trx0undo.h	547;"	d
TRX_UNDO_GET_OLD_V_VALUE	include/trx0rec.h	245;"	d
TRX_UNDO_HISTORY_NODE	include/trx0undo.h	593;"	d
TRX_UNDO_INSERT	include/trx0undo.h	417;"	d
TRX_UNDO_INSERT_OP	include/trx0rec.h	369;"	d
TRX_UNDO_INSERT_REC	include/trx0rec.h	353;"	d
TRX_UNDO_LAST_LOG	include/trx0undo.h	544;"	d
TRX_UNDO_LOG_OLD_HDR_SIZE	include/trx0undo.h	597;"	d
TRX_UNDO_LOG_START	include/trx0undo.h	571;"	d
TRX_UNDO_LOG_XA_HDR_SIZE	include/trx0undo.h	618;"	d
TRX_UNDO_MODIFY_OP	include/trx0rec.h	370;"	d
TRX_UNDO_NEXT_LOG	include/trx0undo.h	589;"	d
TRX_UNDO_PAGE_FREE	include/trx0undo.h	507;"	d
TRX_UNDO_PAGE_HDR	include/trx0undo.h	496;"	d
TRX_UNDO_PAGE_HDR_SIZE	include/trx0undo.h	513;"	d
TRX_UNDO_PAGE_LIST	include/trx0undo.h	549;"	d
TRX_UNDO_PAGE_NODE	include/trx0undo.h	510;"	d
TRX_UNDO_PAGE_REUSE_LIMIT	include/trx0undo.h	522;"	d
TRX_UNDO_PAGE_START	include/trx0undo.h	502;"	d
TRX_UNDO_PAGE_TYPE	include/trx0undo.h	500;"	d
TRX_UNDO_PREPARED	include/trx0undo.h	430;"	d
TRX_UNDO_PREV_IN_PURGE	include/trx0rec.h	241;"	d
TRX_UNDO_PREV_LOG	include/trx0undo.h	591;"	d
TRX_UNDO_SEG_HDR	include/trx0undo.h	536;"	d
TRX_UNDO_SEG_HDR_SIZE	include/trx0undo.h	555;"	d
TRX_UNDO_STATE	include/trx0undo.h	540;"	d
TRX_UNDO_TABLE_ID	include/trx0undo.h	587;"	d
TRX_UNDO_TO_FREE	include/trx0undo.h	426;"	d
TRX_UNDO_TO_PURGE	include/trx0undo.h	427;"	d
TRX_UNDO_TRX_ID	include/trx0undo.h	563;"	d
TRX_UNDO_TRX_NO	include/trx0undo.h	564;"	d
TRX_UNDO_UPDATE	include/trx0undo.h	418;"	d
TRX_UNDO_UPD_DEL_REC	include/trx0rec.h	356;"	d
TRX_UNDO_UPD_EXIST_REC	include/trx0rec.h	354;"	d
TRX_UNDO_UPD_EXTERN	include/trx0rec.h	363;"	d
TRX_UNDO_XA_BQUAL_LEN	include/trx0undo.h	614;"	d
TRX_UNDO_XA_FORMAT	include/trx0undo.h	610;"	d
TRX_UNDO_XA_TRID_LEN	include/trx0undo.h	612;"	d
TRX_UNDO_XA_XID	include/trx0undo.h	616;"	d
TRX_UNDO_XID_EXISTS	include/trx0undo.h	577;"	d
TRX_WEIGHT	include/trx0trx.h	472;"	d
TTASFutexMutex	include/ib0mutex.h	/^struct TTASFutexMutex {$/;"	s
TableLocator	row/row0trunc.cc	/^	explicit TableLocator(table_id_t table_id)$/;"	f	class:TableLocator
TableLocator	row/row0trunc.cc	/^class TableLocator : public Callback {$/;"	c	file:
TableLockGetNode	lock/lock0lock.cc	/^struct TableLockGetNode {$/;"	s	file:
Tablespace	include/fsp0space.h	/^	Tablespace()$/;"	f	class:Tablespace
Tablespace	include/fsp0space.h	/^class Tablespace {$/;"	c
ThreadMap	sync/sync0debug.cc	/^		ThreadMap;$/;"	t	struct:LatchDebug	file:
Truncate	include/trx0purge.h	/^		Truncate()$/;"	f	class:undo::Truncate
Truncate	include/trx0purge.h	/^	class Truncate {$/;"	c	namespace:undo
TruncateLogParser	include/row0trunc.h	/^class TruncateLogParser {$/;"	c
TruncateLogger	row/row0trunc.cc	/^	TruncateLogger($/;"	f	class:TruncateLogger
TruncateLogger	row/row0trunc.cc	/^class TruncateLogger : public Callback {$/;"	c	file:
TrxFactory	trx/trx0trx.cc	/^struct TrxFactory {$/;"	s	file:
TrxIdSet	include/trx0types.h	/^	TrxIdSet;$/;"	t
TrxInInnoDB	include/trx0trx.h	/^	TrxInInnoDB(trx_t* trx, bool disable = false)$/;"	f	class:TrxInInnoDB
TrxInInnoDB	include/trx0trx.h	/^class TrxInInnoDB {$/;"	c
TrxListIterator	lock/lock0lock.cc	/^	TrxListIterator() : m_index()$/;"	f	class:TrxListIterator
TrxListIterator	lock/lock0lock.cc	/^class TrxListIterator {$/;"	c	file:
TrxLockIterator	lock/lock0lock.cc	/^	TrxLockIterator() { rewind(); }$/;"	f	class:TrxLockIterator
TrxLockIterator	lock/lock0lock.cc	/^class TrxLockIterator {$/;"	c	file:
TrxMutex	include/trx0types.h	/^typedef ib_mutex_t TrxMutex;$/;"	t
TrxPoolLock	trx/trx0trx.cc	/^	TrxPoolLock() { }$/;"	f	struct:TrxPoolLock
TrxPoolLock	trx/trx0trx.cc	/^struct TrxPoolLock {$/;"	s	file:
TrxPoolManagerLock	trx/trx0trx.cc	/^	TrxPoolManagerLock() { }$/;"	f	struct:TrxPoolManagerLock
TrxPoolManagerLock	trx/trx0trx.cc	/^struct TrxPoolManagerLock {$/;"	s	file:
TrxSysMutex	include/trx0types.h	/^typedef ib_mutex_t TrxSysMutex;$/;"	t
TrxTrack	include/trx0types.h	/^	explicit TrxTrack(trx_id_t id, trx_t* trx = NULL)$/;"	f	struct:TrxTrack
TrxTrack	include/trx0types.h	/^struct TrxTrack {$/;"	s
TrxTrackCmp	include/trx0types.h	/^struct TrxTrackCmp {$/;"	s
TrxTrackHash	include/trx0types.h	/^struct TrxTrackHash {$/;"	s
TrxTrackHashCmp	include/trx0types.h	/^struct TrxTrackHashCmp {$/;"	s
TrxUndoRsegs	include/trx0types.h	/^	TrxUndoRsegs() : m_trx_no() { }$/;"	f	class:TrxUndoRsegs
TrxUndoRsegs	include/trx0types.h	/^	explicit TrxUndoRsegs(trx_id_t trx_no)$/;"	f	class:TrxUndoRsegs
TrxUndoRsegs	include/trx0types.h	/^class TrxUndoRsegs {$/;"	c
TrxUndoRsegsIterator	include/trx0purge.h	/^struct TrxUndoRsegsIterator {$/;"	s
TrxUndoRsegsIterator	trx/trx0purge.cc	/^TrxUndoRsegsIterator::TrxUndoRsegsIterator(trx_purge_t* purge_sys)$/;"	f	class:TrxUndoRsegsIterator
TrxVersion	include/trx0trx.h	/^struct TrxVersion {$/;"	s
TrxVersion	trx/trx0trx.cc	/^TrxVersion::TrxVersion(trx_t* trx)$/;"	f	class:TrxVersion
Type	include/os0file.h	/^	enum Type {$/;"	g	struct:Compression
Type	include/os0file.h	/^	enum Type {$/;"	g	struct:Encryption
UINT16_GET_A	include/ut0mem.ic	121;"	d	file:
UINT16_GET_B	include/ut0mem.ic	122;"	d	file:
UINT16_MAX	fts/fts0blex.cc	82;"	d	file:
UINT16_MAX	fts/fts0tlex.cc	82;"	d	file:
UINT16_MAX	include/fts0blex.h	85;"	d
UINT16_MAX	include/fts0tlex.h	85;"	d
UINT16_MAX	pars/lexyy.cc	82;"	d	file:
UINT32PF	include/univ.i	419;"	d	file:
UINT32PF	include/univ.i	426;"	d	file:
UINT32_MAX	fts/fts0blex.cc	85;"	d	file:
UINT32_MAX	fts/fts0tlex.cc	85;"	d	file:
UINT32_MAX	include/fts0blex.h	88;"	d
UINT32_MAX	include/fts0tlex.h	88;"	d
UINT32_MAX	pars/lexyy.cc	85;"	d	file:
UINT64PF	include/univ.i	420;"	d	file:
UINT64PF	include/univ.i	427;"	d	file:
UINT64PFx	include/univ.i	421;"	d	file:
UINT64PFx	include/univ.i	428;"	d	file:
UINT64_UNDEFINED	include/univ.i	457;"	d	file:
UINT8_MAX	fts/fts0blex.cc	79;"	d	file:
UINT8_MAX	fts/fts0tlex.cc	79;"	d	file:
UINT8_MAX	include/fts0blex.h	82;"	d
UINT8_MAX	include/fts0tlex.h	82;"	d
UINT8_MAX	pars/lexyy.cc	79;"	d	file:
ULINT32_MASK	include/univ.i	460;"	d	file:
ULINT32_UNDEFINED	include/univ.i	462;"	d	file:
ULINTPF	include/univ.i	438;"	d	file:
ULINTPF	include/univ.i	442;"	d	file:
ULINT_MAX	include/univ.i	465;"	d	file:
ULINT_UNDEFINED	include/univ.i	452;"	d	file:
ULONG_UNDEFINED	include/univ.i	454;"	d	file:
UNDO_NODE_FETCH_NEXT	include/row0undo.h	/^	UNDO_NODE_FETCH_NEXT = 1,	\/*!< we should fetch the next$/;"	e	enum:undo_exec
UNDO_NODE_INSERT	include/row0undo.h	/^	UNDO_NODE_INSERT,		\/*!< undo a fresh insert of a$/;"	e	enum:undo_exec
UNDO_NODE_MODIFY	include/row0undo.h	/^	UNDO_NODE_MODIFY		\/*!< undo a modify operation$/;"	e	enum:undo_exec
UNIV_BTR_DEBUG	include/univ.i	228;"	d	file:
UNIV_COLD	include/univ.i	245;"	d	file:
UNIV_COLD	include/univ.i	247;"	d	file:
UNIV_DEBUG_VALGRIND	include/univ.i	178;"	d	file:
UNIV_EXPECT	include/univ.i	512;"	d	file:
UNIV_EXPECT	include/univ.i	527;"	d	file:
UNIV_EXPECT	include/univ.i	541;"	d	file:
UNIV_EXPECT	include/univ.i	549;"	d	file:
UNIV_EXTERN_STORAGE_FIELD	include/univ.i	500;"	d	file:
UNIV_FORMAT_A	include/univ.i	/^	UNIV_FORMAT_A		= 0,$/;"	e	enum:innodb_file_formats_enum	file:
UNIV_FORMAT_B	include/univ.i	/^	UNIV_FORMAT_B		= 1$/;"	e	enum:innodb_file_formats_enum	file:
UNIV_FORMAT_MAX	include/univ.i	306;"	d	file:
UNIV_FORMAT_MIN	include/univ.i	303;"	d	file:
UNIV_INLINE	include/buf0buddy.h	30;"	d
UNIV_INLINE	include/buf0buddy.h	31;"	d
UNIV_INLINE	include/buf0buddy.ic	136;"	d	file:
UNIV_INLINE	include/buf0buddy.ic	137;"	d	file:
UNIV_INLINE	include/buf0buddy.ic	27;"	d	file:
UNIV_INLINE	include/buf0buddy.ic	28;"	d	file:
UNIV_INLINE	include/page0page.h	1152;"	d
UNIV_INLINE	include/page0page.h	1153;"	d
UNIV_INLINE	include/page0page.h	44;"	d
UNIV_INLINE	include/page0page.h	45;"	d
UNIV_INLINE	include/page0page.ic	1264;"	d	file:
UNIV_INLINE	include/page0page.ic	1265;"	d	file:
UNIV_INLINE	include/page0page.ic	38;"	d	file:
UNIV_INLINE	include/page0page.ic	39;"	d	file:
UNIV_INLINE	include/page0zip.h	31;"	d
UNIV_INLINE	include/page0zip.h	32;"	d
UNIV_INLINE	include/page0zip.h	565;"	d
UNIV_INLINE	include/page0zip.h	566;"	d
UNIV_INLINE	include/page0zip.ic	28;"	d	file:
UNIV_INLINE	include/page0zip.ic	29;"	d	file:
UNIV_INLINE	include/page0zip.ic	443;"	d	file:
UNIV_INLINE	include/page0zip.ic	444;"	d	file:
UNIV_INLINE	include/univ.i	253;"	d	file:
UNIV_INLINE	include/univ.i	260;"	d	file:
UNIV_LIGHT_MEM_DEBUG	include/univ.i	229;"	d	file:
UNIV_LIKELY	include/univ.i	556;"	d	file:
UNIV_LIKELY_NULL	include/univ.i	514;"	d	file:
UNIV_LIKELY_NULL	include/univ.i	528;"	d	file:
UNIV_LIKELY_NULL	include/univ.i	542;"	d	file:
UNIV_LIKELY_NULL	include/univ.i	550;"	d	file:
UNIV_MAX_PARALLELISM	include/univ.i	365;"	d	file:
UNIV_MEM_ALIGNMENT	include/univ.i	277;"	d	file:
UNIV_MEM_ALLOC	include/univ.i	591;"	d	file:
UNIV_MEM_ALLOC	include/univ.i	628;"	d	file:
UNIV_MEM_ASSERT_AND_ALLOC	include/univ.i	641;"	d	file:
UNIV_MEM_ASSERT_AND_FREE	include/univ.i	637;"	d	file:
UNIV_MEM_ASSERT_RW	include/univ.i	607;"	d	file:
UNIV_MEM_ASSERT_RW	include/univ.i	632;"	d	file:
UNIV_MEM_ASSERT_RW_ABORT	include/univ.i	609;"	d	file:
UNIV_MEM_ASSERT_RW_ABORT	include/univ.i	633;"	d	file:
UNIV_MEM_ASSERT_RW_LOW	include/univ.i	594;"	d	file:
UNIV_MEM_ASSERT_RW_LOW	include/univ.i	631;"	d	file:
UNIV_MEM_ASSERT_W	include/univ.i	611;"	d	file:
UNIV_MEM_ASSERT_W	include/univ.i	634;"	d	file:
UNIV_MEM_DESC	include/univ.i	592;"	d	file:
UNIV_MEM_DESC	include/univ.i	629;"	d	file:
UNIV_MEM_FREE	include/univ.i	590;"	d	file:
UNIV_MEM_FREE	include/univ.i	627;"	d	file:
UNIV_MEM_INVALID	include/univ.i	589;"	d	file:
UNIV_MEM_INVALID	include/univ.i	626;"	d	file:
UNIV_MEM_TRASH	include/univ.i	620;"	d	file:
UNIV_MEM_TRASH	include/univ.i	635;"	d	file:
UNIV_MEM_UNDESC	include/univ.i	593;"	d	file:
UNIV_MEM_UNDESC	include/univ.i	630;"	d	file:
UNIV_MEM_VALID	include/univ.i	588;"	d	file:
UNIV_MEM_VALID	include/univ.i	625;"	d	file:
UNIV_NONINL	include/univ.i	259;"	d	file:
UNIV_NON_BUFFERED_IO	include/os0file.h	76;"	d
UNIV_NOTHROW	handler/ha_innodb.cc	/^			UNIV_NOTHROW$/;"	m	struct:ShowStatus::GetCount	file:
UNIV_NOTHROW	handler/ha_innodb.cc	/^		UNIV_NOTHROW;$/;"	m	struct:ShowStatus	file:
UNIV_NOTHROW	include/fil0fil.h	/^		buf_block_t*	block) UNIV_NOTHROW = 0;$/;"	m	struct:PageCallback
UNIV_NOTHROW	include/fil0fil.h	/^		const buf_block_t*	block) UNIV_NOTHROW = 0;$/;"	m	struct:PageCallback
UNIV_NOTHROW	include/fil0fil.h	/^	virtual ulint get_space_flags() const UNIV_NOTHROW = 0;$/;"	m	struct:PageCallback
UNIV_NOTHROW	include/fil0fil.h	/^	virtual ulint get_space_id() const UNIV_NOTHROW = 0;$/;"	m	struct:PageCallback
UNIV_NOTHROW	include/fil0fil.h	/^	void set_page_size(const buf_frame_t* page) UNIV_NOTHROW;$/;"	m	struct:PageCallback
UNIV_NOTHROW	include/handler0alter.h	/^	ulonglong operator++(int) UNIV_NOTHROW;$/;"	m	struct:ib_sequence_t
UNIV_NOTHROW	include/ib0mutex.h	/^	TTASFutexMutex() UNIV_NOTHROW$/;"	m	struct:TTASFutexMutex
UNIV_NOTHROW	include/sync0policy.h	/^		UNIV_NOTHROW$/;"	m	struct:GenericPolicy
UNIV_NOTHROW	include/sync0policy.h	/^		UNIV_NOTHROW;$/;"	m	class:BlockMutexPolicy
UNIV_NOTHROW	include/sync0policy.h	/^		UNIV_NOTHROW;$/;"	m	class:MutexDebug
UNIV_NOTHROW	include/sync0policy.h	/^		UNIV_NOTHROW;$/;"	m	struct:GenericPolicy
UNIV_NOTHROW	include/sync0types.h	/^			UNIV_NOTHROW$/;"	m	struct:LatchCounter::Count
UNIV_NOTHROW	include/sync0types.h	/^		UNIV_NOTHROW$/;"	m	struct:latch_t
UNIV_NOTHROW	include/univ.i	485;"	d	file:
UNIV_NOTHROW	os/os0event.cc	/^		int64_t		reset_sig_count) UNIV_NOTHROW;$/;"	m	struct:os_event	file:
UNIV_NOTHROW	os/os0event.cc	/^	os_event(const char* name) UNIV_NOTHROW;$/;"	m	struct:os_event	file:
UNIV_NOTHROW	os/os0event.cc	/^	void wait_low(int64_t reset_sig_count) UNIV_NOTHROW;$/;"	m	struct:os_event	file:
UNIV_NOTHROW	os/os0event.cc	/^	~os_event() UNIV_NOTHROW;$/;"	m	struct:os_event	file:
UNIV_NOTHROW	row/row0import.cc	/^		THD*			thd) UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^		bool			deleted) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^		buf_block_t*	block) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^		buf_block_t*	block) UNIV_NOTHROW;$/;"	m	struct:FetchIndexRootPages	file:
UNIV_NOTHROW	row/row0import.cc	/^		buf_block_t*	page) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^		const buf_block_t*	block) UNIV_NOTHROW;$/;"	m	class:AbstractCallback	file:
UNIV_NOTHROW	row/row0import.cc	/^		const dict_index_t*	index) UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^		const ulint*	offsets) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^		ulint		i) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^		ulint&		page_type) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^	PageConverter(row_import* cfg, trx_t* trx) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^	bool	purge(const ulint* offsets) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^	dberr_t	garbage_collect() UNIV_NOTHROW;$/;"	m	class:IndexPurge	file:
UNIV_NOTHROW	row/row0import.cc	/^	dberr_t	next() UNIV_NOTHROW;$/;"	m	class:IndexPurge	file:
UNIV_NOTHROW	row/row0import.cc	/^	dberr_t	update_header(buf_block_t* block) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^	dberr_t	update_index_page(buf_block_t*	block) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^	dberr_t	update_records(buf_block_t* block) UNIV_NOTHROW;$/;"	m	class:PageConverter	file:
UNIV_NOTHROW	row/row0import.cc	/^	dberr_t build_row_import(row_import* cfg) const UNIV_NOTHROW;$/;"	m	struct:FetchIndexRootPages	file:
UNIV_NOTHROW	row/row0import.cc	/^	dberr_t set_root_by_heuristic() UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^	row_import() UNIV_NOTHROW$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^	row_index_t* get_index(const char* name) const UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^	ulint	get_n_rows(const char* name) const UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^	ulint find_col(const char* name) const UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^	ulint get_n_purge_failed(const char* name) const UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^	void	close() UNIV_NOTHROW;$/;"	m	class:IndexPurge	file:
UNIV_NOTHROW	row/row0import.cc	/^	void	open() UNIV_NOTHROW;$/;"	m	class:IndexPurge	file:
UNIV_NOTHROW	row/row0import.cc	/^	void	purge() UNIV_NOTHROW;$/;"	m	class:IndexPurge	file:
UNIV_NOTHROW	row/row0import.cc	/^	void	purge_pessimistic_delete() UNIV_NOTHROW;$/;"	m	class:IndexPurge	file:
UNIV_NOTHROW	row/row0import.cc	/^	void set_root_by_name() UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	row/row0import.cc	/^	~row_import() UNIV_NOTHROW;$/;"	m	struct:row_import	file:
UNIV_NOTHROW	sync/sync0arr.cc	/^		UNIV_NOTHROW;$/;"	m	struct:sync_array_t	file:
UNIV_NOTHROW	sync/sync0debug.cc	/^			UNIV_NOTHROW$/;"	m	struct:CreateTracker::File	file:
UNIV_NOTHROW	sync/sync0debug.cc	/^		File() UNIV_NOTHROW : m_name(), m_line() { }$/;"	m	struct:CreateTracker::File	file:
UNIV_NOTHROW	sync/sync0debug.cc	/^		UNIV_NOTHROW;$/;"	m	struct:LatchDebug	file:
UNIV_NOTHROW	sync/sync0debug.cc	/^	void unlock(const latch_t* latch) UNIV_NOTHROW;$/;"	m	struct:LatchDebug	file:
UNIV_NO_IGNORE	include/api0api.h	34;"	d
UNIV_NO_IGNORE	include/api0api.h	36;"	d
UNIV_PAGE_SIZE	include/univ.i	312;"	d	file:
UNIV_PAGE_SIZE_DEF	include/univ.i	343;"	d	file:
UNIV_PAGE_SIZE_MAX	include/univ.i	341;"	d	file:
UNIV_PAGE_SIZE_MIN	include/univ.i	339;"	d	file:
UNIV_PAGE_SIZE_ORIG	include/univ.i	345;"	d	file:
UNIV_PAGE_SIZE_SHIFT	include/univ.i	309;"	d	file:
UNIV_PAGE_SIZE_SHIFT_DEF	include/univ.i	332;"	d	file:
UNIV_PAGE_SIZE_SHIFT_MAX	include/univ.i	330;"	d	file:
UNIV_PAGE_SIZE_SHIFT_MIN	include/univ.i	328;"	d	file:
UNIV_PAGE_SIZE_SHIFT_ORIG	include/univ.i	334;"	d	file:
UNIV_PAGE_SSIZE_MAX	include/univ.i	357;"	d	file:
UNIV_PAGE_SSIZE_MIN	include/univ.i	361;"	d	file:
UNIV_PAGE_SSIZE_ORIG	include/univ.i	336;"	d	file:
UNIV_PFS_IO	include/univ.i	132;"	d	file:
UNIV_PFS_MEMORY	include/univ.i	137;"	d	file:
UNIV_PFS_MUTEX	include/univ.i	124;"	d	file:
UNIV_PFS_RWLOCK	include/univ.i	129;"	d	file:
UNIV_PFS_THREAD	include/univ.i	133;"	d	file:
UNIV_PREFETCH_R	include/univ.i	517;"	d	file:
UNIV_PREFETCH_R	include/univ.i	532;"	d	file:
UNIV_PREFETCH_R	include/univ.i	535;"	d	file:
UNIV_PREFETCH_R	include/univ.i	545;"	d	file:
UNIV_PREFETCH_R	include/univ.i	551;"	d	file:
UNIV_PREFETCH_RW	include/univ.i	520;"	d	file:
UNIV_PREFETCH_RW	include/univ.i	533;"	d	file:
UNIV_PREFETCH_RW	include/univ.i	536;"	d	file:
UNIV_PREFETCH_RW	include/univ.i	546;"	d	file:
UNIV_PREFETCH_RW	include/univ.i	552;"	d	file:
UNIV_SECTOR_SIZE	include/univ.i	/^static const size_t UNIV_SECTOR_SIZE = 512;$/;"	v	file:
UNIV_SQL_NULL	include/univ.i	493;"	d	file:
UNIV_UNLIKELY	include/univ.i	558;"	d	file:
UNIV_UNUSED	include/univ.i	504;"	d	file:
UNIV_UNUSED	include/univ.i	506;"	d	file:
UNIV_WORD_SIZE	include/univ.i	266;"	d	file:
UNIV_WORD_SIZE	include/univ.i	268;"	d	file:
UNIV_WORD_SIZE	include/univ.i	272;"	d	file:
UNIV_ZIP_SIZE_MAX	include/univ.i	351;"	d	file:
UNIV_ZIP_SIZE_MIN	include/univ.i	348;"	d	file:
UNIV_ZIP_SIZE_SHIFT_MAX	include/univ.i	324;"	d	file:
UNIV_ZIP_SIZE_SHIFT_MIN	include/univ.i	316;"	d	file:
UPD_NODE_INSERT_CLUSTERED	include/row0upd.h	590;"	d
UPD_NODE_MAGIC_N	include/row0upd.h	580;"	d
UPD_NODE_NO_ORD_CHANGE	include/row0upd.h	602;"	d
UPD_NODE_NO_SIZE_CHANGE	include/row0upd.h	605;"	d
UPD_NODE_SET_IX_LOCK	include/row0upd.h	583;"	d
UPD_NODE_UPDATE_ALL_SEC	include/row0upd.h	593;"	d
UPD_NODE_UPDATE_CLUSTERED	include/row0upd.h	588;"	d
UPD_NODE_UPDATE_SOME_SEC	include/row0upd.h	597;"	d
USE_FILE_LOCK	os/os0file.cc	1478;"	d	file:
USE_FILE_LOCK	os/os0file.cc	1479;"	d	file:
USE_FILE_LOCK	os/os0file.cc	1484;"	d	file:
UT_ARR_SIZE	include/univ.i	561;"	d	file:
UT_BITS_IN_BYTES	include/ut0ut.h	205;"	d
UT_DELETE	include/ut0new.h	810;"	d
UT_DELETE	include/ut0new.h	901;"	d
UT_DELETE_ARRAY	include/ut0new.h	853;"	d
UT_DELETE_ARRAY	include/ut0new.h	909;"	d
UT_END_OF_FIELD	include/ut0rnd.h	37;"	d
UT_HASH_RANDOM_MASK	include/ut0rnd.ic	26;"	d	file:
UT_HASH_RANDOM_MASK2	include/ut0rnd.ic	27;"	d	file:
UT_LIST_ADD_FIRST	include/ut0lst.h	177;"	d
UT_LIST_ADD_LAST	include/ut0lst.h	234;"	d
UT_LIST_BASE_NODE_T	include/ut0lst.h	93;"	d
UT_LIST_CHECK	include/ut0lst.h	458;"	d
UT_LIST_GET_FIRST	include/ut0lst.h	381;"	d
UT_LIST_GET_LAST	include/ut0lst.h	387;"	d
UT_LIST_GET_LEN	include/ut0lst.h	375;"	d
UT_LIST_GET_NEXT	include/ut0lst.h	361;"	d
UT_LIST_GET_PREV	include/ut0lst.h	368;"	d
UT_LIST_INIT	include/ut0lst.h	110;"	d
UT_LIST_INITIALISE	include/ut0lst.h	100;"	d
UT_LIST_INITIALISE	include/ut0lst.h	97;"	d
UT_LIST_INITIALISED	include/ut0lst.h	96;"	d
UT_LIST_INSERT_AFTER	include/ut0lst.h	278;"	d
UT_LIST_IS_INITIALISED	include/ut0lst.h	101;"	d
UT_LIST_IS_INITIALISED	include/ut0lst.h	98;"	d
UT_LIST_MOVE_TO_FRONT	include/ut0lst.h	503;"	d
UT_LIST_NODE_T	include/ut0lst.h	57;"	d
UT_LIST_REMOVE	include/ut0lst.h	354;"	d
UT_LIST_REVERSE	include/ut0lst.h	430;"	d
UT_LOW_PRIORITY_CPU	include/ut0ut.h	80;"	d
UT_LOW_PRIORITY_CPU	include/ut0ut.h	83;"	d
UT_MUTEX_TYPE	include/ut0mutex.h	44;"	d
UT_NEW	include/ut0new.h	785;"	d
UT_NEW	include/ut0new.h	899;"	d
UT_NEW_ARRAY	include/ut0new.h	837;"	d
UT_NEW_ARRAY	include/ut0new.h	903;"	d
UT_NEW_ARRAY_NOKEY	include/ut0new.h	846;"	d
UT_NEW_ARRAY_NOKEY	include/ut0new.h	906;"	d
UT_NEW_NOKEY	include/ut0new.h	804;"	d
UT_NEW_NOKEY	include/ut0new.h	900;"	d
UT_NOT_USED	include/ut0dbg.h	76;"	d
UT_RANDOM_1	ut/ut0rnd.cc	34;"	d	file:
UT_RANDOM_2	ut/ut0rnd.cc	35;"	d	file:
UT_RANDOM_3	ut/ut0rnd.cc	36;"	d	file:
UT_RELAX_CPU	include/ut0ut.h	63;"	d
UT_RELAX_CPU	include/ut0ut.h	65;"	d
UT_RELAX_CPU	include/ut0ut.h	69;"	d
UT_RELAX_CPU	include/ut0ut.h	74;"	d
UT_RELAX_CPU	include/ut0ut.h	76;"	d
UT_RESUME_PRIORITY_CPU	include/ut0ut.h	81;"	d
UT_RESUME_PRIORITY_CPU	include/ut0ut.h	84;"	d
UT_RND1	include/ut0rnd.ic	31;"	d	file:
UT_RND2	include/ut0rnd.ic	32;"	d	file:
UT_RND3	include/ut0rnd.ic	33;"	d	file:
UT_RND4	include/ut0rnd.ic	34;"	d	file:
UT_SORT_FUNCTION_BODY	include/ut0sort.h	52;"	d
UT_SUM_RND2	include/ut0rnd.ic	35;"	d	file:
UT_SUM_RND3	include/ut0rnd.ic	36;"	d	file:
UT_SUM_RND4	include/ut0rnd.ic	37;"	d	file:
UT_WAIT_FOR	include/ut0ut.h	92;"	d
UT_XOR_RND1	include/ut0rnd.ic	38;"	d	file:
UT_XOR_RND2	include/ut0rnd.ic	39;"	d	file:
UndoMutex	include/trx0types.h	/^typedef ib_mutex_t UndoMutex;$/;"	t
VIRTUAL_COL_UNDO_FORMAT_1	trx/trx0rec.cc	/^static const ulint VIRTUAL_COL_UNDO_FORMAT_1 = 0xF1;$/;"	v	file:
Value	handler/ha_innodb.cc	/^		Value(const char*	name,$/;"	f	struct:ShowStatus::Value
Value	handler/ha_innodb.cc	/^	struct Value {$/;"	s	struct:ShowStatus	file:
Values	handler/ha_innodb.cc	/^	typedef std::vector<Value, ut_allocator<Value> > Values;$/;"	t	struct:ShowStatus	file:
Version	include/os0file.h	/^	enum Version {$/;"	g	struct:Encryption
ViewCheck	read/read0read.cc	/^	ViewCheck() : m_prev_view() { }$/;"	f	struct:ViewCheck
ViewCheck	read/read0read.cc	/^struct	ViewCheck {$/;"	s	file:
WAIT_FOR_READ	buf/buf0buf.cc	/^static const int WAIT_FOR_READ	= 100;$/;"	v	file:
WAIT_FOR_WRITE	buf/buf0buf.cc	/^static const int WAIT_FOR_WRITE = 100;$/;"	v	file:
WIN_ASYNC_IO	include/os0file.h	73;"	d
WIN_TO_UNIX_DELTA_USEC	ut/ut0ut.cc	60;"	d	file:
WITHIN_CMP	gis/gis0geo.cc	48;"	d	file:
WRITE	include/os0file.h	/^		WRITE = 2,$/;"	e	enum:IORequest::__anon12
WaitMutex	sync/sync0arr.cc	/^typedef SyncArrayMutex::MutexType WaitMutex;$/;"	t	file:
WinThreadMap	os/os0thread.cc	/^	ut_allocator<std::pair<const DWORD, HANDLE> > >	WinThreadMap;$/;"	t	file:
XAER_ASYNC	include/trx0xa.h	44;"	d
XAER_DUPID	include/trx0xa.h	54;"	d
XAER_INVAL	include/trx0xa.h	50;"	d
XAER_NOTA	include/trx0xa.h	49;"	d
XAER_OUTSIDE	include/trx0xa.h	55;"	d
XAER_PROTO	include/trx0xa.h	51;"	d
XAER_RMERR	include/trx0xa.h	46;"	d
XAER_RMFAIL	include/trx0xa.h	53;"	d
XA_H	include/trx0xa.h	25;"	d
XA_OK	include/trx0xa.h	43;"	d
XDES_ARR_OFFSET	include/fsp0fsp.h	241;"	d
XDES_BITMAP	include/fsp0fsp.h	205;"	d
XDES_BITS_PER_PAGE	include/fsp0fsp.h	210;"	d
XDES_CLEAN_BIT	include/fsp0fsp.h	213;"	d
XDES_FLST_NODE	include/fsp0fsp.h	200;"	d
XDES_FREE	include/fsp0fsp.h	218;"	d
XDES_FREE_BIT	include/fsp0fsp.h	211;"	d
XDES_FREE_FRAG	include/fsp0fsp.h	219;"	d
XDES_FSEG	include/fsp0fsp.h	223;"	d
XDES_FULL_FRAG	include/fsp0fsp.h	221;"	d
XDES_ID	include/fsp0fsp.h	198;"	d
XDES_SIZE	include/fsp0fsp.h	226;"	d
XDES_SIZE_MAX	include/fsp0fsp.h	231;"	d
XDES_SIZE_MIN	include/fsp0fsp.h	236;"	d
XDES_STATE	include/fsp0fsp.h	202;"	d
XIDDATASIZE	include/trx0xa.h	35;"	d
X_LOCK_DECR	include/sync0rw.h	101;"	d
X_LOCK_HALF_DECR	include/sync0rw.h	102;"	d
YYABORT	fts/fts0pars.cc	595;"	d	file:
YYABORT	pars/pars0grm.cc	1187;"	d	file:
YYACCEPT	fts/fts0pars.cc	594;"	d	file:
YYACCEPT	pars/pars0grm.cc	1186;"	d	file:
YYBACKUP	fts/fts0pars.cc	616;"	d	file:
YYBACKUP	pars/pars0grm.cc	1199;"	d	file:
YYBISON	fts/fts0pars.cc	44;"	d	file:
YYBISON	pars/pars0grm.cc	47;"	d	file:
YYBISON_VERSION	fts/fts0pars.cc	47;"	d	file:
YYBISON_VERSION	pars/pars0grm.cc	50;"	d	file:
YYCASE_	fts/fts0pars.cc	1061;"	d	file:
YYCASE_	fts/fts0pars.cc	1071;"	d	file:
YYCOPY	fts/fts0pars.cc	378;"	d	file:
YYCOPY	fts/fts0pars.cc	381;"	d	file:
YYCOPY	pars/pars0grm.cc	510;"	d	file:
YYCOPY	pars/pars0grm.cc	513;"	d	file:
YYCOPY_NEEDED	fts/fts0pars.cc	353;"	d	file:
YYDEBUG	fts/fts0pars.cc	121;"	d	file:
YYDEBUG	pars/pars0grm.cc	303;"	d	file:
YYDPRINTF	fts/fts0pars.cc	699;"	d	file:
YYDPRINTF	fts/fts0pars.cc	848;"	d	file:
YYDPRINTF	pars/pars0grm.cc	1279;"	d	file:
YYDPRINTF	pars/pars0grm.cc	1425;"	d	file:
YYEMPTY	fts/fts0pars.cc	591;"	d	file:
YYEMPTY	pars/pars0grm.cc	1183;"	d	file:
YYEOF	fts/fts0pars.cc	592;"	d	file:
YYEOF	pars/pars0grm.cc	1184;"	d	file:
YYERRCLEANUP	fts/fts0pars.cc	636;"	d	file:
YYERRCODE	fts/fts0pars.cc	634;"	d	file:
YYERRCODE	pars/pars0grm.cc	1218;"	d	file:
YYERROR	fts/fts0pars.cc	596;"	d	file:
YYERROR	pars/pars0grm.cc	1188;"	d	file:
YYERROR_VERBOSE	fts/fts0pars.cc	126;"	d	file:
YYERROR_VERBOSE	fts/fts0pars.cc	127;"	d	file:
YYERROR_VERBOSE	fts/fts0pars.cc	129;"	d	file:
YYERROR_VERBOSE	fts/fts0pars.cc	98;"	d	file:
YYERROR_VERBOSE	pars/pars0grm.cc	308;"	d	file:
YYERROR_VERBOSE	pars/pars0grm.cc	309;"	d	file:
YYERROR_VERBOSE	pars/pars0grm.cc	311;"	d	file:
YYFAIL	fts/fts0pars.cc	606;"	d	file:
YYFAIL	pars/pars0grm.cc	1195;"	d	file:
YYFINAL	fts/fts0pars.cc	394;"	d	file:
YYFINAL	pars/pars0grm.cc	543;"	d	file:
YYFPRINTF	fts/fts0pars.cc	696;"	d	file:
YYFPRINTF	pars/pars0grm.cc	1276;"	d	file:
YYFREE	fts/fts0pars.cc	323;"	d	file:
YYFREE	pars/pars0grm.cc	476;"	d	file:
YYID	fts/fts0pars.cc	/^YYID (int yyi)$/;"	f	file:
YYID	fts/fts0pars.cc	249;"	d	file:
YYID	pars/pars0grm.cc	/^YYID (int i)$/;"	f	file:
YYID	pars/pars0grm.cc	402;"	d	file:
YYINITDEPTH	fts/fts0pars.cc	857;"	d	file:
YYINITDEPTH	pars/pars0grm.cc	1434;"	d	file:
YYLAST	fts/fts0pars.cc	396;"	d	file:
YYLAST	pars/pars0grm.cc	545;"	d	file:
YYLEX	fts/fts0pars.cc	686;"	d	file:
YYLEX	fts/fts0pars.cc	688;"	d	file:
YYLEX	pars/pars0grm.cc	1266;"	d	file:
YYLEX	pars/pars0grm.cc	1268;"	d	file:
YYLEX_PARAM	fts/fts0pars.cc	102;"	d	file:
YYLLOC_DEFAULT	fts/fts0pars.cc	656;"	d	file:
YYLLOC_DEFAULT	pars/pars0grm.cc	1227;"	d	file:
YYLSP_NEEDED	fts/fts0pars.cc	62;"	d	file:
YYLSP_NEEDED	pars/pars0grm.cc	59;"	d	file:
YYMALLOC	fts/fts0pars.cc	316;"	d	file:
YYMALLOC	pars/pars0grm.cc	469;"	d	file:
YYMAXDEPTH	fts/fts0pars.cc	868;"	d	file:
YYMAXDEPTH	pars/pars0grm.cc	1445;"	d	file:
YYMAXUTOK	fts/fts0pars.cc	409;"	d	file:
YYMAXUTOK	pars/pars0grm.cc	558;"	d	file:
YYNNTS	fts/fts0pars.cc	401;"	d	file:
YYNNTS	pars/pars0grm.cc	550;"	d	file:
YYNRULES	fts/fts0pars.cc	403;"	d	file:
YYNRULES	pars/pars0grm.cc	552;"	d	file:
YYNSTATES	fts/fts0pars.cc	405;"	d	file:
YYNSTATES	pars/pars0grm.cc	554;"	d	file:
YYNTOKENS	fts/fts0pars.cc	399;"	d	file:
YYNTOKENS	pars/pars0grm.cc	548;"	d	file:
YYPACT_NINF	fts/fts0pars.cc	534;"	d	file:
YYPACT_NINF	pars/pars0grm.cc	910;"	d	file:
YYPARSE_PARAM	fts/fts0pars.cc	101;"	d	file:
YYPOPSTACK	fts/fts0pars.cc	1233;"	d	file:
YYPOPSTACK	pars/pars0grm.cc	1776;"	d	file:
YYPULL	fts/fts0pars.cc	59;"	d	file:
YYPURE	fts/fts0pars.cc	53;"	d	file:
YYPURE	pars/pars0grm.cc	56;"	d	file:
YYPUSH	fts/fts0pars.cc	56;"	d	file:
YYRECOVERING	fts/fts0pars.cc	614;"	d	file:
YYRECOVERING	pars/pars0grm.cc	1197;"	d	file:
YYRHSLOC	fts/fts0pars.cc	654;"	d	file:
YYRHSLOC	pars/pars0grm.cc	1225;"	d	file:
YYSIZE_MAXIMUM	fts/fts0pars.cc	226;"	d	file:
YYSIZE_MAXIMUM	pars/pars0grm.cc	379;"	d	file:
YYSIZE_T	fts/fts0pars.cc	214;"	d	file:
YYSIZE_T	fts/fts0pars.cc	216;"	d	file:
YYSIZE_T	fts/fts0pars.cc	220;"	d	file:
YYSIZE_T	fts/fts0pars.cc	222;"	d	file:
YYSIZE_T	pars/pars0grm.cc	367;"	d	file:
YYSIZE_T	pars/pars0grm.cc	369;"	d	file:
YYSIZE_T	pars/pars0grm.cc	373;"	d	file:
YYSIZE_T	pars/pars0grm.cc	375;"	d	file:
YYSKELETON_NAME	fts/fts0pars.cc	50;"	d	file:
YYSKELETON_NAME	pars/pars0grm.cc	53;"	d	file:
YYSTACK_ALLOC	fts/fts0pars.cc	272;"	d	file:
YYSTACK_ALLOC	fts/fts0pars.cc	279;"	d	file:
YYSTACK_ALLOC	fts/fts0pars.cc	302;"	d	file:
YYSTACK_ALLOC	pars/pars0grm.cc	425;"	d	file:
YYSTACK_ALLOC	pars/pars0grm.cc	432;"	d	file:
YYSTACK_ALLOC	pars/pars0grm.cc	455;"	d	file:
YYSTACK_ALLOC_MAXIMUM	fts/fts0pars.cc	299;"	d	file:
YYSTACK_ALLOC_MAXIMUM	fts/fts0pars.cc	305;"	d	file:
YYSTACK_ALLOC_MAXIMUM	pars/pars0grm.cc	452;"	d	file:
YYSTACK_ALLOC_MAXIMUM	pars/pars0grm.cc	458;"	d	file:
YYSTACK_BYTES	fts/fts0pars.cc	349;"	d	file:
YYSTACK_BYTES	pars/pars0grm.cc	502;"	d	file:
YYSTACK_FREE	fts/fts0pars.cc	293;"	d	file:
YYSTACK_FREE	fts/fts0pars.cc	303;"	d	file:
YYSTACK_FREE	pars/pars0grm.cc	446;"	d	file:
YYSTACK_FREE	pars/pars0grm.cc	456;"	d	file:
YYSTACK_GAP_MAXIMUM	fts/fts0pars.cc	345;"	d	file:
YYSTACK_GAP_MAXIMUM	pars/pars0grm.cc	498;"	d	file:
YYSTACK_RELOCATE	fts/fts0pars.cc	360;"	d	file:
YYSTACK_RELOCATE	pars/pars0grm.cc	529;"	d	file:
YYSTATE	fts/fts0blex.cc	151;"	d	file:
YYSTATE	fts/fts0tlex.cc	151;"	d	file:
YYSTATE	pars/lexyy.cc	134;"	d	file:
YYSTYPE	fts/fts0pars.cc	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE	fts/fts0pars.cc	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	include/fts0pars.h	/^typedef union YYSTYPE$/;"	u
YYSTYPE	include/fts0pars.h	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	include/pars0grm.h	/^typedef int YYSTYPE;$/;"	t
YYSTYPE	pars/lexyy.cc	955;"	d	file:
YYSTYPE	pars/pars0grm.cc	/^typedef int YYSTYPE;$/;"	t	file:
YYSTYPE	pars/pars0grm.cc	294;"	d	file:
YYSTYPE_IS_DECLARED	fts/fts0pars.cc	171;"	d	file:
YYSTYPE_IS_DECLARED	include/fts0pars.h	67;"	d
YYSTYPE_IS_DECLARED	include/pars0grm.h	256;"	d
YYSTYPE_IS_DECLARED	pars/pars0grm.cc	322;"	d	file:
YYSTYPE_IS_TRIVIAL	fts/fts0pars.cc	169;"	d	file:
YYSTYPE_IS_TRIVIAL	include/fts0pars.h	65;"	d
YYSTYPE_IS_TRIVIAL	include/pars0grm.h	257;"	d
YYSTYPE_IS_TRIVIAL	pars/pars0grm.cc	323;"	d	file:
YYTABLES_NAME	fts/fts0blex.cc	1955;"	d	file:
YYTABLES_NAME	fts/fts0tlex.cc	1948;"	d	file:
YYTABLES_NAME	pars/lexyy.cc	3111;"	d	file:
YYTABLE_NINF	fts/fts0pars.cc	552;"	d	file:
YYTABLE_NINF	pars/pars0grm.cc	967;"	d	file:
YYTERROR	fts/fts0pars.cc	633;"	d	file:
YYTERROR	pars/pars0grm.cc	1217;"	d	file:
YYTOKENFREE	fts/fts0pars.cc	104;"	d	file:
YYTOKENTYPE	fts/fts0pars.cc	140;"	d	file:
YYTOKENTYPE	include/fts0pars.h	36;"	d
YYTOKENTYPE	include/pars0grm.h	38;"	d
YYTOKENTYPE	pars/pars0grm.cc	65;"	d	file:
YYTOKEN_TABLE	fts/fts0pars.cc	134;"	d	file:
YYTOKEN_TABLE	pars/pars0grm.cc	316;"	d	file:
YYTRANSLATE	fts/fts0pars.cc	411;"	d	file:
YYTRANSLATE	pars/pars0grm.cc	560;"	d	file:
YYUNDEFTOK	fts/fts0pars.cc	408;"	d	file:
YYUNDEFTOK	pars/pars0grm.cc	557;"	d	file:
YYUSE	fts/fts0pars.cc	242;"	d	file:
YYUSE	fts/fts0pars.cc	244;"	d	file:
YYUSE	pars/pars0grm.cc	395;"	d	file:
YYUSE	pars/pars0grm.cc	397;"	d	file:
YY_	fts/fts0pars.cc	232;"	d	file:
YY_	fts/fts0pars.cc	236;"	d	file:
YY_	pars/pars0grm.cc	385;"	d	file:
YY_	pars/pars0grm.cc	389;"	d	file:
YY_AT_BOL	fts/fts0blex.cc	334;"	d	file:
YY_AT_BOL	fts/fts0tlex.cc	334;"	d	file:
YY_AT_BOL	pars/lexyy.cc	341;"	d	file:
YY_BREAK	fts/fts0blex.cc	695;"	d	file:
YY_BREAK	fts/fts0tlex.cc	691;"	d	file:
YY_BREAK	pars/lexyy.cc	1180;"	d	file:
YY_BUFFER_EOF_PENDING	fts/fts0blex.cc	270;"	d	file:
YY_BUFFER_EOF_PENDING	fts/fts0tlex.cc	270;"	d	file:
YY_BUFFER_EOF_PENDING	pars/lexyy.cc	257;"	d	file:
YY_BUFFER_NEW	fts/fts0blex.cc	258;"	d	file:
YY_BUFFER_NEW	fts/fts0tlex.cc	258;"	d	file:
YY_BUFFER_NEW	pars/lexyy.cc	245;"	d	file:
YY_BUFFER_NORMAL	fts/fts0blex.cc	259;"	d	file:
YY_BUFFER_NORMAL	fts/fts0tlex.cc	259;"	d	file:
YY_BUFFER_NORMAL	pars/lexyy.cc	246;"	d	file:
YY_BUFFER_STATE	fts/fts0blex.cc	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUFFER_STATE	fts/fts0tlex.cc	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUFFER_STATE	include/fts0blex.h	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state
YY_BUFFER_STATE	include/fts0tlex.h	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state
YY_BUFFER_STATE	pars/lexyy.cc	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	fts/fts0blex.cc	168;"	d	file:
YY_BUF_SIZE	fts/fts0blex.cc	170;"	d	file:
YY_BUF_SIZE	fts/fts0tlex.cc	168;"	d	file:
YY_BUF_SIZE	fts/fts0tlex.cc	170;"	d	file:
YY_BUF_SIZE	include/fts0blex.h	140;"	d
YY_BUF_SIZE	include/fts0blex.h	142;"	d
YY_BUF_SIZE	include/fts0tlex.h	140;"	d
YY_BUF_SIZE	include/fts0tlex.h	142;"	d
YY_BUF_SIZE	pars/lexyy.cc	151;"	d	file:
YY_BUF_SIZE	pars/lexyy.cc	153;"	d	file:
YY_CHAR	fts/fts0blex.cc	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CHAR	fts/fts0tlex.cc	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CHAR	pars/lexyy.cc	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	fts/fts0blex.cc	281;"	d	file:
YY_CURRENT_BUFFER	fts/fts0tlex.cc	281;"	d	file:
YY_CURRENT_BUFFER	pars/lexyy.cc	273;"	d	file:
YY_CURRENT_BUFFER_LVALUE	fts/fts0blex.cc	288;"	d	file:
YY_CURRENT_BUFFER_LVALUE	fts/fts0tlex.cc	288;"	d	file:
YY_CURRENT_BUFFER_LVALUE	pars/lexyy.cc	280;"	d	file:
YY_DECL	fts/fts0blex.cc	481;"	d	file:
YY_DECL	fts/fts0blex.cc	683;"	d	file:
YY_DECL	fts/fts0tlex.cc	477;"	d	file:
YY_DECL	fts/fts0tlex.cc	679;"	d	file:
YY_DECL	include/fts0blex.h	327;"	d
YY_DECL	include/fts0blex.h	341;"	d
YY_DECL	include/fts0tlex.h	327;"	d
YY_DECL	include/fts0tlex.h	341;"	d
YY_DECL	pars/lexyy.cc	1168;"	d	file:
YY_DECL_IS_OURS	fts/fts0blex.cc	679;"	d	file:
YY_DECL_IS_OURS	fts/fts0tlex.cc	675;"	d	file:
YY_DECL_IS_OURS	include/fts0blex.h	323;"	d
YY_DECL_IS_OURS	include/fts0blex.h	340;"	d
YY_DECL_IS_OURS	include/fts0tlex.h	323;"	d
YY_DECL_IS_OURS	include/fts0tlex.h	340;"	d
YY_DECL_IS_OURS	pars/lexyy.cc	1164;"	d	file:
YY_DO_BEFORE_ACTION	fts/fts0blex.cc	355;"	d	file:
YY_DO_BEFORE_ACTION	fts/fts0tlex.cc	355;"	d	file:
YY_DO_BEFORE_ACTION	include/fts0blex.h	337;"	d
YY_DO_BEFORE_ACTION	include/fts0tlex.h	337;"	d
YY_DO_BEFORE_ACTION	pars/lexyy.cc	369;"	d	file:
YY_END_OF_BUFFER	fts/fts0blex.cc	363;"	d	file:
YY_END_OF_BUFFER	fts/fts0tlex.cc	363;"	d	file:
YY_END_OF_BUFFER	pars/lexyy.cc	377;"	d	file:
YY_END_OF_BUFFER_CHAR	fts/fts0blex.cc	159;"	d	file:
YY_END_OF_BUFFER_CHAR	fts/fts0tlex.cc	159;"	d	file:
YY_END_OF_BUFFER_CHAR	pars/lexyy.cc	142;"	d	file:
YY_EXIT_FAILURE	fts/fts0blex.cc	1610;"	d	file:
YY_EXIT_FAILURE	fts/fts0tlex.cc	1603;"	d	file:
YY_EXIT_FAILURE	pars/lexyy.cc	2909;"	d	file:
YY_EXTRA_TYPE	fts/fts0blex.cc	498;"	d	file:
YY_EXTRA_TYPE	fts/fts0tlex.cc	494;"	d	file:
YY_EXTRA_TYPE	include/fts0blex.h	244;"	d
YY_EXTRA_TYPE	include/fts0tlex.h	244;"	d
YY_EXTRA_TYPE	pars/lexyy.cc	1022;"	d	file:
YY_FATAL_ERROR	fts/fts0blex.cc	670;"	d	file:
YY_FATAL_ERROR	fts/fts0tlex.cc	666;"	d	file:
YY_FATAL_ERROR	pars/lexyy.cc	1155;"	d	file:
YY_FLEX_MAJOR_VERSION	fts/fts0blex.cc	11;"	d	file:
YY_FLEX_MAJOR_VERSION	fts/fts0tlex.cc	11;"	d	file:
YY_FLEX_MAJOR_VERSION	include/fts0blex.h	14;"	d
YY_FLEX_MAJOR_VERSION	include/fts0tlex.h	14;"	d
YY_FLEX_MAJOR_VERSION	pars/lexyy.cc	11;"	d	file:
YY_FLEX_MINOR_VERSION	fts/fts0blex.cc	12;"	d	file:
YY_FLEX_MINOR_VERSION	fts/fts0tlex.cc	12;"	d	file:
YY_FLEX_MINOR_VERSION	include/fts0blex.h	15;"	d
YY_FLEX_MINOR_VERSION	include/fts0tlex.h	15;"	d
YY_FLEX_MINOR_VERSION	pars/lexyy.cc	12;"	d	file:
YY_FLEX_SUBMINOR_VERSION	fts/fts0blex.cc	13;"	d	file:
YY_FLEX_SUBMINOR_VERSION	fts/fts0tlex.cc	13;"	d	file:
YY_FLEX_SUBMINOR_VERSION	include/fts0blex.h	16;"	d
YY_FLEX_SUBMINOR_VERSION	include/fts0tlex.h	16;"	d
YY_FLEX_SUBMINOR_VERSION	pars/lexyy.cc	13;"	d	file:
YY_FLUSH_BUFFER	fts/fts0blex.cc	302;"	d	file:
YY_FLUSH_BUFFER	fts/fts0tlex.cc	302;"	d	file:
YY_FLUSH_BUFFER	include/fts0blex.h	333;"	d
YY_FLUSH_BUFFER	include/fts0tlex.h	333;"	d
YY_FLUSH_BUFFER	pars/lexyy.cc	309;"	d	file:
YY_INPUT	fts/fts0blex.cc	622;"	d	file:
YY_INPUT	fts/fts0tlex.cc	618;"	d	file:
YY_INPUT	pars/lexyy.cc	1108;"	d	file:
YY_INPUT	pars/lexyy.cc	970;"	d	file:
YY_INT_ALIGNED	fts/fts0blex.cc	6;"	d	file:
YY_INT_ALIGNED	fts/fts0tlex.cc	6;"	d	file:
YY_INT_ALIGNED	include/fts0blex.h	9;"	d
YY_INT_ALIGNED	include/fts0tlex.h	9;"	d
YY_INT_ALIGNED	pars/lexyy.cc	6;"	d	file:
YY_LESS_LINENO	fts/fts0blex.cc	187;"	d	file:
YY_LESS_LINENO	fts/fts0tlex.cc	187;"	d	file:
YY_LESS_LINENO	pars/lexyy.cc	179;"	d	file:
YY_LOCATION_PRINT	fts/fts0pars.cc	679;"	d	file:
YY_LOCATION_PRINT	pars/pars0grm.cc	1253;"	d	file:
YY_LOCATION_PRINT	pars/pars0grm.cc	1258;"	d	file:
YY_MORE_ADJ	fts/fts0blex.cc	449;"	d	file:
YY_MORE_ADJ	fts/fts0tlex.cc	445;"	d	file:
YY_MORE_ADJ	pars/lexyy.cc	913;"	d	file:
YY_NEW_FILE	fts/fts0blex.cc	157;"	d	file:
YY_NEW_FILE	fts/fts0tlex.cc	157;"	d	file:
YY_NEW_FILE	include/fts0blex.h	332;"	d
YY_NEW_FILE	include/fts0tlex.h	332;"	d
YY_NEW_FILE	pars/lexyy.cc	140;"	d	file:
YY_NO_INPUT	fts/fts0blex.cc	484;"	d	file:
YY_NO_INPUT	fts/fts0tlex.cc	480;"	d	file:
YY_NO_INPUT	pars/lexyy.cc	952;"	d	file:
YY_NO_UNISTD_H	include/univ.i	150;"	d	file:
YY_NO_UNISTD_H	pars/lexyy.cc	953;"	d	file:
YY_NULL	fts/fts0blex.cc	114;"	d	file:
YY_NULL	fts/fts0tlex.cc	114;"	d	file:
YY_NULL	pars/lexyy.cc	114;"	d	file:
YY_NUM_RULES	fts/fts0blex.cc	362;"	d	file:
YY_NUM_RULES	fts/fts0tlex.cc	362;"	d	file:
YY_NUM_RULES	pars/lexyy.cc	376;"	d	file:
YY_READ_BUF_SIZE	fts/fts0blex.cc	604;"	d	file:
YY_READ_BUF_SIZE	fts/fts0blex.cc	606;"	d	file:
YY_READ_BUF_SIZE	fts/fts0tlex.cc	600;"	d	file:
YY_READ_BUF_SIZE	fts/fts0tlex.cc	602;"	d	file:
YY_READ_BUF_SIZE	include/fts0blex.h	308;"	d
YY_READ_BUF_SIZE	include/fts0blex.h	310;"	d
YY_READ_BUF_SIZE	include/fts0tlex.h	308;"	d
YY_READ_BUF_SIZE	include/fts0tlex.h	310;"	d
YY_READ_BUF_SIZE	pars/lexyy.cc	1090;"	d	file:
YY_READ_BUF_SIZE	pars/lexyy.cc	1092;"	d	file:
YY_REDUCE_PRINT	fts/fts0pars.cc	838;"	d	file:
YY_REDUCE_PRINT	fts/fts0pars.cc	851;"	d	file:
YY_REDUCE_PRINT	pars/pars0grm.cc	1415;"	d	file:
YY_REDUCE_PRINT	pars/pars0grm.cc	1428;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	fts/fts0blex.cc	450;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	fts/fts0tlex.cc	446;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	pars/lexyy.cc	914;"	d	file:
YY_RULE_SETUP	fts/fts0blex.cc	698;"	d	file:
YY_RULE_SETUP	fts/fts0tlex.cc	694;"	d	file:
YY_RULE_SETUP	pars/lexyy.cc	1183;"	d	file:
YY_SC_TO_UI	fts/fts0blex.cc	121;"	d	file:
YY_SC_TO_UI	fts/fts0tlex.cc	121;"	d	file:
YY_SC_TO_UI	pars/lexyy.cc	121;"	d	file:
YY_SKIP_YYWRAP	fts/fts0blex.cc	339;"	d	file:
YY_SKIP_YYWRAP	fts/fts0tlex.cc	339;"	d	file:
YY_SKIP_YYWRAP	include/fts0blex.h	226;"	d
YY_SKIP_YYWRAP	include/fts0tlex.h	226;"	d
YY_SKIP_YYWRAP	pars/lexyy.cc	346;"	d	file:
YY_STACK_PRINT	fts/fts0pars.cc	800;"	d	file:
YY_STACK_PRINT	fts/fts0pars.cc	850;"	d	file:
YY_STACK_PRINT	pars/pars0grm.cc	1377;"	d	file:
YY_STACK_PRINT	pars/pars0grm.cc	1427;"	d	file:
YY_START	fts/fts0blex.cc	150;"	d	file:
YY_START	fts/fts0tlex.cc	150;"	d	file:
YY_START	pars/lexyy.cc	133;"	d	file:
YY_START_STACK_INCR	fts/fts0blex.cc	665;"	d	file:
YY_START_STACK_INCR	fts/fts0tlex.cc	661;"	d	file:
YY_START_STACK_INCR	include/fts0blex.h	316;"	d
YY_START_STACK_INCR	include/fts0tlex.h	316;"	d
YY_START_STACK_INCR	pars/lexyy.cc	1150;"	d	file:
YY_STATE_BUF_SIZE	fts/fts0blex.cc	176;"	d	file:
YY_STATE_BUF_SIZE	fts/fts0tlex.cc	176;"	d	file:
YY_STATE_BUF_SIZE	pars/lexyy.cc	159;"	d	file:
YY_STATE_EOF	fts/fts0blex.cc	154;"	d	file:
YY_STATE_EOF	fts/fts0tlex.cc	154;"	d	file:
YY_STATE_EOF	pars/lexyy.cc	137;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	fts/fts0blex.cc	211;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	fts/fts0tlex.cc	211;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	include/fts0blex.h	157;"	d
YY_STRUCT_YY_BUFFER_STATE	include/fts0tlex.h	157;"	d
YY_STRUCT_YY_BUFFER_STATE	pars/lexyy.cc	198;"	d	file:
YY_SYMBOL_PRINT	fts/fts0pars.cc	705;"	d	file:
YY_SYMBOL_PRINT	fts/fts0pars.cc	849;"	d	file:
YY_SYMBOL_PRINT	pars/pars0grm.cc	1285;"	d	file:
YY_SYMBOL_PRINT	pars/pars0grm.cc	1426;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	fts/fts0blex.cc	179;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	fts/fts0tlex.cc	179;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	include/fts0blex.h	147;"	d
YY_TYPEDEF_YY_BUFFER_STATE	include/fts0tlex.h	147;"	d
YY_TYPEDEF_YY_BUFFER_STATE	pars/lexyy.cc	162;"	d	file:
YY_TYPEDEF_YY_SCANNER_T	fts/fts0blex.cc	125;"	d	file:
YY_TYPEDEF_YY_SCANNER_T	fts/fts0tlex.cc	125;"	d	file:
YY_TYPEDEF_YY_SCANNER_T	include/fts0blex.h	118;"	d
YY_TYPEDEF_YY_SCANNER_T	include/fts0tlex.h	118;"	d
YY_TYPEDEF_YY_SIZE_T	fts/fts0blex.cc	206;"	d	file:
YY_TYPEDEF_YY_SIZE_T	fts/fts0tlex.cc	206;"	d	file:
YY_TYPEDEF_YY_SIZE_T	include/fts0blex.h	152;"	d
YY_TYPEDEF_YY_SIZE_T	include/fts0tlex.h	152;"	d
YY_TYPEDEF_YY_SIZE_T	pars/lexyy.cc	167;"	d	file:
YY_USER_ACTION	fts/fts0blex.cc	690;"	d	file:
YY_USER_ACTION	fts/fts0tlex.cc	686;"	d	file:
YY_USER_ACTION	pars/lexyy.cc	1175;"	d	file:
YY_USE_CONST	fts/fts0blex.cc	102;"	d	file:
YY_USE_CONST	fts/fts0blex.cc	95;"	d	file:
YY_USE_CONST	fts/fts0tlex.cc	102;"	d	file:
YY_USE_CONST	fts/fts0tlex.cc	95;"	d	file:
YY_USE_CONST	include/fts0blex.h	105;"	d
YY_USE_CONST	include/fts0blex.h	98;"	d
YY_USE_CONST	include/fts0tlex.h	105;"	d
YY_USE_CONST	include/fts0tlex.h	98;"	d
YY_USE_CONST	pars/lexyy.cc	102;"	d	file:
YY_USE_CONST	pars/lexyy.cc	95;"	d	file:
ZIP_PAD_INCR	include/dict0mem.h	736;"	d
ZIP_PAD_ROUND_LEN	include/dict0mem.h	730;"	d
ZIP_PAD_SUCCESSFUL_ROUND_LIMIT	include/dict0mem.h	733;"	d
ZLIB	include/os0file.h	/^		ZLIB = 1,$/;"	e	enum:Compression::Type
_IB_TO_STR	include/univ.i	42;"	d	file:
_STDLIB_H	pars/pars0grm.cc	437;"	d	file:
_STDLIB_H	pars/pars0grm.cc	465;"	d	file:
__STDC_LIMIT_MACROS	fts/fts0blex.cc	41;"	d	file:
__STDC_LIMIT_MACROS	fts/fts0tlex.cc	41;"	d	file:
__STDC_LIMIT_MACROS	include/fts0blex.h	44;"	d
__STDC_LIMIT_MACROS	include/fts0tlex.h	44;"	d
__STDC_LIMIT_MACROS	include/srv0mon.h	35;"	d
__STDC_LIMIT_MACROS	pars/lexyy.cc	41;"	d	file:
_gis0geo_h	include/gis0geo.h	24;"	d
abort	include/trx0trx.h	/^	bool		abort;		\/*!< if this flag is set then$/;"	m	struct:trx_t
access_time	handler/i_s.cc	/^	unsigned	access_time:32;	\/*!< Time of first access *\/$/;"	m	struct:buf_page_info_t	file:
access_time	include/buf0buf.h	/^	unsigned	access_time;	\/*!< time of first access, or$/;"	m	class:buf_page_t
acquire	include/dict0dict.ic	/^dict_table_t::acquire()$/;"	f	class:dict_table_t
acquire	os/os0file.cc	/^	void acquire() const$/;"	f	class:AIO
activity_count	srv/srv0srv.cc	/^			activity_count;		\/*!< For tracking server$/;"	m	struct:srv_sys_t	file:
adaptive	include/hash0hash.h	/^	ibool			adaptive;\/* TRUE if this is the hash$/;"	m	struct:hash_table_t
add	include/log0recv.h	/^	void add(const byte* page) {$/;"	f	struct:recv_dblwr_t
add	include/row0trunc.h	/^	static void add(truncate_t* ptr)$/;"	f	class:truncate_t
add	include/row0trunc.h	/^	void add(index_t& index)$/;"	f	class:truncate_t
add_autoinc	handler/handler0alter.cc	/^	const ulint	add_autoinc;$/;"	m	struct:ha_innobase_inplace_ctx	file:
add_block	include/dyn0buf.h	/^	block_t* add_block()$/;"	f	class:dyn_buf_t
add_cols	handler/handler0alter.cc	/^	const dtuple_t*	add_cols;$/;"	m	struct:ha_innobase_inplace_ctx	file:
add_cols	row/row0log.cc	/^	const dtuple_t*	add_cols;$/;"	m	struct:row_log_t	file:
add_datafile	fsp/fsp0space.cc	/^Tablespace::add_datafile($/;"	f	class:Tablespace
add_dirty_page_to_flush_list	mtr/mtr0mtr.cc	/^	void add_dirty_page_to_flush_list(mtr_memo_slot_t* slot) const$/;"	f	struct:ReleaseBlocks
add_fk	handler/handler0alter.cc	/^	dict_foreign_t** add_fk;$/;"	m	struct:ha_innobase_inplace_ctx	file:
add_index	handler/handler0alter.cc	/^	dict_index_t**	add_index;$/;"	m	struct:ha_innobase_inplace_ctx	file:
add_key_numbers	handler/handler0alter.cc	/^	const ulint*	add_key_numbers;$/;"	m	struct:ha_innobase_inplace_ctx	file:
add_lock_to_cache	trx/trx0i_s.cc	/^add_lock_to_cache($/;"	f	file:
add_lock_wait_to_cache	trx/trx0i_s.cc	/^add_lock_wait_to_cache($/;"	f	file:
add_pool	include/ut0pool.h	/^	bool add_pool(size_t n_pools)$/;"	f	struct:PoolManager
add_pos	fts/fts0fts.cc	/^	ulint		add_pos;	\/*!< Added position for tokens *\/$/;"	m	struct:fts_tokenize_param_t	file:
add_rseg_to_trunc	include/trx0purge.h	/^		void add_rseg_to_trunc(trx_rseg_t* rseg)$/;"	f	class:undo::Truncate
add_space_to_trunc_list	include/trx0purge.h	/^		static void add_space_to_trunc_list(ulint space_id)$/;"	f	class:undo::Truncate
add_table_to_thread_cache	handler/ha_innodb.cc	/^add_table_to_thread_cache($/;"	f	file:
add_to_waitq	lock/lock0lock.cc	/^RecLock::add_to_waitq(const lock_t* wait_for, const lock_prdt_t* prdt)$/;"	f	class:RecLock
add_trx_relevant_locks_to_cache	trx/trx0i_s.cc	/^add_trx_relevant_locks_to_cache($/;"	f	file:
add_v	include/dict0crea.h	/^			add_v;		\/*!< new virtual columns that being$/;"	m	struct:ind_node_t
add_vcol	handler/handler0alter.cc	/^	dict_v_col_t*	add_vcol;$/;"	m	struct:ha_innobase_inplace_ctx	file:
add_vcol_name	handler/handler0alter.cc	/^	const char**	add_vcol_name;$/;"	m	struct:ha_innobase_inplace_ctx	file:
add_wq	include/fts0fts.h	/^	ib_wqueue_t*	add_wq;$/;"	m	class:fts_t
added	fts/fts0opt.cc	/^	ulint		added;		\/*!< Number of doc ids added since the$/;"	m	struct:fts_slot_t	file:
added	include/fts0types.h	/^	ulint		added;		\/*!< Number of doc ids added since last$/;"	m	struct:fts_cache_t
added_doc_ids	include/fts0fts.h	/^	fts_doc_ids_t*	added_doc_ids;	\/*!< list of added doc ids (NULL until$/;"	m	struct:fts_trx_table_t
added_rec	include/mtr0mtr.h	/^	void added_rec()$/;"	f	struct:mtr_t
addr_hash	include/log0recv.h	/^	hash_node_t	addr_hash;\/*!< hash node in the hash bucket chain *\/$/;"	m	struct:recv_addr_t
addr_hash	include/log0recv.h	/^	hash_table_t*	addr_hash;\/*!< hash table of file addresses of pages *\/$/;"	m	struct:recv_sys_t
address	include/mem0mem.h	/^	const_pointer address (const_reference r) const { return(&r); }$/;"	f	class:mem_heap_allocator
address	include/mem0mem.h	/^	pointer address (reference r) const { return(&r); }$/;"	f	class:mem_heap_allocator
address	include/pars0pars.h	/^	const void*	address;	\/*!< address *\/$/;"	m	struct:pars_bound_lit_t
address	include/ut0new.h	/^	address($/;"	f	class:ut_allocator
adjacent	os/os0file.cc	/^	bool adjacent(const Slot* s1, const Slot* s2) const$/;"	f	class:SimulatedAIOHandler	file:
adjust	buf/buf0buf.cc	/^FlushHp::adjust(const buf_page_t* bpage)$/;"	f	class:FlushHp
adjust	buf/buf0buf.cc	/^LRUHp::adjust(const buf_page_t* bpage)$/;"	f	class:LRUHp
advance	os/os0file.cc	/^	void advance(ssize_t n_bytes)$/;"	f	class:SyncFileIO
af_get_pct_for_dirty	buf/buf0flu.cc	/^af_get_pct_for_dirty()$/;"	f	file:
af_get_pct_for_lsn	buf/buf0flu.cc	/^af_get_pct_for_lsn($/;"	f	file:
aggregate_already_fetched	include/row0sel.h	/^	ibool		aggregate_already_fetched;$/;"	m	struct:sel_node_t
alias	include/pars0sym.h	/^	sym_node_t*			alias;		\/*!< pointer to$/;"	m	struct:sym_node_t
all_info	include/row0ftsort.h	/^	fts_psort_t*		all_info;	\/*!< all parallel sort info *\/$/;"	m	struct:fts_psort_common_t
all_innodb_conds	handler/ha_innodb.cc	/^static PSI_cond_info	all_innodb_conds[] = {$/;"	v	file:
all_innodb_files	handler/ha_innodb.cc	/^static PSI_file_info	all_innodb_files[] = {$/;"	v	file:
all_innodb_mutexes	handler/ha_innodb.cc	/^static PSI_mutex_info all_innodb_mutexes[] = {$/;"	v	file:
all_innodb_rwlocks	handler/ha_innodb.cc	/^static PSI_rwlock_info all_innodb_rwlocks[] = {$/;"	v	file:
all_innodb_threads	handler/ha_innodb.cc	/^static PSI_thread_info	all_innodb_threads[] = {$/;"	v	file:
all_pthread_mutexes	handler/ha_innodb.cc	/^static PSI_mutex_info	all_pthread_mutexes[] = {$/;"	v	file:
alloc	data/data0data.cc	/^big_rec_t::alloc($/;"	f	class:big_rec_t
alloc_blob_heap_array	handler/ha_innopart.cc	/^ha_innopart::alloc_blob_heap_array()$/;"	f	class:ha_innopart
alloc_max_retries	ut/ut0new.cc	/^const size_t	alloc_max_retries = 60;$/;"	v
alloc_size	include/os0file.h	/^	os_offset_t	alloc_size;		\/*!< Allocated size for$/;"	m	struct:os_file_stat_t
alloca	fts/fts0pars.cc	277;"	d	file:
alloca	pars/pars0grm.cc	430;"	d	file:
allocate	include/mem0mem.h	/^	pointer	allocate(size_type n, const_pointer hint = 0)$/;"	f	class:mem_heap_allocator
allocate	include/ut0new.h	/^	allocate($/;"	f	class:ut_allocator
allocate_large	include/ut0new.h	/^	allocate_large($/;"	f	class:ut_allocator
allocate_trace	include/ut0new.h	/^	allocate_trace($/;"	f	class:ut_allocator
allocate_trx	handler/ha_innodb.cc	/^create_table_info_t::allocate_trx()$/;"	f	class:create_table_info_t
allocated	include/gis0type.h	/^	bool		allocated;\/*!< whether this structure is allocate or$/;"	m	struct:rtr_info
allocator	include/buf0buf.h	/^	ut_allocator<unsigned char>	allocator;	\/*!< Allocator used for$/;"	m	struct:buf_pool_t
allocator	include/ut0vec.h	/^	ib_alloc_t*	allocator;	\/* Allocator, because one size$/;"	m	struct:ib_vector_t
allow_duplicates	include/dict0mem.h	/^	unsigned	allow_duplicates:1;$/;"	m	struct:dict_index_t
alter_fill_stored_column	handler/handler0alter.cc	/^alter_fill_stored_column($/;"	f	file:
alter_flags	handler/ha_innopart.h	/^	alter_flags($/;"	f	class:ha_innopart
alter_stats_norebuild	handler/handler0alter.cc	/^alter_stats_norebuild($/;"	f	file:
alter_stats_rebuild	handler/handler0alter.cc	/^alter_stats_rebuild($/;"	f	file:
alter_table_flags	handler/ha_innopart.cc	/^ha_innopart::alter_table_flags($/;"	f	class:ha_innopart
alter_templ_needs_rebuild	handler/handler0alter.cc	/^alter_templ_needs_rebuild($/;"	f	file:
analyze	handler/ha_innodb.cc	/^ha_innobase::analyze($/;"	f	class:ha_innobase
api0api_h	include/api0api.h	28;"	d
api0misc_h	include/api0misc.h	28;"	d
api_auto_commit	include/trx0trx.h	/^	bool		api_auto_commit;\/*!< automatic commit *\/$/;"	m	struct:trx_t
api_trx	include/trx0trx.h	/^	bool		api_trx;	\/*!< trx started by InnoDB API *\/$/;"	m	struct:trx_t
append	include/data0data.h	/^	void append(const big_rec_field_t& field)$/;"	f	struct:big_rec_t
append	include/row0upd.h	/^	void append(const upd_field_t& field)$/;"	f	struct:upd_t
append	include/trx0types.h	/^	void append(const TrxUndoRsegs& append_from)$/;"	f	class:TrxUndoRsegs
append_on_checkpoint	include/log0log.h	/^	mtr_buf_t*	append_on_checkpoint;$/;"	m	struct:log_t
append_sep_and_name	handler/ha_innopart.cc	/^Ha_innopart_share::append_sep_and_name($/;"	f	class:Ha_innopart_share
apply_batch_on	include/log0recv.h	/^	ibool		apply_batch_on;$/;"	m	struct:recv_sys_t
apply_log_recs	include/log0recv.h	/^	ibool		apply_log_recs;$/;"	m	struct:recv_sys_t
arg	include/pars0pars.h	/^	void*			arg;	\/*!< user-supplied argument *\/$/;"	m	struct:pars_user_func_t
arg	include/ut0vec.h	/^	void*		arg;		\/* Currently if not NULL then it$/;"	m	struct:ib_alloc_t
args	include/pars0pars.h	/^	que_node_t*	args;	\/*!< argument(s) of the function *\/$/;"	m	struct:func_node_t
array	include/hash0hash.h	/^	hash_cell_t*		array;	\/*!< pointer to cell array *\/$/;"	m	struct:hash_table_t
array	sync/sync0arr.cc	/^	sync_cell_t*	array;		\/*!< pointer to wait array *\/$/;"	m	struct:sync_array_t	file:
array_size	handler/ha_innodb.h	/^	ulint		array_size;	\/*!< array size of index_mapping *\/$/;"	m	struct:innodb_idx_translate_t
asc	include/pars0pars.h	/^	ibool		asc;	\/*!< TRUE if ascending, FALSE if descending *\/$/;"	m	struct:order_node_t
asc	include/row0sel.h	/^	ibool		asc;		\/*!< TRUE if cursor traveling upwards *\/$/;"	m	struct:plan_t
asc	include/row0sel.h	/^	ibool		asc;		\/*!< TRUE if the rows should be fetched$/;"	m	struct:sel_node_t
assert_block_ahi_empty	include/buf0buf.h	1802;"	d
assert_block_ahi_empty	include/buf0buf.h	1812;"	d
assert_block_ahi_empty_on_init	include/buf0buf.h	1804;"	d
assert_block_ahi_empty_on_init	include/buf0buf.h	1813;"	d
assert_block_ahi_valid	include/buf0buf.h	1808;"	d
assert_block_ahi_valid	include/buf0buf.h	1814;"	d
assert_trx_in_rw_list	include/trx0trx.h	620;"	d
assert_trx_is_free	include/trx0trx.h	646;"	d
assert_trx_is_inactive	include/trx0trx.h	659;"	d
assert_trx_nonlocking_or_in_list	include/trx0trx.h	669;"	d
assert_trx_nonlocking_or_in_list	include/trx0trx.h	689;"	d
assign	read/read0read.cc	/^ReadView::ids_t::assign(const value_type* start, const value_type* end)$/;"	f	class:ReadView::ids_t
assign_node_t	include/pars0pars.h	/^struct assign_node_t{$/;"	s
assign_step	eval/eval0proc.cc	/^assign_step($/;"	f
at	include/dyn0buf.h	/^	Type at(ulint pos)$/;"	f	class:dyn_buf_t
at	include/dyn0buf.h	/^	const Type at(ulint pos) const$/;"	f	class:dyn_buf_t
atime	include/os0file.h	/^	time_t		atime;			\/*!< access time *\/$/;"	m	struct:os_file_stat_t
atomic_write	include/fil0fil.h	/^	bool		atomic_write;$/;"	m	struct:fil_node_t
attr	include/api0api.h	/^	ib_col_attr_t	attr;		\/*!< Column attributes *\/$/;"	m	struct:__anon21
auto_commit	include/trx0trx.h	/^	bool		auto_commit;	\/*!< true if it is an autocommit *\/$/;"	m	struct:trx_t
autoinc	include/dict0mem.h	/^	ib_uint64_t				autoinc;$/;"	m	struct:dict_table_t
autoinc_error	include/row0mysql.h	/^	dberr_t		autoinc_error;	\/*!< The actual error code encountered$/;"	m	struct:row_prebuilt_t
autoinc_increment	include/row0mysql.h	/^	ulonglong	autoinc_increment;\/*!< The increment step of the auto$/;"	m	struct:row_prebuilt_t
autoinc_last_value	include/row0mysql.h	/^	ulonglong	autoinc_last_value;$/;"	m	struct:row_prebuilt_t
autoinc_lock	include/dict0mem.h	/^	lock_t*					autoinc_lock;$/;"	m	struct:dict_table_t
autoinc_locks	include/trx0trx.h	/^	ib_vector_t*    autoinc_locks;  \/* AUTOINC locks held by this$/;"	m	struct:trx_t
autoinc_map	include/dict0dict.h	/^	autoinc_map_t*	autoinc_map;	\/*!< Map to store table id and autoinc$/;"	m	struct:dict_sys_t
autoinc_map_t	include/dict0dict.h	/^typedef std::map<table_id_t, ib_uint64_t> autoinc_map_t;$/;"	t
autoinc_mutex	include/dict0mem.h	/^	ib_mutex_t*				autoinc_mutex;$/;"	m	struct:dict_table_t
autoinc_mutex_created	include/dict0mem.h	/^	volatile os_once::state_t		autoinc_mutex_created;$/;"	m	struct:dict_table_t
autoinc_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	autoinc_mutex_key;$/;"	v
autoinc_offset	include/row0mysql.h	/^	ulonglong	autoinc_offset; \/*!< The offset passed to$/;"	m	struct:row_prebuilt_t
autoinc_trx	include/dict0mem.h	/^	const trx_t*				autoinc_trx;$/;"	m	struct:dict_table_t
aux_index_id	include/row0ftsort.h	/^	ulint		aux_index_id;	\/*!< Auxiliary index id *\/$/;"	m	struct:fts_psort_insert
b_event	include/buf0dblwr.h	/^	os_event_t	b_event;\/*!< event where threads wait for a$/;"	m	struct:buf_dblwr_t
b_reserved	include/buf0dblwr.h	/^	ulint		b_reserved;\/*!< number of slots currently reserved$/;"	m	struct:buf_dblwr_t
back	include/dyn0buf.h	/^	block_t* back()$/;"	f	class:dyn_buf_t
back	include/read0types.h	/^		value_type back() const$/;"	f	class:ReadView::ids_t
backup_redo_log_flushed_lsn	log/log0recv.cc	/^volatile lsn_t backup_redo_log_flushed_lsn;$/;"	v
bas_ext	handler/ha_innodb.cc	/^ha_innobase::bas_ext() const$/;"	f	class:ha_innobase
base	include/mem0mem.h	/^	UT_LIST_BASE_NODE_T(mem_block_t) base; \/* In the first block in the$/;"	m	struct:mem_block_info_t
base	trx/trx0i_s.cc	/^	void*	base;		\/*!< start of the chunk *\/$/;"	m	struct:i_s_mem_chunk_t	file:
base_col	include/dict0mem.h	/^	dict_col_t**		base_col;$/;"	m	struct:dict_v_col_t
base_col	include/dict0mem.h	/^	dict_col_t**	base_col;$/;"	m	struct:dict_s_col_t
base_col_no	include/dict0crea.h	/^	ulint		base_col_no;	\/*!< next base column to insert *\/$/;"	m	struct:tab_node_t
batch_running	include/buf0dblwr.h	/^	bool		batch_running;\/*!< set to TRUE if currently a batch$/;"	m	struct:buf_dblwr_t
begin	include/trx0types.h	/^	iterator begin()$/;"	f	class:TrxUndoRsegs
begin_phase_end	include/ut0stage.h	/^	begin_phase_end()$/;"	f	class:ut_stage_alter_t
begin_phase_end	include/ut0stage.h	/^ut_stage_alter_t::begin_phase_end()$/;"	f	class:ut_stage_alter_t
begin_phase_flush	include/ut0stage.h	/^	begin_phase_flush($/;"	f	class:ut_stage_alter_t
begin_phase_flush	include/ut0stage.h	/^ut_stage_alter_t::begin_phase_flush($/;"	f	class:ut_stage_alter_t
begin_phase_insert	include/ut0stage.h	/^	begin_phase_insert()$/;"	f	class:ut_stage_alter_t
begin_phase_insert	include/ut0stage.h	/^ut_stage_alter_t::begin_phase_insert()$/;"	f	class:ut_stage_alter_t
begin_phase_log_index	include/ut0stage.h	/^	begin_phase_log_index()$/;"	f	class:ut_stage_alter_t
begin_phase_log_index	include/ut0stage.h	/^ut_stage_alter_t::begin_phase_log_index()$/;"	f	class:ut_stage_alter_t
begin_phase_log_table	include/ut0stage.h	/^	begin_phase_log_table()$/;"	f	class:ut_stage_alter_t
begin_phase_log_table	include/ut0stage.h	/^ut_stage_alter_t::begin_phase_log_table()$/;"	f	class:ut_stage_alter_t
begin_phase_read_pk	include/ut0stage.h	/^	begin_phase_read_pk($/;"	f	class:ut_stage_alter_t
begin_phase_read_pk	include/ut0stage.h	/^ut_stage_alter_t::begin_phase_read_pk($/;"	f	class:ut_stage_alter_t
begin_phase_sort	include/ut0stage.h	/^	begin_phase_sort($/;"	f	class:ut_stage_alter_t
begin_phase_sort	include/ut0stage.h	/^ut_stage_alter_t::begin_phase_sort($/;"	f	class:ut_stage_alter_t
begin_stmt	include/trx0trx.h	/^	static void begin_stmt(trx_t* trx)$/;"	f	class:TrxInInnoDB
being_extended	include/fil0fil.h	/^	bool		being_extended;$/;"	m	struct:fil_node_t
bg_threads	include/fts0fts.h	/^	ulint		bg_threads;$/;"	m	class:fts_t
bg_threads_mutex	include/fts0fts.h	/^	ib_mutex_t	bg_threads_mutex;$/;"	m	class:fts_t
big_rec_field_t	include/data0data.h	/^	big_rec_field_t(ulint field_no_, ulint len_, const void* data_)$/;"	f	struct:big_rec_field_t
big_rec_field_t	include/data0data.h	/^struct big_rec_field_t {$/;"	s
big_rec_t	include/data0data.h	/^	explicit big_rec_t(const ulint max)$/;"	f	struct:big_rec_t
big_rec_t	include/data0data.h	/^struct big_rec_t {$/;"	s
big_rows	include/dict0mem.h	/^	unsigned				big_rows:1;$/;"	m	struct:dict_table_t
bit_no	include/lock0iter.h	/^	ulint		bit_no;$/;"	m	struct:lock_queue_iterator_t
blob_alloc	row/row0log.cc	/^	void blob_alloc(ulonglong offset_arg) {$/;"	f	class:row_log_table_blob_t
blob_free	row/row0log.cc	/^	void blob_free(ulonglong offset_arg)$/;"	f	class:row_log_table_blob_t
blob_heap	include/row0mysql.h	/^	mem_heap_t*	blob_heap;	\/*!< in SELECTS BLOB fields are copied$/;"	m	struct:row_prebuilt_t
blob_op	include/btr0cur.h	/^enum blob_op {$/;"	g
blobs	row/row0log.cc	/^	page_no_map*	blobs;	\/*!< map of page numbers of off-page columns$/;"	m	struct:row_log_t	file:
block	include/dict0mem.h	/^	buf_block_t*	block;$/;"	m	class:last_ops_cur_t
block	include/gis0type.h	/^	buf_block_t	block;		\/*!< the shadow buffer block *\/$/;"	m	struct:matched_rec
block	include/ha0ha.h	/^	buf_block_t*	block;	\/*!< buffer block containing the data, or NULL *\/$/;"	m	struct:ha_node_t
block	include/page0cur.h	/^	buf_block_t*	block;	\/*!< pointer to the block containing rec *\/$/;"	m	struct:page_cur_t
block	row/row0log.cc	/^	byte*		block;	\/*!< file block buffer *\/$/;"	m	struct:row_log_buf_t	file:
block1	include/buf0dblwr.h	/^	ulint		block1;	\/*!< the page number of the first$/;"	m	struct:buf_dblwr_t
block2	include/buf0dblwr.h	/^	ulint		block2;	\/*!< page number of the second block *\/$/;"	m	struct:buf_dblwr_t
block_alloc	include/row0ftsort.h	/^	row_merge_block_t*	block_alloc[FTS_NUM_AUX_INDEX];$/;"	m	struct:fts_psort_t
block_cache	os/os0file.cc	/^static Blocks*	block_cache;$/;"	v	file:
block_id	handler/i_s.cc	/^	ulint		block_id;	\/*!< Buffer Pool block ID *\/$/;"	m	struct:buf_page_info_t	file:
block_list_t	include/dyn0buf.h	/^	typedef UT_LIST_BASE_NODE_T(block_t) block_list_t;$/;"	t	class:dyn_buf_t
block_node_t	include/dyn0buf.h	/^	typedef UT_LIST_NODE_T(block_t) block_node_t;$/;"	t	class:dyn_buf_t
block_pfx	row/row0log.cc	/^	ut_new_pfx_t	block_pfx; \/*!< opaque descriptor of "block". Set$/;"	m	struct:row_log_buf_t	file:
block_size	include/fil0fil.h	/^	ulint           block_size;$/;"	m	struct:fil_node_t
block_size	include/os0file.h	/^	size_t		block_size;		\/*!< Block size to use for IO$/;"	m	struct:os_file_stat_t
block_size	include/os0file.h	/^	void block_size(ulint block_size)$/;"	f	class:IORequest
block_sz	fts/fts0opt.cc	/^	ulint		block_sz;	\/*!< Size of a block in bytes *\/$/;"	m	struct:fts_zip_t	file:
block_t	include/dyn0buf.h	/^		block_t()$/;"	f	class:dyn_buf_t::block_t
block_t	include/dyn0buf.h	/^	class block_t {$/;"	c	class:dyn_buf_t
block_when_stored	include/btr0pcur.h	/^	buf_block_t*	block_when_stored;$/;"	m	struct:btr_pcur_t
blocking_lock_row	include/trx0i_s.h	/^	const i_s_locks_row_t*	blocking_lock_row;	\/*!< blocking lock *\/$/;"	m	struct:i_s_lock_waits_row_t
blocks	fts/fts0opt.cc	/^	ib_vector_t*	blocks;		\/*!< Vector of compressed blocks *\/$/;"	m	struct:fts_zip_t	file:
blocks	include/btr0cur.h	/^	buf_block_t*	blocks[3];$/;"	m	struct:btr_latch_leaves_t
blocks	include/buf0buf.ic	/^	buf_block_t*	blocks;		\/*!< array of buffer control blocks *\/$/;"	m	struct:buf_chunk_t	file:
blocks	row/row0log.cc	/^	ulint		blocks; \/*!< current position in blocks *\/$/;"	m	struct:row_log_buf_t	file:
boffset	include/fil0fil.h	/^	ulint	boffset;	\/*!< byte offset within the page *\/$/;"	m	struct:fil_addr_t
boolean_mode	fts/fts0que.cc	/^	bool		boolean_mode;	\/*!< TRUE if boolean mode query *\/$/;"	m	struct:fts_query_t	file:
bound_ids	include/pars0pars.h	/^	ib_vector_t*	bound_ids;	\/*!< bound ids, or NULL$/;"	m	struct:pars_info_t
bound_lits	include/pars0pars.h	/^	ib_vector_t*	bound_lits;	\/*!< bound literals, or NULL$/;"	m	struct:pars_info_t
boundaries_t	dict/dict0stats.cc	/^typedef std::vector<ib_uint64_t, ut_allocator<ib_uint64_t> >	boundaries_t;$/;"	t	file:
bpage	include/buf0buf.h	/^	buf_page_t	bpage;	\/*!< Embedded bpage descriptor *\/$/;"	m	struct:buf_buddy_free_t
bpmutex	sync/sync0arr.cc	/^	BlockWaitMutex*	bpmutex;$/;"	m	union:sync_object_t	file:
brother	include/que0types.h	/^	que_node_t*	brother;\/* pointer to a possible brother node *\/$/;"	m	struct:que_common_t
btr0btr_h	include/btr0btr.h	28;"	d
btr0bulk_h	include/btr0bulk.h	27;"	d
btr0cur_h	include/btr0cur.h	27;"	d
btr0pcur_h	include/btr0pcur.h	27;"	d
btr0sea_h	include/btr0sea.h	27;"	d
btr0types_h	include/btr0types.h	27;"	d
btr_ahi_parts	btr/btr0sea.cc	/^ulong		btr_ahi_parts		= 8;$/;"	v
btr_assert_not_corrupted	include/btr0btr.h	156;"	d
btr_attach_half_pages	btr/btr0btr.cc	/^btr_attach_half_pages($/;"	f
btr_blob_free	btr/btr0cur.cc	/^btr_blob_free($/;"	f	file:
btr_blob_get_next_page_no	btr/btr0cur.cc	/^btr_blob_get_next_page_no($/;"	f	file:
btr_blob_get_part_len	btr/btr0cur.cc	/^btr_blob_get_part_len($/;"	f	file:
btr_blob_log_check_t	btr/btr0cur.cc	/^	btr_blob_log_check_t($/;"	f	struct:btr_blob_log_check_t
btr_blob_log_check_t	btr/btr0cur.cc	/^struct btr_blob_log_check_t {$/;"	s	file:
btr_blob_op_is_update	include/btr0cur.ic	/^btr_blob_op_is_update($/;"	f
btr_block_get	include/btr0btr.h	225;"	d
btr_block_get	include/btr0btr.h	236;"	d
btr_block_get_func	include/btr0btr.ic	/^btr_block_get_func($/;"	f
btr_bulk	include/row0ftsort.h	/^	BtrBulk*	btr_bulk;	\/*!< Bulk load instance *\/$/;"	m	struct:fts_psort_insert
btr_can_merge_with_page	btr/btr0btr.cc	/^btr_can_merge_with_page($/;"	f
btr_check_blob_fil_page_type	btr/btr0cur.cc	/^btr_check_blob_fil_page_type($/;"	f	file:
btr_check_node_ptr	btr/btr0btr.cc	/^btr_check_node_ptr($/;"	f
btr_compress	btr/btr0btr.cc	/^btr_compress($/;"	f
btr_copy_blob_prefix	btr/btr0cur.cc	/^btr_copy_blob_prefix($/;"	f	file:
btr_copy_externally_stored_field	btr/btr0cur.cc	/^btr_copy_externally_stored_field($/;"	f
btr_copy_externally_stored_field_prefix	btr/btr0cur.cc	/^btr_copy_externally_stored_field_prefix($/;"	f
btr_copy_externally_stored_field_prefix_low	btr/btr0cur.cc	/^btr_copy_externally_stored_field_prefix_low($/;"	f	file:
btr_copy_zblob_prefix	btr/btr0cur.cc	/^btr_copy_zblob_prefix($/;"	f	file:
btr_corruption_report	btr/btr0btr.cc	/^btr_corruption_report($/;"	f
btr_create	btr/btr0btr.cc	/^btr_create($/;"	f
btr_create_t	include/btr0types.h	/^	explicit btr_create_t(const byte* const ptr)$/;"	f	struct:btr_create_t
btr_create_t	include/btr0types.h	/^struct btr_create_t {$/;"	s
btr_cur	include/btr0pcur.h	/^	btr_cur_t	btr_cur;$/;"	m	struct:btr_pcur_t
btr_cur_add_path_info	btr/btr0cur.cc	/^btr_cur_add_path_info($/;"	f	file:
btr_cur_can_delete_without_compress	include/btr0cur.ic	/^btr_cur_can_delete_without_compress($/;"	f
btr_cur_compress_if_useful	btr/btr0cur.cc	/^btr_cur_compress_if_useful($/;"	f
btr_cur_compress_recommendation	include/btr0cur.ic	/^btr_cur_compress_recommendation($/;"	f
btr_cur_del_mark_set_clust_rec	btr/btr0cur.cc	/^btr_cur_del_mark_set_clust_rec($/;"	f
btr_cur_del_mark_set_clust_rec_log	btr/btr0cur.cc	/^btr_cur_del_mark_set_clust_rec_log($/;"	f
btr_cur_del_mark_set_sec_rec	btr/btr0cur.cc	/^btr_cur_del_mark_set_sec_rec($/;"	f
btr_cur_del_mark_set_sec_rec_log	btr/btr0cur.cc	/^btr_cur_del_mark_set_sec_rec_log($/;"	f
btr_cur_disown_inherited_fields	btr/btr0cur.cc	/^btr_cur_disown_inherited_fields($/;"	f
btr_cur_get_and_clear_intention	btr/btr0cur.cc	/^btr_cur_get_and_clear_intention($/;"	f	file:
btr_cur_get_block	include/btr0cur.h	98;"	d
btr_cur_get_block	include/btr0cur.ic	/^btr_cur_get_block($/;"	f
btr_cur_get_index	include/btr0cur.h	121;"	d
btr_cur_get_page	include/btr0cur.ic	/^btr_cur_get_page($/;"	f
btr_cur_get_page_cur	include/btr0cur.h	97;"	d
btr_cur_get_page_cur	include/btr0cur.ic	/^btr_cur_get_page_cur($/;"	f
btr_cur_get_page_zip	include/btr0cur.ic	/^btr_cur_get_page_zip($/;"	f
btr_cur_get_rec	include/btr0cur.h	99;"	d
btr_cur_get_rec	include/btr0cur.ic	/^btr_cur_get_rec($/;"	f
btr_cur_ins_lock_and_undo	btr/btr0cur.cc	/^btr_cur_ins_lock_and_undo($/;"	f
btr_cur_insert_if_possible	btr/btr0cur.cc	/^btr_cur_insert_if_possible($/;"	f
btr_cur_latch_for_root_leaf	btr/btr0cur.cc	/^btr_cur_latch_for_root_leaf($/;"	f	file:
btr_cur_latch_leaves	btr/btr0cur.cc	/^btr_cur_latch_leaves($/;"	f
btr_cur_limit_optimistic_insert_debug	btr/btr0cur.cc	/^uint	btr_cur_limit_optimistic_insert_debug = 0;$/;"	v
btr_cur_method	include/btr0cur.h	/^enum btr_cur_method {$/;"	g
btr_cur_n_non_sea	btr/btr0cur.cc	/^ulint	btr_cur_n_non_sea	= 0;$/;"	v
btr_cur_n_non_sea_old	btr/btr0cur.cc	/^ulint	btr_cur_n_non_sea_old	= 0;$/;"	v
btr_cur_n_sea	btr/btr0cur.cc	/^ulint	btr_cur_n_sea		= 0;$/;"	v
btr_cur_n_sea_old	btr/btr0cur.cc	/^ulint	btr_cur_n_sea_old	= 0;$/;"	v
btr_cur_need_opposite_intention	btr/btr0cur.cc	/^btr_cur_need_opposite_intention($/;"	f	file:
btr_cur_open_at_index_side	include/btr0cur.h	239;"	d
btr_cur_open_at_index_side_func	btr/btr0cur.cc	/^btr_cur_open_at_index_side_func($/;"	f
btr_cur_open_at_index_side_with_no_latch	include/btr0cur.h	264;"	d
btr_cur_open_at_index_side_with_no_latch_func	btr/btr0cur.cc	/^btr_cur_open_at_index_side_with_no_latch_func($/;"	f
btr_cur_open_at_rnd_pos	include/btr0cur.h	281;"	d
btr_cur_open_at_rnd_pos_func	btr/btr0cur.cc	/^btr_cur_open_at_rnd_pos_func($/;"	f
btr_cur_optimistic_delete	include/btr0cur.h	546;"	d
btr_cur_optimistic_delete	include/btr0cur.h	549;"	d
btr_cur_optimistic_delete_func	btr/btr0cur.cc	/^btr_cur_optimistic_delete_func($/;"	f
btr_cur_optimistic_insert	btr/btr0cur.cc	/^btr_cur_optimistic_insert($/;"	f
btr_cur_optimistic_latch_leaves	btr/btr0cur.cc	/^btr_cur_optimistic_latch_leaves($/;"	f
btr_cur_optimistic_update	btr/btr0cur.cc	/^btr_cur_optimistic_update($/;"	f
btr_cur_parse_del_mark_set_clust_rec	btr/btr0cur.cc	/^btr_cur_parse_del_mark_set_clust_rec($/;"	f
btr_cur_parse_del_mark_set_sec_rec	btr/btr0cur.cc	/^btr_cur_parse_del_mark_set_sec_rec($/;"	f
btr_cur_parse_update_in_place	btr/btr0cur.cc	/^btr_cur_parse_update_in_place($/;"	f
btr_cur_pess_upd_restore_supremum	btr/btr0cur.cc	/^btr_cur_pess_upd_restore_supremum($/;"	f	file:
btr_cur_pessimistic_delete	btr/btr0cur.cc	/^btr_cur_pessimistic_delete($/;"	f
btr_cur_pessimistic_insert	btr/btr0cur.cc	/^btr_cur_pessimistic_insert($/;"	f
btr_cur_pessimistic_update	btr/btr0cur.cc	/^btr_cur_pessimistic_update($/;"	f
btr_cur_position	include/btr0cur.ic	/^btr_cur_position($/;"	f
btr_cur_prefetch_siblings	btr/btr0cur.cc	/^btr_cur_prefetch_siblings($/;"	f	file:
btr_cur_search_to_nth_level	btr/btr0cur.cc	/^btr_cur_search_to_nth_level($/;"	f
btr_cur_search_to_nth_level_with_no_latch	btr/btr0cur.cc	/^btr_cur_search_to_nth_level_with_no_latch($/;"	f
btr_cur_set_deleted_flag_for_ibuf	btr/btr0cur.cc	/^btr_cur_set_deleted_flag_for_ibuf($/;"	f
btr_cur_set_ownership_of_extern_field	btr/btr0cur.cc	/^btr_cur_set_ownership_of_extern_field($/;"	f	file:
btr_cur_t	include/btr0cur.h	/^	btr_cur_t() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:btr_cur_t
btr_cur_t	include/btr0cur.h	/^struct btr_cur_t {$/;"	s
btr_cur_unmark_extern_fields	btr/btr0cur.cc	/^btr_cur_unmark_extern_fields($/;"	f	file:
btr_cur_upd_lock_and_undo	btr/btr0cur.cc	/^btr_cur_upd_lock_and_undo($/;"	f
btr_cur_update_alloc_zip	include/btr0cur.h	372;"	d
btr_cur_update_alloc_zip	include/btr0cur.h	375;"	d
btr_cur_update_alloc_zip_func	btr/btr0cur.cc	/^btr_cur_update_alloc_zip_func($/;"	f
btr_cur_update_in_place	btr/btr0cur.cc	/^btr_cur_update_in_place($/;"	f
btr_cur_update_in_place_log	btr/btr0cur.cc	/^btr_cur_update_in_place_log($/;"	f
btr_cur_will_modify_tree	btr/btr0cur.cc	/^btr_cur_will_modify_tree($/;"	f	file:
btr_discard_only_page_on_level	btr/btr0btr.cc	/^btr_discard_only_page_on_level($/;"	f	file:
btr_discard_page	btr/btr0btr.cc	/^btr_discard_page($/;"	f
btr_estimate_n_rows_in_range	btr/btr0cur.cc	/^btr_estimate_n_rows_in_range($/;"	f
btr_estimate_n_rows_in_range_low	btr/btr0cur.cc	/^btr_estimate_n_rows_in_range_low($/;"	f	file:
btr_estimate_n_rows_in_range_on_level	btr/btr0cur.cc	/^btr_estimate_n_rows_in_range_on_level($/;"	f	file:
btr_estimate_number_of_different_key_vals	btr/btr0cur.cc	/^btr_estimate_number_of_different_key_vals($/;"	f
btr_free	btr/btr0btr.cc	/^btr_free($/;"	f
btr_free_but_not_root	btr/btr0btr.cc	/^btr_free_but_not_root($/;"	f	file:
btr_free_externally_stored_field	btr/btr0cur.cc	/^btr_free_externally_stored_field($/;"	f
btr_free_if_exists	btr/btr0btr.cc	/^btr_free_if_exists($/;"	f
btr_free_root	btr/btr0btr.cc	/^btr_free_root($/;"	f	file:
btr_free_root_check	btr/btr0btr.cc	/^btr_free_root_check($/;"	f
btr_free_root_invalidate	btr/btr0btr.cc	/^btr_free_root_invalidate($/;"	f	file:
btr_get_search_latch	include/btr0sea.ic	/^btr_get_search_latch(const dict_index_t* index)$/;"	f
btr_get_search_table	include/btr0sea.ic	/^btr_get_search_table(const dict_index_t* index)$/;"	f
btr_get_size	btr/btr0btr.cc	/^btr_get_size($/;"	f
btr_height_get	btr/btr0btr.cc	/^btr_height_get($/;"	f
btr_index_page_validate	btr/btr0btr.cc	/^btr_index_page_validate($/;"	f	file:
btr_index_rec_validate	btr/btr0btr.cc	/^btr_index_rec_validate($/;"	f
btr_index_rec_validate_report	btr/btr0btr.cc	/^btr_index_rec_validate_report($/;"	f	file:
btr_insert_into_right_sibling	btr/btr0btr.cc	/^btr_insert_into_right_sibling($/;"	f	file:
btr_insert_on_non_leaf_level	include/btr0btr.h	483;"	d
btr_insert_on_non_leaf_level_func	btr/btr0btr.cc	/^btr_insert_on_non_leaf_level_func($/;"	f
btr_intention_t	btr/btr0cur.cc	/^enum btr_intention_t {$/;"	g	file:
btr_latch_leaves_t	include/btr0cur.h	/^struct btr_latch_leaves_t {$/;"	s
btr_latch_mode	include/btr0btr.h	/^enum btr_latch_mode {$/;"	g
btr_leaf_page_release	include/btr0btr.ic	/^btr_leaf_page_release($/;"	f
btr_level_list_remove	btr/btr0btr.cc	2916;"	d	file:
btr_level_list_remove_func	btr/btr0btr.cc	/^btr_level_list_remove_func($/;"	f	file:
btr_lift_page_up	btr/btr0btr.cc	/^btr_lift_page_up($/;"	f	file:
btr_node_ptr_delete	btr/btr0btr.cc	/^btr_node_ptr_delete($/;"	f
btr_node_ptr_get_child	btr/btr0btr.cc	/^btr_node_ptr_get_child($/;"	f	file:
btr_node_ptr_get_child_page_no	include/btr0btr.ic	/^btr_node_ptr_get_child_page_no($/;"	f
btr_node_ptr_set_child_page_no	btr/btr0btr.cc	/^btr_node_ptr_set_child_page_no($/;"	f
btr_op_t	btr/btr0cur.cc	/^enum btr_op_t {$/;"	g	file:
btr_page_alloc	btr/btr0btr.cc	/^btr_page_alloc($/;"	f
btr_page_alloc_for_ibuf	btr/btr0btr.cc	/^btr_page_alloc_for_ibuf($/;"	f	file:
btr_page_alloc_low	btr/btr0btr.cc	/^btr_page_alloc_low($/;"	f
btr_page_create	btr/btr0btr.cc	/^btr_page_create($/;"	f
btr_page_empty	btr/btr0btr.cc	/^btr_page_empty($/;"	f	file:
btr_page_free	btr/btr0btr.cc	/^btr_page_free($/;"	f
btr_page_free_for_ibuf	btr/btr0btr.cc	/^btr_page_free_for_ibuf($/;"	f	file:
btr_page_free_low	btr/btr0btr.cc	/^btr_page_free_low($/;"	f
btr_page_get	include/btr0btr.h	246;"	d
btr_page_get_father	btr/btr0btr.cc	/^btr_page_get_father($/;"	f	file:
btr_page_get_father_block	btr/btr0btr.cc	/^btr_page_get_father_block($/;"	f	file:
btr_page_get_father_node_ptr	btr/btr0btr.cc	802;"	d	file:
btr_page_get_father_node_ptr_for_validate	btr/btr0btr.cc	806;"	d	file:
btr_page_get_father_node_ptr_func	btr/btr0btr.cc	/^btr_page_get_father_node_ptr_func($/;"	f	file:
btr_page_get_index_id	include/btr0btr.ic	/^btr_page_get_index_id($/;"	f
btr_page_get_level	include/btr0btr.h	269;"	d
btr_page_get_level_low	include/btr0btr.ic	/^btr_page_get_level_low($/;"	f
btr_page_get_next	include/btr0btr.ic	/^btr_page_get_next($/;"	f
btr_page_get_prev	include/btr0btr.ic	/^btr_page_get_prev($/;"	f
btr_page_get_split_rec	btr/btr0btr.cc	/^btr_page_get_split_rec($/;"	f	file:
btr_page_get_split_rec_to_left	btr/btr0btr.cc	/^btr_page_get_split_rec_to_left($/;"	f
btr_page_get_split_rec_to_right	btr/btr0btr.cc	/^btr_page_get_split_rec_to_right($/;"	f
btr_page_insert_fits	btr/btr0btr.cc	/^btr_page_insert_fits($/;"	f
btr_page_reorganize	btr/btr0btr.cc	/^btr_page_reorganize($/;"	f
btr_page_reorganize_block	btr/btr0btr.cc	/^btr_page_reorganize_block($/;"	f
btr_page_reorganize_low	btr/btr0btr.cc	/^btr_page_reorganize_low($/;"	f
btr_page_set_index_id	include/btr0btr.ic	/^btr_page_set_index_id($/;"	f
btr_page_set_level	include/btr0btr.ic	/^btr_page_set_level($/;"	f
btr_page_set_next	include/btr0btr.ic	/^btr_page_set_next($/;"	f
btr_page_set_prev	include/btr0btr.ic	/^btr_page_set_prev($/;"	f
btr_page_split_and_insert	btr/btr0btr.cc	/^btr_page_split_and_insert($/;"	f
btr_page_tuple_smaller	btr/btr0btr.cc	/^btr_page_tuple_smaller($/;"	f
btr_parse_page_reorganize	btr/btr0btr.cc	/^btr_parse_page_reorganize($/;"	f
btr_parse_set_min_rec_mark	btr/btr0btr.cc	/^btr_parse_set_min_rec_mark($/;"	f
btr_path_t	include/btr0cur.h	/^struct btr_path_t {$/;"	s
btr_pcur_close	include/btr0pcur.ic	/^btr_pcur_close($/;"	f
btr_pcur_commit_specify_mtr	include/btr0pcur.ic	/^btr_pcur_commit_specify_mtr($/;"	f
btr_pcur_copy_stored_position	btr/btr0pcur.cc	/^btr_pcur_copy_stored_position($/;"	f
btr_pcur_create_for_mysql	btr/btr0pcur.cc	/^btr_pcur_create_for_mysql(void)$/;"	f
btr_pcur_free	include/btr0pcur.ic	/^btr_pcur_free($/;"	f
btr_pcur_free_for_mysql	btr/btr0pcur.cc	/^btr_pcur_free_for_mysql($/;"	f
btr_pcur_get_block	include/btr0pcur.h	408;"	d
btr_pcur_get_block	include/btr0pcur.ic	/^btr_pcur_get_block($/;"	f
btr_pcur_get_btr_cur	include/btr0pcur.h	405;"	d
btr_pcur_get_btr_cur	include/btr0pcur.ic	/^btr_pcur_get_btr_cur($/;"	f
btr_pcur_get_low_match	include/btr0pcur.ic	/^btr_pcur_get_low_match($/;"	f
btr_pcur_get_page	include/btr0pcur.h	407;"	d
btr_pcur_get_page	include/btr0pcur.ic	/^btr_pcur_get_page($/;"	f
btr_pcur_get_page_cur	include/btr0pcur.h	406;"	d
btr_pcur_get_page_cur	include/btr0pcur.ic	/^btr_pcur_get_page_cur($/;"	f
btr_pcur_get_rec	include/btr0pcur.h	409;"	d
btr_pcur_get_rec	include/btr0pcur.ic	/^btr_pcur_get_rec($/;"	f
btr_pcur_get_rel_pos	include/btr0pcur.ic	/^btr_pcur_get_rel_pos($/;"	f
btr_pcur_get_up_match	include/btr0pcur.ic	/^btr_pcur_get_up_match($/;"	f
btr_pcur_init	include/btr0pcur.ic	/^btr_pcur_init($/;"	f
btr_pcur_is_after_last_in_tree	include/btr0pcur.ic	/^btr_pcur_is_after_last_in_tree($/;"	f
btr_pcur_is_after_last_on_page	include/btr0pcur.ic	/^btr_pcur_is_after_last_on_page($/;"	f
btr_pcur_is_before_first_in_tree	include/btr0pcur.ic	/^btr_pcur_is_before_first_in_tree($/;"	f
btr_pcur_is_before_first_on_page	include/btr0pcur.ic	/^btr_pcur_is_before_first_on_page($/;"	f
btr_pcur_is_on_user_rec	include/btr0pcur.ic	/^btr_pcur_is_on_user_rec($/;"	f
btr_pcur_move_backward_from_page	btr/btr0pcur.cc	/^btr_pcur_move_backward_from_page($/;"	f
btr_pcur_move_before_first_on_page	include/btr0pcur.ic	/^btr_pcur_move_before_first_on_page($/;"	f
btr_pcur_move_to_last_on_page	include/btr0pcur.ic	/^btr_pcur_move_to_last_on_page($/;"	f
btr_pcur_move_to_next	include/btr0pcur.ic	/^btr_pcur_move_to_next($/;"	f
btr_pcur_move_to_next_on_page	include/btr0pcur.ic	/^btr_pcur_move_to_next_on_page($/;"	f
btr_pcur_move_to_next_page	btr/btr0pcur.cc	/^btr_pcur_move_to_next_page($/;"	f
btr_pcur_move_to_next_user_rec	include/btr0pcur.ic	/^btr_pcur_move_to_next_user_rec($/;"	f
btr_pcur_move_to_prev	btr/btr0pcur.cc	/^btr_pcur_move_to_prev($/;"	f
btr_pcur_move_to_prev_on_page	include/btr0pcur.ic	/^btr_pcur_move_to_prev_on_page($/;"	f
btr_pcur_open	include/btr0pcur.h	118;"	d
btr_pcur_open_at_index_side	include/btr0pcur.ic	/^btr_pcur_open_at_index_side($/;"	f
btr_pcur_open_at_rnd_pos	include/btr0pcur.h	221;"	d
btr_pcur_open_at_rnd_pos_func	include/btr0pcur.ic	/^btr_pcur_open_at_rnd_pos_func($/;"	f
btr_pcur_open_low	include/btr0pcur.ic	/^btr_pcur_open_low($/;"	f
btr_pcur_open_on_user_rec	include/btr0pcur.h	205;"	d
btr_pcur_open_on_user_rec_func	btr/btr0pcur.cc	/^btr_pcur_open_on_user_rec_func($/;"	f
btr_pcur_open_with_no_init	include/btr0pcur.h	148;"	d
btr_pcur_open_with_no_init_func	include/btr0pcur.ic	/^btr_pcur_open_with_no_init_func($/;"	f
btr_pcur_pos_t	include/btr0pcur.h	/^enum btr_pcur_pos_t {$/;"	g
btr_pcur_reset	btr/btr0pcur.cc	/^btr_pcur_reset($/;"	f
btr_pcur_restore_position	include/btr0pcur.h	275;"	d
btr_pcur_restore_position_func	btr/btr0pcur.cc	/^btr_pcur_restore_position_func($/;"	f
btr_pcur_store_position	btr/btr0pcur.cc	/^btr_pcur_store_position($/;"	f
btr_pcur_t	include/btr0pcur.h	/^	btr_pcur_t() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:btr_pcur_t
btr_pcur_t	include/btr0pcur.h	/^struct btr_pcur_t{$/;"	s
btr_print_index	btr/btr0btr.cc	/^btr_print_index($/;"	f
btr_print_recursive	btr/btr0btr.cc	/^btr_print_recursive($/;"	f	file:
btr_print_size	btr/btr0btr.cc	/^btr_print_size($/;"	f
btr_push_update_extern_fields	btr/btr0cur.cc	/^btr_push_update_extern_fields($/;"	f
btr_rec_copy_externally_stored_field	btr/btr0cur.cc	/^btr_rec_copy_externally_stored_field($/;"	f
btr_rec_free_externally_stored_fields	btr/btr0cur.cc	/^btr_rec_free_externally_stored_fields($/;"	f	file:
btr_rec_free_updated_extern_fields	btr/btr0cur.cc	/^btr_rec_free_updated_extern_fields($/;"	f	file:
btr_rec_get_externally_stored_len	btr/btr0cur.cc	/^btr_rec_get_externally_stored_len($/;"	f
btr_rec_get_field_ref	btr/btr0cur.cc	6311;"	d	file:
btr_rec_get_field_ref_offs	btr/btr0cur.cc	/^btr_rec_get_field_ref_offs($/;"	f	file:
btr_rec_set_deleted_flag	include/btr0cur.ic	/^btr_rec_set_deleted_flag($/;"	f
btr_record_not_null_field_in_rec	btr/btr0cur.cc	/^btr_record_not_null_field_in_rec($/;"	f	file:
btr_root_adjust_on_import	btr/btr0btr.cc	/^btr_root_adjust_on_import($/;"	f
btr_root_block_get	btr/btr0btr.cc	/^btr_root_block_get($/;"	f
btr_root_fseg_adjust_on_import	btr/btr0btr.cc	/^btr_root_fseg_adjust_on_import($/;"	f	file:
btr_root_fseg_validate	btr/btr0btr.cc	/^btr_root_fseg_validate($/;"	f	file:
btr_root_get	btr/btr0btr.cc	/^btr_root_get($/;"	f
btr_root_raise_and_insert	btr/btr0btr.cc	/^btr_root_raise_and_insert($/;"	f
btr_sea_pad1	btr/btr0sea.cc	/^byte		btr_sea_pad1[64];$/;"	v
btr_sea_pad2	btr/btr0sea.cc	/^byte		btr_sea_pad2[64];$/;"	v
btr_search_build_page_hash_index	btr/btr0sea.cc	/^btr_search_build_page_hash_index($/;"	f	file:
btr_search_check_free_space_in_heap	btr/btr0sea.cc	/^btr_search_check_free_space_in_heap(dict_index_t* index)$/;"	f	file:
btr_search_check_guess	btr/btr0sea.cc	/^btr_search_check_guess($/;"	f	file:
btr_search_disable	btr/btr0sea.cc	/^btr_search_disable($/;"	f
btr_search_disable_ref_count	btr/btr0sea.cc	/^btr_search_disable_ref_count($/;"	f	file:
btr_search_drop_page_hash_index	btr/btr0sea.cc	/^btr_search_drop_page_hash_index(buf_block_t* block)$/;"	f
btr_search_drop_page_hash_when_freed	btr/btr0sea.cc	/^btr_search_drop_page_hash_when_freed($/;"	f
btr_search_enable	btr/btr0sea.cc	/^btr_search_enable()$/;"	f
btr_search_enabled	btr/btr0sea.cc	/^char		btr_search_enabled	= true;$/;"	v
btr_search_failure	btr/btr0sea.cc	/^btr_search_failure(btr_search_t* info, btr_cur_t* cursor)$/;"	f	file:
btr_search_get_info	include/btr0sea.ic	/^btr_search_get_info($/;"	f
btr_search_get_n_fields	btr/btr0sea.cc	/^btr_search_get_n_fields($/;"	f
btr_search_guess_on_hash	btr/btr0sea.cc	/^btr_search_guess_on_hash($/;"	f
btr_search_hash_table_validate	btr/btr0sea.cc	/^btr_search_hash_table_validate(ulint hash_table_id)$/;"	f	file:
btr_search_info_create	btr/btr0sea.cc	/^btr_search_info_create(mem_heap_t* heap)$/;"	f
btr_search_info_get_ref_count	btr/btr0sea.cc	/^btr_search_info_get_ref_count($/;"	f
btr_search_info_update	include/btr0sea.ic	/^btr_search_info_update($/;"	f
btr_search_info_update_hash	btr/btr0sea.cc	/^btr_search_info_update_hash($/;"	f	file:
btr_search_info_update_slow	btr/btr0sea.cc	/^btr_search_info_update_slow($/;"	f
btr_search_latch_key	sync/sync0sync.cc	/^mysql_pfs_key_t	btr_search_latch_key;$/;"	v
btr_search_latches	btr/btr0sea.cc	/^rw_lock_t**	btr_search_latches;$/;"	v
btr_search_move_or_delete_hash_entries	btr/btr0sea.cc	/^btr_search_move_or_delete_hash_entries($/;"	f
btr_search_n_hash_fail	btr/btr0sea.cc	/^ulint		btr_search_n_hash_fail	= 0;$/;"	v
btr_search_n_succ	btr/btr0sea.cc	/^ulint		btr_search_n_succ	= 0;$/;"	v
btr_search_own_all	include/btr0sea.ic	/^btr_search_own_all(ulint mode)$/;"	f
btr_search_own_any	include/btr0sea.ic	/^btr_search_own_any(ulint mode)$/;"	f
btr_search_s_lock	include/btr0sea.ic	/^btr_search_s_lock(const dict_index_t* index)$/;"	f
btr_search_s_lock_all	include/btr0sea.ic	/^btr_search_s_lock_all()$/;"	f
btr_search_s_unlock	include/btr0sea.ic	/^btr_search_s_unlock(const dict_index_t* index)$/;"	f
btr_search_s_unlock_all	include/btr0sea.ic	/^btr_search_s_unlock_all()$/;"	f
btr_search_sys	btr/btr0sea.cc	/^btr_search_sys_t*	btr_search_sys;$/;"	v
btr_search_sys_create	btr/btr0sea.cc	/^btr_search_sys_create(ulint hash_size)$/;"	f
btr_search_sys_free	btr/btr0sea.cc	/^btr_search_sys_free()$/;"	f
btr_search_sys_resize	btr/btr0sea.cc	/^btr_search_sys_resize(ulint hash_size)$/;"	f
btr_search_sys_t	include/btr0sea.h	/^struct btr_search_sys_t{$/;"	s
btr_search_t	include/btr0sea.h	/^struct btr_search_t{$/;"	s
btr_search_update_block_hash_info	btr/btr0sea.cc	/^btr_search_update_block_hash_info($/;"	f	file:
btr_search_update_hash_node_on_insert	btr/btr0sea.cc	/^btr_search_update_hash_node_on_insert(btr_cur_t* cursor)$/;"	f
btr_search_update_hash_on_delete	btr/btr0sea.cc	/^btr_search_update_hash_on_delete(btr_cur_t* cursor)$/;"	f
btr_search_update_hash_on_insert	btr/btr0sea.cc	/^btr_search_update_hash_on_insert(btr_cur_t* cursor)$/;"	f
btr_search_update_hash_ref	btr/btr0sea.cc	/^btr_search_update_hash_ref($/;"	f	file:
btr_search_validate	btr/btr0sea.cc	/^btr_search_validate()$/;"	f
btr_search_x_lock	include/btr0sea.ic	/^btr_search_x_lock(const dict_index_t* index)$/;"	f
btr_search_x_lock_all	include/btr0sea.ic	/^btr_search_x_lock_all()$/;"	f
btr_search_x_unlock	include/btr0sea.ic	/^btr_search_x_unlock(const dict_index_t* index)$/;"	f
btr_search_x_unlock_all	include/btr0sea.ic	/^btr_search_x_unlock_all()$/;"	f
btr_set_min_rec_mark	btr/btr0btr.cc	/^btr_set_min_rec_mark($/;"	f
btr_set_min_rec_mark_log	btr/btr0btr.cc	/^btr_set_min_rec_mark_log($/;"	f
btr_set_min_rec_mark_log	btr/btr0btr.cc	3001;"	d	file:
btr_store_big_rec_extern_fields	btr/btr0cur.cc	/^btr_store_big_rec_extern_fields($/;"	f
btr_validate_index	btr/btr0btr.cc	/^btr_validate_index($/;"	f
btr_validate_level	btr/btr0btr.cc	/^btr_validate_level($/;"	f	file:
btr_validate_report1	btr/btr0btr.cc	/^btr_validate_report1($/;"	f	file:
btr_validate_report2	btr/btr0btr.cc	/^btr_validate_report2($/;"	f	file:
btr_validate_spatial_index	btr/btr0btr.cc	/^btr_validate_spatial_index($/;"	f
btrsea_sync_check	include/sync0types.h	/^	explicit btrsea_sync_check(bool has_search_latch)$/;"	f	struct:btrsea_sync_check
btrsea_sync_check	include/sync0types.h	/^struct btrsea_sync_check : public sync_check_functor_t {$/;"	s
buddy_n_frames	include/buf0buf.h	/^	ulint		buddy_n_frames; \/*!< Number of frames allocated from$/;"	m	struct:buf_pool_t
buddy_stat	include/buf0buf.h	/^	buf_buddy_stat_t buddy_stat[BUF_BUDDY_SIZES_MAX + 1];$/;"	m	struct:buf_pool_t
buf	include/log0log.h	/^	byte*		buf;		\/*!< log buffer currently in use;$/;"	m	struct:log_t
buf	include/log0recv.h	/^	byte*		buf;	\/*!< buffer for parsing log records *\/$/;"	m	struct:recv_sys_t
buf	include/row0ext.h	/^	byte*		buf;	\/*!< backing store of the column prefix cache *\/$/;"	m	struct:row_ext_t
buf	os/os0file.cc	/^	byte*			buf;$/;"	m	struct:Slot	file:
buf	row/row0log.cc	/^	mrec_buf_t	buf;	\/*!< buffer for accessing a record$/;"	m	struct:row_log_buf_t	file:
buf0buddy_h	include/buf0buddy.h	27;"	d
buf0buf_h	include/buf0buf.h	27;"	d
buf0checksum_h	include/buf0checksum.h	27;"	d
buf0dblwr_h	include/buf0dblwr.h	27;"	d
buf0dump_h	include/buf0dump.h	27;"	d
buf0flu_h	include/buf0flu.h	27;"	d
buf0lru_h	include/buf0lru.h	27;"	d
buf0rea_h	include/buf0rea.h	27;"	d
buf0types_h	include/buf0types.h	27;"	d
buf_LRU_add_block	buf/buf0lru.cc	/^buf_LRU_add_block($/;"	f
buf_LRU_add_block_low	buf/buf0lru.cc	/^buf_LRU_add_block_low($/;"	f
buf_LRU_add_block_to_end_low	buf/buf0lru.cc	/^buf_LRU_add_block_to_end_low($/;"	f	file:
buf_LRU_adjust_hp	buf/buf0lru.cc	/^buf_LRU_adjust_hp($/;"	f
buf_LRU_block_free_hashed_page	buf/buf0lru.cc	/^buf_LRU_block_free_hashed_page($/;"	f	file:
buf_LRU_block_free_non_file_page	buf/buf0lru.cc	/^buf_LRU_block_free_non_file_page($/;"	f
buf_LRU_block_remove_hashed	buf/buf0lru.cc	/^buf_LRU_block_remove_hashed($/;"	f	file:
buf_LRU_buf_pool_running_out	buf/buf0lru.cc	/^buf_LRU_buf_pool_running_out(void)$/;"	f
buf_LRU_check_size_of_non_data_objects	buf/buf0lru.cc	/^buf_LRU_check_size_of_non_data_objects($/;"	f	file:
buf_LRU_drop_page_hash_batch	buf/buf0lru.cc	/^buf_LRU_drop_page_hash_batch($/;"	f	file:
buf_LRU_drop_page_hash_for_tablespace	buf/buf0lru.cc	/^buf_LRU_drop_page_hash_for_tablespace($/;"	f	file:
buf_LRU_evict_from_unzip_LRU	buf/buf0lru.cc	/^buf_LRU_evict_from_unzip_LRU($/;"	f
buf_LRU_flush_or_remove_pages	buf/buf0lru.cc	/^buf_LRU_flush_or_remove_pages($/;"	f
buf_LRU_free_from_common_LRU_list	buf/buf0lru.cc	/^buf_LRU_free_from_common_LRU_list($/;"	f	file:
buf_LRU_free_from_unzip_LRU_list	buf/buf0lru.cc	/^buf_LRU_free_from_unzip_LRU_list($/;"	f	file:
buf_LRU_free_one_page	buf/buf0lru.cc	/^buf_LRU_free_one_page($/;"	f
buf_LRU_free_page	buf/buf0lru.cc	/^buf_LRU_free_page($/;"	f
buf_LRU_get_free_block	buf/buf0lru.cc	/^buf_LRU_get_free_block($/;"	f
buf_LRU_get_free_only	buf/buf0lru.cc	/^buf_LRU_get_free_only($/;"	f
buf_LRU_insert_zip_clean	buf/buf0lru.cc	/^buf_LRU_insert_zip_clean($/;"	f
buf_LRU_make_block_old	buf/buf0lru.cc	/^buf_LRU_make_block_old($/;"	f
buf_LRU_make_block_young	buf/buf0lru.cc	/^buf_LRU_make_block_young($/;"	f
buf_LRU_old_adjust_len	buf/buf0lru.cc	/^buf_LRU_old_adjust_len($/;"	f
buf_LRU_old_init	buf/buf0lru.cc	/^buf_LRU_old_init($/;"	f	file:
buf_LRU_old_ratio_update	buf/buf0lru.cc	/^buf_LRU_old_ratio_update($/;"	f
buf_LRU_old_ratio_update_instance	buf/buf0lru.cc	/^buf_LRU_old_ratio_update_instance($/;"	f	file:
buf_LRU_old_threshold_ms	buf/buf0lru.cc	/^uint	buf_LRU_old_threshold_ms;$/;"	v
buf_LRU_print	buf/buf0lru.cc	/^buf_LRU_print(void)$/;"	f
buf_LRU_print_instance	buf/buf0lru.cc	/^buf_LRU_print_instance($/;"	f
buf_LRU_remove_all_pages	buf/buf0lru.cc	/^buf_LRU_remove_all_pages($/;"	f	file:
buf_LRU_remove_block	buf/buf0lru.cc	/^buf_LRU_remove_block($/;"	f
buf_LRU_remove_pages	buf/buf0lru.cc	/^buf_LRU_remove_pages($/;"	f	file:
buf_LRU_scan_and_free_block	buf/buf0lru.cc	/^buf_LRU_scan_and_free_block($/;"	f
buf_LRU_stat_arr	buf/buf0lru.cc	/^static buf_LRU_stat_t		buf_LRU_stat_arr[BUF_LRU_STAT_N_INTERVAL];$/;"	v	file:
buf_LRU_stat_arr_ind	buf/buf0lru.cc	/^static ulint			buf_LRU_stat_arr_ind;$/;"	v	file:
buf_LRU_stat_cur	buf/buf0lru.cc	/^buf_LRU_stat_t	buf_LRU_stat_cur;$/;"	v
buf_LRU_stat_inc_io	include/buf0lru.h	286;"	d
buf_LRU_stat_inc_unzip	include/buf0lru.h	289;"	d
buf_LRU_stat_inc_unzip	page/page0zip.cc	64;"	d	file:
buf_LRU_stat_sum	buf/buf0lru.cc	/^buf_LRU_stat_t	buf_LRU_stat_sum;$/;"	v
buf_LRU_stat_t	include/buf0lru.h	/^struct buf_LRU_stat_t$/;"	s
buf_LRU_stat_update	buf/buf0lru.cc	/^buf_LRU_stat_update(void)$/;"	f
buf_LRU_validate	buf/buf0lru.cc	/^buf_LRU_validate(void)$/;"	f
buf_LRU_validate_instance	buf/buf0lru.cc	/^buf_LRU_validate_instance($/;"	f	file:
buf_all_freed	buf/buf0buf.cc	/^buf_all_freed(void)$/;"	f
buf_all_freed_instance	buf/buf0buf.cc	/^buf_all_freed_instance($/;"	f	file:
buf_block	include/mem0mem.h	/^	void*	buf_block;$/;"	m	struct:mem_block_info_t
buf_block	os/os0file.cc	/^	Block*			buf_block;$/;"	m	struct:Slot	file:
buf_block_alloc	buf/buf0buf.cc	/^buf_block_alloc($/;"	f
buf_block_arr	include/buf0dblwr.h	/^	buf_page_t**	buf_block_arr;\/*!< array to store pointers to$/;"	m	struct:buf_dblwr_t
buf_block_buf_fix_dec	include/buf0buf.ic	/^buf_block_buf_fix_dec($/;"	f
buf_block_buf_fix_inc	include/buf0buf.h	792;"	d
buf_block_buf_fix_inc	include/buf0buf.h	798;"	d
buf_block_buf_fix_inc_func	include/buf0buf.ic	/^buf_block_buf_fix_inc_func($/;"	f
buf_block_dbg_add_level	include/buf0buf.h	1013;"	d
buf_block_dbg_add_level	include/buf0buf.ic	/^buf_block_dbg_add_level($/;"	f
buf_block_debug_latch_key	sync/sync0sync.cc	/^mysql_pfs_key_t	buf_block_debug_latch_key;$/;"	v
buf_block_fix	include/buf0buf.ic	/^buf_block_fix($/;"	f
buf_block_free	include/buf0buf.ic	/^buf_block_free($/;"	f
buf_block_from_ahi	buf/buf0buf.cc	/^buf_block_from_ahi(const byte* ptr)$/;"	f
buf_block_get_frame	include/buf0buf.h	1227;"	d
buf_block_get_frame	include/buf0buf.ic	/^buf_block_get_frame($/;"	f
buf_block_get_freed_page_clock	include/buf0buf.ic	/^buf_block_get_freed_page_clock($/;"	f
buf_block_get_io_fix	include/buf0buf.ic	/^buf_block_get_io_fix($/;"	f
buf_block_get_lock_hash_val	include/buf0buf.ic	/^buf_block_get_lock_hash_val($/;"	f
buf_block_get_modify_clock	include/buf0buf.ic	/^buf_block_get_modify_clock($/;"	f
buf_block_get_page_zip	include/buf0buf.h	1232;"	d
buf_block_get_state	include/buf0buf.ic	/^buf_block_get_state($/;"	f
buf_block_hash_get	include/buf0buf.h	1415;"	d
buf_block_hash_get_locked	include/buf0buf.ic	/^buf_block_hash_get_locked($/;"	f
buf_block_hash_get_s_locked	include/buf0buf.h	1411;"	d
buf_block_hash_get_x_locked	include/buf0buf.h	1413;"	d
buf_block_hash_lock_held_s	include/buf0buf.h	2343;"	d
buf_block_hash_lock_held_s	include/buf0buf.h	2355;"	d
buf_block_hash_lock_held_s_or_x	include/buf0buf.h	2349;"	d
buf_block_hash_lock_held_s_or_x	include/buf0buf.h	2357;"	d
buf_block_hash_lock_held_x	include/buf0buf.h	2346;"	d
buf_block_hash_lock_held_x	include/buf0buf.h	2356;"	d
buf_block_init	buf/buf0buf.cc	/^buf_block_init($/;"	f	file:
buf_block_init_low	buf/buf0buf.cc	/^buf_block_init_low($/;"	f
buf_block_is_uncompressed	buf/buf0buf.cc	/^buf_block_is_uncompressed($/;"	f	file:
buf_block_lock_key	sync/sync0sync.cc	/^mysql_pfs_key_t	buf_block_lock_key;$/;"	v
buf_block_modify_clock_inc	include/buf0buf.h	801;"	d
buf_block_modify_clock_inc	include/buf0buf.ic	/^buf_block_modify_clock_inc($/;"	f
buf_block_set_file_page	include/buf0buf.ic	/^buf_block_set_file_page($/;"	f
buf_block_set_io_fix	include/buf0buf.ic	/^buf_block_set_io_fix($/;"	f
buf_block_set_state	include/buf0buf.ic	/^buf_block_set_state($/;"	f
buf_block_state_valid	include/buf0buf.h	1861;"	d
buf_block_t	include/buf0buf.h	/^struct buf_block_t{$/;"	s
buf_block_try_discard_uncompressed	buf/buf0buf.cc	/^buf_block_try_discard_uncompressed($/;"	f	file:
buf_block_unfix	include/buf0buf.ic	/^buf_block_unfix($/;"	f
buf_block_will_withdrawn	buf/buf0buf.cc	/^buf_block_will_withdrawn($/;"	f
buf_buddy_add_to_free	buf/buf0buddy.cc	/^buf_buddy_add_to_free($/;"	f
buf_buddy_alloc	include/buf0buddy.ic	/^buf_buddy_alloc($/;"	f
buf_buddy_alloc_from	buf/buf0buddy.cc	/^buf_buddy_alloc_from($/;"	f	file:
buf_buddy_alloc_low	buf/buf0buddy.cc	/^buf_buddy_alloc_low($/;"	f
buf_buddy_alloc_zip	buf/buf0buddy.cc	/^buf_buddy_alloc_zip($/;"	f	file:
buf_buddy_block_free	buf/buf0buddy.cc	/^buf_buddy_block_free($/;"	f	file:
buf_buddy_block_register	buf/buf0buddy.cc	/^buf_buddy_block_register($/;"	f	file:
buf_buddy_check_free	buf/buf0buddy.cc	/^buf_buddy_check_free($/;"	f
buf_buddy_condense_free	buf/buf0buddy.cc	/^buf_buddy_condense_free($/;"	f
buf_buddy_free	include/buf0buddy.ic	/^buf_buddy_free($/;"	f
buf_buddy_free_low	buf/buf0buddy.cc	/^buf_buddy_free_low($/;"	f
buf_buddy_free_t	include/buf0buf.h	/^struct buf_buddy_free_t {$/;"	s
buf_buddy_get	buf/buf0buddy.cc	/^buf_buddy_get($/;"	f
buf_buddy_get_slot	include/buf0buddy.ic	/^buf_buddy_get_slot($/;"	f
buf_buddy_is_free	buf/buf0buddy.cc	/^buf_buddy_is_free($/;"	f
buf_buddy_list_validate	buf/buf0buddy.cc	/^buf_buddy_list_validate($/;"	f	file:
buf_buddy_mem_invalid	buf/buf0buddy.cc	/^buf_buddy_mem_invalid($/;"	f
buf_buddy_mem_invalid	buf/buf0buddy.cc	107;"	d	file:
buf_buddy_realloc	buf/buf0buddy.cc	/^buf_buddy_realloc($/;"	f
buf_buddy_relocate	buf/buf0buddy.cc	/^buf_buddy_relocate($/;"	f	file:
buf_buddy_remove_from_free	buf/buf0buddy.cc	/^buf_buddy_remove_from_free($/;"	f
buf_buddy_stamp_free	buf/buf0buddy.cc	/^buf_buddy_stamp_free($/;"	f
buf_buddy_stamp_is_free	buf/buf0buddy.cc	/^buf_buddy_stamp_is_free($/;"	f
buf_buddy_stamp_nonfree	buf/buf0buddy.cc	143;"	d	file:
buf_buddy_stat_t	include/buf0buf.h	/^struct buf_buddy_stat_t {$/;"	s
buf_buddy_state_t	buf/buf0buddy.cc	/^enum buf_buddy_state_t {$/;"	g	file:
buf_calc_page_crc32	buf/buf0checksum.cc	/^buf_calc_page_crc32($/;"	f
buf_calc_page_new_checksum	buf/buf0checksum.cc	/^buf_calc_page_new_checksum($/;"	f
buf_calc_page_old_checksum	buf/buf0checksum.cc	/^buf_calc_page_old_checksum($/;"	f
buf_checksum_algorithm_name	buf/buf0checksum.cc	/^buf_checksum_algorithm_name($/;"	f
buf_chunk_contains_zip	buf/buf0buf.cc	/^buf_chunk_contains_zip($/;"	f	file:
buf_chunk_init	buf/buf0buf.cc	/^buf_chunk_init($/;"	f	file:
buf_chunk_map_ref	buf/buf0buf.cc	/^static buf_pool_chunk_map_t*	buf_chunk_map_ref = NULL;$/;"	v	file:
buf_chunk_map_reg	buf/buf0buf.cc	/^static buf_pool_chunk_map_t*			buf_chunk_map_reg;$/;"	v	file:
buf_chunk_not_freed	buf/buf0buf.cc	/^buf_chunk_not_freed($/;"	f	file:
buf_chunk_t	include/buf0buf.ic	/^struct buf_chunk_t{$/;"	s	file:
buf_dbg_counter	buf/buf0buf.cc	/^static ulint	buf_dbg_counter	= 0;$/;"	v	file:
buf_dblwr	buf/buf0dblwr.cc	/^buf_dblwr_t*	buf_dblwr = NULL;$/;"	v
buf_dblwr_add_to_batch	buf/buf0dblwr.cc	/^buf_dblwr_add_to_batch($/;"	f
buf_dblwr_assert_on_corrupt_block	buf/buf0dblwr.cc	/^buf_dblwr_assert_on_corrupt_block($/;"	f	file:
buf_dblwr_being_created	buf/buf0dblwr.cc	/^ibool	buf_dblwr_being_created = FALSE;$/;"	v
buf_dblwr_check_block	buf/buf0dblwr.cc	/^buf_dblwr_check_block($/;"	f	file:
buf_dblwr_check_page_lsn	buf/buf0dblwr.cc	/^buf_dblwr_check_page_lsn($/;"	f	file:
buf_dblwr_create	buf/buf0dblwr.cc	/^buf_dblwr_create(void)$/;"	f
buf_dblwr_flush_buffered_writes	buf/buf0dblwr.cc	/^buf_dblwr_flush_buffered_writes(void)$/;"	f
buf_dblwr_free	buf/buf0dblwr.cc	/^buf_dblwr_free(void)$/;"	f
buf_dblwr_get	buf/buf0dblwr.cc	/^buf_dblwr_get($/;"	f
buf_dblwr_init	buf/buf0dblwr.cc	/^buf_dblwr_init($/;"	f	file:
buf_dblwr_init_or_load_pages	buf/buf0dblwr.cc	/^buf_dblwr_init_or_load_pages($/;"	f
buf_dblwr_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	buf_dblwr_mutex_key;$/;"	v
buf_dblwr_page_inside	buf/buf0dblwr.cc	/^buf_dblwr_page_inside($/;"	f
buf_dblwr_process	buf/buf0dblwr.cc	/^buf_dblwr_process(void)$/;"	f
buf_dblwr_sync_datafiles	buf/buf0dblwr.cc	/^buf_dblwr_sync_datafiles()$/;"	f
buf_dblwr_t	include/buf0dblwr.h	/^struct buf_dblwr_t{$/;"	s
buf_dblwr_update	buf/buf0dblwr.cc	/^buf_dblwr_update($/;"	f
buf_dblwr_write_block_to_datafile	buf/buf0dblwr.cc	/^buf_dblwr_write_block_to_datafile($/;"	f	file:
buf_dblwr_write_single_page	buf/buf0dblwr.cc	/^buf_dblwr_write_single_page($/;"	f
buf_debug_execute_is_force_flush	buf/buf0buf.cc	/^buf_debug_execute_is_force_flush()$/;"	f	file:
buf_disable_resize_buffer_pool_debug	buf/buf0buf.cc	/^my_bool			buf_disable_resize_buffer_pool_debug = TRUE;$/;"	v
buf_do_LRU_batch	buf/buf0flu.cc	/^buf_do_LRU_batch($/;"	f	file:
buf_do_flush_list_batch	buf/buf0flu.cc	/^buf_do_flush_list_batch($/;"	f	file:
buf_dump	buf/buf0dump.cc	/^buf_dump($/;"	f	file:
buf_dump_generate_path	buf/buf0dump.cc	/^buf_dump_generate_path($/;"	f	file:
buf_dump_should_start	buf/buf0dump.cc	/^static ibool	buf_dump_should_start = FALSE;$/;"	v	file:
buf_dump_start	buf/buf0dump.cc	/^buf_dump_start()$/;"	f
buf_dump_status	buf/buf0dump.cc	/^buf_dump_status($/;"	f
buf_dump_t	buf/buf0dump.cc	/^typedef ib_uint64_t	buf_dump_t;$/;"	t	file:
buf_dump_thread	buf/buf0dump.cc	/^DECLARE_THREAD(buf_dump_thread)($/;"	f
buf_dump_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	buf_dump_thread_key;$/;"	v
buf_fix_count	include/buf0buf.h	/^	ib_uint32_t	buf_fix_count;$/;"	m	class:buf_page_t
buf_flush_LRU_list	buf/buf0flu.cc	/^buf_flush_LRU_list($/;"	f	file:
buf_flush_LRU_list_batch	buf/buf0flu.cc	/^buf_flush_LRU_list_batch($/;"	f	file:
buf_flush_LRU_lists	buf/buf0flu.cc	/^buf_flush_LRU_lists(void)$/;"	f
buf_flush_batch	buf/buf0flu.cc	/^buf_flush_batch($/;"	f	file:
buf_flush_block_cmp	buf/buf0flu.cc	/^buf_flush_block_cmp($/;"	f	file:
buf_flush_check_neighbor	buf/buf0flu.cc	/^buf_flush_check_neighbor($/;"	f	file:
buf_flush_delete_from_flush_rbt	buf/buf0flu.cc	/^buf_flush_delete_from_flush_rbt($/;"	f	file:
buf_flush_dirty_pages	buf/buf0lru.cc	/^buf_flush_dirty_pages($/;"	f	file:
buf_flush_do_batch	buf/buf0flu.cc	/^buf_flush_do_batch($/;"	f
buf_flush_end	buf/buf0flu.cc	/^buf_flush_end($/;"	f	file:
buf_flush_event	buf/buf0flu.cc	/^os_event_t	buf_flush_event;$/;"	v
buf_flush_free_flush_rbt	buf/buf0flu.cc	/^buf_flush_free_flush_rbt(void)$/;"	f
buf_flush_get_dirty_pages_count	buf/buf0flu.cc	/^buf_flush_get_dirty_pages_count($/;"	f
buf_flush_init_flush_rbt	buf/buf0flu.cc	/^buf_flush_init_flush_rbt(void)$/;"	f
buf_flush_init_for_writing	buf/buf0flu.cc	/^buf_flush_init_for_writing($/;"	f
buf_flush_insert_in_flush_rbt	buf/buf0flu.cc	/^buf_flush_insert_in_flush_rbt($/;"	f	file:
buf_flush_insert_into_flush_list	buf/buf0flu.cc	/^buf_flush_insert_into_flush_list($/;"	f
buf_flush_insert_sorted_into_flush_list	buf/buf0flu.cc	/^buf_flush_insert_sorted_into_flush_list($/;"	f
buf_flush_list_mutex_enter	include/buf0buf.h	2295;"	d
buf_flush_list_mutex_exit	include/buf0buf.h	2299;"	d
buf_flush_list_mutex_own	include/buf0buf.h	2292;"	d
buf_flush_lists	buf/buf0flu.cc	/^buf_flush_lists($/;"	f
buf_flush_lsn_scan_factor	buf/buf0flu.cc	/^static ulint buf_flush_lsn_scan_factor = 3;$/;"	v	file:
buf_flush_note_modification	include/buf0flu.ic	/^buf_flush_note_modification($/;"	f
buf_flush_or_remove_page	buf/buf0lru.cc	/^buf_flush_or_remove_page($/;"	f
buf_flush_or_remove_pages	buf/buf0lru.cc	/^buf_flush_or_remove_pages($/;"	f
buf_flush_page	buf/buf0flu.cc	/^buf_flush_page($/;"	f
buf_flush_page_and_try_neighbors	buf/buf0flu.cc	/^buf_flush_page_and_try_neighbors($/;"	f	file:
buf_flush_page_cleaner_close	buf/buf0flu.cc	/^buf_flush_page_cleaner_close(void)$/;"	f	file:
buf_flush_page_cleaner_coordinator	buf/buf0flu.cc	/^DECLARE_THREAD(buf_flush_page_cleaner_coordinator)($/;"	f
buf_flush_page_cleaner_disabled_debug_update	buf/buf0flu.cc	/^buf_flush_page_cleaner_disabled_debug_update($/;"	f
buf_flush_page_cleaner_disabled_loop	buf/buf0flu.cc	/^buf_flush_page_cleaner_disabled_loop(void)$/;"	f	file:
buf_flush_page_cleaner_init	buf/buf0flu.cc	/^buf_flush_page_cleaner_init(void)$/;"	f
buf_flush_page_cleaner_priority	buf/buf0flu.cc	/^static const int buf_flush_page_cleaner_priority = -20;$/;"	v	file:
buf_flush_page_cleaner_set_priority	buf/buf0flu.cc	/^buf_flush_page_cleaner_set_priority($/;"	f	file:
buf_flush_page_cleaner_worker	buf/buf0flu.cc	/^DECLARE_THREAD(buf_flush_page_cleaner_worker)($/;"	f
buf_flush_page_try	buf/buf0flu.cc	/^buf_flush_page_try($/;"	f
buf_flush_ready_for_flush	buf/buf0flu.cc	/^buf_flush_ready_for_flush($/;"	f
buf_flush_ready_for_replace	buf/buf0flu.cc	/^buf_flush_ready_for_replace($/;"	f
buf_flush_recv_note_modification	include/buf0flu.ic	/^buf_flush_recv_note_modification($/;"	f
buf_flush_relocate_on_flush_list	buf/buf0flu.cc	/^buf_flush_relocate_on_flush_list($/;"	f
buf_flush_remove	buf/buf0flu.cc	/^buf_flush_remove($/;"	f
buf_flush_request_force	buf/buf0flu.cc	/^buf_flush_request_force($/;"	f
buf_flush_single_page_from_LRU	buf/buf0flu.cc	/^buf_flush_single_page_from_LRU($/;"	f
buf_flush_start	buf/buf0flu.cc	/^buf_flush_start($/;"	f	file:
buf_flush_stats	buf/buf0flu.cc	/^buf_flush_stats($/;"	f	file:
buf_flush_sync_all_buf_pools	buf/buf0flu.cc	/^buf_flush_sync_all_buf_pools(void)$/;"	f
buf_flush_sync_lsn	buf/buf0flu.cc	/^static lsn_t buf_flush_sync_lsn = 0;$/;"	v	file:
buf_flush_t	include/buf0types.h	/^enum buf_flush_t {$/;"	g
buf_flush_try_neighbors	buf/buf0flu.cc	/^buf_flush_try_neighbors($/;"	f	file:
buf_flush_try_yield	buf/buf0lru.cc	/^buf_flush_try_yield($/;"	f
buf_flush_update_zip_checksum	buf/buf0flu.cc	/^buf_flush_update_zip_checksum($/;"	f
buf_flush_validate	buf/buf0flu.cc	/^buf_flush_validate($/;"	f
buf_flush_validate_low	buf/buf0flu.cc	/^buf_flush_validate_low($/;"	f	file:
buf_flush_validate_skip	buf/buf0flu.cc	/^buf_flush_validate_skip($/;"	f	file:
buf_flush_wait_LRU_batch_end	buf/buf0flu.cc	/^buf_flush_wait_LRU_batch_end(void)$/;"	f
buf_flush_wait_batch_end	buf/buf0flu.cc	/^buf_flush_wait_batch_end($/;"	f
buf_flush_wait_flushed	buf/buf0flu.cc	/^buf_flush_wait_flushed($/;"	f
buf_flush_wait_flushed_sleep_time	buf/buf0flu.cc	/^static const ulint buf_flush_wait_flushed_sleep_time = 10000;$/;"	v	file:
buf_flush_write_block_low	buf/buf0flu.cc	/^buf_flush_write_block_low($/;"	f	file:
buf_flush_write_complete	buf/buf0flu.cc	/^buf_flush_write_complete($/;"	f
buf_flush_yield	buf/buf0lru.cc	/^buf_flush_yield($/;"	f	file:
buf_frame_align	include/buf0buf.ic	/^buf_frame_align($/;"	f
buf_frame_copy	include/buf0buf.ic	/^buf_frame_copy($/;"	f
buf_frame_t	include/buf0types.h	/^typedef	byte	buf_frame_t;$/;"	t
buf_frame_will_withdrawn	buf/buf0buf.cc	/^buf_frame_will_withdrawn($/;"	f
buf_free	include/log0log.h	/^	ulint		buf_free;	\/*!< first free offset within the log$/;"	m	struct:log_t
buf_free_from_unzip_LRU_list_batch	buf/buf0flu.cc	/^buf_free_from_unzip_LRU_list_batch($/;"	f	file:
buf_get_latched_pages_number	buf/buf0buf.cc	/^buf_get_latched_pages_number(void)$/;"	f
buf_get_latched_pages_number_instance	buf/buf0buf.cc	/^buf_get_latched_pages_number_instance($/;"	f
buf_get_modified_ratio_pct	buf/buf0buf.cc	/^buf_get_modified_ratio_pct(void)$/;"	f
buf_get_n_pending_read_ios	buf/buf0buf.cc	/^buf_get_n_pending_read_ios(void)$/;"	f
buf_get_nth_chunk_block	include/buf0buf.ic	/^buf_get_nth_chunk_block($/;"	f
buf_get_total_list_len	buf/buf0buf.cc	/^buf_get_total_list_len($/;"	f
buf_get_total_list_size_in_bytes	buf/buf0buf.cc	/^buf_get_total_list_size_in_bytes($/;"	f
buf_get_total_stat	buf/buf0buf.cc	/^buf_get_total_stat($/;"	f
buf_io_fix	include/buf0types.h	/^enum buf_io_fix {$/;"	g
buf_load	buf/buf0dump.cc	/^buf_load()$/;"	f	file:
buf_load_abort	buf/buf0dump.cc	/^buf_load_abort()$/;"	f
buf_load_abort_flag	buf/buf0dump.cc	/^static ibool	buf_load_abort_flag = FALSE;$/;"	v	file:
buf_load_should_start	buf/buf0dump.cc	/^static ibool	buf_load_should_start = FALSE;$/;"	v	file:
buf_load_start	buf/buf0dump.cc	/^buf_load_start()$/;"	f
buf_load_status	buf/buf0dump.cc	/^buf_load_status($/;"	f
buf_load_throttle_if_needed	buf/buf0dump.cc	/^buf_load_throttle_if_needed($/;"	f
buf_lru_flush_page_count	buf/buf0flu.cc	/^static ulint buf_lru_flush_page_count = 0;$/;"	v	file:
buf_lru_switched_on_innodb_mon	buf/buf0lru.cc	/^static bool buf_lru_switched_on_innodb_mon = false;$/;"	v	file:
buf_mark_space_corrupt	buf/buf0buf.cc	/^buf_mark_space_corrupt($/;"	f	file:
buf_next_to_write	include/log0log.h	/^	ulint		buf_next_to_write;\/*!< first offset in the log buffer$/;"	m	struct:log_t
buf_page_alloc_descriptor	include/buf0buf.ic	/^buf_page_alloc_descriptor(void)$/;"	f
buf_page_belongs_to_unzip_LRU	include/buf0buf.ic	/^buf_page_belongs_to_unzip_LRU($/;"	f
buf_page_can_relocate	include/buf0buf.ic	/^buf_page_can_relocate($/;"	f
buf_page_cleaner_is_active	buf/buf0flu.cc	/^bool buf_page_cleaner_is_active = false;$/;"	v
buf_page_create	buf/buf0buf.cc	/^buf_page_create($/;"	f
buf_page_desc_t	handler/i_s.cc	/^struct buf_page_desc_t{$/;"	s	file:
buf_page_free_descriptor	include/buf0buf.ic	/^buf_page_free_descriptor($/;"	f
buf_page_get	include/buf0buf.h	485;"	d
buf_page_get_also_watch	include/buf0buf.h	1408;"	d
buf_page_get_block	include/buf0buf.ic	/^buf_page_get_block($/;"	f
buf_page_get_flush_type	include/buf0buf.ic	/^buf_page_get_flush_type($/;"	f
buf_page_get_freed_page_clock	include/buf0buf.ic	/^buf_page_get_freed_page_clock($/;"	f
buf_page_get_gen	buf/buf0buf.cc	/^buf_page_get_gen($/;"	f
buf_page_get_io_fix	include/buf0buf.ic	/^buf_page_get_io_fix($/;"	f
buf_page_get_known_nowait	buf/buf0buf.cc	/^buf_page_get_known_nowait($/;"	f
buf_page_get_mutex	include/buf0buf.ic	/^buf_page_get_mutex($/;"	f
buf_page_get_newest_modification	include/buf0buf.ic	/^buf_page_get_newest_modification($/;"	f
buf_page_get_state	include/buf0buf.ic	/^buf_page_get_state($/;"	f
buf_page_get_with_no_latch	include/buf0buf.h	493;"	d
buf_page_get_zip	buf/buf0buf.cc	/^buf_page_get_zip($/;"	f
buf_page_hash_get	include/buf0buf.h	1406;"	d
buf_page_hash_get_locked	include/buf0buf.ic	/^buf_page_hash_get_locked($/;"	f
buf_page_hash_get_low	include/buf0buf.ic	/^buf_page_hash_get_low($/;"	f
buf_page_hash_get_s_locked	include/buf0buf.h	1402;"	d
buf_page_hash_get_x_locked	include/buf0buf.h	1404;"	d
buf_page_hash_lock_get	include/buf0buf.h	2319;"	d
buf_page_hash_lock_held_s	include/buf0buf.h	2331;"	d
buf_page_hash_lock_held_s	include/buf0buf.h	2352;"	d
buf_page_hash_lock_held_s_or_x	include/buf0buf.h	2339;"	d
buf_page_hash_lock_held_s_or_x	include/buf0buf.h	2354;"	d
buf_page_hash_lock_held_x	include/buf0buf.h	2335;"	d
buf_page_hash_lock_held_x	include/buf0buf.h	2353;"	d
buf_page_hash_lock_s_confirm	include/buf0buf.h	2323;"	d
buf_page_hash_lock_x_confirm	include/buf0buf.h	2326;"	d
buf_page_in_file	include/buf0buf.ic	/^buf_page_in_file($/;"	f
buf_page_info_t	handler/i_s.cc	/^struct buf_page_info_t{$/;"	s	file:
buf_page_init	buf/buf0buf.cc	/^buf_page_init($/;"	f	file:
buf_page_init_for_backup_restore	buf/buf0buf.cc	/^buf_page_init_for_backup_restore($/;"	f
buf_page_init_for_read	buf/buf0buf.cc	/^buf_page_init_for_read($/;"	f
buf_page_init_low	buf/buf0buf.cc	/^buf_page_init_low($/;"	f
buf_page_io_complete	buf/buf0buf.cc	/^buf_page_io_complete($/;"	f
buf_page_is_accessed	include/buf0buf.ic	/^buf_page_is_accessed($/;"	f
buf_page_is_checksum_valid_crc32	buf/buf0buf.cc	/^buf_page_is_checksum_valid_crc32($/;"	f
buf_page_is_checksum_valid_innodb	buf/buf0buf.cc	/^buf_page_is_checksum_valid_innodb($/;"	f
buf_page_is_checksum_valid_none	buf/buf0buf.cc	/^buf_page_is_checksum_valid_none($/;"	f
buf_page_is_corrupted	buf/buf0buf.cc	/^buf_page_is_corrupted($/;"	f
buf_page_is_old	include/buf0buf.ic	/^buf_page_is_old($/;"	f
buf_page_is_zeroes	buf/buf0buf.cc	/^buf_page_is_zeroes($/;"	f
buf_page_make_young	buf/buf0buf.cc	/^buf_page_make_young($/;"	f
buf_page_make_young_if_needed	buf/buf0buf.cc	/^buf_page_make_young_if_needed($/;"	f	file:
buf_page_monitor	buf/buf0buf.cc	/^buf_page_monitor($/;"	f	file:
buf_page_mutex_enter	include/buf0buf.h	2308;"	d
buf_page_mutex_exit	include/buf0buf.h	2313;"	d
buf_page_mutex_own	include/buf0buf.h	2305;"	d
buf_page_optimistic_get	buf/buf0buf.cc	/^buf_page_optimistic_get($/;"	f
buf_page_peek	include/buf0buf.ic	/^buf_page_peek($/;"	f
buf_page_peek_if_too_old	include/buf0buf.ic	/^buf_page_peek_if_too_old($/;"	f
buf_page_peek_if_young	include/buf0buf.ic	/^buf_page_peek_if_young($/;"	f
buf_page_print	buf/buf0buf.cc	/^buf_page_print($/;"	f
buf_page_print_flags	include/buf0buf.h	/^enum buf_page_print_flags {$/;"	g
buf_page_realloc	buf/buf0buf.cc	/^buf_page_realloc($/;"	f	file:
buf_page_release_latch	include/buf0buf.ic	/^buf_page_release_latch($/;"	f
buf_page_release_zip	include/buf0buf.ic	/^buf_page_release_zip($/;"	f
buf_page_reset_file_page_was_freed	buf/buf0buf.cc	/^buf_page_reset_file_page_was_freed($/;"	f
buf_page_set_accessed	include/buf0buf.ic	/^buf_page_set_accessed($/;"	f
buf_page_set_file_page_was_freed	buf/buf0buf.cc	/^buf_page_set_file_page_was_freed($/;"	f
buf_page_set_flush_type	include/buf0buf.ic	/^buf_page_set_flush_type($/;"	f
buf_page_set_io_fix	include/buf0buf.ic	/^buf_page_set_io_fix($/;"	f
buf_page_set_old	include/buf0buf.ic	/^buf_page_set_old($/;"	f
buf_page_set_state	include/buf0buf.ic	/^buf_page_set_state($/;"	f
buf_page_set_sticky	include/buf0buf.ic	/^buf_page_set_sticky($/;"	f
buf_page_state	include/buf0buf.h	/^enum buf_page_state {$/;"	g
buf_page_t	include/buf0buf.h	/^class buf_page_t {$/;"	c
buf_page_try_get	include/buf0buf.h	544;"	d
buf_page_try_get_func	buf/buf0buf.cc	/^buf_page_try_get_func($/;"	f
buf_page_unset_sticky	include/buf0buf.ic	/^buf_page_unset_sticky($/;"	f
buf_pointer_is_block_field	buf/buf0buf.cc	/^buf_pointer_is_block_field($/;"	f
buf_pointer_is_block_field_instance	buf/buf0buf.cc	/^buf_pointer_is_block_field_instance($/;"	f	file:
buf_pool_check_no_pending_io	buf/buf0buf.cc	/^buf_pool_check_no_pending_io(void)$/;"	f
buf_pool_chunk_map_t	buf/buf0buf.cc	/^	buf_pool_chunk_map_t;$/;"	t	file:
buf_pool_clear_hash_index	buf/buf0buf.cc	/^buf_pool_clear_hash_index(void)$/;"	f
buf_pool_contains_zip	buf/buf0buf.cc	/^buf_pool_contains_zip($/;"	f
buf_pool_flushed	include/srv0srv.h	/^	ulint_ctr_1_t		buf_pool_flushed;$/;"	m	struct:srv_stats_t
buf_pool_free	buf/buf0buf.cc	/^buf_pool_free($/;"	f
buf_pool_free_instance	buf/buf0buf.cc	/^buf_pool_free_instance($/;"	f	file:
buf_pool_from_array	include/buf0buf.ic	/^buf_pool_from_array($/;"	f
buf_pool_from_block	include/buf0buf.ic	/^buf_pool_from_block($/;"	f
buf_pool_from_bpage	include/buf0buf.ic	/^buf_pool_from_bpage($/;"	f
buf_pool_get	include/buf0buf.ic	/^buf_pool_get($/;"	f
buf_pool_get_curr_size	include/buf0buf.ic	/^buf_pool_get_curr_size(void)$/;"	f
buf_pool_get_curr_size	log/log0recv.cc	128;"	d	file:
buf_pool_get_curr_size	log/log0recv.cc	90;"	d	file:
buf_pool_get_dirty_pages_count	buf/buf0flu.cc	/^buf_pool_get_dirty_pages_count($/;"	f
buf_pool_get_n_pages	include/buf0buf.ic	/^buf_pool_get_n_pages(void)$/;"	f
buf_pool_get_oldest_modification	buf/buf0buf.cc	/^buf_pool_get_oldest_modification(void)$/;"	f
buf_pool_index	include/buf0buf.ic	/^buf_pool_index($/;"	f
buf_pool_info_t	include/buf0buf.h	/^struct buf_pool_info_t{$/;"	s
buf_pool_init	buf/buf0buf.cc	/^buf_pool_init($/;"	f
buf_pool_init_instance	buf/buf0buf.cc	/^buf_pool_init_instance($/;"	f
buf_pool_invalidate	buf/buf0buf.cc	/^buf_pool_invalidate(void)$/;"	f
buf_pool_invalidate_instance	buf/buf0buf.cc	/^buf_pool_invalidate_instance($/;"	f	file:
buf_pool_is_block_lock	include/buf0buf.h	1260;"	d
buf_pool_is_block_mutex	include/buf0buf.h	1255;"	d
buf_pool_is_obsolete	include/buf0buf.ic	/^buf_pool_is_obsolete($/;"	f
buf_pool_mutex_enter	include/buf0buf.h	2286;"	d
buf_pool_mutex_enter_all	include/buf0buf.ic	/^buf_pool_mutex_enter_all(void)$/;"	f
buf_pool_mutex_exit	include/buf0buf.h	2373;"	d
buf_pool_mutex_exit	include/buf0buf.h	2383;"	d
buf_pool_mutex_exit_all	include/buf0buf.ic	/^buf_pool_mutex_exit_all(void)$/;"	f
buf_pool_mutex_exit_allow	include/buf0buf.h	2367;"	d
buf_pool_mutex_exit_allow	include/buf0buf.h	2381;"	d
buf_pool_mutex_exit_forbid	include/buf0buf.h	2362;"	d
buf_pool_mutex_exit_forbid	include/buf0buf.h	2379;"	d
buf_pool_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	buf_pool_mutex_key;$/;"	v
buf_pool_mutex_own	include/buf0buf.h	2284;"	d
buf_pool_ptr	buf/buf0buf.cc	/^buf_pool_t*	buf_pool_ptr;$/;"	v
buf_pool_reads	include/srv0srv.h	/^	ulint_ctr_1_t		buf_pool_reads;$/;"	m	struct:srv_stats_t
buf_pool_register_chunk	buf/buf0buf.cc	/^buf_pool_register_chunk($/;"	f	file:
buf_pool_resize	buf/buf0buf.cc	/^buf_pool_resize()$/;"	f
buf_pool_resize_chunk_make_null	buf/buf0buf.cc	/^buf_pool_resize_chunk_make_null(buf_chunk_t** new_chunks)$/;"	f	file:
buf_pool_resize_hash	buf/buf0buf.cc	/^buf_pool_resize_hash($/;"	f	file:
buf_pool_resizing	buf/buf0buf.cc	/^volatile bool	buf_pool_resizing;$/;"	v
buf_pool_set_sizes	buf/buf0buf.cc	/^buf_pool_set_sizes(void)$/;"	f	file:
buf_pool_size_align	include/buf0buf.ic	/^buf_pool_size_align($/;"	f
buf_pool_stat_t	include/buf0buf.h	/^struct buf_pool_stat_t{$/;"	s
buf_pool_t	include/buf0buf.h	/^struct buf_pool_t{$/;"	s
buf_pool_validate_instance	buf/buf0buf.cc	/^buf_pool_validate_instance($/;"	f	file:
buf_pool_wait_free	include/srv0srv.h	/^	ulint_ctr_1_t		buf_pool_wait_free;$/;"	m	struct:srv_stats_t
buf_pool_watch_is_sentinel	buf/buf0buf.cc	/^buf_pool_watch_is_sentinel($/;"	f
buf_pool_watch_occurred	buf/buf0buf.cc	/^buf_pool_watch_occurred($/;"	f
buf_pool_watch_remove	buf/buf0buf.cc	/^buf_pool_watch_remove($/;"	f	file:
buf_pool_watch_set	buf/buf0buf.cc	/^buf_pool_watch_set($/;"	f
buf_pool_watch_unset	buf/buf0buf.cc	/^buf_pool_watch_unset($/;"	f
buf_pool_withdraw_blocks	buf/buf0buf.cc	/^buf_pool_withdraw_blocks($/;"	f	file:
buf_pool_withdrawing	buf/buf0buf.cc	/^volatile bool	buf_pool_withdrawing;$/;"	v
buf_pool_write_requests	include/srv0srv.h	/^	ulint_ctr_1_t		buf_pool_write_requests;$/;"	m	struct:srv_stats_t
buf_pool_zip_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	buf_pool_zip_mutex_key;$/;"	v
buf_pools_list_size_t	include/buf0buf.h	/^struct buf_pools_list_size_t {$/;"	s
buf_print	buf/buf0buf.cc	/^buf_print(void)$/;"	f
buf_print_instance	buf/buf0buf.cc	/^buf_print_instance($/;"	f	file:
buf_print_io	buf/buf0buf.cc	/^buf_print_io($/;"	f
buf_print_io_instance	buf/buf0buf.cc	/^buf_print_io_instance($/;"	f
buf_ptr	include/log0log.h	/^	byte*		buf_ptr;	\/*!< unaligned log buffer, which should$/;"	m	struct:log_t
buf_ptr_get_fsp_addr	include/buf0buf.ic	/^buf_ptr_get_fsp_addr($/;"	f
buf_read_ahead_linear	buf/buf0rea.cc	/^buf_read_ahead_linear($/;"	f
buf_read_ahead_random	buf/buf0rea.cc	/^buf_read_ahead_random($/;"	f
buf_read_ibuf_merge_pages	buf/buf0rea.cc	/^buf_read_ibuf_merge_pages($/;"	f
buf_read_page	buf/buf0rea.cc	/^buf_read_page($/;"	f
buf_read_page_background	buf/buf0rea.cc	/^buf_read_page_background($/;"	f
buf_read_page_handle_error	buf/buf0rea.cc	/^buf_read_page_handle_error($/;"	f	file:
buf_read_page_low	buf/buf0rea.cc	/^buf_read_page_low($/;"	f	file:
buf_read_recv_pages	buf/buf0rea.cc	/^buf_read_recv_pages($/;"	f
buf_refresh_io_stats	buf/buf0buf.cc	/^buf_refresh_io_stats($/;"	f
buf_refresh_io_stats_all	buf/buf0buf.cc	/^buf_refresh_io_stats_all(void)$/;"	f
buf_relocate	buf/buf0buf.cc	/^buf_relocate($/;"	f	file:
buf_remove_t	include/buf0types.h	/^enum buf_remove_t {$/;"	g
buf_resize_status	buf/buf0buf.cc	/^buf_resize_status($/;"	f	file:
buf_resize_thread	buf/buf0buf.cc	/^DECLARE_THREAD(buf_resize_thread)($/;"	f
buf_size	include/btr0pcur.h	/^	ulint		buf_size;$/;"	m	struct:btr_pcur_t
buf_size	include/log0log.h	/^	ulint		buf_size;	\/*!< log buffer size of each in bytes *\/$/;"	m	struct:log_t
buf_stats_aggregate_pool_info	buf/buf0buf.cc	/^buf_stats_aggregate_pool_info($/;"	f	file:
buf_stats_get_pool_info	buf/buf0buf.cc	/^buf_stats_get_pool_info($/;"	f
buf_unzip_LRU_add_block	buf/buf0lru.cc	/^buf_unzip_LRU_add_block($/;"	f
buf_unzip_LRU_remove_block_if_needed	buf/buf0lru.cc	/^buf_unzip_LRU_remove_block_if_needed($/;"	f	file:
buf_used	include/row0ftsort.h	/^	ulint			buf_used;       \/*!< the sort buffer (ID) when$/;"	m	struct:fts_tokenize_ctx
buf_validate	buf/buf0buf.cc	/^buf_validate(void)$/;"	f
buf_wait_for_read	buf/buf0buf.cc	/^buf_wait_for_read($/;"	f	file:
buf_withdraw_clock	buf/buf0buf.cc	/^volatile ulint	buf_withdraw_clock;$/;"	v
buf_zip_decompress	buf/buf0buf.cc	/^buf_zip_decompress($/;"	f
buffer_block_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	buffer_block_mutex_key;$/;"	v
bufp	include/gis0type.h	/^	byte*		bufp;		\/*!< aligned buffer point *\/$/;"	m	struct:matched_rec
build_template	handler/ha_innodb.cc	/^ha_innobase::build_template($/;"	f	class:ha_innobase
build_template_field	handler/ha_innodb.cc	/^build_template_field($/;"	f	file:
build_template_needs_field	handler/ha_innodb.cc	/^build_template_needs_field($/;"	f	file:
build_template_needs_field_in_icp	handler/ha_innodb.cc	/^build_template_needs_field_in_icp($/;"	f
byte	include/univ.i	410;"	d	file:
bytes	include/buf0buf.h	/^		byte	bytes[FIL_PAGE_DATA];$/;"	m	union:buf_buddy_free_t::__anon4
bytes	row/row0log.cc	/^	ulint		bytes;	\/*!< current position within block *\/$/;"	m	struct:row_log_buf_t	file:
cache	include/fts0fts.h	/^	fts_cache_t*	cache;$/;"	m	class:fts_t
cache	include/fts0types.h	/^	fts_cache_t*	cache;		\/*!< The parent cache *\/$/;"	m	struct:fts_get_doc_t
cache_full	include/fts0types.h	/^	ibool		cache_full;	\/*!< flag, when true it indicates that$/;"	m	struct:fts_sync_t
cache_heap	include/fts0types.h	/^	mem_heap_t*	cache_heap;	\/*!< Cache Heap *\/$/;"	m	struct:fts_cache_t
cache_last_read_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	cache_last_read_mutex_key;$/;"	v
cache_select_table	trx/trx0i_s.cc	/^cache_select_table($/;"	f	file:
cached	include/dict0mem.h	/^	unsigned				cached:1;$/;"	m	struct:dict_table_t
cached	include/dict0mem.h	/^	unsigned	cached:1;\/*!< TRUE if the index object is in the$/;"	m	struct:dict_index_t
cached_stopword	include/fts0types.h	/^	ib_rbt_t*	cached_stopword;\/*!< This stores all active stopwords *\/$/;"	m	struct:fts_stopword_t
cached_stopword	include/row0ftsort.h	/^	ib_rbt_t*		cached_stopword;\/*!< in: stopword list *\/$/;"	m	struct:fts_tokenize_ctx
calc_row_difference	handler/ha_innodb.cc	/^calc_row_difference($/;"	f	file:
calculate_key_hash_value	handler/ha_innopart.h	/^	calculate_key_hash_value($/;"	f	class:ha_innopart
caller	include/que0que.h	/^	que_thr_t*	caller;		\/*!< pointer to a possible calling query$/;"	m	struct:que_fork_t
can_auto_extend_last_file	include/fsp0sysspace.h	/^	ulint can_auto_extend_last_file() const$/;"	f	class:SysTablespace
can_be_evicted	include/dict0mem.h	/^	unsigned				can_be_evicted:1;$/;"	m	struct:dict_table_t
can_cache_be_updated	trx/trx0i_s.cc	/^can_cache_be_updated($/;"	f	file:
can_decompress	os/os0file.cc	/^	static bool can_decompress(const Slot* slot)$/;"	f	class:AIOHandler	file:
can_get_updated	include/row0sel.h	/^	ibool		can_get_updated;\/*!< this is TRUE if the select$/;"	m	struct:sel_node_t
can_switch_engines	handler/ha_innodb.cc	/^ha_innobase::can_switch_engines(void)$/;"	f	class:ha_innobase
can_switch_engines	handler/ha_innopart.cc	/^ha_innopart::can_switch_engines()$/;"	f	class:ha_innopart
cancel	include/trx0trx.h	/^	bool		cancel;		\/*!< true if the transaction is being$/;"	m	struct:trx_lock_t
capacity	include/data0data.h	/^	const ulint	capacity;	\/*!< fields array size *\/$/;"	m	struct:big_rec_t
capacity	include/read0types.h	/^		ulint capacity() const { return(m_reserved); }$/;"	f	class:ReadView::ids_t
cascade_heap	include/row0upd.h	/^	mem_heap_t*	cascade_heap;$/;"	m	struct:upd_node_t
cascade_node	include/row0upd.h	/^        upd_node_t*     cascade_node;\/* NULL or an update node template which$/;"	m	struct:upd_node_t
cfile_name	include/sync0rw.h	/^	const char*	cfile_name;$/;"	m	struct:rw_lock_t
chain	include/fil0fil.h	/^	UT_LIST_BASE_NODE_T(fil_node_t) chain;$/;"	m	struct:fil_space_t
chain	include/fil0fil.h	/^	UT_LIST_NODE_T(fil_node_t) chain;$/;"	m	struct:fil_node_t
change_active_index	handler/ha_innodb.cc	/^ha_innobase::change_active_index($/;"	f	class:ha_innobase
change_active_index	handler/ha_innopart.cc	/^ha_innopart::change_active_index($/;"	f	class:ha_innopart
change_partitions_low	handler/ha_innopart.h	/^	change_partitions_low($/;"	f	class:ha_innopart
change_phase	include/ut0stage.h	/^ut_stage_alter_t::change_phase($/;"	f	class:ut_stage_alter_t
charset	fts/fts0que.cc	/^	CHARSET_INFO*		charset;$/;"	m	struct:fts_phrase_t	file:
charset	include/api0api.h	/^	ib_charset_t*	charset;	\/*!< Column charset *\/$/;"	m	struct:__anon21
charset	include/fts0ast.h	/^	CHARSET_INFO*	charset;		\/*!< charset used for$/;"	m	struct:fts_ast_state_t
charset	include/fts0fts.h	/^	CHARSET_INFO*	charset;	\/*!< charset info if it is for FTS$/;"	m	struct:fts_table_t
charset	include/fts0types.h	/^	CHARSET_INFO*	charset;	\/*!< Document's charset info *\/$/;"	m	struct:fts_doc_t
charset	include/fts0types.h	/^	CHARSET_INFO*	charset;	\/*!< charset *\/$/;"	m	struct:fts_index_cache_t
charset	include/fts0types.h	/^	CHARSET_INFO*	charset;	\/*!< charset for stopword *\/$/;"	m	struct:fts_stopword_t
charset	include/row0ftsort.h	/^	CHARSET_INFO*	charset;	\/*!< charset info *\/$/;"	m	struct:fts_psort_insert
charset	include/row0mysql.h	/^	ulint	charset;		\/*!< MySQL charset-collation code$/;"	m	struct:mysql_row_templ_t
check	btr/btr0cur.cc	/^	void check()$/;"	f	struct:btr_blob_log_check_t
check	handler/ha_innodb.cc	/^Compression::check($/;"	f	class:Compression
check	handler/ha_innodb.cc	/^ha_innobase::check($/;"	f	class:ha_innobase
check	handler/ha_innopart.cc	/^ha_innopart::check($/;"	f	class:ha_innopart
check_and_resolve	lock/lock0lock.cc	/^DeadlockChecker::check_and_resolve(const lock_t* lock, trx_t* trx)$/;"	f	class:DeadlockChecker
check_col_exists_in_indexes	handler/handler0alter.cc	/^check_col_exists_in_indexes($/;"	f	file:
check_completed	os/os0file.cc	/^	Slot* check_completed(ulint* n_reserved)$/;"	f	class:SimulatedAIOHandler
check_deadlock_result	lock/lock0lock.cc	/^RecLock::check_deadlock_result(const trx_t* victim_trx, lock_t* lock)$/;"	f	class:RecLock
check_file_spec	fsp/fsp0sysspace.cc	/^SysTablespace::check_file_spec($/;"	f	class:SysTablespace
check_file_status	fsp/fsp0sysspace.cc	/^SysTablespace::check_file_status($/;"	f	class:SysTablespace
check_flush_or_checkpoint	include/log0log.h	/^	bool		check_flush_or_checkpoint;$/;"	m	struct:log_t
check_foreigns	include/trx0trx.h	/^	bool		check_foreigns;	\/*!< normally TRUE, but if the user$/;"	m	struct:trx_t
check_if_incompatible_data	handler/ha_innodb.cc	/^ha_innobase::check_if_incompatible_data($/;"	f	class:ha_innobase
check_if_incompatible_data	handler/ha_innopart.h	/^	check_if_incompatible_data($/;"	f	class:ha_innopart
check_if_supported_inplace_alter	handler/handler0alter.cc	/^ha_innobase::check_if_supported_inplace_alter($/;"	f	class:ha_innobase
check_if_supported_inplace_alter	handler/handler0alter.cc	/^ha_innopart::check_if_supported_inplace_alter($/;"	f	class:ha_innopart
check_interrupted	buf/buf0flu.cc	/^FlushObserver::check_interrupted()$/;"	f	class:FlushObserver
check_name	include/dict0dict.h	/^enum check_name {$/;"	g
check_pending	os/os0file.cc	/^SimulatedAIOHandler::check_pending($/;"	f	class:SimulatedAIOHandler
check_read	os/os0file.cc	/^AIOHandler::check_read(Slot* slot, ulint n_bytes)$/;"	f	class:AIOHandler
check_size	fsp/fsp0sysspace.cc	/^SysTablespace::check_size($/;"	f	class:SysTablespace
check_state	os/os0file.cc	/^LinuxAIOHandler::check_state(Slot* slot)$/;"	f	class:LinuxAIOHandler
check_trx_exists	handler/ha_innodb.cc	/^check_trx_exists($/;"	f	file:
check_trx_id_sanity	trx/trx0sys.cc	/^ReadView::check_trx_id_sanity($/;"	f	class:ReadView
check_trx_state	include/trx0trx.h	629;"	d
check_unique_secondary	include/trx0trx.h	/^	bool		check_unique_secondary;$/;"	m	struct:trx_t
check_v_col_in_order	handler/handler0alter.cc	/^check_v_col_in_order($/;"	f	file:
checkpoint_buf	include/log0log.h	/^	byte*				checkpoint_buf;$/;"	m	struct:log_group_t
checkpoint_buf	include/log0log.h	/^	byte*		checkpoint_buf;	\/*!< checkpoint header is read to this$/;"	m	struct:log_t
checkpoint_buf_ptr	include/log0log.h	/^	byte*				checkpoint_buf_ptr;$/;"	m	struct:log_group_t
checkpoint_buf_ptr	include/log0log.h	/^	byte*		checkpoint_buf_ptr;\/* unaligned checkpoint header *\/$/;"	m	struct:log_t
checkpoint_lock	include/log0log.h	/^	rw_lock_t	checkpoint_lock;\/*!< this latch is x-locked when a$/;"	m	struct:log_t
checkpoint_lock_key	sync/sync0sync.cc	/^mysql_pfs_key_t	checkpoint_lock_key;$/;"	v
child	include/que0que.h	/^	que_node_t*	child;		\/*!< graph child node *\/$/;"	m	struct:que_thr_t
child_no	include/gis0type.h	/^	ulint		child_no;	\/*!< child page num if for parent$/;"	m	struct:node_visit
child_status	include/row0ftsort.h	/^	ulint			child_status;	\/*!< child thread status *\/$/;"	m	struct:fts_psort_t
chunks	include/buf0buf.h	/^	buf_chunk_t*	chunks;		\/*!< buffer pool chunks *\/$/;"	m	struct:buf_pool_t
chunks	trx/trx0i_s.cc	/^	i_s_mem_chunk_t	chunks[MEM_CHUNKS_IN_TABLE_CACHE]; \/*!< array of$/;"	m	struct:i_s_table_cache_t	file:
chunks_old	include/buf0buf.h	/^	buf_chunk_t*	chunks_old;	\/*!< old buffer pool chunks to be freed$/;"	m	struct:buf_pool_t
clear	include/read0types.h	/^		void clear() { resize(0); }$/;"	f	class:ReadView::ids_t
clear	include/row0trunc.h	/^	void clear()$/;"	f	class:truncate_t
clear	include/trx0purge.h	/^		void clear()$/;"	f	class:undo::Truncate
clear_bit	handler/ha_innopart.cc	/^clear_bit($/;"	f	file:
clear_blob_heaps	handler/ha_innopart.cc	/^ha_innopart::clear_blob_heaps()$/;"	f	class:ha_innopart
clear_compressed	include/os0file.h	/^	void clear_compressed()$/;"	f	class:IORequest
clear_do_not_wake	include/os0file.h	/^	void clear_do_not_wake()$/;"	f	class:IORequest
clear_encrypted	include/os0file.h	/^	void clear_encrypted()$/;"	f	class:IORequest
clear_ins_upd_nodes	handler/ha_innopart.cc	/^void ha_innopart::clear_ins_upd_nodes()$/;"	f	class:ha_innopart
clear_punch_hole	include/os0file.h	/^	void clear_punch_hole()$/;"	f	class:IORequest
clear_trunc_list	include/trx0purge.h	/^		static void clear_trunc_list()$/;"	f	class:undo::Truncate
client_type	include/api0api.h	/^	ib_u16_t	client_type;	\/*!< 16 bits of data relevant only to$/;"	m	struct:__anon21
cline	include/sync0rw.h	/^	unsigned	cline:13;$/;"	m	struct:rw_lock_t
clone	data/data0data.cc	/^dfield_t::clone($/;"	f	class:dfield_t
clone	handler/ha_innodb.cc	/^ha_innobase::clone($/;"	f	class:ha_innobase
clone	handler/ha_innopart.cc	/^ha_innopart::clone($/;"	f	class:ha_innopart
clone_oldest_view	read/read0read.cc	/^MVCC::clone_oldest_view(ReadView* view)$/;"	f	class:MVCC
close	fsp/fsp0file.cc	/^Datafile::close()$/;"	f	class:Datafile
close	handler/ha_innodb.cc	/^ha_innobase::close()$/;"	f	class:ha_innobase
close	handler/ha_innopart.cc	/^ha_innopart::close()$/;"	f	class:ha_innopart
close	include/dyn0buf.h	/^		void close(const byte* ptr)$/;"	f	class:dyn_buf_t::block_t
close	include/dyn0buf.h	/^	void close(const byte* ptr)$/;"	f	class:dyn_buf_t
close	include/read0types.h	/^	void close()$/;"	f	class:ReadView
close_new_partitions	handler/ha_innopart.cc	/^ha_innopart::close_new_partitions()$/;"	f	class:ha_innopart
close_table_parts	handler/ha_innopart.cc	/^Ha_innopart_share::close_table_parts()$/;"	f	class:Ha_innopart_share
clust_index_was_generated	include/row0mysql.h	/^	unsigned	clust_index_was_generated:1;$/;"	m	struct:row_prebuilt_t
clust_map	include/row0sel.h	/^	ulint*		clust_map;	\/*!< map telling how clust_ref is built$/;"	m	struct:plan_t
clust_pcur	include/row0mysql.h	/^	btr_pcur_t*	clust_pcur;	\/*!< persistent cursor used in$/;"	m	struct:row_prebuilt_t
clust_pcur	include/row0sel.h	/^	btr_pcur_t	clust_pcur;	\/*!< if index is non-clustered, we use$/;"	m	struct:plan_t
clust_rec_field_no	include/row0mysql.h	/^	ulint	clust_rec_field_no;	\/*!< field number of the column in an$/;"	m	struct:mysql_row_templ_t
clust_ref	include/row0mysql.h	/^	dtuple_t*	clust_ref;	\/*!< prebuilt dtuple used in$/;"	m	struct:row_prebuilt_t
clust_ref	include/row0sel.h	/^	dtuple_t*	clust_ref;	\/*!< the reference to the clustered$/;"	m	struct:plan_t
clustered	api/api0api.cc	/^	ibool		clustered;	\/*!< True if clustered index *\/$/;"	m	struct:ib_index_def_t	file:
cmp_arg	include/ut0rbt.h	/^	void*		cmp_arg;		\/* Compare func argument *\/$/;"	m	struct:ib_rbt_t
cmp_cols_are_equal	rem/rem0cmp.cc	/^cmp_cols_are_equal($/;"	f
cmp_data	rem/rem0cmp.cc	/^cmp_data($/;"	f
cmp_data_data	rem/rem0cmp.cc	/^cmp_data_data($/;"	f
cmp_decimal	rem/rem0cmp.cc	/^cmp_decimal($/;"	f	file:
cmp_dfield_dfield	include/rem0cmp.ic	/^cmp_dfield_dfield($/;"	f
cmp_dfield_dfield_like_prefix	include/rem0cmp.ic	/^cmp_dfield_dfield_like_prefix($/;"	f
cmp_dtuple_is_prefix_of_rec	rem/rem0cmp.cc	/^cmp_dtuple_is_prefix_of_rec($/;"	f
cmp_dtuple_rec	rem/rem0cmp.cc	/^cmp_dtuple_rec($/;"	f
cmp_dtuple_rec_with_gis	rem/rem0cmp.cc	/^cmp_dtuple_rec_with_gis($/;"	f
cmp_dtuple_rec_with_gis_internal	rem/rem0cmp.cc	/^cmp_dtuple_rec_with_gis_internal($/;"	f
cmp_dtuple_rec_with_match	include/rem0cmp.h	129;"	d
cmp_dtuple_rec_with_match_bytes	rem/rem0cmp.cc	/^cmp_dtuple_rec_with_match_bytes($/;"	f
cmp_dtuple_rec_with_match_low	rem/rem0cmp.cc	/^cmp_dtuple_rec_with_match_low($/;"	f
cmp_geometry_field	rem/rem0cmp.cc	/^cmp_geometry_field($/;"	f	file:
cmp_get_pad_char	rem/rem0cmp.cc	/^cmp_get_pad_char($/;"	f
cmp_gis_field	rem/rem0cmp.cc	/^cmp_gis_field($/;"	f	file:
cmp_rec_rec	include/rem0cmp.ic	/^cmp_rec_rec($/;"	f
cmp_rec_rec_simple	rem/rem0cmp.cc	/^cmp_rec_rec_simple($/;"	f
cmp_rec_rec_simple_field	rem/rem0cmp.cc	/^cmp_rec_rec_simple_field($/;"	f
cmp_rec_rec_with_match	rem/rem0cmp.cc	/^cmp_rec_rec_with_match($/;"	f
cmp_ref	handler/ha_innodb.cc	/^ha_innobase::cmp_ref($/;"	f	class:ha_innobase
cmp_ref	handler/ha_innopart.cc	/^ha_innopart::cmp_ref($/;"	f	class:ha_innopart
cmp_whole_field	rem/rem0cmp.cc	/^cmp_whole_field($/;"	f	file:
cmpl_info	include/row0purge.h	/^	ulint		cmpl_info;\/* compiler analysis info of an update *\/$/;"	m	struct:purge_node_t
cmpl_info	include/row0undo.h	/^	ulint		cmpl_info;\/*!< compiler analysis of an update *\/$/;"	m	struct:undo_node_t
cmpl_info	include/row0upd.h	/^	ulint		cmpl_info;\/* information extracted during query$/;"	m	struct:upd_node_t
code	include/pars0pars.h	/^	int	code;	\/*!< the token code for the reserved word from$/;"	m	struct:pars_res_word_t
col	include/dict0mem.h	/^	dict_col_t*	col;		\/*!< pointer to the table column *\/$/;"	m	struct:dict_field_t
col	include/pars0pars.h	/^	sym_node_t*	col;		\/*!< column to set *\/$/;"	m	struct:col_assign_node_t
col_assign_list	include/row0upd.h	/^	que_node_t*	col_assign_list;$/;"	m	struct:upd_node_t
col_assign_node_t	include/pars0pars.h	/^struct col_assign_node_t{$/;"	s
col_def	include/dict0crea.h	/^	ins_node_t*	col_def;	\/*!< child node which does the inserts$/;"	m	struct:tab_node_t
col_map	handler/handler0alter.cc	/^	const ulint*	col_map;$/;"	m	struct:ha_innobase_inplace_ctx	file:
col_map	include/row0merge.h	/^	const ulint*		col_map;\/*!< mapping of column numbers$/;"	m	struct:row_merge_dup_t
col_map	row/row0log.cc	/^	const ulint*	col_map;\/*!< mapping of old column numbers to$/;"	m	struct:row_log_t	file:
col_names	handler/handler0alter.cc	/^	const char**	col_names;$/;"	m	struct:ha_innobase_inplace_ctx	file:
col_names	include/dict0mem.h	/^	const char*				col_names;$/;"	m	struct:dict_table_t
col_no	include/dict0crea.h	/^	ulint		col_no;		\/*!< next column definition to insert *\/$/;"	m	struct:tab_node_t
col_no	include/pars0sym.h	/^	ulint				col_no;		\/*!< column number if a$/;"	m	struct:sym_node_t
col_no	include/row0merge.h	/^	ulint		col_no;		\/*!< column offset *\/$/;"	m	struct:index_field_t
col_no	include/row0mysql.h	/^	ulint	col_no;			\/*!< column number of the column *\/$/;"	m	struct:mysql_row_templ_t
col_set	handler/handler0alter.cc	/^typedef std::set<ulint, std::less<ulint>, ut_allocator<ulint> >	col_set;$/;"	t	file:
col_var_list	include/pars0sym.h	/^	UT_LIST_NODE_T(sym_node_t)	col_var_list;	\/*!< list of table$/;"	m	struct:sym_node_t
collect	os/os0file.cc	/^LinuxAIOHandler::collect()$/;"	f	class:LinuxAIOHandler
collect_positions	fts/fts0que.cc	/^	ibool		collect_positions;$/;"	m	struct:fts_query_t	file:
color	include/ut0rbt.h	/^	ib_rbt_color_t	color;			\/* color of this node *\/$/;"	m	struct:ib_rbt_node_t
cols	api/api0api.cc	/^	ib_vector_t*	cols;		\/*!< Vector of columns *\/$/;"	m	struct:ib_index_def_t	file:
cols	api/api0api.cc	/^	ib_vector_t*	cols;		\/*!< Vector of columns *\/$/;"	m	struct:ib_table_def_t	file:
cols	include/dict0mem.h	/^	dict_col_t*				cols;$/;"	m	struct:dict_table_t
column	include/pars0pars.h	/^	sym_node_t*	column;	\/*!< order-by column *\/$/;"	m	struct:order_node_t
columns	include/dict0dict.h	/^	dict_col_meta_t*	columns;	\/* metadata for the columns;$/;"	m	struct:dict_table_schema_t
columns	include/row0sel.h	/^	sym_node_list_t	columns;	\/*!< symbol table nodes for the columns$/;"	m	struct:plan_t
columns	include/row0upd.h	/^	sym_node_list_t	columns;\/* symbol table nodes for the columns$/;"	m	struct:upd_node_t
comment	pars/lexyy.cc	1009;"	d	file:
commit	btr/btr0bulk.cc	/^PageBulk::commit($/;"	f	class:PageBulk
commit	mtr/mtr0mtr.cc	/^mtr_t::commit()$/;"	f	class:mtr_t
commit_cache_norebuild	handler/handler0alter.cc	/^commit_cache_norebuild($/;"	f
commit_cache_rebuild	handler/handler0alter.cc	/^commit_cache_rebuild($/;"	f
commit_checkpoint	mtr/mtr0mtr.cc	/^mtr_t::commit_checkpoint($/;"	f	class:mtr_t
commit_cond	handler/ha_innodb.cc	/^static mysql_cond_t commit_cond;$/;"	v	file:
commit_cond_key	handler/ha_innodb.cc	/^static mysql_pfs_key_t	commit_cond_key;$/;"	v	file:
commit_cond_m	handler/ha_innodb.cc	/^static mysql_mutex_t commit_cond_m;$/;"	v	file:
commit_cond_mutex_key	handler/ha_innodb.cc	/^static mysql_pfs_key_t	commit_cond_mutex_key;$/;"	v	file:
commit_get_autoinc	handler/handler0alter.cc	/^commit_get_autoinc($/;"	f
commit_graph	fts/fts0opt.cc	/^	que_t*		commit_graph;$/;"	m	struct:fts_optimize_graph_t	file:
commit_inplace_alter_table	handler/handler0alter.cc	/^ha_innobase::commit_inplace_alter_table($/;"	f	class:ha_innobase
commit_inplace_alter_table	handler/handler0alter.cc	/^ha_innopart::commit_inplace_alter_table($/;"	f	class:ha_innopart
commit_lsn	include/mtr0mtr.h	/^	lsn_t commit_lsn() const$/;"	f	struct:mtr_t
commit_lsn	include/trx0trx.h	/^	lsn_t		commit_lsn;	\/*!< lsn at the time of the commit *\/$/;"	m	struct:trx_t
commit_node_state	include/trx0trx.h	/^enum commit_node_state {$/;"	g
commit_node_t	include/trx0trx.h	/^struct commit_node_t{$/;"	s
commit_threads	handler/ha_innodb.cc	/^static ulong commit_threads = 0;$/;"	v	file:
commit_try_norebuild	handler/handler0alter.cc	/^commit_try_norebuild($/;"	f
commit_try_rebuild	handler/handler0alter.cc	/^commit_try_rebuild($/;"	f
common	include/dict0crea.h	/^	que_common_t	common;		\/*!< node type: QUE_NODE_INDEX_CREATE *\/$/;"	m	struct:ind_node_t
common	include/dict0crea.h	/^	que_common_t	common;		\/*!< node type: QUE_NODE_TABLE_CREATE *\/$/;"	m	struct:tab_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_ASSIGNMENT *\/$/;"	m	struct:assign_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_COL_ASSIGN *\/$/;"	m	struct:col_assign_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_ELSIF *\/$/;"	m	struct:elsif_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_EXIT *\/$/;"	m	struct:exit_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_FOR *\/$/;"	m	struct:for_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_IF *\/$/;"	m	struct:if_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_PROC *\/$/;"	m	struct:proc_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_RETURN *\/$/;"	m	struct:return_node_t
common	include/pars0pars.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_WHILE *\/$/;"	m	struct:while_node_t
common	include/pars0pars.h	/^	que_common_t	common;	\/*!< type: QUE_NODE_FUNC *\/$/;"	m	struct:func_node_t
common	include/pars0pars.h	/^	que_common_t	common;	\/*!< type: QUE_NODE_ORDER *\/$/;"	m	struct:order_node_t
common	include/pars0sym.h	/^	que_common_t			common;		\/*!< node type:$/;"	m	struct:sym_node_t
common	include/que0que.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_FORK *\/$/;"	m	struct:que_fork_t
common	include/que0que.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_THR *\/$/;"	m	struct:que_thr_t
common	include/row0ins.h	/^	que_common_t	common;	\/*!< node type: QUE_NODE_INSERT *\/$/;"	m	struct:ins_node_t
common	include/row0purge.h	/^	que_common_t	common;	\/*!< node type: QUE_NODE_PURGE *\/$/;"	m	struct:purge_node_t
common	include/row0sel.h	/^	que_common_t	common;		\/*!< node type: QUE_NODE_SELECT *\/$/;"	m	struct:sel_node_t
common	include/row0sel.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_FETCH *\/$/;"	m	struct:fetch_node_t
common	include/row0sel.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_OPEN *\/$/;"	m	struct:open_node_t
common	include/row0sel.h	/^	que_common_t	common;		\/*!< type: QUE_NODE_ROW_PRINTF *\/$/;"	m	struct:row_printf_node_t
common	include/row0undo.h	/^	que_common_t	common;	\/*!< node type: QUE_NODE_UNDO *\/$/;"	m	struct:undo_node_t
common	include/row0upd.h	/^	que_common_t	common;	\/*!< node type: QUE_NODE_UPDATE *\/$/;"	m	struct:upd_node_t
common	include/trx0roll.h	/^	que_common_t		common;	\/*!< node type: QUE_NODE_ROLLBACK *\/$/;"	m	struct:roll_node_t
common	include/trx0trx.h	/^	que_common_t	common;	\/*!< node type: QUE_NODE_COMMIT *\/$/;"	m	struct:commit_node_t
compare	include/ut0rbt.h	/^	ib_rbt_compare	compare;		\/* Fn. to use for comparison *\/$/;"	m	struct:ib_rbt_t
compare_with_arg	include/ut0rbt.h	/^			compare_with_arg;	\/* Fn. to use for comparison$/;"	m	struct:ib_rbt_t
complete	read/read0read.cc	/^ReadView::complete()$/;"	f	class:ReadView
completed	fts/fts0opt.cc	/^	ib_time_t	completed;	\/*!< Optimize finish time *\/$/;"	m	struct:fts_slot_t	file:
compress	btr/btr0bulk.cc	/^PageBulk::compress()$/;"	f	class:PageBulk
compressed	include/page0types.h	/^	ulint		compressed;$/;"	m	struct:page_zip_stat_t
compressed_ok	include/page0types.h	/^	ulint		compressed_ok;$/;"	m	struct:page_zip_stat_t
compressed_page_size	os/os0file.cc	/^	static ulint compressed_page_size(const Slot* slot)$/;"	f	class:AIOHandler	file:
compressed_usec	include/page0types.h	/^	ib_uint64_t	compressed_usec;$/;"	m	struct:page_zip_stat_t
compression_algorithm	include/os0file.h	/^	void compression_algorithm(Compression::Type type)$/;"	f	class:IORequest
compression_type	include/fil0fil.h	/^	Compression::Type	compression_type;$/;"	m	struct:fil_space_t
cond	include/pars0pars.h	/^	que_node_t*	cond;		\/*!< if condition *\/$/;"	m	struct:elsif_node_t
cond	include/pars0pars.h	/^	que_node_t*	cond;		\/*!< if condition *\/$/;"	m	struct:if_node_t
cond	include/pars0pars.h	/^	que_node_t*	cond;		\/*!< while condition *\/$/;"	m	struct:while_node_t
cond_list	include/pars0pars.h	/^	UT_LIST_NODE_T(func_node_t) cond_list;$/;"	m	struct:func_node_t
cond_var	os/os0event.cc	/^	os_cond_t		cond_var;	\/*!< condition variable is$/;"	m	struct:os_event	file:
consistent_read	include/row0sel.h	/^	ibool		consistent_read;\/*!< TRUE if the select is a consistent,$/;"	m	struct:sel_node_t
const_pointer	include/mem0mem.h	/^	typedef		const T*	const_pointer;$/;"	t	class:mem_heap_allocator
const_pointer	include/ut0new.h	/^	typedef const T*	const_pointer;$/;"	t	class:ut_allocator
const_reference	include/mem0mem.h	/^	typedef		const T&	const_reference;$/;"	t	class:mem_heap_allocator
const_reference	include/ut0new.h	/^	typedef const T&	const_reference;$/;"	t	class:ut_allocator
construct	include/mem0mem.h	/^	void construct(pointer p, const_reference t)$/;"	f	class:mem_heap_allocator
construct	include/ut0new.h	/^	construct($/;"	f	class:ut_allocator
control	os/os0file.cc	/^	OVERLAPPED		control;$/;"	m	struct:Slot	file:
control	os/os0file.cc	/^	struct iocb		control;$/;"	m	struct:Slot	typeref:struct:Slot::iocb	file:
convert_error_code_to_mysql	handler/ha_innodb.cc	/^convert_error_code_to_mysql($/;"	f
convert_search_mode_to_innobase	handler/ha_innodb.cc	/^convert_search_mode_to_innobase($/;"	f
coords	include/gis0geo.h	/^	double* coords;		\/* mbr. *\/$/;"	m	struct:rtr_split_node_t
copyIn	btr/btr0bulk.cc	/^PageBulk::copyIn($/;"	f	class:PageBulk
copyOut	btr/btr0bulk.cc	/^PageBulk::copyOut($/;"	f	class:PageBulk
copy_cached_row	handler/ha_innopart.cc	/^ha_innopart::copy_cached_row($/;"	f	class:ha_innopart
copy_complete	read/read0read.cc	/^ReadView::copy_complete()$/;"	f	class:ReadView
copy_coords	gis/gis0geo.cc	/^copy_coords($/;"	f	file:
copy_from	include/buf0buf.h	/^	inline void copy_from(const page_id_t& src)$/;"	f	class:page_id_t
copy_from	include/page0size.h	/^	inline void copy_from(const page_size_t& src)$/;"	f	class:page_size_t
copy_prepare	read/read0read.cc	/^ReadView::copy_prepare(const ReadView& other)$/;"	f	class:ReadView
copy_to_buffer	os/os0file.cc	/^	void copy_to_buffer(ulint len)$/;"	f	class:SimulatedAIOHandler
copy_trx_ids	read/read0read.cc	/^ReadView::copy_trx_ids(const trx_ids_t& trx_ids)$/;"	f	class:ReadView
copy_val	include/pars0sym.h	/^	ibool				copy_val;	\/*!< TRUE if a column$/;"	m	struct:sym_node_t
copy_variables	include/row0sel.h	/^			copy_variables; \/*!< variables whose values we have to$/;"	m	struct:sel_node_t
corrupted	include/dict0mem.h	/^	unsigned				corrupted:1;$/;"	m	struct:dict_table_t
could_you	handler/ha_innodb.h	/^	struct _ft_vft_ext	*could_you;$/;"	m	struct:new_ft_info	typeref:struct:new_ft_info::_ft_vft_ext
count	include/ut0lst.h	/^	ulint		count;			\/*!< count of nodes in list *\/$/;"	m	struct:ut_list_base
count_os_wait	include/sync0rw.h	/^	uint32_t	count_os_wait;$/;"	m	struct:rw_lock_t
count_register_table_handler	include/sess0sess.h	/^	uint count_register_table_handler() const$/;"	f	class:innodb_session_t
count_square	gis/gis0geo.cc	/^count_square($/;"	f	file:
counter	row/row0ins.cc	/^	ulint&		counter;$/;"	m	class:ib_dec_in_dtor	file:
counter_indexer_t	include/ut0counter.h	/^struct counter_indexer_t : public generic_indexer_t<Type, N> {$/;"	s
create	handler/ha_innodb.cc	/^ha_innobase::create($/;"	f	class:ha_innobase
create	handler/ha_innopart.cc	/^ha_innopart::create($/;"	f	class:ha_innopart
create	include/ut0pool.h	/^	void create()$/;"	f	struct:PoolManager
create	lock/lock0lock.cc	/^RecLock::create($/;"	f	class:RecLock
create	os/os0file.cc	/^AIO::create($/;"	f	class:AIO
create	trx/trx0trx.cc	/^	void create()$/;"	f	struct:TrxPoolLock
create	trx/trx0trx.cc	/^	void create()$/;"	f	struct:TrxPoolManagerLock
create_clustered_index_when_no_primary	handler/ha_innodb.cc	/^create_clustered_index_when_no_primary($/;"	f
create_file	fsp/fsp0sysspace.cc	/^SysTablespace::create_file($/;"	f	class:SysTablespace
create_index	handler/ha_innodb.cc	/^create_index($/;"	f
create_index	row/row0trunc.cc	/^truncate_t::create_index($/;"	f	class:truncate_t
create_indexes	row/row0trunc.cc	/^truncate_t::create_indexes($/;"	f	class:truncate_t
create_link_file	fsp/fsp0file.cc	/^RemoteDatafile::create_link_file($/;"	f	class:RemoteDatafile
create_log_file	srv/srv0start.cc	/^create_log_file($/;"	f
create_log_files	srv/srv0start.cc	/^create_log_files($/;"	f	file:
create_log_files_rename	srv/srv0start.cc	/^create_log_files_rename($/;"	f	file:
create_master_key	os/os0file.cc	/^Encryption::create_master_key(byte** master_key)$/;"	f	class:Encryption
create_new_partition	handler/ha_innopart.cc	/^ha_innopart::create_new_partition($/;"	f	class:ha_innopart
create_option_compression_is_valid	handler/ha_innodb.cc	/^create_table_info_t::create_option_compression_is_valid()$/;"	f	class:create_table_info_t
create_option_data_directory_is_valid	handler/ha_innodb.cc	/^create_table_info_t::create_option_data_directory_is_valid()$/;"	f	class:create_table_info_t
create_option_tablespace_is_valid	handler/ha_innodb.cc	/^create_table_info_t::create_option_tablespace_is_valid()$/;"	f	class:create_table_info_t
create_options_are_invalid	handler/ha_innodb.cc	/^create_table_info_t::create_options_are_invalid()$/;"	f	class:create_table_info_t
create_table	handler/ha_innodb.cc	/^create_table_info_t::create_table()$/;"	f	class:create_table_info_t
create_table_check_doc_id_col	handler/ha_innodb.cc	/^create_table_check_doc_id_col($/;"	f	file:
create_table_def	handler/ha_innodb.cc	/^create_table_info_t::create_table_def()$/;"	f	class:create_table_info_t
create_table_info_t	handler/ha_innodb.h	/^	create_table_info_t($/;"	f	class:create_table_info_t
create_table_info_t	handler/ha_innodb.h	/^class create_table_info_t$/;"	c
create_table_update_dict	handler/ha_innodb.cc	/^create_table_info_t::create_table_update_dict()$/;"	f	class:create_table_info_t
create_thd	srv/srv0srv.cc	77;"	d	file:
create_tracker	sync/sync0debug.cc	/^static CreateTracker*	create_tracker;$/;"	v	file:
created_new_raw	include/fsp0sysspace.h	/^	bool created_new_raw() const$/;"	f	class:SysTablespace
creator_trx_id	include/read0types.h	/^	void creator_trx_id(trx_id_t id)$/;"	f	class:ReadView
ctime	include/os0file.h	/^	time_t		ctime;			\/*!< creation time *\/$/;"	m	struct:os_file_stat_t
ctx_array	handler/handler0alter.cc	/^	inplace_alter_handler_ctx**	ctx_array;$/;"	m	class:ha_innopart_inplace_ctx	file:
cur_end	include/que0que.h	/^	ulint		cur_end;	\/*!< QUE_CUR_NOT_DEFINED, QUE_CUR_START,$/;"	m	struct:que_fork_t
cur_node	fts/fts0que.cc	/^	fts_ast_node_t* cur_node;	\/*!< Current tree node *\/$/;"	m	struct:fts_query_t	file:
cur_node	include/fts0ast.h	/^	fts_ast_node_t*	cur_node;		\/*!< Current node into which$/;"	m	struct:fts_ast_state_t
cur_on_row	include/que0que.h	/^	ibool		cur_on_row;	\/*!< TRUE if cursor is on a row, i.e.,$/;"	m	struct:que_fork_t
cur_pos	include/que0que.h	/^	ulint		cur_pos;	\/*!< if there are n rows in the result$/;"	m	struct:que_fork_t
curr_left_side	include/buf0buf.h	/^	unsigned	curr_left_side:1;\/*!< TRUE or FALSE in hash indexing *\/$/;"	m	struct:buf_block_t
curr_n_bytes	include/buf0buf.h	/^	unsigned	curr_n_bytes:15;\/*!< number of bytes in hash$/;"	m	struct:buf_block_t
curr_n_fields	include/buf0buf.h	/^	unsigned	curr_n_fields:10;\/*!< prefix length for hash indexing:$/;"	m	struct:buf_block_t
curr_pool_size	include/buf0buf.h	/^	ulint		curr_pool_size;	\/*!< Current pool size in bytes *\/$/;"	m	struct:buf_pool_t
curr_size	include/buf0buf.h	/^	ulint		curr_size;	\/*!< current pool size in pages *\/$/;"	m	struct:buf_pool_t
curr_size	include/trx0rseg.h	/^	ulint				curr_size;$/;"	m	struct:trx_rseg_t
current	include/fts0fts.h	/^	ib_rbt_node_t*	current;	\/*!< Current element *\/$/;"	m	struct:fts_result_t
current	lock/lock0lock.cc	/^	const lock_t* current(const trx_t* trx) const$/;"	f	class:TrxLockIterator
current	lock/lock0lock.cc	/^	const trx_t* current()$/;"	f	class:TrxListIterator
current_flush_lsn	include/log0log.h	/^	lsn_t		current_flush_lsn;\/*!< end lsn for the current running$/;"	m	struct:log_t
current_lock	include/lock0iter.h	/^	const lock_t*	current_lock;$/;"	m	struct:lock_queue_iterator_t
cursor	include/gis0type.h	/^	btr_cur_t*	cursor;	\/*!< cursor used for search *\/$/;"	m	struct:rtr_info
cursor	include/gis0type.h	/^	btr_pcur_t*	cursor;		\/*!< cursor structure if we positioned$/;"	m	struct:node_visit
cursor_at_end	include/row0sel.h	/^	ibool		cursor_at_end;	\/*!< TRUE if the cursor is open but$/;"	m	struct:plan_t
cursor_def	include/pars0sym.h	/^	sel_node_t*			cursor_def;	\/*!< cursor definition$/;"	m	struct:sym_node_t
cursor_def	include/row0sel.h	/^	sel_node_t*	cursor_def;	\/*!< cursor definition *\/$/;"	m	struct:fetch_node_t
cursor_def	include/row0sel.h	/^	sel_node_t*	cursor_def;	\/*!< cursor definition *\/$/;"	m	struct:open_node_t
cursor_heap	include/row0mysql.h	/^	mem_heap_t*     cursor_heap;	\/*!< memory heap from which$/;"	m	struct:row_prebuilt_t
cursors_t	row/row0mysql.cc	/^typedef	std::vector<btr_pcur_t, ut_allocator<btr_pcur_t> >	cursors_t;$/;"	t	file:
data	include/data0data.h	/^	const void*	data;		\/*!< stored data *\/$/;"	m	struct:big_rec_field_t
data	include/data0data.h	/^	void*		data;	\/*!< pointer to data *\/$/;"	m	struct:dfield_t
data	include/ha0ha.h	/^	const rec_t*	data;	\/*!< pointer to the data *\/$/;"	m	struct:ha_node_t
data	include/ha0storage.ic	/^	const void*		data;	\/*!< pointer to data *\/$/;"	m	struct:ha_storage_node_t	file:
data	include/lock0prdt.h	/^	void*		data;		\/* Predicate data *\/$/;"	m	struct:lock_prdt
data	include/log0recv.h	/^	recv_data_t*	data;	\/*!< chain of blocks containing the log record$/;"	m	struct:recv_t
data	include/page0types.h	/^	page_zip_t*	data;		\/*!< compressed page data *\/$/;"	m	struct:page_zip_des_t
data	include/read0types.h	/^		const trx_id_t* data() const { return(m_ptr); };$/;"	f	class:ReadView::ids_t
data	include/read0types.h	/^		trx_id_t* data() { return(m_ptr); };$/;"	f	class:ReadView::ids_t
data	include/row0sel.h	/^	byte*		data;	\/*!< data, or NULL; if not NULL, this field$/;"	m	struct:sel_buf_t
data	include/ut0list.h	/^	void*			data;		\/*!< user data *\/$/;"	m	struct:ib_list_node_t
data	include/ut0list.h	/^	void*		data;		\/*!< user data *\/$/;"	m	struct:ib_list_helper_t
data	include/ut0vec.h	/^	void*		data;		\/* data elements *\/$/;"	m	struct:ib_vector_t
data0data_h	include/data0data.h	27;"	d
data0type_h	include/data0type.h	27;"	d
data0types_h	include/data0types.h	27;"	d
data_dir_path	include/dict0mem.h	/^	char*					data_dir_path;$/;"	m	struct:dict_table_t
data_dummy	data/data0data.cc	/^ulint	data_dummy;$/;"	v
data_error	data/data0data.cc	/^byte	data_error;$/;"	v
data_len	include/ha0storage.ic	/^	ulint			data_len;\/*!< length of the data *\/$/;"	m	struct:ha_storage_node_t	file:
data_mysql_default_charset_coll	data/data0type.cc	/^ulint	data_mysql_default_charset_coll;$/;"	v
data_read	include/srv0srv.h	/^	ulint_ctr_1_t		data_read;$/;"	m	struct:srv_stats_t
data_size	handler/i_s.cc	/^	unsigned	data_size:UNIV_PAGE_SIZE_SHIFT_MAX;$/;"	m	struct:buf_page_info_t	file:
data_write_sql_null	include/data0data.ic	/^data_write_sql_null($/;"	f
data_written	include/srv0srv.h	/^	ulint_ctr_1_t		data_written;$/;"	m	struct:srv_stats_t
db0err_h	include/db0err.h	27;"	d
db_name	include/dict0mem.h	/^	std::string		db_name;$/;"	m	struct:dict_vcol_templ_t
dberr_t	include/db0err.h	/^enum dberr_t {$/;"	g
dblwr	include/log0recv.h	/^	recv_dblwr_t	dblwr;$/;"	m	struct:recv_sys_t
dblwr_pages_written	include/srv0srv.h	/^	ulint_ctr_1_t		dblwr_pages_written;$/;"	m	struct:srv_stats_t
dblwr_recover	include/os0file.h	/^	void dblwr_recover()$/;"	f	class:IORequest
dblwr_writes	include/srv0srv.h	/^	ulint_ctr_1_t		dblwr_writes;$/;"	m	struct:srv_stats_t
dbug_run_purge	row/row0merge.cc	1874;"	d	file:
dbug_v_purge	row/row0vers.cc	915;"	d	file:
ddl	include/trx0trx.h	/^	bool		ddl;		\/*!< true if it is an internal$/;"	m	struct:trx_t
deadlock_check	lock/lock0lock.cc	/^RecLock::deadlock_check(lock_t* lock)$/;"	f	class:RecLock
deadlock_mark	include/trx0trx.h	/^	ib_uint64_t	deadlock_mark;	\/*!< A mark field that is initialized$/;"	m	struct:trx_lock_t
deallocate	include/mem0mem.h	/^	void deallocate(pointer p, size_type n) { }$/;"	f	class:mem_heap_allocator
deallocate	include/ut0new.h	/^	deallocate($/;"	f	class:ut_allocator
deallocate_large	include/ut0new.h	/^	deallocate_large($/;"	f	class:ut_allocator
deallocate_trace	include/ut0new.h	/^	deallocate_trace($/;"	f	class:ut_allocator
debug	row/row0trunc.cc	/^	bool debug() const$/;"	f	class:TruncateLogger
debug	trx/trx0trx.cc	/^	static bool debug(const trx_t* trx)$/;"	f	struct:TrxFactory
debug_latch	include/buf0buf.h	/^	rw_lock_t	debug_latch;	\/*!< in the debug version, each thread$/;"	m	struct:buf_block_t
debug_list	include/sync0rw.h	/^	UT_LIST_BASE_NODE_T(rw_lock_debug_t) debug_list;$/;"	m	struct:rw_lock_t
declared_to_be_inside_innodb	include/trx0trx.h	/^	bool		declared_to_be_inside_innodb;$/;"	m	struct:trx_t
decompressed	include/page0types.h	/^	ulint		decompressed;$/;"	m	struct:page_zip_stat_t
decompressed_usec	include/page0types.h	/^	ib_uint64_t	decompressed_usec;$/;"	m	struct:page_zip_stat_t
decrypt	os/os0file.cc	/^Encryption::decrypt($/;"	f	class:Encryption
def_trx_id	include/dict0mem.h	/^	trx_id_t				def_trx_id;$/;"	m	struct:dict_table_t
default_indexer_t	include/ut0counter.h	109;"	d
default_rec	include/dict0mem.h	/^	byte*			default_rec;$/;"	m	struct:dict_vcol_templ_t
default_rec	include/row0mysql.h	/^	const byte*	default_rec;	\/*!< the default values of all columns$/;"	m	struct:row_prebuilt_t
default_row_format_enum	handler/ha_innodb.cc	/^enum default_row_format_enum {$/;"	g	file:
deflate	page/page0zip.cc	860;"	d	file:
deflate	page/page0zip.cc	866;"	d	file:
del_list_regenerated	fts/fts0opt.cc	/^	ibool		del_list_regenerated;$/;"	m	struct:fts_optimize_t	file:
del_marks	include/trx0undo.h	/^	ibool		del_marks;	\/*!< relevant only in an update undo$/;"	m	struct:trx_undo_t
del_pos	fts/fts0opt.cc	/^	ulint		del_pos;	\/*!< Offset within to_delete vector,$/;"	m	struct:fts_optimize_t	file:
delete_all_rows	handler/ha_innodb.cc	/^ha_innobase::delete_all_rows()$/;"	f	class:ha_innobase
delete_all_rows	handler/ha_innopart.h	/^	delete_all_rows()$/;"	f	class:ha_innopart
delete_array	include/ut0new.h	/^	delete_array($/;"	f	class:ut_allocator
delete_files	fsp/fsp0space.cc	/^Tablespace::delete_files()$/;"	f	class:Tablespace
delete_link_file	fsp/fsp0file.cc	/^RemoteDatafile::delete_link_file($/;"	f	class:RemoteDatafile
delete_link_file	fsp/fsp0file.cc	/^RemoteDatafile::delete_link_file(void)$/;"	f	class:RemoteDatafile
delete_nodes_graph	fts/fts0opt.cc	/^	que_t*		delete_nodes_graph;$/;"	m	struct:fts_optimize_graph_t	file:
delete_row	handler/ha_innodb.cc	/^ha_innobase::delete_row($/;"	f	class:ha_innobase
delete_row	handler/ha_innopart.h	/^	delete_row($/;"	f	class:ha_innopart
delete_row_in_part	handler/ha_innopart.cc	/^ha_innopart::delete_row_in_part($/;"	f	class:ha_innopart
delete_table	handler/ha_innodb.cc	/^ha_innobase::delete_table($/;"	f	class:ha_innobase
deleted	fts/fts0opt.cc	/^	ulint		deleted;	\/*!< Number of doc ids deleted since the$/;"	m	struct:fts_slot_t	file:
deleted	fts/fts0que.cc	/^	fts_doc_ids_t*	deleted;	\/*!< Deleted doc ids that need to be$/;"	m	struct:fts_query_t	file:
deleted	include/fts0types.h	/^	ulint		deleted;	\/*!< Number of doc ids deleted since$/;"	m	struct:fts_cache_t
deleted	log/log0recv.cc	/^	bool		deleted;$/;"	m	struct:file_name_t	file:
deleted_doc_ids	include/fts0types.h	/^	ib_vector_t*	deleted_doc_ids;\/*!< Array of deleted doc ids, each$/;"	m	struct:fts_cache_t
deleted_lock	include/fts0types.h	/^	ib_mutex_t	deleted_lock;	\/*!< Lock covering deleted_doc_ids *\/$/;"	m	struct:fts_cache_t
deprecated_file_format	handler/ha_innodb.cc	/^static const char*	deprecated_file_format$/;"	v	file:
deprecated_file_format_check	handler/ha_innodb.cc	/^static const char*	deprecated_file_format_check$/;"	v	file:
deprecated_file_format_max	handler/ha_innodb.cc	/^static const char*	deprecated_file_format_max$/;"	v	file:
deprecated_innodb_support_xa	handler/ha_innodb.cc	/^static const char*	deprecated_innodb_support_xa$/;"	v	file:
deprecated_innodb_support_xa_off	handler/ha_innodb.cc	/^static const char*	deprecated_innodb_support_xa_off$/;"	v	file:
deprecated_large_prefix	handler/ha_innodb.cc	/^static const char*	deprecated_large_prefix$/;"	v	file:
deprecated_undo_logs	srv/srv0srv.cc	/^const char* deprecated_undo_logs =$/;"	v
depth	include/fts0ast.h	/^	int		depth;			\/*!< Depth of parsing state *\/$/;"	m	struct:fts_ast_state_t
deserialize	os/os0file.cc	/^Compression::deserialize($/;"	f	class:Compression
deserialize_header	os/os0file.cc	/^Compression::deserialize_header($/;"	f	class:Compression
destroy	include/mem0mem.h	/^	void destroy(pointer p)$/;"	f	class:mem_heap_allocator
destroy	include/ut0new.h	/^	destroy($/;"	f	class:ut_allocator
destroy	include/ut0pool.h	/^	void destroy()$/;"	f	struct:PoolManager
destroy	trx/trx0trx.cc	/^	static void destroy(trx_t* trx)$/;"	f	struct:TrxFactory
destroy	trx/trx0trx.cc	/^	void destroy() { mutex_free(&m_mutex); }$/;"	f	struct:TrxPoolLock
destroy	trx/trx0trx.cc	/^	void destroy() { mutex_free(&m_mutex); }$/;"	f	struct:TrxPoolManagerLock
destroy_record_priority_queue_for_parts	handler/ha_innopart.cc	/^ha_innopart::destroy_record_priority_queue_for_parts()$/;"	f	class:ha_innopart
detailed_error	include/trx0trx.h	/^	char*		detailed_error;	\/*!< detailed error message for last$/;"	m	struct:trx_t
device_t	include/fsp0file.h	/^enum device_t {$/;"	g
dfield_check_typed	data/data0data.cc	/^dfield_check_typed($/;"	f
dfield_check_typed_no_assert	data/data0data.cc	/^dfield_check_typed_no_assert($/;"	f	file:
dfield_copy	include/data0data.ic	/^dfield_copy($/;"	f
dfield_copy_data	include/data0data.ic	/^dfield_copy_data($/;"	f
dfield_data_is_binary_equal	include/data0data.ic	/^dfield_data_is_binary_equal($/;"	f
dfield_datas_are_binary_equal	include/data0data.ic	/^dfield_datas_are_binary_equal($/;"	f
dfield_dup	include/data0data.ic	/^dfield_dup($/;"	f
dfield_get_data	include/data0data.h	64;"	d
dfield_get_data	include/data0data.ic	/^dfield_get_data($/;"	f
dfield_get_len	include/data0data.ic	/^dfield_get_len($/;"	f
dfield_get_spatial_status	include/data0data.ic	/^dfield_get_spatial_status($/;"	f
dfield_get_type	include/data0data.h	63;"	d
dfield_get_type	include/data0data.ic	/^dfield_get_type($/;"	f
dfield_is_ext	include/data0data.ic	/^dfield_is_ext($/;"	f
dfield_is_null	include/data0data.ic	/^dfield_is_null($/;"	f
dfield_print	data/data0data.cc	/^dfield_print($/;"	f
dfield_print_also_hex	data/data0data.cc	/^dfield_print_also_hex($/;"	f
dfield_print_raw	data/data0data.cc	/^dfield_print_raw($/;"	f	file:
dfield_set_data	include/data0data.ic	/^dfield_set_data($/;"	f
dfield_set_ext	include/data0data.ic	/^dfield_set_ext($/;"	f
dfield_set_len	include/data0data.ic	/^dfield_set_len($/;"	f
dfield_set_null	include/data0data.ic	/^dfield_set_null($/;"	f
dfield_set_spatial_status	include/data0data.ic	/^dfield_set_spatial_status($/;"	f
dfield_set_type	include/data0data.ic	/^dfield_set_type($/;"	f
dfield_t	include/data0data.h	/^struct dfield_t{$/;"	s
dfield_write_mbr	include/data0data.ic	/^dfield_write_mbr($/;"	f
dict0boot_h	include/dict0boot.h	27;"	d
dict0crea_h	include/dict0crea.h	27;"	d
dict0dict_h	include/dict0dict.h	28;"	d
dict0load_h	include/dict0load.h	28;"	d
dict0mem_h	include/dict0mem.h	28;"	d
dict0priv_h	include/dict0priv.h	27;"	d
dict0stats_bg_h	include/dict0stats_bg.h	27;"	d
dict0stats_h	include/dict0stats.h	27;"	d
dict0types_h	include/dict0types.h	27;"	d
dict_accept	dict/dict0dict.cc	/^dict_accept($/;"	f	file:
dict_add_col_name	dict/dict0mem.cc	/^dict_add_col_name($/;"	f	file:
dict_add_v_col_t	include/dict0mem.h	/^struct dict_add_v_col_t{$/;"	s
dict_allocate_mem_intrinsic_cache	include/dict0dict.ic	/^dict_allocate_mem_intrinsic_cache($/;"	f
dict_boot	dict/dict0boot.cc	/^dict_boot(void)$/;"	f
dict_build_col_def_step	dict/dict0crea.cc	/^dict_build_col_def_step($/;"	f	file:
dict_build_field_def_step	dict/dict0crea.cc	/^dict_build_field_def_step($/;"	f	file:
dict_build_index_def	dict/dict0crea.cc	/^dict_build_index_def($/;"	f
dict_build_index_def_step	dict/dict0crea.cc	/^dict_build_index_def_step($/;"	f
dict_build_table_def_step	dict/dict0crea.cc	/^dict_build_table_def_step($/;"	f
dict_build_tablespace	dict/dict0crea.cc	/^dict_build_tablespace($/;"	f
dict_build_tablespace_for_table	dict/dict0crea.cc	/^dict_build_tablespace_for_table($/;"	f
dict_build_v_col_def_step	dict/dict0crea.cc	/^dict_build_v_col_def_step($/;"	f	file:
dict_check_if_system_table_exists	dict/dict0crea.cc	/^dict_check_if_system_table_exists($/;"	f	file:
dict_check_sys_tables	dict/dict0load.cc	/^dict_check_sys_tables($/;"	f
dict_check_sys_tablespaces	dict/dict0load.cc	/^dict_check_sys_tablespaces($/;"	f
dict_check_tablespaces_and_store_max_id	dict/dict0load.cc	/^dict_check_tablespaces_and_store_max_id($/;"	f
dict_close	dict/dict0dict.cc	/^dict_close(void)$/;"	f
dict_col_copy_type	include/dict0dict.ic	/^dict_col_copy_type($/;"	f
dict_col_get_clust_pos	include/dict0dict.ic	/^dict_col_get_clust_pos($/;"	f
dict_col_get_fixed_size	include/dict0dict.ic	/^dict_col_get_fixed_size($/;"	f
dict_col_get_index_pos	include/dict0dict.ic	/^dict_col_get_index_pos($/;"	f
dict_col_get_max_size	include/dict0dict.ic	/^dict_col_get_max_size($/;"	f
dict_col_get_mbmaxlen	include/dict0dict.ic	/^dict_col_get_mbmaxlen($/;"	f
dict_col_get_mbminlen	include/dict0dict.ic	/^dict_col_get_mbminlen($/;"	f
dict_col_get_min_size	include/dict0dict.ic	/^dict_col_get_min_size($/;"	f
dict_col_get_no	include/dict0dict.ic	/^dict_col_get_no($/;"	f
dict_col_get_spatial_status	include/dict0mem.h	/^dict_col_get_spatial_status($/;"	f
dict_col_get_sql_null_size	include/dict0dict.ic	/^dict_col_get_sql_null_size($/;"	f
dict_col_in_v_indexes	handler/handler0alter.cc	/^dict_col_in_v_indexes($/;"	f	file:
dict_col_is_virtual	include/dict0dict.ic	/^dict_col_is_virtual($/;"	f
dict_col_meta_t	include/dict0dict.h	/^struct dict_col_meta_t {$/;"	s
dict_col_name_is_reserved	dict/dict0dict.cc	/^dict_col_name_is_reserved($/;"	f
dict_col_set_mbminmaxlen	include/dict0dict.ic	/^dict_col_set_mbminmaxlen($/;"	f
dict_col_sys_columns_enum	include/dict0boot.h	/^enum dict_col_sys_columns_enum {$/;"	g
dict_col_sys_datafiles_enum	include/dict0boot.h	/^enum dict_col_sys_datafiles_enum {$/;"	g
dict_col_sys_fields_enum	include/dict0boot.h	/^enum dict_col_sys_fields_enum {$/;"	g
dict_col_sys_foreign_cols_enum	include/dict0boot.h	/^enum dict_col_sys_foreign_cols_enum {$/;"	g
dict_col_sys_foreign_enum	include/dict0boot.h	/^enum dict_col_sys_foreign_enum {$/;"	g
dict_col_sys_indexes_enum	include/dict0boot.h	/^enum dict_col_sys_indexes_enum {$/;"	g
dict_col_sys_tables_enum	include/dict0boot.h	/^enum dict_col_sys_tables_enum {$/;"	g
dict_col_sys_tablespaces_enum	include/dict0boot.h	/^enum dict_col_sys_tablespaces_enum {$/;"	g
dict_col_sys_virtual_enum	include/dict0boot.h	/^enum dict_col_sys_virtual_enum {$/;"	g
dict_col_t	include/dict0mem.h	/^struct dict_col_t{$/;"	s
dict_col_type_assert_equal	include/dict0dict.ic	/^dict_col_type_assert_equal($/;"	f
dict_create	dict/dict0boot.cc	/^dict_create(void)$/;"	f
dict_create_add_foreign_field_to_dictionary	dict/dict0crea.cc	/^dict_create_add_foreign_field_to_dictionary($/;"	f
dict_create_add_foreign_id	include/dict0crea.ic	/^dict_create_add_foreign_id($/;"	f
dict_create_add_foreign_to_dictionary	dict/dict0crea.cc	/^dict_create_add_foreign_to_dictionary($/;"	f
dict_create_add_foreigns_to_dictionary	dict/dict0crea.cc	/^dict_create_add_foreigns_to_dictionary($/;"	f
dict_create_foreign_constraints	dict/dict0dict.cc	/^dict_create_foreign_constraints($/;"	f
dict_create_foreign_constraints_low	dict/dict0dict.cc	/^dict_create_foreign_constraints_low($/;"	f	file:
dict_create_index_step	dict/dict0crea.cc	/^dict_create_index_step($/;"	f
dict_create_index_tree_in_mem	dict/dict0crea.cc	/^dict_create_index_tree_in_mem($/;"	f
dict_create_index_tree_step	dict/dict0crea.cc	/^dict_create_index_tree_step($/;"	f
dict_create_or_check_foreign_constraint_tables	dict/dict0crea.cc	/^dict_create_or_check_foreign_constraint_tables(void)$/;"	f
dict_create_or_check_sys_tablespace	dict/dict0crea.cc	/^dict_create_or_check_sys_tablespace(void)$/;"	f
dict_create_or_check_sys_virtual	dict/dict0crea.cc	/^dict_create_or_check_sys_virtual()$/;"	f
dict_create_search_tuple	dict/dict0crea.cc	/^dict_create_search_tuple($/;"	f	file:
dict_create_sys_columns_tuple	dict/dict0crea.cc	/^dict_create_sys_columns_tuple($/;"	f	file:
dict_create_sys_fields_tuple	dict/dict0crea.cc	/^dict_create_sys_fields_tuple($/;"	f	file:
dict_create_sys_indexes_tuple	dict/dict0crea.cc	/^dict_create_sys_indexes_tuple($/;"	f	file:
dict_create_sys_tables_tuple	dict/dict0crea.cc	/^dict_create_sys_tables_tuple($/;"	f	file:
dict_create_sys_virtual_tuple	dict/dict0crea.cc	/^dict_create_sys_virtual_tuple($/;"	f	file:
dict_create_table_step	dict/dict0crea.cc	/^dict_create_table_step($/;"	f
dict_create_v_col_pos	include/dict0crea.ic	/^dict_create_v_col_pos($/;"	f
dict_delete_tablespace_and_datafiles	dict/dict0crea.cc	/^dict_delete_tablespace_and_datafiles($/;"	f
dict_disable_redo_if_temporary	include/dict0dict.ic	/^dict_disable_redo_if_temporary($/;"	f
dict_drop_index_tree	dict/dict0crea.cc	/^dict_drop_index_tree($/;"	f
dict_drop_index_tree_in_mem	dict/dict0crea.cc	/^dict_drop_index_tree_in_mem($/;"	f
dict_err_ignore_t	include/dict0types.h	/^enum dict_err_ignore_t {$/;"	g
dict_field_get_col	include/dict0dict.ic	/^dict_field_get_col($/;"	f
dict_field_t	include/dict0mem.h	/^	dict_field_t() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:dict_field_t
dict_field_t	include/dict0mem.h	/^struct dict_field_t{$/;"	s
dict_find_single_table_by_space	dict/dict0dict.cc	/^dict_find_single_table_by_space($/;"	f	file:
dict_fld_sys_columns_enum	include/dict0boot.h	/^enum dict_fld_sys_columns_enum {$/;"	g
dict_fld_sys_datafiles_enum	include/dict0boot.h	/^enum dict_fld_sys_datafiles_enum {$/;"	g
dict_fld_sys_fields_enum	include/dict0boot.h	/^enum dict_fld_sys_fields_enum {$/;"	g
dict_fld_sys_foreign_cols_enum	include/dict0boot.h	/^enum dict_fld_sys_foreign_cols_enum {$/;"	g
dict_fld_sys_foreign_enum	include/dict0boot.h	/^enum dict_fld_sys_foreign_enum {$/;"	g
dict_fld_sys_foreign_for_name_enum	include/dict0boot.h	/^enum dict_fld_sys_foreign_for_name_enum {$/;"	g
dict_fld_sys_indexes_enum	include/dict0boot.h	/^enum dict_fld_sys_indexes_enum {$/;"	g
dict_fld_sys_table_ids_enum	include/dict0boot.h	/^enum dict_fld_sys_table_ids_enum {$/;"	g
dict_fld_sys_tables_enum	include/dict0boot.h	/^enum dict_fld_sys_tables_enum {$/;"	g
dict_fld_sys_tablespaces_enum	include/dict0boot.h	/^enum dict_fld_sys_tablespaces_enum {$/;"	g
dict_fld_sys_virtual_enum	include/dict0boot.h	/^enum dict_fld_sys_virtual_enum {$/;"	g
dict_foreign_add_to_cache	dict/dict0dict.cc	/^dict_foreign_add_to_cache($/;"	f
dict_foreign_add_to_referenced_table	include/dict0mem.h	/^struct dict_foreign_add_to_referenced_table {$/;"	s
dict_foreign_base_for_stored	dict/dict0crea.cc	/^dict_foreign_base_for_stored($/;"	f	file:
dict_foreign_compare	include/dict0mem.h	/^struct dict_foreign_compare {$/;"	s
dict_foreign_different_tables	include/dict0mem.h	/^struct dict_foreign_different_tables {$/;"	s
dict_foreign_err_file	dict/dict0dict.cc	/^FILE*	dict_foreign_err_file		= NULL;$/;"	v
dict_foreign_err_mutex	dict/dict0dict.cc	/^ib_mutex_t	dict_foreign_err_mutex;$/;"	v
dict_foreign_err_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	dict_foreign_err_mutex_key;$/;"	v
dict_foreign_error_report	dict/dict0dict.cc	/^dict_foreign_error_report($/;"	f	file:
dict_foreign_error_report_low	dict/dict0dict.cc	/^dict_foreign_error_report_low($/;"	f	file:
dict_foreign_eval_sql	dict/dict0crea.cc	/^dict_foreign_eval_sql($/;"	f
dict_foreign_find	dict/dict0dict.cc	/^dict_foreign_find($/;"	f	file:
dict_foreign_find_index	dict/dict0dict.cc	/^dict_foreign_find_index($/;"	f
dict_foreign_free	include/dict0mem.h	/^dict_foreign_free($/;"	f
dict_foreign_has_col_as_base_col	dict/dict0crea.cc	/^dict_foreign_has_col_as_base_col($/;"	f
dict_foreign_has_col_in_v_index	dict/dict0crea.cc	/^dict_foreign_has_col_in_v_index($/;"	f
dict_foreign_matches_id	include/dict0mem.h	/^	dict_foreign_matches_id(const char* id)$/;"	f	struct:dict_foreign_matches_id
dict_foreign_matches_id	include/dict0mem.h	/^struct dict_foreign_matches_id {$/;"	s
dict_foreign_not_exists	include/dict0mem.h	/^	dict_foreign_not_exists(const dict_foreign_set& obj_)$/;"	f	struct:dict_foreign_not_exists
dict_foreign_not_exists	include/dict0mem.h	/^struct dict_foreign_not_exists {$/;"	s
dict_foreign_parse_drop_constraints	dict/dict0dict.cc	/^dict_foreign_parse_drop_constraints($/;"	f
dict_foreign_print	include/dict0mem.h	/^	dict_foreign_print(std::ostream& out)$/;"	f	struct:dict_foreign_print
dict_foreign_print	include/dict0mem.h	/^struct dict_foreign_print {$/;"	s
dict_foreign_qualify_index	dict/dict0dict.cc	/^dict_foreign_qualify_index($/;"	f
dict_foreign_remove_from_cache	dict/dict0dict.cc	/^dict_foreign_remove_from_cache($/;"	f
dict_foreign_remove_partial	dict/dict0dict.cc	/^struct dict_foreign_remove_partial$/;"	s	file:
dict_foreign_replace_index	dict/dict0dict.cc	/^dict_foreign_replace_index($/;"	f
dict_foreign_report_syntax_err	dict/dict0dict.cc	/^dict_foreign_report_syntax_err($/;"	f	file:
dict_foreign_set	include/dict0mem.h	/^	ut_allocator<dict_foreign_t*> >	dict_foreign_set;$/;"	t
dict_foreign_set_free	include/dict0mem.h	/^	dict_foreign_set_free(const dict_foreign_set&	foreign_set)$/;"	f	struct:dict_foreign_set_free
dict_foreign_set_free	include/dict0mem.h	/^struct dict_foreign_set_free {$/;"	s
dict_foreign_set_validate	dict/dict0mem.cc	/^dict_foreign_set_validate($/;"	f
dict_foreign_t	include/dict0mem.h	/^struct dict_foreign_t{$/;"	s
dict_foreign_with_index	include/dict0mem.h	/^	dict_foreign_with_index(const dict_index_t*	index)$/;"	f	struct:dict_foreign_with_index
dict_foreign_with_index	include/dict0mem.h	/^struct dict_foreign_with_index {$/;"	s
dict_foreigns_has_s_base_col	dict/dict0crea.cc	/^dict_foreigns_has_s_base_col($/;"	f
dict_foreigns_has_this_col	dict/dict0crea.cc	/^dict_foreigns_has_this_col($/;"	f
dict_free_vc_templ	include/dict0dict.ic	/^dict_free_vc_templ($/;"	f
dict_fs2utf8	dict/dict0dict.cc	/^dict_fs2utf8($/;"	f
dict_fts_index_syncing	include/dict0dict.ic	/^dict_fts_index_syncing($/;"	f
dict_get_and_save_data_dir_path	dict/dict0load.cc	/^dict_get_and_save_data_dir_path($/;"	f
dict_get_and_save_space_name	dict/dict0load.cc	/^dict_get_and_save_space_name($/;"	f
dict_get_db_name_len	dict/dict0dict.cc	/^dict_get_db_name_len($/;"	f
dict_get_first_path	dict/dict0load.cc	/^dict_get_first_path($/;"	f
dict_get_first_table_name_in_db	dict/dict0load.cc	/^dict_get_first_table_name_in_db($/;"	f
dict_get_referenced_table	dict/dict0dict.cc	/^dict_get_referenced_table($/;"	f
dict_get_v_col_mysql_pos	include/dict0crea.ic	/^dict_get_v_col_mysql_pos($/;"	f
dict_get_v_col_pos	include/dict0crea.ic	/^dict_get_v_col_pos($/;"	f
dict_getnext_system	dict/dict0load.cc	/^dict_getnext_system($/;"	f
dict_getnext_system_low	dict/dict0load.cc	/^dict_getnext_system_low($/;"	f	file:
dict_hdr_create	dict/dict0boot.cc	/^dict_hdr_create($/;"	f	file:
dict_hdr_flush_row_id	dict/dict0boot.cc	/^dict_hdr_flush_row_id(void)$/;"	f
dict_hdr_get	dict/dict0boot.cc	/^dict_hdr_get($/;"	f
dict_hdr_get_new_id	dict/dict0boot.cc	/^dict_hdr_get_new_id($/;"	f
dict_hdr_t	include/dict0boot.h	/^typedef	byte	dict_hdr_t;$/;"	t
dict_ibfk	dict/dict0dict.cc	/^static char	dict_ibfk[] = "_ibfk_";$/;"	v	file:
dict_ind_free	dict/dict0dict.cc	/^dict_ind_free(void)$/;"	f	file:
dict_ind_init	dict/dict0dict.cc	/^dict_ind_init(void)$/;"	f
dict_ind_redundant	dict/dict0dict.cc	/^dict_index_t*	dict_ind_redundant;$/;"	v
dict_index_add_col	dict/dict0dict.cc	/^dict_index_add_col($/;"	f
dict_index_add_to_cache	dict/dict0dict.cc	/^dict_index_add_to_cache($/;"	f
dict_index_add_to_cache_w_vcol	dict/dict0dict.cc	/^dict_index_add_to_cache_w_vcol($/;"	f
dict_index_build_data_tuple	dict/dict0dict.cc	/^dict_index_build_data_tuple($/;"	f
dict_index_build_internal_clust	dict/dict0dict.cc	/^dict_index_build_internal_clust($/;"	f	file:
dict_index_build_internal_fts	dict/dict0dict.cc	/^dict_index_build_internal_fts($/;"	f	file:
dict_index_build_internal_non_clust	dict/dict0dict.cc	/^dict_index_build_internal_non_clust($/;"	f	file:
dict_index_build_node_ptr	dict/dict0dict.cc	/^dict_index_build_node_ptr($/;"	f
dict_index_calc_min_rec_len	dict/dict0dict.cc	/^dict_index_calc_min_rec_len($/;"	f
dict_index_check_search_tuple	dict/dict0dict.cc	/^dict_index_check_search_tuple($/;"	f
dict_index_contains_col_or_prefix	dict/dict0dict.cc	/^dict_index_contains_col_or_prefix($/;"	f
dict_index_copy	dict/dict0dict.cc	/^dict_index_copy($/;"	f	file:
dict_index_copy_rec_order_prefix	dict/dict0dict.cc	/^dict_index_copy_rec_order_prefix($/;"	f
dict_index_copy_types	dict/dict0dict.cc	/^dict_index_copy_types($/;"	f
dict_index_find_cols	dict/dict0dict.cc	/^dict_index_find_cols($/;"	f	file:
dict_index_find_on_id_low	dict/dict0dict.cc	/^dict_index_find_on_id_low($/;"	f
dict_index_get_if_in_cache	dict/dict0dict.cc	/^dict_index_get_if_in_cache($/;"	f
dict_index_get_if_in_cache_low	dict/dict0dict.cc	/^dict_index_get_if_in_cache_low($/;"	f
dict_index_get_lock	include/dict0dict.ic	/^dict_index_get_lock($/;"	f
dict_index_get_min_size	include/dict0dict.ic	/^dict_index_get_min_size($/;"	f
dict_index_get_n_fields	include/dict0dict.ic	/^dict_index_get_n_fields($/;"	f
dict_index_get_n_ordering_defined_by_user	include/dict0dict.ic	/^dict_index_get_n_ordering_defined_by_user($/;"	f
dict_index_get_n_unique	include/dict0dict.ic	/^dict_index_get_n_unique($/;"	f
dict_index_get_n_unique_in_tree	include/dict0dict.ic	/^dict_index_get_n_unique_in_tree($/;"	f
dict_index_get_n_unique_in_tree_nonleaf	include/dict0dict.ic	/^dict_index_get_n_unique_in_tree_nonleaf($/;"	f
dict_index_get_nth_col	include/dict0dict.ic	/^dict_index_get_nth_col($/;"	f
dict_index_get_nth_col_no	include/dict0dict.ic	/^dict_index_get_nth_col_no($/;"	f
dict_index_get_nth_col_or_prefix_pos	dict/dict0dict.cc	/^dict_index_get_nth_col_or_prefix_pos($/;"	f
dict_index_get_nth_col_pos	include/dict0dict.ic	/^dict_index_get_nth_col_pos($/;"	f
dict_index_get_nth_field	include/dict0dict.h	1245;"	d
dict_index_get_nth_field	include/dict0dict.ic	/^dict_index_get_nth_field($/;"	f
dict_index_get_nth_field_pos	dict/dict0dict.cc	/^dict_index_get_nth_field_pos($/;"	f
dict_index_get_online_status	include/dict0dict.ic	/^dict_index_get_online_status($/;"	f
dict_index_get_page	include/dict0dict.ic	/^dict_index_get_page($/;"	f
dict_index_get_space	include/dict0dict.ic	/^dict_index_get_space($/;"	f
dict_index_get_space_reserve	include/dict0dict.ic	/^dict_index_get_space_reserve(void)$/;"	f
dict_index_get_sys_col_pos	include/dict0dict.ic	/^dict_index_get_sys_col_pos($/;"	f
dict_index_has_col_by_name	dict/dict0crea.cc	/^dict_index_has_col_by_name($/;"	f	file:
dict_index_has_virtual	include/dict0dict.ic	/^dict_index_has_virtual($/;"	f
dict_index_is_auto_gen_clust	include/dict0dict.ic	/^dict_index_is_auto_gen_clust($/;"	f
dict_index_is_clust	include/dict0dict.ic	/^dict_index_is_clust($/;"	f
dict_index_is_corrupted	include/dict0dict.ic	/^dict_index_is_corrupted($/;"	f
dict_index_is_ibuf	include/dict0dict.ic	/^dict_index_is_ibuf($/;"	f
dict_index_is_online_ddl	include/dict0dict.ic	/^dict_index_is_online_ddl($/;"	f
dict_index_is_sec_or_ibuf	include/dict0dict.ic	/^dict_index_is_sec_or_ibuf($/;"	f
dict_index_is_spatial	include/dict0dict.ic	/^dict_index_is_spatial($/;"	f
dict_index_is_unique	include/dict0dict.ic	/^dict_index_is_unique($/;"	f
dict_index_node_ptr_max_size	dict/dict0dict.cc	/^dict_index_node_ptr_max_size($/;"	f
dict_index_remove_from_cache	dict/dict0dict.cc	/^dict_index_remove_from_cache($/;"	f
dict_index_remove_from_cache_low	dict/dict0dict.cc	/^dict_index_remove_from_cache_low($/;"	f	file:
dict_index_remove_from_v_col_list	dict/dict0dict.cc	/^dict_index_remove_from_v_col_list(dict_index_t* index) {$/;"	f
dict_index_set_merge_threshold	dict/dict0dict.cc	/^dict_index_set_merge_threshold($/;"	f
dict_index_set_online_status	include/dict0dict.ic	/^dict_index_set_online_status($/;"	f
dict_index_set_space	include/dict0dict.ic	/^dict_index_set_space($/;"	f
dict_index_t	include/dict0mem.h	/^struct dict_index_t{$/;"	s
dict_index_too_big_for_tree	dict/dict0dict.cc	/^dict_index_too_big_for_tree($/;"	f	file:
dict_index_zip_failure	dict/dict0dict.cc	/^dict_index_zip_failure($/;"	f
dict_index_zip_pad_alloc	dict/dict0dict.cc	/^dict_index_zip_pad_alloc($/;"	f	file:
dict_index_zip_pad_lock	dict/dict0dict.cc	/^dict_index_zip_pad_lock($/;"	f
dict_index_zip_pad_mutex_create_lazy	include/dict0mem.h	/^dict_index_zip_pad_mutex_create_lazy($/;"	f
dict_index_zip_pad_mutex_destroy	include/dict0mem.h	/^dict_index_zip_pad_mutex_destroy($/;"	f
dict_index_zip_pad_optimal_page_size	dict/dict0dict.cc	/^dict_index_zip_pad_optimal_page_size($/;"	f
dict_index_zip_pad_unlock	include/dict0mem.h	/^dict_index_zip_pad_unlock($/;"	f
dict_index_zip_pad_update	dict/dict0dict.cc	/^dict_index_zip_pad_update($/;"	f	file:
dict_index_zip_success	dict/dict0dict.cc	/^dict_index_zip_success($/;"	f
dict_init	dict/dict0dict.cc	/^dict_init(void)$/;"	f
dict_insert_initial_data	dict/dict0boot.cc	/^dict_insert_initial_data(void)$/;"	f	file:
dict_intrinsic_table_t	include/sess0sess.h	/^	dict_intrinsic_table_t(dict_table_t*	handler)$/;"	f	class:dict_intrinsic_table_t
dict_intrinsic_table_t	include/sess0sess.h	/^class dict_intrinsic_table_t {$/;"	c
dict_is_sys_table	include/dict0boot.ic	/^dict_is_sys_table($/;"	f
dict_load_column_del	dict/dict0load.cc	/^static const char* dict_load_column_del = "delete-marked record in SYS_COLUMN";$/;"	v	file:
dict_load_column_low	dict/dict0load.cc	/^dict_load_column_low($/;"	f
dict_load_columns	dict/dict0load.cc	/^dict_load_columns($/;"	f	file:
dict_load_field_del	dict/dict0load.cc	/^static const char* dict_load_field_del = "delete-marked record in SYS_FIELDS";$/;"	v	file:
dict_load_field_low	dict/dict0load.cc	/^dict_load_field_low($/;"	f
dict_load_fields	dict/dict0load.cc	/^dict_load_fields($/;"	f	file:
dict_load_foreign	dict/dict0load.cc	/^dict_load_foreign($/;"	f
dict_load_foreign_cols	dict/dict0load.cc	/^dict_load_foreign_cols($/;"	f	file:
dict_load_foreigns	dict/dict0load.cc	/^dict_load_foreigns($/;"	f
dict_load_index_del	dict/dict0load.cc	/^static const char* dict_load_index_del = "delete-marked record in SYS_INDEXES";$/;"	v	file:
dict_load_index_id_err	dict/dict0load.cc	/^static const char* dict_load_index_id_err = "SYS_INDEXES.TABLE_ID mismatch";$/;"	v	file:
dict_load_index_low	dict/dict0load.cc	/^dict_load_index_low($/;"	f
dict_load_indexes	dict/dict0load.cc	/^dict_load_indexes($/;"	f
dict_load_sys_table	dict/dict0load.cc	/^dict_load_sys_table($/;"	f
dict_load_table	dict/dict0load.cc	/^dict_load_table($/;"	f
dict_load_table_low	dict/dict0load.cc	/^dict_load_table_low($/;"	f	file:
dict_load_table_on_id	dict/dict0load.cc	/^dict_load_table_on_id($/;"	f
dict_load_table_one	dict/dict0load.cc	/^dict_load_table_one($/;"	f	file:
dict_load_tablespace	dict/dict0load.cc	/^dict_load_tablespace($/;"	f
dict_load_virtual	dict/dict0load.cc	/^dict_load_virtual($/;"	f	file:
dict_load_virtual_del	dict/dict0load.cc	/^static const char* dict_load_virtual_del = "delete-marked record in SYS_VIRTUAL";$/;"	v	file:
dict_load_virtual_low	dict/dict0load.cc	/^dict_load_virtual_low($/;"	f
dict_load_virtual_one_col	dict/dict0load.cc	/^dict_load_virtual_one_col($/;"	f	file:
dict_lru_find_table	dict/dict0dict.cc	/^dict_lru_find_table($/;"	f	file:
dict_lru_validate	dict/dict0dict.cc	/^dict_lru_validate(void)$/;"	f	file:
dict_make_room_in_cache	dict/dict0dict.cc	/^dict_make_room_in_cache($/;"	f
dict_max_field_len_store_undo	include/dict0dict.ic	/^dict_max_field_len_store_undo($/;"	f
dict_max_v_field_len_store_undo	include/dict0dict.ic	/^dict_max_v_field_len_store_undo($/;"	f
dict_mem_create_temporary_tablename	dict/dict0mem.cc	/^dict_mem_create_temporary_tablename($/;"	f
dict_mem_fill_column_struct	dict/dict0mem.cc	/^dict_mem_fill_column_struct($/;"	f
dict_mem_fill_index_struct	include/dict0mem.ic	/^dict_mem_fill_index_struct($/;"	f
dict_mem_fill_vcol_from_v_indexes	dict/dict0mem.cc	/^dict_mem_fill_vcol_from_v_indexes($/;"	f	file:
dict_mem_fill_vcol_has_index	dict/dict0mem.cc	/^dict_mem_fill_vcol_has_index($/;"	f	file:
dict_mem_fill_vcol_set_for_base_col	dict/dict0mem.cc	/^dict_mem_fill_vcol_set_for_base_col($/;"	f	file:
dict_mem_foreign_create	dict/dict0mem.cc	/^dict_mem_foreign_create(void)$/;"	f
dict_mem_foreign_fill_vcol_set	dict/dict0mem.cc	/^dict_mem_foreign_fill_vcol_set($/;"	f
dict_mem_foreign_table_name_lookup_set	dict/dict0mem.cc	/^dict_mem_foreign_table_name_lookup_set($/;"	f
dict_mem_index_add_field	dict/dict0mem.cc	/^dict_mem_index_add_field($/;"	f
dict_mem_index_create	dict/dict0mem.cc	/^dict_mem_index_create($/;"	f
dict_mem_index_free	dict/dict0mem.cc	/^dict_mem_index_free($/;"	f
dict_mem_init	dict/dict0mem.cc	/^dict_mem_init(void)$/;"	f
dict_mem_referenced_table_name_lookup_set	dict/dict0mem.cc	/^dict_mem_referenced_table_name_lookup_set($/;"	f
dict_mem_table_add_col	dict/dict0mem.cc	/^dict_mem_table_add_col($/;"	f
dict_mem_table_add_s_col	dict/dict0mem.cc	/^dict_mem_table_add_s_col($/;"	f
dict_mem_table_add_v_col	dict/dict0mem.cc	/^dict_mem_table_add_v_col($/;"	f
dict_mem_table_col_rename	dict/dict0mem.cc	/^dict_mem_table_col_rename($/;"	f
dict_mem_table_col_rename_low	dict/dict0mem.cc	/^dict_mem_table_col_rename_low($/;"	f
dict_mem_table_create	dict/dict0mem.cc	/^dict_mem_table_create($/;"	f
dict_mem_table_fill_foreign_vcol_set	dict/dict0mem.cc	/^dict_mem_table_fill_foreign_vcol_set($/;"	f
dict_mem_table_free	dict/dict0mem.cc	/^dict_mem_table_free($/;"	f
dict_mem_table_free_foreign_vcol_set	dict/dict0mem.cc	/^dict_mem_table_free_foreign_vcol_set($/;"	f
dict_move_to_mru	dict/dict0dict.cc	/^dict_move_to_mru($/;"	f
dict_mutex_enter_for_mysql	dict/dict0dict.cc	/^dict_mutex_enter_for_mysql(void)$/;"	f
dict_mutex_exit_for_mysql	dict/dict0dict.cc	/^dict_mutex_exit_for_mysql(void)$/;"	f
dict_names_t	include/dict0load.h	/^typedef std::deque<const char*, ut_allocator<const char*> >	dict_names_t;$/;"	t
dict_non_lru_find_table	dict/dict0dict.cc	/^dict_non_lru_find_table($/;"	f	file:
dict_operation	include/trx0trx.h	/^	trx_dict_op_t	dict_operation;	\/**< @see enum trx_dict_op_t *\/$/;"	m	struct:trx_t
dict_operation	include/trx0undo.h	/^	ibool		dict_operation;	\/*!< TRUE if a dict operation trx *\/$/;"	m	struct:trx_undo_t
dict_operation_lock	dict/dict0dict.cc	/^rw_lock_t*	dict_operation_lock;$/;"	v
dict_operation_lock_key	sync/sync0sync.cc	/^mysql_pfs_key_t	dict_operation_lock_key;$/;"	v
dict_operation_lock_mode	include/trx0trx.h	/^	ib_uint32_t	dict_operation_lock_mode;$/;"	m	struct:trx_t
dict_print_info_on_foreign_key_in_create_format	dict/dict0dict.cc	/^dict_print_info_on_foreign_key_in_create_format($/;"	f
dict_print_info_on_foreign_keys	dict/dict0dict.cc	/^dict_print_info_on_foreign_keys($/;"	f
dict_process_sys_columns_rec	dict/dict0load.cc	/^dict_process_sys_columns_rec($/;"	f
dict_process_sys_datafiles	dict/dict0load.cc	/^dict_process_sys_datafiles($/;"	f
dict_process_sys_fields_rec	dict/dict0load.cc	/^dict_process_sys_fields_rec($/;"	f
dict_process_sys_foreign_col_rec	dict/dict0load.cc	/^dict_process_sys_foreign_col_rec($/;"	f
dict_process_sys_foreign_rec	dict/dict0load.cc	/^dict_process_sys_foreign_rec($/;"	f
dict_process_sys_indexes_rec	dict/dict0load.cc	/^dict_process_sys_indexes_rec($/;"	f
dict_process_sys_tables_rec_and_mtr_commit	dict/dict0load.cc	/^dict_process_sys_tables_rec_and_mtr_commit($/;"	f
dict_process_sys_tablespaces	dict/dict0load.cc	/^dict_process_sys_tablespaces($/;"	f
dict_process_sys_virtual_rec	dict/dict0load.cc	/^dict_process_sys_virtual_rec($/;"	f
dict_recreate_index_tree	dict/dict0crea.cc	/^dict_recreate_index_tree($/;"	f
dict_remove_db_name	dict/dict0dict.cc	/^dict_remove_db_name($/;"	f
dict_replace_tablespace_and_filepath	dict/dict0load.cc	/^dict_replace_tablespace_and_filepath($/;"	f
dict_replace_tablespace_in_dictionary	dict/dict0crea.cc	/^dict_replace_tablespace_in_dictionary($/;"	f
dict_resize	dict/dict0dict.cc	/^dict_resize()$/;"	f
dict_s_col_list	include/dict0mem.h	/^typedef std::list<dict_s_col_t, ut_allocator<dict_s_col_t> >	dict_s_col_list;$/;"	t
dict_s_col_t	include/dict0mem.h	/^struct dict_s_col_t {$/;"	s
dict_save_data_dir_path	dict/dict0load.cc	/^dict_save_data_dir_path($/;"	f
dict_scan_col	dict/dict0dict.cc	/^dict_scan_col($/;"	f	file:
dict_scan_id	dict/dict0dict.cc	/^dict_scan_id($/;"	f	file:
dict_scan_table_name	dict/dict0dict.cc	/^dict_scan_table_name($/;"	f	file:
dict_scan_to	dict/dict0dict.cc	/^dict_scan_to($/;"	f	file:
dict_set_corrupted	dict/dict0dict.cc	/^dict_set_corrupted($/;"	f
dict_set_corrupted_by_space	dict/dict0dict.cc	/^dict_set_corrupted_by_space($/;"	f
dict_set_corrupted_index_cache_only	dict/dict0dict.cc	/^dict_set_corrupted_index_cache_only($/;"	f
dict_set_merge_threshold_all_debug	dict/dict0dict.cc	/^dict_set_merge_threshold_all_debug($/;"	f
dict_skip_word	dict/dict0dict.cc	/^dict_skip_word($/;"	f	file:
dict_space_get_id	dict/dict0dict.cc	/^dict_space_get_id($/;"	f
dict_space_get_name	dict/dict0load.cc	/^dict_space_get_name($/;"	f	file:
dict_space_is_empty	dict/dict0dict.cc	/^dict_space_is_empty($/;"	f
dict_startscan_system	dict/dict0load.cc	/^dict_startscan_system($/;"	f
dict_stats_analyze_index	dict/dict0stats.cc	/^dict_stats_analyze_index($/;"	f	file:
dict_stats_analyze_index_below_cur	dict/dict0stats.cc	/^dict_stats_analyze_index_below_cur($/;"	f	file:
dict_stats_analyze_index_for_n_prefix	dict/dict0stats.cc	/^dict_stats_analyze_index_for_n_prefix($/;"	f	file:
dict_stats_analyze_index_level	dict/dict0stats.cc	/^dict_stats_analyze_index_level($/;"	f	file:
dict_stats_assert_initialized	dict/dict0stats.cc	/^dict_stats_assert_initialized($/;"	f	file:
dict_stats_assert_initialized_index	dict/dict0stats.cc	/^dict_stats_assert_initialized_index($/;"	f	file:
dict_stats_auto_recalc_is_enabled	include/dict0stats.ic	/^dict_stats_auto_recalc_is_enabled($/;"	f
dict_stats_auto_recalc_set	include/dict0stats.ic	/^dict_stats_auto_recalc_set($/;"	f
dict_stats_copy	dict/dict0stats.cc	/^dict_stats_copy($/;"	f	file:
dict_stats_deinit	include/dict0stats.ic	/^dict_stats_deinit($/;"	f
dict_stats_delete_from_index_stats	dict/dict0stats.cc	/^dict_stats_delete_from_index_stats($/;"	f
dict_stats_delete_from_table_stats	dict/dict0stats.cc	/^dict_stats_delete_from_table_stats($/;"	f
dict_stats_disabled_debug_update	dict/dict0stats_bg.cc	/^dict_stats_disabled_debug_update($/;"	f
dict_stats_disabled_event	dict/dict0stats_bg.cc	/^static os_event_t		dict_stats_disabled_event;$/;"	v	file:
dict_stats_drop_index	dict/dict0stats.cc	/^dict_stats_drop_index($/;"	f
dict_stats_drop_table	dict/dict0stats.cc	/^dict_stats_drop_table($/;"	f
dict_stats_empty_index	dict/dict0stats.cc	/^dict_stats_empty_index($/;"	f	file:
dict_stats_empty_table	dict/dict0stats.cc	/^dict_stats_empty_table($/;"	f	file:
dict_stats_event	dict/dict0stats_bg.cc	/^os_event_t			dict_stats_event = NULL;$/;"	v
dict_stats_exec_sql	dict/dict0stats.cc	/^dict_stats_exec_sql($/;"	f	file:
dict_stats_fetch_from_ps	dict/dict0stats.cc	/^dict_stats_fetch_from_ps($/;"	f	file:
dict_stats_fetch_index_stats_step	dict/dict0stats.cc	/^dict_stats_fetch_index_stats_step($/;"	f	file:
dict_stats_fetch_table_stats_step	dict/dict0stats.cc	/^dict_stats_fetch_table_stats_step($/;"	f	file:
dict_stats_index_set_n_diff	dict/dict0stats.cc	/^dict_stats_index_set_n_diff($/;"	f
dict_stats_init	include/dict0stats.ic	/^dict_stats_init($/;"	f
dict_stats_is_persistent_enabled	include/dict0stats.ic	/^dict_stats_is_persistent_enabled($/;"	f
dict_stats_persistent_storage_check	dict/dict0stats.cc	/^dict_stats_persistent_storage_check($/;"	f	file:
dict_stats_process_entry_from_recalc_pool	dict/dict0stats_bg.cc	/^dict_stats_process_entry_from_recalc_pool()$/;"	f	file:
dict_stats_recalc_pool_add	dict/dict0stats_bg.cc	/^dict_stats_recalc_pool_add($/;"	f
dict_stats_recalc_pool_deinit	dict/dict0stats_bg.cc	/^dict_stats_recalc_pool_deinit()$/;"	f	file:
dict_stats_recalc_pool_del	dict/dict0stats_bg.cc	/^dict_stats_recalc_pool_del($/;"	f
dict_stats_recalc_pool_get	dict/dict0stats_bg.cc	/^dict_stats_recalc_pool_get($/;"	f	file:
dict_stats_recalc_pool_init	dict/dict0stats_bg.cc	/^dict_stats_recalc_pool_init()$/;"	f	file:
dict_stats_rename_index	dict/dict0stats.cc	/^dict_stats_rename_index($/;"	f
dict_stats_rename_table	dict/dict0stats.cc	/^dict_stats_rename_table($/;"	f
dict_stats_rename_table_in_index_stats	dict/dict0stats.cc	/^dict_stats_rename_table_in_index_stats($/;"	f
dict_stats_rename_table_in_table_stats	dict/dict0stats.cc	/^dict_stats_rename_table_in_table_stats($/;"	f
dict_stats_save	dict/dict0stats.cc	/^dict_stats_save($/;"	f	file:
dict_stats_save_index_stat	dict/dict0stats.cc	/^dict_stats_save_index_stat($/;"	f	file:
dict_stats_scan_page	dict/dict0stats.cc	/^dict_stats_scan_page($/;"	f
dict_stats_set_persistent	include/dict0stats.ic	/^dict_stats_set_persistent($/;"	f
dict_stats_should_ignore_index	dict/dict0stats.cc	/^dict_stats_should_ignore_index($/;"	f
dict_stats_shutdown	dict/dict0stats_bg.cc	/^dict_stats_shutdown()$/;"	f
dict_stats_shutdown_event	dict/dict0stats_bg.cc	/^static os_event_t dict_stats_shutdown_event;$/;"	v	file:
dict_stats_snapshot_create	dict/dict0stats.cc	/^dict_stats_snapshot_create($/;"	f	file:
dict_stats_snapshot_free	dict/dict0stats.cc	/^dict_stats_snapshot_free($/;"	f	file:
dict_stats_start_shutdown	dict/dict0stats_bg.cc	/^static bool dict_stats_start_shutdown;$/;"	v	file:
dict_stats_stop_bg	include/dict0stats_bg.ic	/^dict_stats_stop_bg($/;"	f
dict_stats_table_clone_create	dict/dict0stats.cc	/^dict_stats_table_clone_create($/;"	f	file:
dict_stats_table_clone_free	dict/dict0stats.cc	/^dict_stats_table_clone_free($/;"	f	file:
dict_stats_thread	dict/dict0stats_bg.cc	/^DECLARE_THREAD(dict_stats_thread)($/;"	f
dict_stats_thread_deinit	dict/dict0stats_bg.cc	/^dict_stats_thread_deinit()$/;"	f
dict_stats_thread_init	dict/dict0stats_bg.cc	/^dict_stats_thread_init()$/;"	f
dict_stats_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	dict_stats_thread_key;$/;"	v
dict_stats_upd_option_t	include/dict0stats.h	/^enum dict_stats_upd_option_t {$/;"	g
dict_stats_update	dict/dict0stats.cc	/^dict_stats_update($/;"	f
dict_stats_update_for_index	dict/dict0stats.cc	/^dict_stats_update_for_index($/;"	f
dict_stats_update_persistent	dict/dict0stats.cc	/^dict_stats_update_persistent($/;"	f	file:
dict_stats_update_transient	dict/dict0stats.cc	/^dict_stats_update_transient($/;"	f
dict_stats_update_transient_for_index	dict/dict0stats.cc	/^dict_stats_update_transient_for_index($/;"	f	file:
dict_stats_wait_bg_to_stop_using_table	dict/dict0stats_bg.cc	/^dict_stats_wait_bg_to_stop_using_table($/;"	f
dict_str_starts_with_keyword	dict/dict0dict.cc	/^dict_str_starts_with_keyword($/;"	f
dict_strip_comments	dict/dict0dict.cc	/^dict_strip_comments($/;"	f	file:
dict_sync_check	include/sync0types.h	/^	explicit dict_sync_check(bool dict_mutex_allowed)$/;"	f	struct:dict_sync_check
dict_sync_check	include/sync0types.h	/^struct dict_sync_check : public sync_check_functor_t {$/;"	s
dict_sys	dict/dict0dict.cc	/^dict_sys_t*	dict_sys	= NULL;$/;"	v
dict_sys_get_new_row_id	include/dict0boot.ic	/^dict_sys_get_new_row_id(void)$/;"	f
dict_sys_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	dict_sys_mutex_key;$/;"	v
dict_sys_read_row_id	include/dict0boot.ic	/^dict_sys_read_row_id($/;"	f
dict_sys_t	include/dict0dict.h	/^struct dict_sys_t{$/;"	s
dict_sys_tables_rec_check	dict/dict0load.cc	/^dict_sys_tables_rec_check($/;"	f	file:
dict_sys_tables_rec_read	dict/dict0load.cc	/^dict_sys_tables_rec_read($/;"	f	file:
dict_sys_tables_type_to_tf	include/dict0dict.ic	/^dict_sys_tables_type_to_tf($/;"	f
dict_sys_tables_type_validate	include/dict0dict.ic	/^dict_sys_tables_type_validate($/;"	f
dict_sys_tablespaces_rec_read	dict/dict0load.cc	/^dict_sys_tablespaces_rec_read($/;"	f
dict_sys_write_row_id	include/dict0boot.ic	/^dict_sys_write_row_id($/;"	f
dict_system_id_t	include/dict0load.h	/^enum dict_system_id_t {$/;"	g
dict_table_add_system_columns	dict/dict0dict.cc	/^dict_table_add_system_columns($/;"	f
dict_table_add_to_cache	dict/dict0dict.cc	/^dict_table_add_to_cache($/;"	f
dict_table_assign_new_id	dict/dict0crea.cc	/^dict_table_assign_new_id($/;"	f
dict_table_autoinc_alloc	dict/dict0dict.cc	/^dict_table_autoinc_alloc($/;"	f	file:
dict_table_autoinc_create_lazy	include/dict0mem.h	/^dict_table_autoinc_create_lazy($/;"	f
dict_table_autoinc_destroy	include/dict0mem.h	/^dict_table_autoinc_destroy($/;"	f
dict_table_autoinc_initialize	dict/dict0dict.cc	/^dict_table_autoinc_initialize($/;"	f
dict_table_autoinc_lock	dict/dict0dict.cc	/^dict_table_autoinc_lock($/;"	f
dict_table_autoinc_own	include/dict0mem.h	/^dict_table_autoinc_own($/;"	f
dict_table_autoinc_read	dict/dict0dict.cc	/^dict_table_autoinc_read($/;"	f
dict_table_autoinc_restore	dict/dict0dict.cc	/^dict_table_autoinc_restore($/;"	f
dict_table_autoinc_store	dict/dict0dict.cc	/^dict_table_autoinc_store($/;"	f
dict_table_autoinc_unlock	dict/dict0dict.cc	/^dict_table_autoinc_unlock($/;"	f
dict_table_autoinc_update_if_greater	dict/dict0dict.cc	/^dict_table_autoinc_update_if_greater($/;"	f
dict_table_can_be_evicted	dict/dict0dict.cc	/^dict_table_can_be_evicted($/;"	f	file:
dict_table_change_id_in_cache	dict/dict0dict.cc	/^dict_table_change_id_in_cache($/;"	f
dict_table_check_for_dup_indexes	dict/dict0dict.cc	/^dict_table_check_for_dup_indexes($/;"	f
dict_table_check_if_in_cache_low	include/dict0priv.ic	/^dict_table_check_if_in_cache_low($/;"	f
dict_table_close	dict/dict0dict.cc	/^dict_table_close($/;"	f
dict_table_close_and_drop	dict/dict0dict.cc	/^dict_table_close_and_drop($/;"	f
dict_table_col_in_clustered_key	dict/dict0dict.cc	/^dict_table_col_in_clustered_key($/;"	f
dict_table_copy_types	dict/dict0dict.cc	/^dict_table_copy_types($/;"	f
dict_table_copy_v_types	dict/dict0dict.cc	/^dict_table_copy_v_types($/;"	f
dict_table_decode_n_col	include/dict0dict.ic	/^dict_table_decode_n_col($/;"	f
dict_table_encode_n_col	include/dict0dict.ic	/^dict_table_encode_n_col($/;"	f
dict_table_extent_size	dict/dict0dict.cc	/^dict_table_extent_size($/;"	f
dict_table_find_index_on_id	dict/dict0dict.cc	/^dict_table_find_index_on_id($/;"	f
dict_table_get_all_fts_indexes	dict/dict0dict.cc	/^dict_table_get_all_fts_indexes($/;"	f
dict_table_get_col_name	dict/dict0dict.cc	/^dict_table_get_col_name($/;"	f
dict_table_get_curr_table_sess_trx_id	include/dict0dict.ic	/^dict_table_get_curr_table_sess_trx_id($/;"	f
dict_table_get_first_index	include/dict0dict.h	683;"	d
dict_table_get_first_index	include/dict0dict.ic	/^dict_table_get_first_index($/;"	f
dict_table_get_format	include/dict0dict.ic	/^dict_table_get_format($/;"	f
dict_table_get_highest_foreign_id	dict/dict0dict.cc	/^dict_table_get_highest_foreign_id($/;"	f
dict_table_get_index_on_first_col	include/dict0dict.ic	/^dict_table_get_index_on_first_col($/;"	f
dict_table_get_index_on_name	dict/dict0dict.cc	/^dict_table_get_index_on_name($/;"	f
dict_table_get_index_on_name	include/dict0dict.h	/^dict_table_get_index_on_name($/;"	f
dict_table_get_last_index	include/dict0dict.h	684;"	d
dict_table_get_last_index	include/dict0dict.ic	/^dict_table_get_last_index($/;"	f
dict_table_get_low	include/dict0priv.ic	/^dict_table_get_low($/;"	f
dict_table_get_n_cols	include/dict0dict.ic	/^dict_table_get_n_cols($/;"	f
dict_table_get_n_rows	include/dict0dict.ic	/^dict_table_get_n_rows($/;"	f
dict_table_get_n_sys_cols	include/dict0dict.ic	/^dict_table_get_n_sys_cols($/;"	f
dict_table_get_n_tot_u_cols	include/dict0dict.ic	/^dict_table_get_n_tot_u_cols($/;"	f
dict_table_get_n_user_cols	include/dict0dict.ic	/^dict_table_get_n_user_cols($/;"	f
dict_table_get_n_v_cols	include/dict0dict.ic	/^dict_table_get_n_v_cols($/;"	f
dict_table_get_next_index	include/dict0dict.h	685;"	d
dict_table_get_next_index	include/dict0dict.ic	/^dict_table_get_next_index($/;"	f
dict_table_get_next_table_sess_row_id	include/dict0dict.ic	/^dict_table_get_next_table_sess_row_id($/;"	f
dict_table_get_next_table_sess_trx_id	include/dict0dict.ic	/^dict_table_get_next_table_sess_trx_id($/;"	f
dict_table_get_nth_col	include/dict0dict.h	899;"	d
dict_table_get_nth_col	include/dict0dict.ic	/^dict_table_get_nth_col($/;"	f
dict_table_get_nth_col_pos	dict/dict0dict.cc	/^dict_table_get_nth_col_pos($/;"	f
dict_table_get_nth_v_col	include/dict0dict.h	905;"	d
dict_table_get_nth_v_col	include/dict0dict.ic	/^dict_table_get_nth_v_col($/;"	f
dict_table_get_nth_v_col_mysql	dict/dict0dict.cc	/^dict_table_get_nth_v_col_mysql($/;"	f
dict_table_get_sys_col	include/dict0dict.h	901;"	d
dict_table_get_sys_col	include/dict0dict.ic	/^dict_table_get_sys_col($/;"	f
dict_table_get_sys_col_no	include/dict0dict.ic	/^dict_table_get_sys_col_no($/;"	f
dict_table_get_v_col_name	dict/dict0dict.cc	/^dict_table_get_v_col_name($/;"	f
dict_table_get_v_col_name_mysql	dict/dict0dict.cc	/^dict_table_get_v_col_name_mysql($/;"	f	file:
dict_table_get_v_col_pos_for_mysql	dict/dict0dict.cc	/^dict_table_get_v_col_pos_for_mysql($/;"	f	file:
dict_table_has_column	dict/dict0dict.cc	/^dict_table_has_column($/;"	f
dict_table_has_fts_index	include/dict0dict.ic	/^dict_table_has_fts_index($/;"	f
dict_table_has_indexed_v_cols	include/dict0dict.ic	/^dict_table_has_indexed_v_cols($/;"	f
dict_table_has_temp_general_tablespace_name	include/dict0dict.ic	/^dict_table_has_temp_general_tablespace_name($/;"	f
dict_table_have_virtual_index	include/dict0dict.ic	/^dict_table_have_virtual_index($/;"	f
dict_table_in_shared_tablespace	include/dict0dict.ic	/^dict_table_in_shared_tablespace($/;"	f
dict_table_info_t	include/dict0load.h	/^enum dict_table_info_t {$/;"	g
dict_table_is_comp	include/dict0dict.ic	/^dict_table_is_comp($/;"	f
dict_table_is_corrupted	include/dict0dict.ic	/^dict_table_is_corrupted($/;"	f
dict_table_is_discarded	include/dict0dict.ic	/^dict_table_is_discarded($/;"	f
dict_table_is_encrypted	include/dict0dict.ic	/^dict_table_is_encrypted($/;"	f
dict_table_is_file_per_table	include/dict0dict.ic	/^dict_table_is_file_per_table($/;"	f
dict_table_is_fts_column	include/dict0dict.ic	/^dict_table_is_fts_column($/;"	f
dict_table_is_intrinsic	include/dict0dict.ic	/^dict_table_is_intrinsic($/;"	f
dict_table_is_locking_disabled	include/dict0dict.ic	/^dict_table_is_locking_disabled($/;"	f
dict_table_is_partition	dict/dict0dict.cc	/^dict_table_is_partition($/;"	f
dict_table_is_referenced_by_foreign_key	dict/dict0dict.cc	/^dict_table_is_referenced_by_foreign_key($/;"	f
dict_table_is_temporary	include/dict0dict.ic	/^dict_table_is_temporary($/;"	f
dict_table_move_from_lru_to_non_lru	dict/dict0dict.cc	/^dict_table_move_from_lru_to_non_lru($/;"	f
dict_table_n_rows_dec	include/dict0dict.ic	/^dict_table_n_rows_dec($/;"	f
dict_table_n_rows_inc	include/dict0dict.ic	/^dict_table_n_rows_inc($/;"	f
dict_table_next_uncorrupted_index	include/dict0dict.h	696;"	d
dict_table_op_t	include/dict0dict.h	/^enum dict_table_op_t {$/;"	g
dict_table_open_on_id	dict/dict0dict.cc	/^dict_table_open_on_id($/;"	f
dict_table_open_on_id_low	include/dict0priv.ic	/^dict_table_open_on_id_low($/;"	f
dict_table_open_on_name	dict/dict0dict.cc	/^dict_table_open_on_name($/;"	f
dict_table_page_size	include/dict0dict.ic	/^dict_table_page_size($/;"	f
dict_table_prevent_eviction	include/dict0dict.ic	/^dict_table_prevent_eviction($/;"	f
dict_table_remove_from_cache	dict/dict0dict.cc	/^dict_table_remove_from_cache($/;"	f
dict_table_remove_from_cache_low	dict/dict0dict.cc	/^dict_table_remove_from_cache_low($/;"	f
dict_table_rename_in_cache	dict/dict0dict.cc	/^dict_table_rename_in_cache($/;"	f
dict_table_schema_check	dict/dict0dict.cc	/^dict_table_schema_check($/;"	f
dict_table_schema_t	include/dict0dict.h	/^struct dict_table_schema_t {$/;"	s
dict_table_set_big_rows	dict/dict0dict.cc	/^dict_table_set_big_rows($/;"	f
dict_table_skip_corrupt_index	include/dict0dict.h	690;"	d
dict_table_stats_key	sync/sync0sync.cc	/^mysql_pfs_key_t	dict_table_stats_key;$/;"	v
dict_table_stats_latch_alloc	dict/dict0dict.cc	/^dict_table_stats_latch_alloc($/;"	f	file:
dict_table_stats_latch_create	dict/dict0dict.cc	/^dict_table_stats_latch_create($/;"	f
dict_table_stats_latch_destroy	dict/dict0dict.cc	/^dict_table_stats_latch_destroy($/;"	f
dict_table_stats_latch_free	dict/dict0dict.cc	/^dict_table_stats_latch_free($/;"	f	file:
dict_table_stats_lock	dict/dict0dict.cc	/^dict_table_stats_lock($/;"	f
dict_table_stats_unlock	dict/dict0dict.cc	/^dict_table_stats_unlock($/;"	f
dict_table_t	include/dict0mem.h	/^struct dict_table_t {$/;"	s
dict_table_try_drop_aborted	dict/dict0dict.cc	/^dict_table_try_drop_aborted($/;"	f	file:
dict_table_try_drop_aborted_and_mutex_exit	dict/dict0dict.cc	/^dict_table_try_drop_aborted_and_mutex_exit($/;"	f	file:
dict_table_wait_for_bg_threads_to_exit	dict/dict0dict.cc	/^dict_table_wait_for_bg_threads_to_exit($/;"	f
dict_table_x_lock_indexes	include/dict0dict.ic	/^dict_table_x_lock_indexes($/;"	f
dict_table_x_unlock_indexes	include/dict0dict.ic	/^dict_table_x_unlock_indexes($/;"	f
dict_tables_have_same_db	dict/dict0dict.cc	/^dict_tables_have_same_db($/;"	f
dict_temp_file_num	dict/dict0mem.cc	/^static ib_uint32_t	dict_temp_file_num;$/;"	v	file:
dict_tf2_is_valid	include/dict0dict.ic	/^dict_tf2_is_valid($/;"	f
dict_tf_get_format	include/dict0dict.ic	/^dict_tf_get_format($/;"	f
dict_tf_get_page_size	include/dict0dict.ic	/^dict_tf_get_page_size($/;"	f
dict_tf_get_rec_format	include/dict0dict.ic	/^dict_tf_get_rec_format($/;"	f
dict_tf_init	include/dict0dict.ic	/^dict_tf_init($/;"	f
dict_tf_is_valid	include/dict0dict.ic	/^dict_tf_is_valid($/;"	f
dict_tf_set	include/dict0dict.ic	/^dict_tf_set($/;"	f
dict_tf_to_fsp_flags	dict/dict0dict.cc	/^dict_tf_to_fsp_flags($/;"	f
dict_tf_to_row_format_string	dict/dict0dict.cc	/^dict_tf_to_row_format_string($/;"	f
dict_tf_to_sys_tables_type	include/dict0dict.ic	/^dict_tf_to_sys_tables_type($/;"	f
dict_truncate_index_tree_in_mem	dict/dict0crea.cc	/^dict_truncate_index_tree_in_mem($/;"	f
dict_update_filepath	dict/dict0load.cc	/^dict_update_filepath($/;"	f
dict_v_col_t	include/dict0mem.h	/^struct dict_v_col_t{$/;"	s
dict_v_idx_list	include/dict0mem.h	/^typedef	std::list<dict_v_idx_t, ut_allocator<dict_v_idx_t> >	dict_v_idx_list;$/;"	t
dict_v_idx_t	include/dict0mem.h	/^struct dict_v_idx_t {$/;"	s
dict_vcol_set	include/dict0mem.h	/^		ut_allocator<dict_v_col_t*> >		dict_vcol_set;$/;"	t
dict_vcol_templ_t	include/dict0mem.h	/^struct dict_vcol_templ_t {$/;"	s
difference_type	include/mem0mem.h	/^	typedef		ptrdiff_t	difference_type;$/;"	t	class:mem_heap_allocator
difference_type	include/ut0new.h	/^	typedef ptrdiff_t	difference_type;$/;"	t	class:ut_allocator
dir_path_of_temp_table	include/dict0mem.h	/^	const char*				dir_path_of_temp_table;$/;"	m	struct:dict_table_t
disable	sync/sync0sync.cc	/^MutexMonitor::disable()$/;"	f	class:MutexMonitor
disable_ahi	include/dict0mem.h	/^	unsigned	disable_ahi:1;$/;"	m	struct:dict_index_t
disable_caching	include/dict0mem.h	/^	bool		disable_caching;$/;"	m	class:last_ops_cur_t
disable_compression	include/os0file.h	/^	void disable_compression()$/;"	f	class:IORequest
disable_indexes	handler/ha_innodb.cc	/^ha_innobase::disable_indexes($/;"	f	class:ha_innobase
disable_indexes	handler/ha_innopart.h	/^	disable_indexes($/;"	f	class:ha_innopart
disable_partial_io_warnings	include/os0file.h	/^	void disable_partial_io_warnings()$/;"	f	class:IORequest
discard_modifications	include/mtr0mtr.h	/^	void discard_modifications()$/;"	f	struct:mtr_t
discard_or_import_tablespace	handler/ha_innodb.cc	/^ha_innobase::discard_or_import_tablespace($/;"	f	class:ha_innobase
discard_or_import_tablespace	handler/ha_innopart.cc	/^ha_innopart::discard_or_import_tablespace($/;"	f	class:ha_innopart
discard_t	row/row0import.cc	/^struct discard_t {$/;"	s	file:
distance	fts/fts0que.cc	/^	ulint			distance;$/;"	m	struct:fts_phrase_t	file:
distance	fts/fts0que.cc	/^	ulint		distance;	\/*!< The proximity distance of a$/;"	m	struct:fts_query_t	file:
distance	include/fts0ast.h	/^	ulint			distance;	\/*!< > 0 if proximity distance$/;"	m	struct:fts_ast_text_t
do_or_wait_for_done	include/os0once.h	/^	do_or_wait_for_done($/;"	f	class:os_once
doc_col	include/fts0fts.h	/^	ulint		doc_col;$/;"	m	class:fts_t
doc_count	fts/fts0que.cc	/^	ib_uint64_t	doc_count;	\/*!< Total number of documents that$/;"	m	struct:fts_word_freq_t	file:
doc_count	include/fts0types.h	/^	ulint		doc_count;	\/*!< Number of doc ids in ilist *\/$/;"	m	struct:fts_node_t
doc_freqs	fts/fts0que.cc	/^	ib_rbt_t*	doc_freqs;	\/*!< RB Tree for storing per document$/;"	m	struct:fts_word_freq_t	file:
doc_id	fts/fts0que.cc	/^	doc_id_t	doc_id;		\/*!< Document id *\/$/;"	m	struct:fts_doc_freq_t	file:
doc_id	fts/fts0que.cc	/^	doc_id_t	doc_id;		\/*!< Document id *\/$/;"	m	struct:fts_match_t	file:
doc_id	fts/fts0que.cc	/^	doc_id_t	doc_id;		\/*!< The document id to match *\/$/;"	m	struct:fts_select_t	file:
doc_id	include/fts0fts.h	/^	doc_id_t	doc_id;		\/*!< Document id *\/$/;"	m	struct:fts_ranking_t
doc_id	include/fts0fts.h	/^	doc_id_t	doc_id;		\/*!< Id of the ins\/upd\/del document *\/$/;"	m	struct:fts_trx_row_t
doc_id	include/fts0types.h	/^	doc_id_t	doc_id;		\/*!< Document id *\/$/;"	m	struct:fts_doc_stats_t
doc_id	include/fts0types.h	/^	doc_id_t	doc_id;		\/*!< The doc id affected *\/$/;"	m	struct:fts_update_t
doc_id	include/row0ftsort.h	/^	doc_id_t	doc_id;		\/*!< document ID *\/$/;"	m	struct:fts_doc_item
doc_id_lock	include/fts0types.h	/^	ib_mutex_t	doc_id_lock;	\/*!< Lock covering Doc ID *\/$/;"	m	struct:fts_cache_t
doc_id_t	include/fts0fts.h	/^typedef ib_uint64_t doc_id_t;$/;"	t
doc_ids	fts/fts0que.cc	/^	ib_rbt_t*       doc_ids;	\/*!< The current set of matching$/;"	m	struct:fts_query_t	file:
doc_ids	include/fts0fts.h	/^	ib_vector_t*	doc_ids;	\/*!< document ids (each element is$/;"	m	struct:fts_doc_ids_t
doc_list	include/row0ftsort.h	/^	UT_LIST_NODE_T(fts_doc_item_t)	doc_list;$/;"	m	struct:fts_doc_item
doc_stats	include/fts0types.h	/^	ib_vector_t*	doc_stats;	\/*!< Array of the fts_doc_stats_t$/;"	m	struct:fts_index_cache_t
docs_added_graph	include/fts0fts.h	/^	que_t*		docs_added_graph;$/;"	m	struct:fts_trx_table_t
does_not_fit_in_memory	include/dict0mem.h	/^	ibool					does_not_fit_in_memory;$/;"	m	struct:dict_table_t
done	fts/fts0opt.cc	/^	ibool		done;		\/*!< TRUE when optimize finishes *\/$/;"	m	struct:fts_optimize_t	file:
done	include/row0purge.h	/^	ibool		done;	\/* Debug flag *\/$/;"	m	struct:purge_node_t
done	include/trx0purge.h	/^	purge_iter_t	done;		\/* Indicate 'purge pointer' which have$/;"	m	struct:trx_purge_t
done	os/os0file.cc	/^	void done()$/;"	f	class:SimulatedAIOHandler
done	row/row0trunc.cc	/^	void done()$/;"	f	class:TruncateLogger
done	trx/trx0purge.cc	/^	void done($/;"	f	namespace:undo
done_logging	include/trx0purge.h	/^		void done_logging(ulint space_id)$/;"	f	class:undo::Truncate
dot_ext	fil/fil0fil.cc	/^const char* dot_ext[] = { "", ".ibd", ".isl", ".cfg", ".cfp" };$/;"	v
drop_aborted	include/dict0mem.h	/^	unsigned				drop_aborted:1;$/;"	m	struct:dict_table_t
drop_all_foreign_keys_in_db	row/row0mysql.cc	/^drop_all_foreign_keys_in_db($/;"	f
drop_fk	handler/handler0alter.cc	/^	dict_foreign_t** drop_fk;$/;"	m	struct:ha_innobase_inplace_ctx	file:
drop_index	handler/handler0alter.cc	/^	dict_index_t**	drop_index;$/;"	m	struct:ha_innobase_inplace_ctx	file:
drop_indexes	row/row0trunc.cc	/^truncate_t::drop_indexes($/;"	f	class:truncate_t
drop_vcol	handler/handler0alter.cc	/^	dict_v_col_t*	drop_vcol;$/;"	m	struct:ha_innobase_inplace_ctx	file:
drop_vcol_name	handler/handler0alter.cc	/^	const char**	drop_vcol_name;$/;"	m	struct:ha_innobase_inplace_ctx	file:
dtuple_big_rec_free	include/data0data.ic	/^dtuple_big_rec_free($/;"	f
dtuple_check_typed	data/data0data.cc	/^dtuple_check_typed($/;"	f
dtuple_check_typed_no_assert	data/data0data.cc	/^dtuple_check_typed_no_assert($/;"	f
dtuple_coll_cmp	data/data0data.cc	/^dtuple_coll_cmp($/;"	f
dtuple_contains_null	include/data0data.ic	/^dtuple_contains_null($/;"	f
dtuple_convert_big_rec	data/data0data.cc	/^dtuple_convert_big_rec($/;"	f
dtuple_copy	include/data0data.ic	/^dtuple_copy($/;"	f
dtuple_copy_v_fields	include/data0data.ic	/^dtuple_copy_v_fields($/;"	f
dtuple_create	include/data0data.ic	/^dtuple_create($/;"	f
dtuple_create_from_mem	include/data0data.ic	/^dtuple_create_from_mem($/;"	f
dtuple_create_with_vcol	include/data0data.ic	/^dtuple_create_with_vcol($/;"	f
dtuple_dup_v_fld	include/data0data.ic	/^dtuple_dup_v_fld($/;"	f
dtuple_fold	include/data0data.ic	/^dtuple_fold($/;"	f
dtuple_get_data_size	include/data0data.ic	/^dtuple_get_data_size($/;"	f
dtuple_get_info_bits	include/data0data.ic	/^dtuple_get_info_bits($/;"	f
dtuple_get_n_ext	include/data0data.ic	/^dtuple_get_n_ext($/;"	f
dtuple_get_n_fields	include/data0data.ic	/^dtuple_get_n_fields($/;"	f
dtuple_get_n_fields_cmp	include/data0data.ic	/^dtuple_get_n_fields_cmp($/;"	f
dtuple_get_n_v_fields	include/data0data.ic	/^dtuple_get_n_v_fields($/;"	f
dtuple_get_nth_field	include/data0data.h	260;"	d
dtuple_get_nth_field	include/data0data.ic	/^dtuple_get_nth_field($/;"	f
dtuple_get_nth_v_field	include/data0data.h	261;"	d
dtuple_get_nth_v_field	include/data0data.ic	/^dtuple_get_nth_v_field($/;"	f
dtuple_init_v_fld	include/data0data.ic	/^dtuple_init_v_fld($/;"	f
dtuple_print	data/data0data.cc	/^dtuple_print($/;"	f
dtuple_set_info_bits	include/data0data.ic	/^dtuple_set_info_bits($/;"	f
dtuple_set_n_fields	data/data0data.cc	/^dtuple_set_n_fields($/;"	f
dtuple_set_n_fields_cmp	include/data0data.ic	/^dtuple_set_n_fields_cmp($/;"	f
dtuple_set_types_binary	include/data0data.ic	/^dtuple_set_types_binary($/;"	f
dtuple_t	include/data0data.h	/^struct dtuple_t {$/;"	s
dtuple_validate	data/data0data.cc	/^dtuple_validate($/;"	f
dtype_copy	include/data0type.ic	/^dtype_copy($/;"	f
dtype_form_prtype	data/data0type.cc	/^dtype_form_prtype($/;"	f
dtype_get_at_most_n_mbchars	data/data0type.cc	/^dtype_get_at_most_n_mbchars($/;"	f
dtype_get_charset_coll	include/data0type.ic	/^dtype_get_charset_coll($/;"	f
dtype_get_fixed_size_low	include/data0type.ic	/^dtype_get_fixed_size_low($/;"	f
dtype_get_len	include/data0type.ic	/^dtype_get_len($/;"	f
dtype_get_max_size_low	include/data0type.ic	/^dtype_get_max_size_low($/;"	f
dtype_get_mblen	include/data0type.ic	/^dtype_get_mblen($/;"	f
dtype_get_mbmaxlen	include/data0type.ic	/^dtype_get_mbmaxlen($/;"	f
dtype_get_mbminlen	include/data0type.ic	/^dtype_get_mbminlen($/;"	f
dtype_get_min_size_low	include/data0type.ic	/^dtype_get_min_size_low($/;"	f
dtype_get_mtype	include/data0type.ic	/^dtype_get_mtype($/;"	f
dtype_get_mysql_type	include/data0type.ic	/^dtype_get_mysql_type($/;"	f
dtype_get_prtype	include/data0type.ic	/^dtype_get_prtype($/;"	f
dtype_get_sql_null_size	include/data0type.ic	/^dtype_get_sql_null_size($/;"	f
dtype_is_binary_string_type	data/data0type.cc	/^dtype_is_binary_string_type($/;"	f
dtype_is_non_binary_string_type	data/data0type.cc	/^dtype_is_non_binary_string_type($/;"	f
dtype_is_string_type	data/data0type.cc	/^dtype_is_string_type($/;"	f
dtype_is_utf8	include/data0type.ic	/^dtype_is_utf8($/;"	f
dtype_new_read_for_order_and_null_size	include/data0type.ic	/^dtype_new_read_for_order_and_null_size($/;"	f
dtype_new_store_for_order_and_null_size	include/data0type.ic	/^dtype_new_store_for_order_and_null_size($/;"	f
dtype_print	data/data0type.cc	/^dtype_print($/;"	f
dtype_read_for_order_and_null_size	include/data0type.ic	/^dtype_read_for_order_and_null_size($/;"	f
dtype_set	include/data0type.ic	/^dtype_set($/;"	f
dtype_set_mblen	include/data0type.ic	/^dtype_set_mblen($/;"	f
dtype_set_mblen	include/data0type.ic	141;"	d	file:
dtype_set_mbminmaxlen	include/data0type.ic	/^dtype_set_mbminmaxlen($/;"	f
dtype_sql_name	include/data0type.ic	/^dtype_sql_name($/;"	f
dtype_t	include/data0type.h	/^struct dtype_t{$/;"	s
dtype_validate	data/data0type.cc	/^dtype_validate($/;"	f
dup	include/row0ftsort.h	/^	row_merge_dup_t*	dup;		\/*!< descriptor of FTS index *\/$/;"	m	struct:fts_psort_common_t
duplicate	include/row0ins.h	/^	dict_index_t*   duplicate;$/;"	m	struct:ins_node_t
duplicates	include/trx0trx.h	/^	ulint		duplicates;	\/*!< TRX_DUP_IGNORE | TRX_DUP_REPLACE *\/$/;"	m	struct:trx_t
dyn0buf_h	include/dyn0buf.h	27;"	d
dyn0types_h	include/dyn0types.h	27;"	d
dyn_buf_t	include/dyn0buf.h	/^	dyn_buf_t()$/;"	f	class:dyn_buf_t
dyn_buf_t	include/dyn0buf.h	/^class dyn_buf_t {$/;"	c
elapsed_time	fts/fts0fts.cc	/^ib_time_t elapsed_time = 0;$/;"	v
elem_type	include/ut0lst.h	/^	typedef Type elem_type;$/;"	t	struct:ut_list_base
else_part	include/pars0pars.h	/^	que_node_t*	else_part;	\/*!< else-part statement list *\/$/;"	m	struct:if_node_t
elsif_list	include/pars0pars.h	/^	elsif_node_t*	elsif_list;	\/*!< elsif element list *\/$/;"	m	struct:if_node_t
elsif_node_t	include/pars0pars.h	/^struct elsif_node_t{$/;"	s
empty	include/ibuf0ibuf.ic	/^	bool		empty;		\/*!< Protected by the page$/;"	m	struct:ibuf_t	file:
empty	include/read0types.h	/^		bool empty() const { return(size() == 0); }$/;"	f	class:ReadView::ids_t
empty	include/read0types.h	/^	bool empty() const$/;"	f	class:ReadView
empty	include/trx0undo.h	/^	ulint		empty;		\/*!< TRUE if the stack of undo log$/;"	m	struct:trx_undo_t
enable	sync/sync0sync.cc	/^MutexMonitor::enable()$/;"	f	class:MutexMonitor
enable_indexes	handler/ha_innodb.cc	/^ha_innobase::enable_indexes($/;"	f	class:ha_innobase
enable_indexes	handler/ha_innopart.h	/^	enable_indexes($/;"	f	class:ha_innopart
encrypt	os/os0file.cc	/^Encryption::encrypt($/;"	f	class:Encryption
encryption_algorithm	include/os0file.h	/^	void encryption_algorithm(Encryption::Type type)$/;"	f	class:IORequest
encryption_iv	fil/fil0fil.cc	/^	byte*		encryption_iv;		\/*!< Encryption iv *\/$/;"	m	struct:fil_iterator_t	file:
encryption_iv	include/dict0mem.h	/^	byte*					encryption_iv;$/;"	m	struct:dict_table_t
encryption_iv	include/fil0fil.h	/^	byte			encryption_iv[ENCRYPTION_KEY_LEN];$/;"	m	struct:fil_space_t
encryption_key	fil/fil0fil.cc	/^	byte*		encryption_key;		\/*!< Encryption key *\/$/;"	m	struct:fil_iterator_t	file:
encryption_key	include/dict0mem.h	/^	byte*					encryption_key;$/;"	m	struct:dict_table_t
encryption_key	include/fil0fil.h	/^	byte			encryption_key[ENCRYPTION_KEY_LEN];$/;"	m	struct:fil_space_t
encryption_key	include/os0file.h	/^	void encryption_key(byte* key,$/;"	f	class:IORequest
encryption_klen	include/fil0fil.h	/^	ulint			encryption_klen;$/;"	m	struct:fil_space_t
encryption_list	include/log0recv.h	/^			encryption_list;$/;"	m	struct:recv_sys_t
encryption_list_t	include/log0recv.h	/^		encryption_list_t;$/;"	t
encryption_type	include/fil0fil.h	/^	Encryption::Type	encryption_type;$/;"	m	struct:fil_space_t
end	fil/fil0fil.cc	/^	os_offset_t	end;			\/*!< Where to stop *\/$/;"	m	struct:fil_iterator_t	file:
end	include/trx0types.h	/^	iterator end()$/;"	f	class:TrxUndoRsegs
end	include/ut0dbg.h	/^	void end()$/;"	f	class:ut_chrono_t
end	include/ut0lst.h	/^	elem_type*	end;			\/*!< pointer to list end,$/;"	m	struct:ut_list_base
end_conds	include/row0sel.h	/^			end_conds;	\/*!< conditions which determine the$/;"	m	struct:plan_t
end_lsn	include/log0recv.h	/^	lsn_t		end_lsn;\/*!< end lsn of the log segment written by$/;"	m	struct:recv_t
end_phase_read_pk	include/ut0stage.h	/^	end_phase_read_pk()$/;"	f	class:ut_stage_alter_t
end_phase_read_pk	include/ut0stage.h	/^ut_stage_alter_t::end_phase_read_pk()$/;"	f	class:ut_stage_alter_t
end_stmt	handler/ha_innodb.cc	/^ha_innobase::end_stmt()$/;"	f	class:ha_innobase
end_stmt	include/trx0trx.h	/^	static void end_stmt(trx_t* trx)$/;"	f	class:TrxInInnoDB
enter	include/trx0trx.h	/^	static void enter(trx_t* trx, bool disable)$/;"	f	class:TrxInInnoDB
enter	trx/trx0trx.cc	/^	void enter() { mutex_enter(&m_mutex); }$/;"	f	struct:TrxPoolLock
enter	trx/trx0trx.cc	/^	void enter() { mutex_enter(&m_mutex); }$/;"	f	struct:TrxPoolManagerLock
enter_ibuf	include/mtr0mtr.h	/^	void enter_ibuf()$/;"	f	struct:mtr_t
entry	data/data0data.cc	/^	dtuple_t*	entry,	\/*!< in: entry whose data was put to vector *\/$/;"	v
entry	include/row0ins.h	/^	dtuple_t*	entry;	\/*!< NULL, or entry to insert in the index;$/;"	m	struct:ins_node_t
entry_list	include/row0ins.h	/^			entry_list;\/* list of entries, one for each index *\/$/;"	m	struct:ins_node_t
entry_sys_heap	include/row0ins.h	/^	mem_heap_t*	entry_sys_heap;$/;"	m	struct:ins_node_t
equals_to	include/buf0buf.h	/^	inline bool equals_to(const page_id_t& a) const$/;"	f	class:page_id_t
equals_to	include/page0size.h	/^	inline bool equals_to(const page_size_t& a) const$/;"	f	class:page_size_t
erase	include/dyn0buf.h	/^	void erase()$/;"	f	class:dyn_buf_t
erase	include/trx0types.h	/^	void erase(iterator& it)$/;"	f	class:TrxUndoRsegs
err	os/os0file.cc	/^	dberr_t			err;$/;"	m	struct:Slot	file:
error	fts/fts0que.cc	/^	dberr_t		error;		\/*!< Error code if any, that is$/;"	m	struct:fts_query_t	file:
error	include/row0ftsort.h	/^	dberr_t			error;		\/*!< db error during psort *\/$/;"	m	struct:fts_psort_t
error	include/ut0ut.h	/^class error : public logger {$/;"	c	namespace:ib
error	row/row0log.cc	/^	dberr_t		error;	\/*!< error that occurred during online$/;"	m	struct:row_log_t	file:
error_info	include/trx0trx.h	/^	const dict_index_t*error_info;	\/*!< if the error number indicates a$/;"	m	struct:trx_t
error_key_num	include/trx0trx.h	/^	ulint		error_key_num;	\/*!< if the index creation fails to a$/;"	m	struct:trx_t
error_or_warn	include/ut0ut.h	/^	error_or_warn(bool	pred)$/;"	f	class:ib::error_or_warn
error_or_warn	include/ut0ut.h	/^class error_or_warn : public logger {$/;"	c	namespace:ib
error_state	include/trx0trx.h	/^	dberr_t		error_state;	\/*!< 0 if no error, otherwise error$/;"	m	struct:trx_t
estimate_rows_upper_bound	handler/ha_innodb.cc	/^ha_innobase::estimate_rows_upper_bound()$/;"	f	class:ha_innobase
estimate_rows_upper_bound	handler/ha_innopart.cc	/^ha_innopart::estimate_rows_upper_bound()$/;"	f	class:ha_innopart
eval0eval_h	include/eval0eval.h	28;"	d
eval0proc_h	include/eval0proc.h	27;"	d
eval_aggregate	eval/eval0eval.cc	/^eval_aggregate($/;"	f
eval_arith	eval/eval0eval.cc	/^eval_arith($/;"	f
eval_binary_to_number	eval/eval0eval.cc	/^eval_binary_to_number($/;"	f
eval_cmp	eval/eval0eval.cc	/^eval_cmp($/;"	f
eval_cmp_like	eval/eval0eval.cc	/^eval_cmp_like($/;"	f
eval_concat	eval/eval0eval.cc	/^eval_concat($/;"	f	file:
eval_dummy	eval/eval0eval.cc	/^static byte	eval_dummy;$/;"	v	file:
eval_exp	include/eval0eval.ic	/^eval_exp($/;"	f
eval_func	eval/eval0eval.cc	/^eval_func($/;"	f
eval_instr	eval/eval0eval.cc	/^eval_instr($/;"	f	file:
eval_logical	eval/eval0eval.cc	/^eval_logical($/;"	f
eval_node_alloc_val_buf	eval/eval0eval.cc	/^eval_node_alloc_val_buf($/;"	f
eval_node_copy_and_alloc_val	include/eval0eval.ic	/^eval_node_copy_and_alloc_val($/;"	f
eval_node_copy_val	include/eval0eval.ic	/^eval_node_copy_val($/;"	f
eval_node_ensure_val_buf	include/eval0eval.ic	/^eval_node_ensure_val_buf($/;"	f
eval_node_free_val_buf	eval/eval0eval.cc	/^eval_node_free_val_buf($/;"	f
eval_node_get_ibool_val	include/eval0eval.ic	/^eval_node_get_ibool_val($/;"	f
eval_node_get_int_val	include/eval0eval.ic	/^eval_node_get_int_val($/;"	f
eval_node_set_ibool_val	include/eval0eval.ic	/^eval_node_set_ibool_val($/;"	f
eval_node_set_int_val	include/eval0eval.ic	/^eval_node_set_int_val($/;"	f
eval_notfound	eval/eval0eval.cc	/^eval_notfound($/;"	f
eval_predefined	eval/eval0eval.cc	/^eval_predefined($/;"	f
eval_predefined_2	eval/eval0eval.cc	/^eval_predefined_2($/;"	f	file:
eval_replstr	eval/eval0eval.cc	/^eval_replstr($/;"	f	file:
eval_rnd	eval/eval0eval.cc	/^static ulint	eval_rnd	= 128367121;$/;"	v	file:
eval_substr	eval/eval0eval.cc	/^eval_substr($/;"	f
eval_sym	include/eval0eval.ic	/^eval_sym($/;"	f
eval_to_binary	eval/eval0eval.cc	/^eval_to_binary($/;"	f
event	fts/fts0opt.cc	/^	os_event_t	event;		\/*!< Event to synchronize acknowledgement$/;"	m	struct:fts_msg_del_t	file:
event	include/fts0types.h	/^	os_event_t	event;		\/*!< sync finish event *\/$/;"	m	struct:fts_sync_t
event	include/srv0srv.h	/^	os_event_t	event;			\/*!< event used in suspending$/;"	m	struct:srv_slot_t
event	include/sync0rw.h	/^	os_event_t	event;$/;"	m	struct:rw_lock_t
event	include/trx0purge.h	/^	os_event_t	event;		\/*!< State signal event *\/$/;"	m	struct:trx_purge_t
event	ut/ut0wqueue.cc	/^	os_event_t	event;	\/*!< event we use to signal additions to list *\/$/;"	m	struct:ib_wqueue_t	file:
event_iter	os/os0event.cc	/^	event_iter_t		event_iter;	\/*!< For O(1) removal from$/;"	m	struct:os_event	file:
event_iter_t	os/os0event.cc	/^typedef os_event_list_t::iterator				event_iter_t;$/;"	t	file:
event_manager_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	event_manager_mutex_key;$/;"	v
event_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	event_mutex_key;$/;"	v
execute	mtr/mtr0mtr.cc	/^mtr_t::Command::execute()$/;"	f	class:mtr_t::Command
execute	os/os0file.cc	/^SyncFileIO::execute(Slot* slot)$/;"	f	class:SyncFileIO
execute	os/os0file.cc	/^SyncFileIO::execute(const IORequest& request)$/;"	f	class:SyncFileIO
exists	fil/fil0fil.cc	/^Folder::exists()$/;"	f	class:Folder
exit	fts/fts0blex.cc	482;"	d	file:
exit	fts/fts0tlex.cc	478;"	d	file:
exit	include/trx0trx.h	/^	static void exit(trx_t* trx)$/;"	f	class:TrxInInnoDB
exit	pars/lexyy.cc	967;"	d	file:
exit	trx/trx0trx.cc	/^	void exit() { mutex_exit(&m_mutex); }$/;"	f	struct:TrxPoolLock
exit	trx/trx0trx.cc	/^	void exit() { mutex_exit(&m_mutex); }$/;"	f	struct:TrxPoolManagerLock
exit_ibuf	include/mtr0mtr.h	/^	void exit_ibuf()$/;"	f	struct:mtr_t
exit_node_t	include/pars0pars.h	/^struct exit_node_t{$/;"	s
exit_step	eval/eval0proc.cc	/^exit_step($/;"	f
exp	include/row0upd.h	/^	que_node_t*	exp;		\/*!< expression for calculating a new$/;"	m	struct:upd_field_t
explicit_cursor	include/row0sel.h	/^	sym_node_t*	explicit_cursor;\/*!< not NULL if an explicit cursor *\/$/;"	m	struct:sel_node_t
export_var_t	include/srv0srv.h	/^struct export_var_t{$/;"	s
export_vars	srv/srv0srv.cc	/^export_var_t export_vars;$/;"	v
ext	include/data0data.h	/^	unsigned	ext:1;	\/*!< TRUE=externally stored, FALSE=local *\/$/;"	m	struct:dfield_t
ext	include/row0ext.h	/^	const ulint*	ext;	\/*!< col_no's of externally stored columns *\/$/;"	m	struct:row_ext_t
ext	include/row0undo.h	/^	row_ext_t*	ext;	\/*!< NULL, or prefixes of the externally$/;"	m	struct:undo_node_t
ext	include/row0upd.h	/^	row_ext_t*	ext;	\/*!< NULL, or prefixes of the externally$/;"	m	struct:upd_node_t
external_lock	handler/ha_innodb.cc	/^ha_innobase::external_lock($/;"	f	class:ha_innobase
external_lock	handler/ha_innopart.cc	/^ha_innopart::external_lock($/;"	f	class:ha_innopart
extra	handler/ha_innodb.cc	/^ha_innobase::extra($/;"	f	class:ha_innobase
extra	handler/ha_innopart.cc	/^ha_innopart::extra($/;"	f	class:ha_innopart
f_len	include/fts0fts.h	/^	ulint		f_len;		\/*!< Length of the string in bytes *\/$/;"	m	struct:fts_string_t
f_n_char	include/fts0fts.h	/^	ulint		f_n_char;	\/*!< Number of characters *\/$/;"	m	struct:fts_string_t
f_str	include/fts0fts.h	/^	byte*		f_str;		\/*!< string, not necessary terminated in$/;"	m	struct:fts_string_t
failure	include/dict0mem.h	/^	ulint		failure;\/*!< failed compression ops during$/;"	m	struct:zip_pad_info_t
fast	include/ut0counter.h	/^	enum { fast = 0 };$/;"	e	enum:single_indexer_t::__anon6
fast	include/ut0counter.h	/^	enum { fast = 1 };$/;"	e	enum:counter_indexer_t::__anon5
fatal	include/ut0ut.h	/^class fatal : public logger {$/;"	c	namespace:ib
fatal_or_error	include/ut0ut.h	/^	fatal_or_error(bool	pred)$/;"	f	class:ib::fatal_or_error
fatal_or_error	include/ut0ut.h	/^class fatal_or_error : public logger {$/;"	c	namespace:ib
fclass	include/pars0pars.h	/^	ulint		fclass;	\/*!< class of the function *\/$/;"	m	struct:func_node_t
fd	include/row0merge.h	/^	int		fd;		\/*!< file descriptor *\/$/;"	m	struct:merge_file_t
fd	row/row0log.cc	/^	int		fd;	\/*!< file descriptor *\/$/;"	m	struct:row_log_t	file:
fd_del	include/gis0type.h	/^	bool		fd_del;	\/*!< found deleted row *\/$/;"	m	struct:rtr_info
fetch_cache	include/row0mysql.h	/^	byte*		fetch_cache[MYSQL_FETCH_CACHE_SIZE];$/;"	m	struct:row_prebuilt_t
fetch_cache_first	include/row0mysql.h	/^	ulint		fetch_cache_first;\/*!< position of the first not yet$/;"	m	struct:row_prebuilt_t
fetch_data_into_cache	trx/trx0i_s.cc	/^fetch_data_into_cache($/;"	f	file:
fetch_data_into_cache_low	trx/trx0i_s.cc	/^fetch_data_into_cache_low($/;"	f	file:
fetch_direction	include/row0mysql.h	/^	ulint		fetch_direction;\/*!< ROW_SEL_NEXT or ROW_SEL_PREV *\/$/;"	m	struct:row_prebuilt_t
fetch_lock_wait_timeout	srv/srv0srv.cc	493;"	d	file:
fetch_node_t	include/row0sel.h	/^struct fetch_node_t{$/;"	s
fetch_step	row/row0sel.cc	/^fetch_step($/;"	f
fetch_table	include/row0sel.h	/^	ulint		fetch_table;	\/*!< number of the next table to access$/;"	m	struct:sel_node_t
field	include/row0ftsort.h	/^	dfield_t*	field;		\/*!< field contains document string *\/$/;"	m	struct:fts_doc_item
field_def	include/dict0crea.h	/^	ins_node_t*	field_def;	\/*!< child node which does the inserts$/;"	m	struct:ind_node_t
field_len	include/btr0types.h	/^	ulint			field_len;$/;"	m	struct:btr_create_t
field_len	include/page0types.h	/^	ulint		field_len;	\/*!< the length of index field *\/$/;"	m	struct:redo_page_compress_t
field_no	include/data0data.h	/^	ulint		field_no;	\/*!< field number in record *\/$/;"	m	struct:big_rec_field_t
field_no	include/dict0crea.h	/^	ulint		field_no;	\/* next field definition to insert *\/$/;"	m	struct:ind_node_t
field_no	include/row0upd.h	/^	unsigned	field_no:16;	\/*!< field number in an index, usually$/;"	m	struct:upd_field_t
field_nos	include/pars0sym.h	/^	ulint				field_nos[2];	\/*!< if a column, in$/;"	m	struct:sym_node_t
field_ref_zero	page/page0zip.cc	/^const byte field_ref_zero[FIELD_REF_SIZE] = {$/;"	v
field_store_index_name	handler/i_s.cc	/^field_store_index_name($/;"	f	file:
field_store_string	handler/i_s.cc	/^field_store_string($/;"	f	file:
field_store_time_t	handler/i_s.cc	/^field_store_time_t($/;"	f	file:
field_store_ulint	handler/i_s.cc	/^field_store_ulint($/;"	f	file:
fields	include/btr0types.h	/^	const byte* const	fields;$/;"	m	struct:btr_create_t
fields	include/data0data.h	/^	big_rec_field_t*fields;		\/*!< stored fields *\/$/;"	m	struct:big_rec_t
fields	include/data0data.h	/^	dfield_t*	fields;		\/*!< fields *\/$/;"	m	struct:dtuple_t
fields	include/dict0mem.h	/^	dict_field_t*	fields;	\/*!< array of field descriptions *\/$/;"	m	struct:dict_index_t
fields	include/page0types.h	/^	const byte*	fields;		\/*!< index field information *\/$/;"	m	struct:redo_page_compress_t
fields	include/row0merge.h	/^	dfield_t*	fields;		\/*!< data fields *\/$/;"	m	struct:mtuple_t
fields	include/row0merge.h	/^	index_field_t*	fields;		\/*!< field definitions *\/$/;"	m	struct:index_def_t
fields	include/row0upd.h	/^	upd_field_t*	fields;		\/*!< array of update fields *\/$/;"	m	struct:upd_t
fields_t	include/row0trunc.h	/^		typedef std::vector<byte, ut_allocator<byte> >	fields_t;$/;"	t	struct:truncate_t::index_t
fil0fil_h	include/fil0fil.h	27;"	d
fil_addr_is_null	fil/fil0fil.cc	/^fil_addr_is_null($/;"	f
fil_addr_null	fil/fil0fil.cc	/^fil_addr_t	fil_addr_null = {FIL_NULL, 0};$/;"	v
fil_addr_t	include/fil0fil.h	/^struct fil_addr_t {$/;"	s
fil_aio_wait	fil/fil0fil.cc	/^fil_aio_wait($/;"	f
fil_assign_new_space_id	fil/fil0fil.cc	/^fil_assign_new_space_id($/;"	f
fil_block_check_type	include/fil0fil.h	1345;"	d
fil_buf_block_init	fil/fil0fil.cc	/^fil_buf_block_init($/;"	f	file:
fil_buffering_disabled	fil/fil0fil.cc	219;"	d	file:
fil_buffering_disabled	fil/fil0fil.cc	224;"	d	file:
fil_check_pending_io	fil/fil0fil.cc	/^fil_check_pending_io($/;"	f	file:
fil_check_pending_operations	fil/fil0fil.cc	/^fil_check_pending_operations($/;"	f	file:
fil_check_pending_ops	fil/fil0fil.cc	/^fil_check_pending_ops($/;"	f	file:
fil_close	fil/fil0fil.cc	/^fil_close(void)$/;"	f
fil_close_all_files	fil/fil0fil.cc	/^fil_close_all_files(void)$/;"	f
fil_close_log_files	fil/fil0fil.cc	/^fil_close_log_files($/;"	f
fil_close_tablespace	fil/fil0fil.cc	/^fil_close_tablespace($/;"	f
fil_create_directory_for_tablename	fil/fil0fil.cc	/^fil_create_directory_for_tablename($/;"	f
fil_delete_file	fil/fil0fil.cc	/^fil_delete_file($/;"	f
fil_delete_tablespace	fil/fil0fil.cc	/^fil_delete_tablespace($/;"	f
fil_discard_tablespace	fil/fil0fil.cc	/^fil_discard_tablespace($/;"	f
fil_encryption_rotate	fil/fil0fil.cc	/^fil_encryption_rotate()$/;"	f
fil_extend_tablespaces_to_stored_len	fil/fil0fil.cc	/^fil_extend_tablespaces_to_stored_len(void)$/;"	f
fil_faddr_t	include/fil0fil.h	/^typedef	byte	fil_faddr_t;	\/*!< 'type' definition in C: an address$/;"	t
fil_file_readdir_next_file	fil/fil0fil.cc	/^fil_file_readdir_next_file($/;"	f
fil_flush	fil/fil0fil.cc	/^fil_flush($/;"	f
fil_flush_file_spaces	fil/fil0fil.cc	/^fil_flush_file_spaces($/;"	f
fil_fusionio_enable_atomic_write	fil/fil0fil.cc	/^fil_fusionio_enable_atomic_write(pfs_os_file_t file)$/;"	f
fil_get_compression	fil/fil0fil.cc	/^fil_get_compression($/;"	f
fil_get_space_names	fil/fil0fil.cc	/^fil_get_space_names($/;"	f
fil_ibd_create	fil/fil0fil.cc	/^fil_ibd_create($/;"	f
fil_ibd_discover	fil/fil0fil.cc	/^fil_ibd_discover($/;"	f
fil_ibd_load	fil/fil0fil.cc	/^fil_ibd_load($/;"	f
fil_ibd_open	fil/fil0fil.cc	/^fil_ibd_open($/;"	f
fil_init	fil/fil0fil.cc	/^fil_init($/;"	f
fil_io	fil/fil0fil.cc	/^fil_io($/;"	f
fil_io_set_encryption	fil/fil0fil.cc	/^fil_io_set_encryption($/;"	f
fil_is_user_tablespace_id	fil/fil0fil.cc	/^fil_is_user_tablespace_id($/;"	f
fil_iterate	fil/fil0fil.cc	/^fil_iterate($/;"	f	file:
fil_iterator_t	fil/fil0fil.cc	/^struct fil_iterator_t {$/;"	s	file:
fil_load_status	include/fil0fil.h	/^enum fil_load_status {$/;"	g
fil_make_filepath	fil/fil0fil.cc	/^fil_make_filepath($/;"	f
fil_make_ibbackup_old_name	fil/fil0fil.cc	/^fil_make_ibbackup_old_name($/;"	f	file:
fil_mtr_rename_log	fil/fil0fil.cc	/^fil_mtr_rename_log($/;"	f
fil_mutex_enter_and_prepare_for_io	fil/fil0fil.cc	/^fil_mutex_enter_and_prepare_for_io($/;"	f	file:
fil_n_file_opened	fil/fil0fil.cc	/^ulint	fil_n_file_opened			= 0;$/;"	v
fil_n_log_flushes	fil/fil0fil.cc	/^ulint	fil_n_log_flushes			= 0;$/;"	v
fil_n_pending_log_flushes	fil/fil0fil.cc	/^ulint	fil_n_pending_log_flushes		= 0;$/;"	v
fil_n_pending_tablespace_flushes	fil/fil0fil.cc	/^ulint	fil_n_pending_tablespace_flushes	= 0;$/;"	v
fil_name_parse	log/log0recv.cc	/^fil_name_parse($/;"	f	file:
fil_name_process	log/log0recv.cc	/^fil_name_process($/;"	f
fil_name_process	log/log0recv.cc	/^fil_name_process($/;"	f	file:
fil_name_write	fil/fil0fil.cc	/^fil_name_write($/;"	f	file:
fil_name_write_rename	fil/fil0fil.cc	/^fil_name_write_rename($/;"	f	file:
fil_names_clear	fil/fil0fil.cc	/^fil_names_clear($/;"	f
fil_names_dirty	fil/fil0fil.cc	/^fil_names_dirty($/;"	f
fil_names_dirty_and_write	fil/fil0fil.cc	/^fil_names_dirty_and_write($/;"	f
fil_names_write	fil/fil0fil.cc	/^fil_names_write($/;"	f	file:
fil_names_write_if_was_clean	include/fil0fil.h	/^fil_names_write_if_was_clean($/;"	f
fil_no_punch_hole	fil/fil0fil.cc	/^fil_no_punch_hole(fil_node_t* node)$/;"	f
fil_node_close_file	fil/fil0fil.cc	/^fil_node_close_file($/;"	f	file:
fil_node_close_to_free	fil/fil0fil.cc	/^fil_node_close_to_free($/;"	f	file:
fil_node_complete_io	fil/fil0fil.cc	/^fil_node_complete_io($/;"	f	file:
fil_node_create	fil/fil0fil.cc	/^fil_node_create($/;"	f
fil_node_create_low	fil/fil0fil.cc	/^fil_node_create_low($/;"	f	file:
fil_node_next	fil/fil0fil.cc	/^fil_node_next($/;"	f
fil_node_open_file	fil/fil0fil.cc	/^fil_node_open_file($/;"	f	file:
fil_node_prepare_for_io	fil/fil0fil.cc	/^fil_node_prepare_for_io($/;"	f	file:
fil_node_t	include/fil0fil.h	/^struct fil_node_t {$/;"	s
fil_op_replay_rename	fil/fil0fil.cc	/^fil_op_replay_rename($/;"	f
fil_op_write_log	fil/fil0fil.cc	/^fil_op_write_log($/;"	f	file:
fil_open_log_and_system_tablespace_files	fil/fil0fil.cc	/^fil_open_log_and_system_tablespace_files(void)$/;"	f
fil_operation_t	fil/fil0fil.cc	/^enum fil_operation_t {$/;"	g	file:
fil_page_check_type	include/fil0fil.h	/^fil_page_check_type($/;"	f
fil_page_get_next	fil/fil0fil.cc	/^fil_page_get_next($/;"	f
fil_page_get_prev	fil/fil0fil.cc	/^fil_page_get_prev($/;"	f
fil_page_get_type	include/fil0fil.h	/^fil_page_get_type($/;"	f
fil_page_index_page_check	include/fil0fil.h	559;"	d
fil_page_reset_type	fil/fil0fil.cc	/^fil_page_reset_type($/;"	f
fil_page_set_type	fil/fil0fil.cc	/^fil_page_set_type($/;"	f
fil_page_type_is_index	include/fil0fil.h	554;"	d
fil_path_to_mysql_datadir	fil/fil0fil.cc	/^const char*	fil_path_to_mysql_datadir;$/;"	v
fil_path_to_space_name	fil/fil0fil.cc	/^fil_path_to_space_name($/;"	f
fil_prepare_for_truncate	fil/fil0fil.cc	/^fil_prepare_for_truncate($/;"	f
fil_read	fil/fil0fil.cc	/^fil_read($/;"	f
fil_recreate_table	fil/fil0fil.cc	/^fil_recreate_table($/;"	f
fil_recreate_tablespace	fil/fil0fil.cc	/^fil_recreate_tablespace($/;"	f
fil_reinit_space_header_for_table	fil/fil0fil.cc	/^fil_reinit_space_header_for_table($/;"	f
fil_rename_tablespace	fil/fil0fil.cc	/^fil_rename_tablespace($/;"	f
fil_rename_tablespace_check	fil/fil0fil.cc	/^fil_rename_tablespace_check($/;"	f
fil_report_invalid_page_access	fil/fil0fil.cc	/^fil_report_invalid_page_access($/;"	f	file:
fil_report_missing_tablespace	fil/fil0fil.cc	/^fil_report_missing_tablespace($/;"	f	file:
fil_set_compression	fil/fil0fil.cc	/^fil_set_compression($/;"	f
fil_set_encryption	fil/fil0fil.cc	/^fil_set_encryption($/;"	f
fil_set_max_space_id_if_bigger	fil/fil0fil.cc	/^fil_set_max_space_id_if_bigger($/;"	f
fil_space_acquire	fil/fil0fil.cc	/^fil_space_acquire($/;"	f
fil_space_acquire_low	fil/fil0fil.cc	/^fil_space_acquire_low($/;"	f
fil_space_acquire_silent	fil/fil0fil.cc	/^fil_space_acquire_silent($/;"	f
fil_space_belongs_in_lru	fil/fil0fil.cc	/^fil_space_belongs_in_lru($/;"	f
fil_space_close	fil/fil0fil.cc	/^fil_space_close($/;"	f
fil_space_create	fil/fil0fil.cc	/^fil_space_create($/;"	f
fil_space_dec_redo_skipped_count	fil/fil0fil.cc	/^fil_space_dec_redo_skipped_count($/;"	f
fil_space_detach	fil/fil0fil.cc	/^fil_space_detach($/;"	f	file:
fil_space_extend	fil/fil0fil.cc	/^fil_space_extend($/;"	f
fil_space_for_table_exists_in_mem	fil/fil0fil.cc	/^fil_space_for_table_exists_in_mem($/;"	f
fil_space_free	fil/fil0fil.cc	/^fil_space_free($/;"	f
fil_space_free_low	fil/fil0fil.cc	/^fil_space_free_low($/;"	f	file:
fil_space_get	fil/fil0fil.cc	/^fil_space_get($/;"	f
fil_space_get_by_id	fil/fil0fil.cc	/^fil_space_get_by_id($/;"	f
fil_space_get_by_name	fil/fil0fil.cc	/^fil_space_get_by_name($/;"	f
fil_space_get_first_path	fil/fil0fil.cc	/^fil_space_get_first_path($/;"	f
fil_space_get_flags	fil/fil0fil.cc	/^fil_space_get_flags($/;"	f
fil_space_get_id_by_name	fil/fil0fil.cc	/^fil_space_get_id_by_name($/;"	f
fil_space_get_latch	fil/fil0fil.cc	/^fil_space_get_latch($/;"	f
fil_space_get_n_reserved_extents	fil/fil0fil.cc	/^fil_space_get_n_reserved_extents($/;"	f
fil_space_get_page_size	fil/fil0fil.cc	/^fil_space_get_page_size($/;"	f
fil_space_get_size	fil/fil0fil.cc	/^fil_space_get_size($/;"	f
fil_space_get_space	fil/fil0fil.cc	/^fil_space_get_space($/;"	f
fil_space_get_type	fil/fil0fil.cc	/^fil_space_get_type($/;"	f
fil_space_inc_redo_skipped_count	fil/fil0fil.cc	/^fil_space_inc_redo_skipped_count($/;"	f
fil_space_is_being_truncated	fil/fil0fil.cc	/^fil_space_is_being_truncated($/;"	f
fil_space_is_flushed	fil/fil0fil.cc	/^fil_space_is_flushed($/;"	f	file:
fil_space_is_redo_skipped	fil/fil0fil.cc	/^fil_space_is_redo_skipped($/;"	f
fil_space_latch_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fil_space_latch_key;$/;"	v
fil_space_open	fil/fil0fil.cc	/^fil_space_open($/;"	f
fil_space_open_if_needed	include/fil0fil.h	/^fil_space_open_if_needed($/;"	f
fil_space_read_name_and_filepath	fil/fil0fil.cc	/^fil_space_read_name_and_filepath($/;"	f
fil_space_release	fil/fil0fil.cc	/^fil_space_release($/;"	f
fil_space_release_free_extents	fil/fil0fil.cc	/^fil_space_release_free_extents($/;"	f
fil_space_reserve_free_extents	fil/fil0fil.cc	/^fil_space_reserve_free_extents($/;"	f
fil_space_set_imported	fil/fil0fil.cc	/^fil_space_set_imported($/;"	f
fil_space_t	include/fil0fil.h	/^struct fil_space_t {$/;"	s
fil_space_validate_for_mtr_commit	fil/fil0fil.cc	/^fil_space_validate_for_mtr_commit($/;"	f	file:
fil_system	fil/fil0fil.cc	/^static fil_system_t*	fil_system	= NULL;$/;"	v	file:
fil_system_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fil_system_mutex_key;$/;"	v
fil_system_t	fil/fil0fil.cc	/^struct fil_system_t {$/;"	s	file:
fil_tablespace_iterate	fil/fil0fil.cc	/^fil_tablespace_iterate($/;"	f
fil_truncate_tablespace	fil/fil0fil.cc	/^fil_truncate_tablespace($/;"	f
fil_try_to_close_file_in_LRU	fil/fil0fil.cc	/^fil_try_to_close_file_in_LRU($/;"	f	file:
fil_type_is_data	include/fil0fil.h	/^fil_type_is_data($/;"	f
fil_type_t	include/fil0fil.h	/^enum fil_type_t {$/;"	g
fil_validate	fil/fil0fil.cc	/^fil_validate(void)$/;"	f
fil_validate_skip	fil/fil0fil.cc	/^fil_validate_skip(void)$/;"	f	file:
fil_write	fil/fil0fil.cc	/^fil_write($/;"	f
fil_write_encryption_parse	log/log0recv.cc	/^fil_write_encryption_parse($/;"	f	file:
fil_write_flushed_lsn	fil/fil0fil.cc	/^fil_write_flushed_lsn($/;"	f
fil_write_zeros	fil/fil0fil.cc	/^fil_write_zeros($/;"	f	file:
file	fil/fil0fil.cc	/^	pfs_os_file_t	file;			\/*!< File handle *\/$/;"	m	struct:fil_iterator_t	file:
file	os/os0file.cc	/^	pfs_os_file_t		file;$/;"	m	struct:Slot	file:
file	sync/sync0arr.cc	/^	const char*	file;		\/*!< in debug version file where$/;"	m	struct:sync_cell_t	file:
file_format_max	trx/trx0sys.cc	/^static	file_format_t	file_format_max;$/;"	v	file:
file_format_max_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	file_format_max_mutex_key;$/;"	v
file_format_name_map	trx/trx0sys.cc	/^static const char*	file_format_name_map[] = {$/;"	v	file:
file_format_t	trx/trx0sys.cc	/^struct file_format_t {$/;"	s	file:
file_found	fsp/fsp0space.cc	/^Tablespace::file_found(Datafile& file)$/;"	f	class:Tablespace
file_found	fsp/fsp0sysspace.cc	/^SysTablespace::file_found($/;"	f	class:SysTablespace
file_header_bufs	include/log0log.h	/^	byte**				file_header_bufs;$/;"	m	struct:log_group_t
file_header_bufs_ptr	include/log0log.h	/^	byte**				file_header_bufs_ptr;$/;"	m	struct:log_group_t
file_name	include/mem0mem.h	/^	char	file_name[8];\/* file name where the mem heap was created *\/$/;"	m	struct:mem_block_info_t
file_name	include/sync0rw.h	/^	const char*	file_name;\/*!< File name where the lock was obtained *\/$/;"	m	struct:rw_lock_debug_t
file_name_t	log/log0recv.cc	/^	file_name_t(std::string name_, bool deleted_) :$/;"	f	struct:file_name_t
file_name_t	log/log0recv.cc	/^struct file_name_t {$/;"	s	file:
file_not_found	fsp/fsp0sysspace.cc	/^SysTablespace::file_not_found($/;"	f	class:SysTablespace
file_page_was_freed	include/buf0buf.h	/^	ibool		file_page_was_freed;$/;"	m	class:buf_page_t
file_size	fil/fil0fil.cc	/^	os_offset_t	file_size;		\/*!< File size in bytes *\/$/;"	m	struct:fil_iterator_t	file:
file_size	include/log0log.h	/^	lsn_t				file_size$/;"	m	struct:log_group_t
file_status_t	include/fsp0sysspace.h	/^	enum file_status_t {$/;"	g	class:SysTablespace
filepath	fil/fil0fil.cc	/^	const char*	filepath;		\/*!< File path name *\/$/;"	m	struct:fil_iterator_t	file:
filepath	include/fsp0file.h	/^	const char*	filepath()	const$/;"	f	class:Datafile
files	srv/srv0start.cc	/^static pfs_os_file_t	files[1000];$/;"	v	file:
files_t	include/fsp0space.h	/^	typedef std::vector<Datafile, ut_allocator<Datafile> >	files_t;$/;"	t	class:Tablespace
fill_innodb_lock_waits_from_cache	handler/i_s.cc	/^fill_innodb_lock_waits_from_cache($/;"	f	file:
fill_innodb_locks_from_cache	handler/i_s.cc	/^fill_innodb_locks_from_cache($/;"	f	file:
fill_innodb_trx_from_cache	handler/i_s.cc	/^fill_innodb_trx_from_cache($/;"	f	file:
fill_lock_data	trx/trx0i_s.cc	/^fill_lock_data($/;"	f	file:
fill_lock_waits_row	trx/trx0i_s.cc	/^fill_lock_waits_row($/;"	f	file:
fill_locks_row	trx/trx0i_s.cc	/^fill_locks_row($/;"	f	file:
fill_trx_row	trx/trx0i_s.cc	/^fill_trx_row($/;"	f	file:
find	fsp/fsp0space.cc	/^Tablespace::find(const char* filename)$/;"	f	class:Tablespace
find	include/dyn0buf.h	/^	block_t* find(ulint& pos)$/;"	f	class:dyn_buf_t
find	row/row0trunc.cc	/^	const dict_index_t* find(index_id_t id) const$/;"	f	class:TruncateLogger	file:
find_completed_slot	os/os0file.cc	/^LinuxAIOHandler::find_completed_slot(ulint* n_pending)$/;"	f	class:LinuxAIOHandler
find_page	log/log0recv.cc	/^recv_dblwr_t::find_page(ulint space_id, ulint page_no)$/;"	f	class:recv_dblwr_t
find_space_id	fsp/fsp0file.cc	/^Datafile::find_space_id()$/;"	f	class:Datafile
finish	btr/btr0bulk.cc	/^BtrBulk::finish(dberr_t	err)$/;"	f	class:BtrBulk
finish	btr/btr0bulk.cc	/^PageBulk::finish()$/;"	f	class:PageBulk
finish_write	mtr/mtr0mtr.cc	/^mtr_t::Command::finish_write($/;"	f	class:mtr_t::Command
first	include/ut0list.h	/^	ib_list_node_t*		first;		\/*!< first node *\/$/;"	m	struct:ib_list_t
first_datafile	include/fsp0space.h	/^	Datafile* first_datafile()$/;"	f	class:Tablespace
first_doc_id	include/fts0types.h	/^	doc_id_t	first_doc_id;	\/*!< First document id in ilist. *\/$/;"	m	struct:fts_node_t
first_doc_id	include/fts0types.h	/^	doc_id_t	first_doc_id;	\/*!< first doc id since this table$/;"	m	struct:fts_cache_t
first_free	include/buf0dblwr.h	/^	ulint		first_free;\/*!< first free position in write_buf$/;"	m	struct:buf_dblwr_t
first_free_slot	sync/sync0arr.cc	/^	first_free_slot()$/;"	f
first_free_slot	sync/sync0arr.cc	/^	ulint           first_free_slot;\/*!< the last slot that was freed *\/$/;"	m	struct:sync_array_t	file:
first_in_use	include/log0log.h	/^	bool		first_in_use;	\/*!< true if buf points to the first$/;"	m	struct:log_t
first_prefetched	include/row0sel.h	/^	ulint		first_prefetched;\/*!< index of the first cached row in$/;"	m	struct:plan_t
fix_count	handler/i_s.cc	/^	unsigned	fix_count:19;	\/*!< Count of how manyfold this block$/;"	m	struct:buf_page_info_t	file:
fixed_len	include/dict0mem.h	/^	unsigned	fixed_len:10;	\/*!< 0 or the fixed length of the$/;"	m	struct:dict_field_t
fixed_len_key	include/dict0mem.h	/^	bool		fixed_len_key;$/;"	m	class:rec_cache_t
fixup_tables_in_non_system_tablespace	row/row0trunc.cc	/^truncate_t::fixup_tables_in_non_system_tablespace()$/;"	f	class:truncate_t
fixup_tables_in_system_tablespace	row/row0trunc.cc	/^truncate_t::fixup_tables_in_system_tablespace()$/;"	f	class:truncate_t
fk_cascade_depth	include/que0que.h	/^	ulint		fk_cascade_depth; \/*!< maximum cascading call depth$/;"	m	struct:que_thr_t
fk_max_recusive_level	include/dict0mem.h	/^	unsigned				fk_max_recusive_level:8;$/;"	m	struct:dict_table_t
flag	include/btr0cur.h	/^	enum btr_cur_method	flag;	\/*!< Search method used *\/$/;"	m	struct:btr_cur_t	typeref:enum:btr_cur_t::btr_cur_method
flags	fts/fts0que.cc	/^	ulint		flags;		\/*!< Specify the full text search type,$/;"	m	struct:fts_query_t	file:
flags	handler/ha_innodb.h	/^	ulint flags() const$/;"	f	class:create_table_info_t
flags	include/dict0mem.h	/^	unsigned				flags:DICT_TF_BITS;$/;"	m	struct:dict_table_t
flags	include/fil0fil.h	/^	ulint		flags;	\/*!< tablespace flags; see$/;"	m	struct:fil_space_t
flags	include/fsp0file.h	/^	ulint	flags()	const$/;"	f	class:Datafile
flags	include/fsp0space.h	/^	ulint flags()	const$/;"	f	class:Tablespace
flags2	handler/ha_innodb.h	/^	ulint flags2() const$/;"	f	class:create_table_info_t
flags2	include/dict0mem.h	/^	unsigned				flags2:DICT_TF2_BITS;$/;"	m	struct:dict_table_t
flags2	row/row0import.cc	/^	ib_uint32_t	flags2;			\/*!< Value read from column *\/$/;"	m	struct:discard_t	file:
flex_int16_t	fts/fts0blex.cc	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	fts/fts0blex.cc	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int16_t	fts/fts0tlex.cc	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	fts/fts0tlex.cc	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int16_t	include/fts0blex.h	/^typedef int16_t flex_int16_t;$/;"	t
flex_int16_t	include/fts0blex.h	/^typedef short int flex_int16_t;$/;"	t
flex_int16_t	include/fts0tlex.h	/^typedef int16_t flex_int16_t;$/;"	t
flex_int16_t	include/fts0tlex.h	/^typedef short int flex_int16_t;$/;"	t
flex_int16_t	pars/lexyy.cc	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	pars/lexyy.cc	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	fts/fts0blex.cc	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	fts/fts0blex.cc	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int32_t	fts/fts0tlex.cc	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	fts/fts0tlex.cc	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int32_t	include/fts0blex.h	/^typedef int flex_int32_t;$/;"	t
flex_int32_t	include/fts0blex.h	/^typedef int32_t flex_int32_t;$/;"	t
flex_int32_t	include/fts0tlex.h	/^typedef int flex_int32_t;$/;"	t
flex_int32_t	include/fts0tlex.h	/^typedef int32_t flex_int32_t;$/;"	t
flex_int32_t	pars/lexyy.cc	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	pars/lexyy.cc	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	fts/fts0blex.cc	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	fts/fts0blex.cc	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_int8_t	fts/fts0tlex.cc	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	fts/fts0tlex.cc	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_int8_t	include/fts0blex.h	/^typedef int8_t flex_int8_t;$/;"	t
flex_int8_t	include/fts0blex.h	/^typedef signed char flex_int8_t;$/;"	t
flex_int8_t	include/fts0tlex.h	/^typedef int8_t flex_int8_t;$/;"	t
flex_int8_t	include/fts0tlex.h	/^typedef signed char flex_int8_t;$/;"	t
flex_int8_t	pars/lexyy.cc	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	pars/lexyy.cc	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	fts/fts0blex.cc	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	fts/fts0blex.cc	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint16_t	fts/fts0tlex.cc	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	fts/fts0tlex.cc	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint16_t	include/fts0blex.h	/^typedef uint16_t flex_uint16_t;$/;"	t
flex_uint16_t	include/fts0blex.h	/^typedef unsigned short int flex_uint16_t;$/;"	t
flex_uint16_t	include/fts0tlex.h	/^typedef uint16_t flex_uint16_t;$/;"	t
flex_uint16_t	include/fts0tlex.h	/^typedef unsigned short int flex_uint16_t;$/;"	t
flex_uint16_t	pars/lexyy.cc	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	pars/lexyy.cc	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	fts/fts0blex.cc	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	fts/fts0blex.cc	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint32_t	fts/fts0tlex.cc	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	fts/fts0tlex.cc	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint32_t	include/fts0blex.h	/^typedef uint32_t flex_uint32_t;$/;"	t
flex_uint32_t	include/fts0blex.h	/^typedef unsigned int flex_uint32_t;$/;"	t
flex_uint32_t	include/fts0tlex.h	/^typedef uint32_t flex_uint32_t;$/;"	t
flex_uint32_t	include/fts0tlex.h	/^typedef unsigned int flex_uint32_t;$/;"	t
flex_uint32_t	pars/lexyy.cc	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	pars/lexyy.cc	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	fts/fts0blex.cc	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	fts/fts0blex.cc	/^typedef unsigned char flex_uint8_t;$/;"	t	file:
flex_uint8_t	fts/fts0tlex.cc	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	fts/fts0tlex.cc	/^typedef unsigned char flex_uint8_t;$/;"	t	file:
flex_uint8_t	include/fts0blex.h	/^typedef uint8_t flex_uint8_t;$/;"	t
flex_uint8_t	include/fts0blex.h	/^typedef unsigned char flex_uint8_t; $/;"	t
flex_uint8_t	include/fts0tlex.h	/^typedef uint8_t flex_uint8_t;$/;"	t
flex_uint8_t	include/fts0tlex.h	/^typedef unsigned char flex_uint8_t; $/;"	t
flex_uint8_t	pars/lexyy.cc	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	pars/lexyy.cc	/^typedef unsigned char flex_uint8_t;$/;"	t	file:
flst_add_first	fut/fut0lst.cc	/^flst_add_first($/;"	f
flst_add_last	fut/fut0lst.cc	/^flst_add_last($/;"	f
flst_add_to_empty	fut/fut0lst.cc	/^flst_add_to_empty($/;"	f	file:
flst_base_node_t	include/fut0lst.h	/^typedef	byte	flst_base_node_t;$/;"	t
flst_get_first	include/fut0lst.ic	/^flst_get_first($/;"	f
flst_get_last	include/fut0lst.ic	/^flst_get_last($/;"	f
flst_get_len	include/fut0lst.ic	/^flst_get_len($/;"	f
flst_get_next_addr	include/fut0lst.ic	/^flst_get_next_addr($/;"	f
flst_get_prev_addr	include/fut0lst.ic	/^flst_get_prev_addr($/;"	f
flst_init	include/fut0lst.ic	/^flst_init($/;"	f
flst_insert_after	fut/fut0lst.cc	/^flst_insert_after($/;"	f
flst_insert_before	fut/fut0lst.cc	/^flst_insert_before($/;"	f
flst_node_t	include/fut0lst.h	/^typedef	byte	flst_node_t;$/;"	t
flst_print	fut/fut0lst.cc	/^flst_print($/;"	f
flst_read_addr	include/fut0lst.ic	/^flst_read_addr($/;"	f
flst_remove	fut/fut0lst.cc	/^flst_remove($/;"	f
flst_validate	fut/fut0lst.cc	/^flst_validate($/;"	f
flst_write_addr	include/fut0lst.ic	/^flst_write_addr($/;"	f
flush	buf/buf0flu.cc	/^FlushObserver::flush()$/;"	f	class:FlushObserver
flush_counter	include/fil0fil.h	/^	int64_t		flush_counter;$/;"	m	struct:fil_node_t
flush_end	include/log0recv.h	/^	os_event_t		flush_end;\/*!< event to signal that the page$/;"	m	struct:recv_sys_t
flush_event	include/log0log.h	/^	os_event_t	flush_event;	\/*!< this event is in the reset state$/;"	m	struct:log_t
flush_hp	include/buf0buf.h	/^	FlushHp			flush_hp;\/*!< "hazard pointer"$/;"	m	struct:buf_pool_t
flush_list	include/buf0buf.h	/^	UT_LIST_BASE_NODE_T(buf_page_t) flush_list;$/;"	m	struct:buf_pool_t
flush_list_bytes	include/buf0buf.h	/^	ulint	flush_list_bytes;	\/*!< flush_list size in bytes *\/$/;"	m	struct:buf_pools_list_size_t
flush_list_bytes	include/buf0buf.h	/^	ulint	flush_list_bytes;\/*!< flush_list size in bytes *\/$/;"	m	struct:buf_pool_stat_t
flush_list_len	include/buf0buf.h	/^	ulint	flush_list_len;		\/*!< Length of buf_pool->flush_list *\/$/;"	m	struct:buf_pool_info_t
flush_list_mutex	include/buf0buf.h	/^	FlushListMutex	flush_list_mutex;\/*!< mutex protecting the$/;"	m	struct:buf_pool_t
flush_list_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	flush_list_mutex_key;$/;"	v
flush_list_pass	buf/buf0flu.cc	/^	ulint			flush_list_pass;$/;"	m	struct:page_cleaner_slot_t	file:
flush_list_time	buf/buf0flu.cc	/^	ulint			flush_list_time;$/;"	m	struct:page_cleaner_slot_t	file:
flush_log_later	include/trx0trx.h	/^	bool		flush_log_later;\/* In 2PC, we hold the$/;"	m	struct:trx_t
flush_lru_pass	buf/buf0flu.cc	/^	ulint			flush_lru_pass;$/;"	m	struct:page_cleaner_slot_t	file:
flush_lru_time	buf/buf0flu.cc	/^	ulint			flush_lru_time;$/;"	m	struct:page_cleaner_slot_t	file:
flush_observer	include/buf0buf.h	/^	FlushObserver*	flush_observer;	\/*!< flush observer *\/$/;"	m	class:buf_page_t
flush_observer	include/trx0trx.h	/^	FlushObserver*	flush_observer;	\/*!< flush observer *\/$/;"	m	struct:trx_t
flush_pass	buf/buf0flu.cc	/^	ulint			flush_pass;	\/*!< count to finish to flush$/;"	m	struct:page_cleaner_t	file:
flush_rbt	include/buf0buf.h	/^	ib_rbt_t*	flush_rbt;	\/*!< a red-black tree is used$/;"	m	struct:buf_pool_t
flush_start	include/log0recv.h	/^	os_event_t		flush_start;\/*!< event to acticate$/;"	m	struct:recv_sys_t
flush_tables	include/trx0trx.h	/^	ib_uint32_t	flush_tables;	\/*!< if "covering" the FLUSH TABLES",$/;"	m	struct:trx_t
flush_time	buf/buf0flu.cc	/^	ulint			flush_time;	\/*!< elapsed time to flush$/;"	m	struct:page_cleaner_t	file:
flush_type	handler/i_s.cc	/^	unsigned	flush_type:2;	\/*!< Flush type *\/$/;"	m	struct:buf_page_info_t	file:
flush_type	include/log0recv.h	/^	buf_flush_t		flush_type;\/*!< type of the flush request.$/;"	m	struct:recv_sys_t
flushed_to_disk_lsn	include/log0log.h	/^	lsn_t		flushed_to_disk_lsn;$/;"	m	struct:log_t
fold	include/btr0cur.h	/^	ulint		fold;		\/*!< fold value used in the search if$/;"	m	struct:btr_cur_t
fold	include/buf0buf.h	/^	inline ulint fold() const$/;"	f	class:page_id_t
fold	include/ha0ha.h	/^	ulint		fold;	\/*!< fold value for the data *\/$/;"	m	struct:ha_node_t
fold	include/lock0priv.h	/^	ulint fold() const$/;"	f	struct:RecID
fold_lock	trx/trx0i_s.cc	/^fold_lock($/;"	f	file:
folder_mysql_datadir	fil/fil0fil.cc	/^Folder		folder_mysql_datadir;$/;"	v
for_each	row/row0trunc.cc	/^	dberr_t for_each(Callback& callback) const$/;"	f	class:SysIndexIterator
for_each	row/row0trunc.cc	/^	dberr_t for_each(Callback& callback)$/;"	f	class:IndexIterator
for_each_block	include/dyn0buf.h	/^	bool for_each_block(Functor& functor) const$/;"	f	class:dyn_buf_t
for_each_block_in_reverse	include/dyn0buf.h	/^	bool for_each_block_in_reverse(Functor& functor) const$/;"	f	class:dyn_buf_t
for_node_t	include/pars0pars.h	/^struct for_node_t{$/;"	s
for_step	eval/eval0proc.cc	/^for_step($/;"	f
foreign	include/row0upd.h	/^	dict_foreign_t*	foreign;\/* NULL or pointer to a foreign key$/;"	m	struct:upd_node_t
foreign_col_names	include/dict0mem.h	/^	const char**	foreign_col_names;\/*!< names of the columns in the$/;"	m	struct:dict_foreign_t
foreign_index	include/dict0mem.h	/^	dict_index_t*	foreign_index;	\/*!< foreign index; we require that$/;"	m	struct:dict_foreign_t
foreign_list	include/dict0mem.h	/^	UT_LIST_BASE_NODE_T(dict_foreign_t)	foreign_list;$/;"	m	struct:dict_table_t
foreign_set	include/dict0mem.h	/^	dict_foreign_set			foreign_set;$/;"	m	struct:dict_table_t
foreign_table	include/dict0mem.h	/^	dict_table_t*	foreign_table;	\/*!< table where the foreign key is *\/$/;"	m	struct:dict_foreign_t
foreign_table_name	include/dict0mem.h	/^	char*		foreign_table_name;\/*!< foreign table name *\/$/;"	m	struct:dict_foreign_t
foreign_table_name_lookup	include/dict0mem.h	/^	char*		foreign_table_name_lookup;$/;"	m	struct:dict_foreign_t
fork_type	include/que0que.h	/^	ulint		fork_type;	\/*!< fork type *\/$/;"	m	struct:que_fork_t
format	include/log0log.h	/^	ulint				format;$/;"	m	struct:log_group_t
format_flags	include/btr0types.h	/^	ulint			format_flags;$/;"	m	struct:btr_create_t
found	fts/fts0que.cc	/^	ibool			found;$/;"	m	struct:fts_phrase_t	file:
found	fts/fts0que.cc	/^	ibool		found;		\/*!< TRUE if found *\/$/;"	m	struct:fts_select_t	file:
found	include/fts0types.h	/^	ibool		found;		\/*!< TRUE if the document was found$/;"	m	struct:fts_doc_t
found_clust	include/row0purge.h	/^	ibool		found_clust;\/* TRUE if the clustered index record$/;"	m	struct:purge_node_t
found_corrupt_fs	include/log0recv.h	/^	bool		found_corrupt_fs;$/;"	m	struct:recv_sys_t
found_corrupt_log	include/log0recv.h	/^	bool		found_corrupt_log;$/;"	m	struct:recv_sys_t
frame	include/buf0buf.h	/^	byte*		frame;		\/*!< pointer to buffer frame which$/;"	m	struct:buf_block_t
free	include/buf0buf.h	/^	UT_LIST_BASE_NODE_T(buf_page_t) free;$/;"	m	struct:buf_pool_t
free	include/fts0ast.h	35;"	d
free	include/mem0mem.h	/^	ulint	free;	\/*!< offset in bytes of the first free position for$/;"	m	struct:mem_block_info_t
free	pars/lexyy.cc	965;"	d	file:
free_blob_heap_array	handler/ha_innopart.cc	/^ha_innopart::free_blob_heap_array()$/;"	f	class:ha_innopart
free_block	include/mem0mem.h	/^	void*	free_block;$/;"	m	struct:mem_block_info_t
free_filepath	fsp/fsp0file.cc	/^Datafile::free_filepath()$/;"	f	class:Datafile
free_first_page	fsp/fsp0file.cc	/^Datafile::free_first_page()$/;"	f	class:Datafile
free_foreign_key_create_info	handler/ha_innodb.cc	/^ha_innobase::free_foreign_key_create_info($/;"	f	class:ha_innobase
free_foreign_key_create_info	handler/ha_innopart.h	/^	free_foreign_key_create_info($/;"	f	class:ha_innopart
free_len	include/fil0fil.h	/^	ulint		free_len;$/;"	m	struct:fil_space_t
free_limit	include/fil0fil.h	/^	ulint		free_limit;$/;"	m	struct:fil_space_t
free_list_len	include/buf0buf.h	/^	ulint	free_list_len;		\/*!< Length of buf_pool->free list *\/$/;"	m	struct:buf_pool_info_t
free_list_len	include/ibuf0ibuf.ic	/^	ulint		free_list_len;	\/*!< length of the free list *\/$/;"	m	struct:ibuf_t	file:
free_offset	row/row0log.cc	/^	ulonglong	free_offset;$/;"	m	class:row_log_table_blob_t	file:
free_share	handler/ha_innodb.cc	/^free_share($/;"	f	file:
freed_page_clock	handler/i_s.cc	/^	unsigned	freed_page_clock:31; \/*!< the value of$/;"	m	struct:buf_page_info_t	file:
freed_page_clock	include/buf0buf.h	/^	ulint		freed_page_clock;\/*!< a sequence number used$/;"	m	struct:buf_pool_t
freq	fts/fts0que.cc	/^	ulint		freq;		\/*!< Frequency of a word in a document *\/$/;"	m	struct:fts_doc_freq_t	file:
front	include/read0types.h	/^		value_type front() const$/;"	f	class:ReadView::ids_t
fseg_alloc_free_extent	fsp/fsp0fsp.cc	/^fseg_alloc_free_extent($/;"	f	file:
fseg_alloc_free_page	include/fsp0fsp.h	460;"	d
fseg_alloc_free_page_general	fsp/fsp0fsp.cc	/^fseg_alloc_free_page_general($/;"	f
fseg_alloc_free_page_low	fsp/fsp0fsp.cc	/^fseg_alloc_free_page_low($/;"	f	file:
fseg_create	fsp/fsp0fsp.cc	/^fseg_create($/;"	f
fseg_create_general	fsp/fsp0fsp.cc	/^fseg_create_general($/;"	f
fseg_fill_free_list	fsp/fsp0fsp.cc	/^fseg_fill_free_list($/;"	f	file:
fseg_find_free_frag_page_slot	fsp/fsp0fsp.cc	/^fseg_find_free_frag_page_slot($/;"	f	file:
fseg_find_last_used_frag_page_slot	fsp/fsp0fsp.cc	/^fseg_find_last_used_frag_page_slot($/;"	f	file:
fseg_free_extent	fsp/fsp0fsp.cc	/^fseg_free_extent($/;"	f	file:
fseg_free_page	fsp/fsp0fsp.cc	/^fseg_free_page($/;"	f
fseg_free_page_low	fsp/fsp0fsp.cc	/^fseg_free_page_low($/;"	f	file:
fseg_free_step	fsp/fsp0fsp.cc	/^fseg_free_step($/;"	f
fseg_free_step_not_header	fsp/fsp0fsp.cc	/^fseg_free_step_not_header($/;"	f
fseg_get_first_extent	fsp/fsp0fsp.cc	/^fseg_get_first_extent($/;"	f	file:
fseg_get_n_frag_pages	fsp/fsp0fsp.cc	/^fseg_get_n_frag_pages($/;"	f	file:
fseg_get_nth_frag_page_no	fsp/fsp0fsp.cc	/^fseg_get_nth_frag_page_no($/;"	f
fseg_header	include/fsp0types.h	/^	fseg_header($/;"	f	class:fseg_header
fseg_header	include/fsp0types.h	/^class fseg_header$/;"	c
fseg_header_t	include/fsp0types.h	/^typedef	byte	fseg_header_t;$/;"	t
fseg_inode_get	fsp/fsp0fsp.cc	/^fseg_inode_get($/;"	f	file:
fseg_inode_t	include/fsp0fsp.h	/^typedef	byte	fseg_inode_t;$/;"	t
fseg_inode_try_get	fsp/fsp0fsp.cc	/^fseg_inode_try_get($/;"	f	file:
fseg_mark_page_used	fsp/fsp0fsp.cc	/^fseg_mark_page_used($/;"	f	file:
fseg_n_reserved_pages	fsp/fsp0fsp.cc	/^fseg_n_reserved_pages($/;"	f
fseg_n_reserved_pages_low	fsp/fsp0fsp.cc	/^fseg_n_reserved_pages_low($/;"	f	file:
fseg_page_is_free	fsp/fsp0fsp.cc	/^fseg_page_is_free($/;"	f
fseg_print	fsp/fsp0fsp.cc	/^fseg_print($/;"	f
fseg_print_low	fsp/fsp0fsp.cc	/^fseg_print_low($/;"	f	file:
fseg_set_nth_frag_page_no	fsp/fsp0fsp.cc	/^fseg_set_nth_frag_page_no($/;"	f
fseg_validate	fsp/fsp0fsp.cc	/^fseg_validate($/;"	f
fseg_validate_low	fsp/fsp0fsp.cc	/^fseg_validate_low($/;"	f	file:
fsp0file_h	include/fsp0file.h	27;"	d
fsp0fsp_h	include/fsp0fsp.h	27;"	d
fsp0space_h	include/fsp0space.h	27;"	d
fsp0sysspace_h	include/fsp0sysspace.h	27;"	d
fsp0types_h	include/fsp0types.h	27;"	d
fsp_alloc_free_extent	fsp/fsp0fsp.cc	/^fsp_alloc_free_extent($/;"	f	file:
fsp_alloc_free_page	fsp/fsp0fsp.cc	/^fsp_alloc_free_page($/;"	f
fsp_alloc_from_free_frag	fsp/fsp0fsp.cc	/^fsp_alloc_from_free_frag($/;"	f	file:
fsp_alloc_seg_inode	fsp/fsp0fsp.cc	/^fsp_alloc_seg_inode($/;"	f	file:
fsp_alloc_seg_inode_page	fsp/fsp0fsp.cc	/^fsp_alloc_seg_inode_page($/;"	f	file:
fsp_descr_page	include/fsp0fsp.ic	/^fsp_descr_page($/;"	f
fsp_fill_free_list	fsp/fsp0fsp.cc	/^fsp_fill_free_list($/;"	f	file:
fsp_flags_are_equal	include/fsp0fsp.ic	/^fsp_flags_are_equal($/;"	f
fsp_flags_init	include/fsp0fsp.ic	/^fsp_flags_init($/;"	f
fsp_flags_is_compressed	include/fsp0fsp.ic	/^fsp_flags_is_compressed($/;"	f
fsp_flags_is_valid	fsp/fsp0fsp.cc	/^fsp_flags_is_valid($/;"	f
fsp_flags_set_page_size	include/fsp0fsp.ic	/^fsp_flags_set_page_size($/;"	f
fsp_flags_set_zip_size	include/fsp0fsp.ic	/^fsp_flags_set_zip_size($/;"	f
fsp_flags_to_dict_tf	fsp/fsp0fsp.cc	/^fsp_flags_to_dict_tf($/;"	f
fsp_free_extent	fsp/fsp0fsp.cc	/^fsp_free_extent($/;"	f	file:
fsp_free_page	fsp/fsp0fsp.cc	/^fsp_free_page($/;"	f	file:
fsp_free_seg_inode	fsp/fsp0fsp.cc	/^fsp_free_seg_inode($/;"	f	file:
fsp_get_available_space_in_free_extents	fsp/fsp0fsp.cc	/^fsp_get_available_space_in_free_extents($/;"	f
fsp_get_extent_size_in_pages	include/fsp0fsp.h	/^fsp_get_extent_size_in_pages(const page_size_t&	page_size)$/;"	f
fsp_get_pages_to_extend_ibd	fsp/fsp0fsp.cc	/^fsp_get_pages_to_extend_ibd($/;"	f
fsp_get_space_header	fsp/fsp0fsp.cc	/^fsp_get_space_header($/;"	f
fsp_header_decode_encryption_info	fsp/fsp0fsp.cc	/^fsp_header_decode_encryption_info($/;"	f
fsp_header_fill_encryption_info	fsp/fsp0fsp.cc	/^fsp_header_fill_encryption_info($/;"	f
fsp_header_get_encryption_key	fsp/fsp0fsp.cc	/^fsp_header_get_encryption_key($/;"	f
fsp_header_get_encryption_offset	fsp/fsp0fsp.cc	/^fsp_header_get_encryption_offset($/;"	f	file:
fsp_header_get_field	include/fsp0fsp.h	/^fsp_header_get_field(const page_t* page, ulint field)$/;"	f
fsp_header_get_flags	include/fsp0fsp.h	/^fsp_header_get_flags(const page_t* page)$/;"	f
fsp_header_get_page_size	fsp/fsp0fsp.cc	/^fsp_header_get_page_size($/;"	f
fsp_header_get_space_id	fsp/fsp0fsp.cc	/^fsp_header_get_space_id($/;"	f
fsp_header_get_tablespace_size	fsp/fsp0fsp.cc	/^fsp_header_get_tablespace_size(void)$/;"	f
fsp_header_inc_size	fsp/fsp0fsp.cc	/^fsp_header_inc_size($/;"	f
fsp_header_init	fsp/fsp0fsp.cc	/^fsp_header_init($/;"	f
fsp_header_init_fields	fsp/fsp0fsp.cc	/^fsp_header_init_fields($/;"	f
fsp_header_rotate_encryption	fsp/fsp0fsp.cc	/^fsp_header_rotate_encryption($/;"	f
fsp_header_t	include/fsp0fsp.h	/^typedef	byte	fsp_header_t;$/;"	t
fsp_init	fsp/fsp0fsp.cc	/^fsp_init(void)$/;"	f
fsp_init_file_page	fsp/fsp0fsp.cc	/^fsp_init_file_page($/;"	f	file:
fsp_init_file_page_low	fsp/fsp0fsp.cc	/^fsp_init_file_page_low($/;"	f	file:
fsp_is_checksum_disabled	fsp/fsp0fsp.cc	/^fsp_is_checksum_disabled($/;"	f
fsp_is_file_per_table	fsp/fsp0fsp.cc	/^fsp_is_file_per_table($/;"	f
fsp_is_shared_tablespace	include/fsp0types.h	364;"	d
fsp_is_system_temporary	fsp/fsp0fsp.cc	/^fsp_is_system_temporary($/;"	f
fsp_page_create	fsp/fsp0fsp.cc	/^fsp_page_create($/;"	f	file:
fsp_parse_init_file_page	fsp/fsp0fsp.cc	/^fsp_parse_init_file_page($/;"	f
fsp_reserve_free_extents	fsp/fsp0fsp.cc	/^fsp_reserve_free_extents($/;"	f
fsp_reserve_free_pages	fsp/fsp0fsp.cc	/^fsp_reserve_free_pages($/;"	f	file:
fsp_reserve_t	include/fsp0types.h	/^enum fsp_reserve_t {$/;"	g
fsp_seg_inode_page_find_free	fsp/fsp0fsp.cc	/^fsp_seg_inode_page_find_free($/;"	f	file:
fsp_seg_inode_page_find_used	fsp/fsp0fsp.cc	/^fsp_seg_inode_page_find_used($/;"	f	file:
fsp_seg_inode_page_get_nth_inode	fsp/fsp0fsp.cc	/^fsp_seg_inode_page_get_nth_inode($/;"	f
fsp_skip_sanity_check	fsp/fsp0fsp.cc	/^fsp_skip_sanity_check($/;"	f
fsp_space_modify_check	fsp/fsp0fsp.cc	/^fsp_space_modify_check($/;"	f	file:
fsp_try_extend_data_file	fsp/fsp0fsp.cc	/^fsp_try_extend_data_file($/;"	f	file:
fsp_try_extend_data_file_with_pages	fsp/fsp0fsp.cc	/^fsp_try_extend_data_file_with_pages($/;"	f
ft_end	handler/ha_innodb.cc	/^ha_innobase::ft_end()$/;"	f	class:ha_innobase
ft_init	handler/ha_innodb.cc	/^ha_innobase::ft_init()$/;"	f	class:ha_innobase
ft_init	handler/ha_innopart.h	/^	ft_init()$/;"	f	class:ha_innopart
ft_init_ext	handler/ha_innodb.cc	/^ha_innobase::ft_init_ext($/;"	f	class:ha_innobase
ft_init_ext	handler/ha_innopart.h	/^	ft_init_ext($/;"	f	class:ha_innopart
ft_init_ext_with_hints	handler/ha_innodb.cc	/^ha_innobase::ft_init_ext_with_hints($/;"	f	class:ha_innobase
ft_init_ext_with_hints	handler/ha_innopart.h	/^	ft_init_ext_with_hints($/;"	f	class:ha_innopart
ft_prebuilt	handler/ha_innodb.h	/^	row_prebuilt_t*		ft_prebuilt;$/;"	m	struct:new_ft_info
ft_read	handler/ha_innodb.cc	/^ha_innobase::ft_read($/;"	f	class:ha_innobase
ft_read	handler/ha_innopart.h	/^	ft_read($/;"	f	class:ha_innopart
ft_result	handler/ha_innodb.h	/^	fts_result_t*		ft_result;$/;"	m	struct:new_ft_info
ft_vft_ext_result	handler/ha_innodb.cc	/^const struct _ft_vft_ext ft_vft_ext_result = {innobase_fts_get_version,$/;"	v	typeref:struct:_ft_vft_ext
ft_vft_result	handler/ha_innodb.cc	/^const struct _ft_vft ft_vft_result = {NULL,$/;"	v	typeref:struct:_ft_vft
fts	include/dict0mem.h	/^	fts_t*					fts;$/;"	m	struct:dict_table_t
fts0bHEADER_H	include/fts0blex.h	2;"	d
fts0bIN_HEADER	include/fts0blex.h	348;"	d
fts0bIN_HEADER	include/fts0blex.h	3;"	d
fts0b_create_buffer	fts/fts0blex.cc	/^YY_BUFFER_STATE fts0b_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)$/;"	f
fts0b_delete_buffer	fts/fts0blex.cc	/^void fts0b_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
fts0b_flush_buffer	fts/fts0blex.cc	/^void fts0b_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
fts0b_init_buffer	fts/fts0blex.cc	/^static void fts0b_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)$/;"	f	file:
fts0b_load_buffer_state	fts/fts0blex.cc	/^static void fts0b_load_buffer_state  (yyscan_t yyscanner)$/;"	f	file:
fts0b_scan_buffer	fts/fts0blex.cc	/^YY_BUFFER_STATE fts0b_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)$/;"	f
fts0b_scan_bytes	fts/fts0blex.cc	/^YY_BUFFER_STATE fts0b_scan_bytes  (yyconst char * yybytes, int  _yybytes_len , yyscan_t yyscanner)$/;"	f
fts0b_scan_string	fts/fts0blex.cc	/^YY_BUFFER_STATE fts0b_scan_string (yyconst char * yystr , yyscan_t yyscanner)$/;"	f
fts0b_switch_to_buffer	fts/fts0blex.cc	/^void fts0b_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)$/;"	f
fts0balloc	fts/fts0blex.cc	/^void *fts0balloc (yy_size_t  size ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f
fts0bensure_buffer_stack	fts/fts0blex.cc	/^static void fts0bensure_buffer_stack (yyscan_t yyscanner)$/;"	f	file:
fts0bfree	fts/fts0blex.cc	/^void fts0bfree (void * ptr ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f
fts0bget_column	fts/fts0blex.cc	/^int fts0bget_column  (yyscan_t yyscanner)$/;"	f
fts0bget_debug	fts/fts0blex.cc	/^int fts0bget_debug  (yyscan_t yyscanner)$/;"	f
fts0bget_extra	fts/fts0blex.cc	/^YY_EXTRA_TYPE fts0bget_extra  (yyscan_t yyscanner)$/;"	f
fts0bget_in	fts/fts0blex.cc	/^FILE *fts0bget_in  (yyscan_t yyscanner)$/;"	f
fts0bget_leng	fts/fts0blex.cc	/^int fts0bget_leng  (yyscan_t yyscanner)$/;"	f
fts0bget_lineno	fts/fts0blex.cc	/^int fts0bget_lineno  (yyscan_t yyscanner)$/;"	f
fts0bget_out	fts/fts0blex.cc	/^FILE *fts0bget_out  (yyscan_t yyscanner)$/;"	f
fts0bget_text	fts/fts0blex.cc	/^char *fts0bget_text  (yyscan_t yyscanner)$/;"	f
fts0blex_destroy	fts/fts0blex.cc	/^int fts0blex_destroy  (yyscan_t yyscanner)$/;"	f
fts0blex_init	fts/fts0blex.cc	/^int fts0blex_init(yyscan_t* ptr_yy_globals)$/;"	f
fts0blex_init_extra	fts/fts0blex.cc	/^int fts0blex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )$/;"	f
fts0bpop_buffer_state	fts/fts0blex.cc	/^void fts0bpop_buffer_state (yyscan_t yyscanner)$/;"	f
fts0bpush_buffer_state	fts/fts0blex.cc	/^void fts0bpush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)$/;"	f
fts0brealloc	fts/fts0blex.cc	/^void *fts0brealloc  (void * ptr, yy_size_t  size ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f
fts0brestart	fts/fts0blex.cc	/^void fts0brestart  (FILE * input_file , yyscan_t yyscanner)$/;"	f
fts0bset_column	fts/fts0blex.cc	/^void fts0bset_column (int  column_no , yyscan_t yyscanner)$/;"	f
fts0bset_debug	fts/fts0blex.cc	/^void fts0bset_debug (int  bdebug , yyscan_t yyscanner)$/;"	f
fts0bset_extra	fts/fts0blex.cc	/^void fts0bset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)$/;"	f
fts0bset_in	fts/fts0blex.cc	/^void fts0bset_in (FILE *  in_str , yyscan_t yyscanner)$/;"	f
fts0bset_lineno	fts/fts0blex.cc	/^void fts0bset_lineno (int  line_number , yyscan_t yyscanner)$/;"	f
fts0bset_out	fts/fts0blex.cc	/^void fts0bset_out (FILE *  out_str , yyscan_t yyscanner)$/;"	f
fts0bwrap	fts/fts0blex.cc	338;"	d	file:
fts0bwrap	include/fts0blex.h	225;"	d
fts0fts_h	include/fts0fts.h	27;"	d
fts0tHEADER_H	include/fts0tlex.h	2;"	d
fts0tIN_HEADER	include/fts0tlex.h	348;"	d
fts0tIN_HEADER	include/fts0tlex.h	3;"	d
fts0t_create_buffer	fts/fts0tlex.cc	/^YY_BUFFER_STATE fts0t_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)$/;"	f
fts0t_delete_buffer	fts/fts0tlex.cc	/^void fts0t_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
fts0t_flush_buffer	fts/fts0tlex.cc	/^void fts0t_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)$/;"	f
fts0t_init_buffer	fts/fts0tlex.cc	/^static void fts0t_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)$/;"	f	file:
fts0t_load_buffer_state	fts/fts0tlex.cc	/^static void fts0t_load_buffer_state  (yyscan_t yyscanner)$/;"	f	file:
fts0t_scan_buffer	fts/fts0tlex.cc	/^YY_BUFFER_STATE fts0t_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)$/;"	f
fts0t_scan_bytes	fts/fts0tlex.cc	/^YY_BUFFER_STATE fts0t_scan_bytes  (yyconst char * yybytes, int  _yybytes_len , yyscan_t yyscanner)$/;"	f
fts0t_scan_string	fts/fts0tlex.cc	/^YY_BUFFER_STATE fts0t_scan_string (yyconst char * yystr , yyscan_t yyscanner)$/;"	f
fts0t_switch_to_buffer	fts/fts0tlex.cc	/^void fts0t_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)$/;"	f
fts0talloc	fts/fts0tlex.cc	/^void *fts0talloc (yy_size_t  size ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f
fts0tensure_buffer_stack	fts/fts0tlex.cc	/^static void fts0tensure_buffer_stack (yyscan_t yyscanner)$/;"	f	file:
fts0tfree	fts/fts0tlex.cc	/^void fts0tfree (void * ptr ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f
fts0tget_column	fts/fts0tlex.cc	/^int fts0tget_column  (yyscan_t yyscanner)$/;"	f
fts0tget_debug	fts/fts0tlex.cc	/^int fts0tget_debug  (yyscan_t yyscanner)$/;"	f
fts0tget_extra	fts/fts0tlex.cc	/^YY_EXTRA_TYPE fts0tget_extra  (yyscan_t yyscanner)$/;"	f
fts0tget_in	fts/fts0tlex.cc	/^FILE *fts0tget_in  (yyscan_t yyscanner)$/;"	f
fts0tget_leng	fts/fts0tlex.cc	/^int fts0tget_leng  (yyscan_t yyscanner)$/;"	f
fts0tget_lineno	fts/fts0tlex.cc	/^int fts0tget_lineno  (yyscan_t yyscanner)$/;"	f
fts0tget_out	fts/fts0tlex.cc	/^FILE *fts0tget_out  (yyscan_t yyscanner)$/;"	f
fts0tget_text	fts/fts0tlex.cc	/^char *fts0tget_text  (yyscan_t yyscanner)$/;"	f
fts0tlex_destroy	fts/fts0tlex.cc	/^int fts0tlex_destroy  (yyscan_t yyscanner)$/;"	f
fts0tlex_init	fts/fts0tlex.cc	/^int fts0tlex_init(yyscan_t* ptr_yy_globals)$/;"	f
fts0tlex_init_extra	fts/fts0tlex.cc	/^int fts0tlex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )$/;"	f
fts0tpop_buffer_state	fts/fts0tlex.cc	/^void fts0tpop_buffer_state (yyscan_t yyscanner)$/;"	f
fts0tpush_buffer_state	fts/fts0tlex.cc	/^void fts0tpush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)$/;"	f
fts0trealloc	fts/fts0tlex.cc	/^void *fts0trealloc  (void * ptr, yy_size_t  size ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f
fts0trestart	fts/fts0tlex.cc	/^void fts0trestart  (FILE * input_file , yyscan_t yyscanner)$/;"	f
fts0tset_column	fts/fts0tlex.cc	/^void fts0tset_column (int  column_no , yyscan_t yyscanner)$/;"	f
fts0tset_debug	fts/fts0tlex.cc	/^void fts0tset_debug (int  bdebug , yyscan_t yyscanner)$/;"	f
fts0tset_extra	fts/fts0tlex.cc	/^void fts0tset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)$/;"	f
fts0tset_in	fts/fts0tlex.cc	/^void fts0tset_in (FILE *  in_str , yyscan_t yyscanner)$/;"	f
fts0tset_lineno	fts/fts0tlex.cc	/^void fts0tset_lineno (int  line_number , yyscan_t yyscanner)$/;"	f
fts0tset_out	fts/fts0tlex.cc	/^void fts0tset_out (FILE *  out_str , yyscan_t yyscanner)$/;"	f
fts0twrap	fts/fts0tlex.cc	338;"	d	file:
fts0twrap	include/fts0tlex.h	225;"	d
fts_add	fts/fts0fts.cc	/^fts_add($/;"	f
fts_add_doc_by_id	fts/fts0fts.cc	/^fts_add_doc_by_id($/;"	f	file:
fts_add_doc_id_column	fts/fts0fts.cc	/^fts_add_doc_id_column($/;"	f
fts_add_index	fts/fts0fts.cc	/^fts_add_index($/;"	f
fts_add_token	fts/fts0fts.cc	/^fts_add_token($/;"	f	file:
fts_ast_add_node	fts/fts0ast.cc	/^fts_ast_add_node($/;"	f
fts_ast_callback	include/fts0ast.h	/^typedef dberr_t (*fts_ast_callback)(fts_ast_oper_t, fts_ast_node_t*, void*);$/;"	t
fts_ast_create_node_list	fts/fts0ast.cc	/^fts_ast_create_node_list($/;"	f
fts_ast_create_node_oper	fts/fts0ast.cc	/^fts_ast_create_node_oper($/;"	f
fts_ast_create_node_phrase_list	fts/fts0ast.cc	/^fts_ast_create_node_phrase_list($/;"	f
fts_ast_create_node_subexp_list	fts/fts0ast.cc	/^fts_ast_create_node_subexp_list($/;"	f
fts_ast_create_node_term	fts/fts0ast.cc	/^fts_ast_create_node_term($/;"	f
fts_ast_create_node_term_for_parser	fts/fts0ast.cc	/^fts_ast_create_node_term_for_parser($/;"	f
fts_ast_create_node_text	fts/fts0ast.cc	/^fts_ast_create_node_text($/;"	f
fts_ast_free_list	fts/fts0ast.cc	/^fts_ast_free_list($/;"	f	file:
fts_ast_free_node	fts/fts0ast.cc	/^fts_ast_free_node($/;"	f
fts_ast_list_t	include/fts0ast.h	/^struct fts_ast_list_t {$/;"	s
fts_ast_node_check_union	fts/fts0ast.cc	/^fts_ast_node_check_union($/;"	f
fts_ast_node_create	fts/fts0ast.cc	/^fts_ast_node_create(void)$/;"	f	file:
fts_ast_node_print	fts/fts0ast.cc	/^fts_ast_node_print($/;"	f
fts_ast_node_print_recursive	fts/fts0ast.cc	/^fts_ast_node_print_recursive($/;"	f	file:
fts_ast_node_t	include/fts0ast.h	/^struct fts_ast_node_t {$/;"	s
fts_ast_node_type_get	fts/fts0ast.cc	/^fts_ast_node_type_get(fts_ast_type_t	type)$/;"	f
fts_ast_oper_name_get	fts/fts0ast.cc	/^fts_ast_oper_name_get(fts_ast_oper_t	oper)$/;"	f
fts_ast_oper_t	include/fts0ast.h	/^enum fts_ast_oper_t {$/;"	g
fts_ast_state_add_node	fts/fts0ast.cc	/^fts_ast_state_add_node($/;"	f
fts_ast_state_free	fts/fts0ast.cc	/^fts_ast_state_free($/;"	f
fts_ast_state_t	include/fts0ast.h	/^struct fts_ast_state_t {$/;"	s
fts_ast_string_create	fts/fts0ast.cc	/^fts_ast_string_create($/;"	f
fts_ast_string_free	fts/fts0ast.cc	/^fts_ast_string_free($/;"	f
fts_ast_string_print	fts/fts0ast.cc	/^fts_ast_string_print($/;"	f
fts_ast_string_t	include/fts0ast.h	/^struct fts_ast_string_t {$/;"	s
fts_ast_string_to_ul	fts/fts0ast.cc	/^fts_ast_string_to_ul($/;"	f
fts_ast_term_set_wildcard	fts/fts0ast.cc	/^fts_ast_term_set_wildcard($/;"	f
fts_ast_term_t	include/fts0ast.h	/^struct fts_ast_term_t {$/;"	s
fts_ast_text_set_distance	fts/fts0ast.cc	/^fts_ast_text_set_distance($/;"	f
fts_ast_text_t	include/fts0ast.h	/^struct fts_ast_text_t {$/;"	s
fts_ast_type_t	include/fts0ast.h	/^enum fts_ast_type_t {$/;"	g
fts_ast_visit	fts/fts0ast.cc	/^fts_ast_visit($/;"	f
fts_ast_visit_pass_t	fts/fts0ast.cc	/^enum fts_ast_visit_pass_t {$/;"	g	file:
fts_ast_visit_sub_exp	fts/fts0que.cc	/^fts_ast_visit_sub_exp($/;"	f
fts_aux_table_t	fts/fts0fts.cc	/^struct fts_aux_table_t {$/;"	s	file:
fts_bg_threads_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fts_bg_threads_mutex_key;$/;"	v
fts_bind_doc_id	include/fts0fts.h	81;"	d
fts_boolean_syntax	include/fts0tokenize.h	/^static const char* fts_boolean_syntax = DEFAULT_FTB_SYNTAX;$/;"	v
fts_bsearch	fts/fts0opt.cc	/^fts_bsearch($/;"	f
fts_cache_add_doc	fts/fts0fts.cc	/^fts_cache_add_doc($/;"	f	file:
fts_cache_append_deleted_doc_ids	fts/fts0fts.cc	/^fts_cache_append_deleted_doc_ids($/;"	f
fts_cache_clear	fts/fts0fts.cc	/^fts_cache_clear($/;"	f
fts_cache_create	fts/fts0fts.cc	/^fts_cache_create($/;"	f
fts_cache_destroy	fts/fts0fts.cc	/^fts_cache_destroy($/;"	f
fts_cache_find_wildcard	fts/fts0que.cc	/^fts_cache_find_wildcard($/;"	f	file:
fts_cache_find_word	fts/fts0fts.cc	/^fts_cache_find_word($/;"	f
fts_cache_index_cache_create	fts/fts0fts.cc	/^fts_cache_index_cache_create($/;"	f
fts_cache_init	fts/fts0fts.cc	/^fts_cache_init($/;"	f
fts_cache_init_rw_lock_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fts_cache_init_rw_lock_key;$/;"	v
fts_cache_is_deleted_doc_id	fts/fts0fts.cc	/^fts_cache_is_deleted_doc_id($/;"	f
fts_cache_node_add_positions	fts/fts0fts.cc	/^fts_cache_node_add_positions($/;"	f
fts_cache_rw_lock_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fts_cache_rw_lock_key;$/;"	v
fts_cache_t	include/fts0types.h	/^struct fts_cache_t {$/;"	s
fts_check_all_indexes_synced	fts/fts0fts.cc	/^fts_check_all_indexes_synced($/;"	f	file:
fts_check_and_drop_orphaned_tables	fts/fts0fts.cc	/^fts_check_and_drop_orphaned_tables($/;"	f
fts_check_aux_table_parent_id_cmp	fts/fts0fts.cc	/^fts_check_aux_table_parent_id_cmp($/;"	f
fts_check_cached_index	fts/fts0fts.cc	/^fts_check_cached_index($/;"	f
fts_check_corrupt	fts/fts0fts.cc	/^fts_check_corrupt($/;"	f
fts_check_corrupt_index	fts/fts0fts.cc	/^fts_check_corrupt_index($/;"	f	file:
fts_check_token	fts/fts0fts.cc	/^fts_check_token($/;"	f
fts_cmp_set_sync_doc_id	fts/fts0fts.cc	/^fts_cmp_set_sync_doc_id($/;"	f
fts_commit	fts/fts0fts.cc	/^fts_commit($/;"	f
fts_commit_table	fts/fts0fts.cc	/^fts_commit_table($/;"	f
fts_common_table	fts/fts0opt.cc	/^	fts_table_t	fts_common_table;$/;"	m	struct:fts_optimize_t	file:
fts_common_table	fts/fts0que.cc	/^	fts_table_t	fts_common_table;$/;"	m	struct:fts_query_t	file:
fts_common_tables	fts/fts0fts.cc	/^const char* fts_common_tables[] = {$/;"	v
fts_config_create_index_param_name	fts/fts0config.cc	/^fts_config_create_index_param_name($/;"	f
fts_config_fetch_value	fts/fts0config.cc	/^fts_config_fetch_value($/;"	f	file:
fts_config_get_index_ulint	fts/fts0config.cc	/^fts_config_get_index_ulint($/;"	f
fts_config_get_index_value	fts/fts0config.cc	/^fts_config_get_index_value($/;"	f
fts_config_get_ulint	fts/fts0config.cc	/^fts_config_get_ulint($/;"	f
fts_config_get_value	fts/fts0config.cc	/^fts_config_get_value($/;"	f
fts_config_increment_index_value	fts/fts0config.cc	/^fts_config_increment_index_value($/;"	f
fts_config_increment_value	fts/fts0config.cc	/^fts_config_increment_value($/;"	f
fts_config_key	handler/i_s.cc	/^static const char* fts_config_key[] = {$/;"	v	file:
fts_config_set_index_ulint	fts/fts0config.cc	/^fts_config_set_index_ulint($/;"	f
fts_config_set_index_value	fts/fts0config.cc	/^fts_config_set_index_value($/;"	f
fts_config_set_ulint	fts/fts0config.cc	/^fts_config_set_ulint($/;"	f
fts_config_set_value	fts/fts0config.cc	/^fts_config_set_value($/;"	f
fts_config_table_insert_values_sql	fts/fts0fts.cc	/^static const char* fts_config_table_insert_values_sql =$/;"	v	file:
fts_create	fts/fts0fts.cc	/^fts_create($/;"	f
fts_create_common_tables	fts/fts0fts.cc	/^fts_create_common_tables($/;"	f
fts_create_doc_id	fts/fts0fts.cc	/^fts_create_doc_id($/;"	f
fts_create_in_mem_aux_table	fts/fts0fts.cc	/^fts_create_in_mem_aux_table($/;"	f	file:
fts_create_index_tables	fts/fts0fts.cc	/^fts_create_index_tables($/;"	f
fts_create_index_tables_low	fts/fts0fts.cc	/^fts_create_index_tables_low($/;"	f
fts_create_index_tables_sql	fts/fts0fts.cc	/^static const char* fts_create_index_tables_sql = {$/;"	v	file:
fts_create_one_common_table	fts/fts0fts.cc	/^fts_create_one_common_table($/;"	f	file:
fts_create_one_index_table	fts/fts0fts.cc	/^fts_create_one_index_table($/;"	f	file:
fts_decode_vlc	include/fts0vlc.ic	/^fts_decode_vlc($/;"	f
fts_default_parser	fts/fts0plugin.cc	/^struct st_mysql_ftparser fts_default_parser =$/;"	v	typeref:struct:st_mysql_ftparser
fts_default_parser_deinit	fts/fts0plugin.cc	/^fts_default_parser_deinit($/;"	f	file:
fts_default_parser_init	fts/fts0plugin.cc	/^fts_default_parser_init($/;"	f	file:
fts_default_parser_parse	fts/fts0plugin.cc	/^fts_default_parser_parse($/;"	f	file:
fts_default_stopword	fts/fts0fts.cc	/^const char *fts_default_stopword[] =$/;"	v
fts_delete	fts/fts0fts.cc	/^fts_delete($/;"	f
fts_delete_doc_ids_sql	fts/fts0opt.cc	/^static const char* fts_delete_doc_ids_sql =$/;"	v	file:
fts_delete_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fts_delete_mutex_key;$/;"	v
fts_dict_table_has_fts_index	fts/fts0fts.cc	/^fts_dict_table_has_fts_index($/;"	f
fts_doc_fetch_by_doc_id	fts/fts0fts.cc	/^fts_doc_fetch_by_doc_id($/;"	f
fts_doc_free	fts/fts0fts.cc	/^fts_doc_free($/;"	f
fts_doc_freq_t	fts/fts0que.cc	/^struct fts_doc_freq_t {$/;"	s	file:
fts_doc_id	include/row0mysql.h	/^	doc_id_t	fts_doc_id;	\/* if the table has an FTS index on$/;"	m	struct:row_prebuilt_t
fts_doc_id_in_read_set	include/row0mysql.h	/^	bool		fts_doc_id_in_read_set; \/*!< true if table has externally$/;"	m	struct:row_prebuilt_t
fts_doc_id_index	include/dict0mem.h	/^	dict_index_t*				fts_doc_id_index;$/;"	m	struct:dict_table_t
fts_doc_id_index_enum	handler/ha_innodb.h	/^enum fts_doc_id_index_enum {$/;"	g
fts_doc_id_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fts_doc_id_mutex_key;$/;"	v
fts_doc_ids_create	fts/fts0fts.cc	/^fts_doc_ids_create(void)$/;"	f
fts_doc_ids_free	fts/fts0fts.cc	/^fts_doc_ids_free($/;"	f
fts_doc_ids_t	include/fts0fts.h	/^struct fts_doc_ids_t {$/;"	s
fts_doc_init	fts/fts0fts.cc	/^fts_doc_init($/;"	f
fts_doc_item	include/row0ftsort.h	/^struct fts_doc_item {$/;"	s
fts_doc_item_t	include/row0ftsort.h	/^typedef struct fts_doc_item     fts_doc_item_t;$/;"	t	typeref:struct:fts_doc_item
fts_doc_list	include/row0ftsort.h	/^	fts_doc_list_t		fts_doc_list;	\/*!< doc list to process *\/$/;"	m	struct:fts_psort_t
fts_doc_list_t	include/row0ftsort.h	/^typedef UT_LIST_BASE_NODE_T(fts_doc_item_t)     fts_doc_list_t;$/;"	t
fts_doc_stats_t	include/fts0types.h	/^struct fts_doc_stats_t {$/;"	s
fts_doc_t	include/fts0types.h	/^struct fts_doc_t {$/;"	s
fts_drop_all_index_tables	fts/fts0fts.cc	/^fts_drop_all_index_tables($/;"	f
fts_drop_aux_table_from_vector	fts/fts0fts.cc	/^fts_drop_aux_table_from_vector($/;"	f	file:
fts_drop_common_tables	fts/fts0fts.cc	/^fts_drop_common_tables($/;"	f
fts_drop_index	fts/fts0fts.cc	/^fts_drop_index($/;"	f
fts_drop_index_split_tables	fts/fts0fts.cc	/^fts_drop_index_split_tables($/;"	f
fts_drop_index_tables	fts/fts0fts.cc	/^fts_drop_index_tables($/;"	f
fts_drop_obsolete_aux_table_from_vector	fts/fts0fts.cc	/^fts_drop_obsolete_aux_table_from_vector($/;"	f	file:
fts_drop_orphaned_tables	fts/fts0fts.cc	/^fts_drop_orphaned_tables(void)$/;"	f
fts_drop_table	fts/fts0fts.cc	/^fts_drop_table($/;"	f
fts_drop_tables	fts/fts0fts.cc	/^fts_drop_tables($/;"	f
fts_enable_diag_print	fts/fts0opt.cc	/^char	fts_enable_diag_print;$/;"	v
fts_encode_int	include/fts0vlc.ic	/^fts_encode_int($/;"	f
fts_encode_t	fts/fts0opt.cc	/^struct fts_encode_t {$/;"	s	file:
fts_end_delete_sql	fts/fts0opt.cc	/^static const char* fts_end_delete_sql =$/;"	v	file:
fts_eval_sql	fts/fts0sql.cc	/^fts_eval_sql($/;"	f
fts_expand_query	fts/fts0que.cc	/^fts_expand_query($/;"	f
fts_fake_hex_to_dec	fts/fts0fts.cc	/^fts_fake_hex_to_dec($/;"	f	file:
fts_fetch_doc_from_rec	fts/fts0fts.cc	/^fts_fetch_doc_from_rec($/;"	f	file:
fts_fetch_doc_ids	fts/fts0opt.cc	/^fts_fetch_doc_ids($/;"	f	file:
fts_fetch_index_words	fts/fts0opt.cc	/^fts_fetch_index_words($/;"	f	file:
fts_fetch_row_id	fts/fts0fts.cc	/^fts_fetch_row_id($/;"	f
fts_fetch_store_doc_id	fts/fts0fts.cc	/^fts_fetch_store_doc_id($/;"	f	file:
fts_fetch_t	include/fts0types.h	/^struct fts_fetch_t {$/;"	s
fts_filter	include/fts0types.h	/^typedef void (*fts_filter)(void*, fts_node_t*, void*, ulint len);$/;"	t
fts_find_index_cache	fts/fts0fts.cc	/^fts_find_index_cache($/;"	f
fts_free	fts/fts0fts.cc	/^fts_free($/;"	f
fts_freq_doc_id_cmp	fts/fts0que.cc	/^fts_freq_doc_id_cmp($/;"	f
fts_get_charset	fts/fts0fts.cc	/^fts_get_charset(ulint prtype)$/;"	f
fts_get_doc_id_from_rec	fts/fts0fts.cc	/^fts_get_doc_id_from_rec($/;"	f
fts_get_doc_id_from_row	fts/fts0fts.cc	/^fts_get_doc_id_from_row($/;"	f
fts_get_doc_t	include/fts0types.h	/^struct fts_get_doc_t {$/;"	s
fts_get_docs_clear	fts/fts0fts.cc	/^fts_get_docs_clear($/;"	f	file:
fts_get_docs_create	fts/fts0fts.cc	/^fts_get_docs_create($/;"	f
fts_get_encoded_len	include/fts0vlc.ic	/^fts_get_encoded_len($/;"	f
fts_get_index_cache	fts/fts0fts.cc	/^fts_get_index_cache($/;"	f
fts_get_index_get_doc	fts/fts0fts.cc	/^fts_get_index_get_doc($/;"	f	file:
fts_get_max_cache_size	fts/fts0fts.cc	/^fts_get_max_cache_size($/;"	f	file:
fts_get_max_doc_id	fts/fts0fts.cc	/^fts_get_max_doc_id($/;"	f
fts_get_next_doc_id	fts/fts0fts.cc	/^fts_get_next_doc_id($/;"	f
fts_get_parent_table_name	fts/fts0fts.cc	/^fts_get_parent_table_name($/;"	f
fts_get_rows_count	fts/fts0fts.cc	/^fts_get_rows_count($/;"	f
fts_get_select_columns_str	fts/fts0sql.cc	/^fts_get_select_columns_str($/;"	f
fts_get_suffix	include/fts0types.ic	/^fts_get_suffix($/;"	f
fts_get_table_flags2_for_aux_tables	fts/fts0fts.cc	/^fts_get_table_flags2_for_aux_tables($/;"	f	file:
fts_get_table_id	fts/fts0sql.cc	/^fts_get_table_id($/;"	f
fts_get_table_name	fts/fts0sql.cc	/^fts_get_table_name($/;"	f
fts_get_table_name_prefix	fts/fts0sql.cc	/^fts_get_table_name_prefix($/;"	f
fts_get_token_size	fts/fts0fts.cc	/^fts_get_token_size($/;"	f
fts_get_total_word_count	fts/fts0fts.cc	/^fts_get_total_word_count($/;"	f
fts_get_word	include/fts0tokenize.h	/^fts_get_word($/;"	f
fts_heap	include/fts0fts.h	/^	mem_heap_t*	fts_heap;$/;"	m	class:fts_t
fts_in_dict_index	fts/fts0fts.cc	/^fts_in_dict_index($/;"	f	file:
fts_in_index_cache	fts/fts0fts.cc	/^fts_in_index_cache($/;"	f	file:
fts_index_cache_init	fts/fts0fts.cc	/^fts_index_cache_init($/;"	f	file:
fts_index_cache_t	include/fts0types.h	/^struct fts_index_cache_t {$/;"	s
fts_index_fetch_nodes	fts/fts0opt.cc	/^fts_index_fetch_nodes($/;"	f
fts_index_fetch_words	fts/fts0opt.cc	/^fts_index_fetch_words($/;"	f
fts_index_get_charset	fts/fts0fts.cc	/^fts_index_get_charset($/;"	f
fts_index_selector	fts/fts0fts.cc	/^const  fts_index_selector_t fts_index_selector[] = {$/;"	v
fts_index_selector_t	include/fts0types.h	/^struct fts_index_selector_t {$/;"	s
fts_index_table	fts/fts0opt.cc	/^	fts_table_t	fts_index_table;\/*!< Common table definition *\/$/;"	m	struct:fts_optimize_t	file:
fts_index_table	fts/fts0que.cc	/^	fts_table_t	fts_index_table;\/*!< FTS auxiliary index table def *\/$/;"	m	struct:fts_query_t	file:
fts_indexes	include/fts0fts.h	/^	ib_vector_t*	fts_indexes;	\/*!< The indexes that are affected *\/$/;"	m	struct:fts_trx_row_t
fts_indexes	include/fts0types.h	/^	ib_vector_t*	fts_indexes;	\/*!< The FTS indexes that need to be$/;"	m	struct:fts_update_t
fts_init_delete_sql	fts/fts0opt.cc	/^static	const char* fts_init_delete_sql =$/;"	v	file:
fts_init_doc_id	fts/fts0fts.cc	/^fts_init_doc_id($/;"	f
fts_init_get_doc_id	fts/fts0fts.cc	/^fts_init_get_doc_id($/;"	f	file:
fts_init_index	fts/fts0fts.cc	/^fts_init_index($/;"	f
fts_init_recover_doc	fts/fts0fts.cc	/^fts_init_recover_doc($/;"	f	file:
fts_internal_tbl_name	fts/fts0fts.cc	/^char* fts_internal_tbl_name		= NULL;$/;"	v
fts_internal_tbl_name2	fts/fts0fts.cc	/^char* fts_internal_tbl_name2		= NULL;$/;"	v
fts_is_aux_table_name	fts/fts0fts.cc	/^fts_is_aux_table_name($/;"	f	file:
fts_is_charset_cjk	include/fts0types.ic	/^fts_is_charset_cjk($/;"	f
fts_is_index_updated	fts/fts0fts.cc	/^fts_is_index_updated($/;"	f	file:
fts_is_sync_needed	fts/fts0opt.cc	/^fts_is_sync_needed($/;"	f	file:
fts_is_word_in_index	fts/fts0fts.cc	/^fts_is_word_in_index($/;"	f	file:
fts_lexer	fts/fts0pars.cc	/^fts_lexer($/;"	f
fts_lexer_create	fts/fts0pars.cc	/^fts_lexer_create($/;"	f
fts_lexer_free	fts/fts0pars.cc	/^fts_lexer_free($/;"	f
fts_lexer_t	fts/fts0pars.cc	/^struct fts_lexer_t {$/;"	s	file:
fts_load_default_stopword	fts/fts0fts.cc	/^fts_load_default_stopword($/;"	f	file:
fts_load_stopword	fts/fts0fts.cc	/^fts_load_stopword($/;"	f
fts_load_user_stopword	fts/fts0fts.cc	/^fts_load_user_stopword($/;"	f	file:
fts_lookup_word	fts/fts0fts.cc	/^fts_lookup_word($/;"	f	file:
fts_match_t	fts/fts0que.cc	/^struct fts_match_t {$/;"	s	file:
fts_max_cache_size	fts/fts0fts.cc	/^ulong	fts_max_cache_size;$/;"	v
fts_max_token_size	fts/fts0fts.cc	/^ulong	fts_max_token_size;$/;"	v
fts_max_total_cache_size	fts/fts0fts.cc	/^ulong	fts_max_total_cache_size;$/;"	v
fts_merge_doc_ids	fts/fts0que.cc	/^fts_merge_doc_ids($/;"	f	file:
fts_min_token_size	fts/fts0fts.cc	/^ulong	fts_min_token_size;$/;"	v
fts_modify	fts/fts0fts.cc	/^fts_modify($/;"	f
fts_msg_del_t	fts/fts0opt.cc	/^struct fts_msg_del_t {$/;"	s	file:
fts_msg_t	fts/fts0opt.cc	/^struct fts_msg_t {$/;"	s	file:
fts_msg_type_t	fts/fts0opt.cc	/^enum fts_msg_type_t {$/;"	g	file:
fts_need_sync	fts/fts0fts.cc	/^bool	fts_need_sync = false;$/;"	v
fts_next_doc_id	include/trx0trx.h	/^	doc_id_t	fts_next_doc_id;\/* The document id used for updates *\/$/;"	m	struct:trx_t
fts_node_t	include/fts0types.h	/^struct fts_node_t {$/;"	s
fts_num_word_optimize	fts/fts0opt.cc	/^ulong	fts_num_word_optimize;$/;"	v
fts_opt_shutdown_event	fts/fts0opt.cc	/^static os_event_t fts_opt_shutdown_event = NULL;$/;"	v	file:
fts_opt_start_shutdown	fts/fts0opt.cc	/^static bool fts_opt_start_shutdown = false;$/;"	v	file:
fts_optimize_add_table	fts/fts0opt.cc	/^fts_optimize_add_table($/;"	f
fts_optimize_being_deleted_count	fts/fts0opt.cc	/^fts_optimize_being_deleted_count($/;"	f	file:
fts_optimize_compact	fts/fts0opt.cc	/^fts_optimize_compact($/;"	f
fts_optimize_create	fts/fts0opt.cc	/^fts_optimize_create($/;"	f	file:
fts_optimize_create_deleted_doc_id_snapshot	fts/fts0opt.cc	/^fts_optimize_create_deleted_doc_id_snapshot($/;"	f
fts_optimize_create_msg	fts/fts0opt.cc	/^fts_optimize_create_msg($/;"	f	file:
fts_optimize_del_table	fts/fts0opt.cc	/^fts_optimize_del_table($/;"	f	file:
fts_optimize_deleted_pos	fts/fts0opt.cc	/^fts_optimize_deleted_pos($/;"	f
fts_optimize_encode_node	fts/fts0opt.cc	/^fts_optimize_encode_node($/;"	f
fts_optimize_free	fts/fts0opt.cc	/^fts_optimize_free($/;"	f	file:
fts_optimize_get_index_end_time	fts/fts0opt.cc	/^fts_optimize_get_index_end_time($/;"	f
fts_optimize_get_index_start_time	fts/fts0opt.cc	/^fts_optimize_get_index_start_time($/;"	f
fts_optimize_get_time_limit	fts/fts0opt.cc	/^fts_optimize_get_time_limit($/;"	f	file:
fts_optimize_graph_free	fts/fts0opt.cc	/^fts_optimize_graph_free($/;"	f	file:
fts_optimize_graph_t	fts/fts0opt.cc	/^struct fts_optimize_graph_t {$/;"	s	file:
fts_optimize_how_many	fts/fts0opt.cc	/^fts_optimize_how_many($/;"	f	file:
fts_optimize_index	fts/fts0opt.cc	/^fts_optimize_index($/;"	f
fts_optimize_index_completed	fts/fts0opt.cc	/^fts_optimize_index_completed($/;"	f
fts_optimize_index_fetch_node	fts/fts0opt.cc	/^fts_optimize_index_fetch_node($/;"	f
fts_optimize_index_read_words	fts/fts0opt.cc	/^fts_optimize_index_read_words($/;"	f
fts_optimize_indexes	fts/fts0opt.cc	/^fts_optimize_indexes($/;"	f
fts_optimize_init	fts/fts0opt.cc	/^fts_optimize_init(void)$/;"	f
fts_optimize_is_init	fts/fts0opt.cc	/^fts_optimize_is_init(void)$/;"	f
fts_optimize_lookup	fts/fts0opt.cc	/^fts_optimize_lookup($/;"	f	file:
fts_optimize_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fts_optimize_mutex_key;$/;"	v
fts_optimize_new_table	fts/fts0opt.cc	/^fts_optimize_new_table($/;"	f	file:
fts_optimize_node	fts/fts0opt.cc	/^fts_optimize_node($/;"	f
fts_optimize_purge_deleted_doc_id_snapshot	fts/fts0opt.cc	/^fts_optimize_purge_deleted_doc_id_snapshot($/;"	f
fts_optimize_purge_deleted_doc_ids	fts/fts0opt.cc	/^fts_optimize_purge_deleted_doc_ids($/;"	f
fts_optimize_purge_snapshot	fts/fts0opt.cc	/^fts_optimize_purge_snapshot($/;"	f
fts_optimize_read_deleted_doc_id_snapshot	fts/fts0opt.cc	/^fts_optimize_read_deleted_doc_id_snapshot($/;"	f
fts_optimize_read_node	fts/fts0opt.cc	/^fts_optimize_read_node($/;"	f	file:
fts_optimize_remove_table	fts/fts0opt.cc	/^fts_optimize_remove_table($/;"	f
fts_optimize_request_sync_table	fts/fts0opt.cc	/^fts_optimize_request_sync_table($/;"	f
fts_optimize_reset_start_time	fts/fts0opt.cc	/^fts_optimize_reset_start_time($/;"	f
fts_optimize_set_index_end_time	fts/fts0opt.cc	/^fts_optimize_set_index_end_time($/;"	f
fts_optimize_set_index_start_time	fts/fts0opt.cc	/^fts_optimize_set_index_start_time($/;"	f
fts_optimize_shutdown	fts/fts0opt.cc	/^fts_optimize_shutdown()$/;"	f
fts_optimize_sync_table	fts/fts0opt.cc	/^fts_optimize_sync_table($/;"	f
fts_optimize_t	fts/fts0opt.cc	/^struct fts_optimize_t {$/;"	s	file:
fts_optimize_table	fts/fts0opt.cc	/^fts_optimize_table($/;"	f
fts_optimize_table_bk	fts/fts0opt.cc	/^fts_optimize_table_bk($/;"	f
fts_optimize_thread	fts/fts0opt.cc	/^fts_optimize_thread($/;"	f
fts_optimize_time_limit	fts/fts0opt.cc	/^static ib_time_t fts_optimize_time_limit = 0;$/;"	v	file:
fts_optimize_word	fts/fts0opt.cc	/^fts_optimize_word($/;"	f	file:
fts_optimize_words	fts/fts0opt.cc	/^fts_optimize_words($/;"	f	file:
fts_optimize_wq	fts/fts0opt.cc	/^static ib_wqueue_t* fts_optimize_wq;$/;"	v	file:
fts_optimize_write_word	fts/fts0opt.cc	/^fts_optimize_write_word($/;"	f
fts_parallel_merge	row/row0ftsort.cc	/^fts_parallel_merge($/;"	f
fts_parallel_tokenization	row/row0ftsort.cc	/^fts_parallel_tokenization($/;"	f
fts_parent_all_index_set_corrupt	fts/fts0fts.cc	/^fts_parent_all_index_set_corrupt($/;"	f	file:
fts_parse	fts/fts0pars.cc	/^fts_parse($/;"	f
fts_parse_by_parser	fts/fts0plugin.cc	/^fts_parse_by_parser($/;"	f
fts_parse_query_internal	fts/fts0plugin.cc	/^fts_parse_query_internal($/;"	f	file:
fts_parse_sql	fts/fts0sql.cc	/^fts_parse_sql($/;"	f
fts_parse_sql_no_dict_lock	fts/fts0sql.cc	/^fts_parse_sql_no_dict_lock($/;"	f
fts_phrase_or_proximity_search	fts/fts0que.cc	/^fts_phrase_or_proximity_search($/;"	f	file:
fts_phrase_param_t	fts/fts0que.cc	/^struct fts_phrase_param_t {$/;"	s	file:
fts_phrase_t	fts/fts0que.cc	/^	fts_phrase_t(const dict_table_t* table)$/;"	f	struct:fts_phrase_t
fts_phrase_t	fts/fts0que.cc	/^struct fts_phrase_t {$/;"	s	file:
fts_pll_tokenize_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	fts_pll_tokenize_mutex_key;$/;"	v
fts_print_doc_id	fts/fts0que.cc	/^fts_print_doc_id($/;"	f	file:
fts_process_token	fts/fts0fts.cc	/^fts_process_token($/;"	f	file:
fts_proximity_get_positions	fts/fts0que.cc	/^fts_proximity_get_positions($/;"	f	file:
fts_proximity_is_word_in_range	fts/fts0que.cc	/^fts_proximity_is_word_in_range($/;"	f	file:
fts_proximity_t	fts/fts0que.cc	/^struct fts_proximity_t {$/;"	s	file:
fts_psort_common_t	include/row0ftsort.h	/^struct fts_psort_common_t {$/;"	s
fts_psort_insert	include/row0ftsort.h	/^struct fts_psort_insert {$/;"	s
fts_psort_insert_t	include/row0ftsort.h	/^typedef struct fts_psort_insert	fts_psort_insert_t;$/;"	t	typeref:struct:fts_psort_insert
fts_psort_t	include/row0ftsort.h	/^struct fts_psort_t {$/;"	s
fts_que_graph_free	include/fts0fts.h	413;"	d
fts_que_graph_free_check_lock	fts/fts0fts.cc	/^fts_que_graph_free_check_lock($/;"	f
fts_query	fts/fts0que.cc	/^fts_query($/;"	f
fts_query_add_doc_freq	fts/fts0que.cc	/^fts_query_add_doc_freq($/;"	f	file:
fts_query_add_ranking	fts/fts0que.cc	/^fts_query_add_ranking($/;"	f	file:
fts_query_add_word_for_parser	fts/fts0plugin.cc	/^fts_query_add_word_for_parser($/;"	f
fts_query_add_word_freq	fts/fts0que.cc	/^fts_query_add_word_freq($/;"	f	file:
fts_query_add_word_to_document	fts/fts0que.cc	/^fts_query_add_word_to_document($/;"	f	file:
fts_query_cache	fts/fts0que.cc	/^fts_query_cache($/;"	f	file:
fts_query_calculate_idf	fts/fts0que.cc	/^fts_query_calculate_idf($/;"	f	file:
fts_query_calculate_ranking	fts/fts0que.cc	/^fts_query_calculate_ranking($/;"	f	file:
fts_query_can_optimize	fts/fts0que.cc	/^fts_query_can_optimize($/;"	f	file:
fts_query_change_ranking	fts/fts0que.cc	/^fts_query_change_ranking($/;"	f	file:
fts_query_check_node	fts/fts0que.cc	/^fts_query_check_node($/;"	f	file:
fts_query_compare_rank	fts/fts0que.cc	/^fts_query_compare_rank($/;"	f	file:
fts_query_difference	fts/fts0que.cc	/^fts_query_difference($/;"	f
fts_query_execute	fts/fts0que.cc	/^fts_query_execute($/;"	f
fts_query_expansion_fetch_doc	fts/fts0fts.cc	/^fts_query_expansion_fetch_doc($/;"	f
fts_query_fetch_document	fts/fts0que.cc	/^fts_query_fetch_document($/;"	f	file:
fts_query_filter_doc_ids	fts/fts0que.cc	/^fts_query_filter_doc_ids($/;"	f	file:
fts_query_free	fts/fts0que.cc	/^fts_query_free($/;"	f	file:
fts_query_free_doc_ids	fts/fts0que.cc	/^fts_query_free_doc_ids($/;"	f	file:
fts_query_free_result	fts/fts0que.cc	/^fts_query_free_result($/;"	f
fts_query_get_oper_node	fts/fts0plugin.cc	/^fts_query_get_oper_node($/;"	f	file:
fts_query_get_result	fts/fts0que.cc	/^fts_query_get_result($/;"	f	file:
fts_query_get_token	fts/fts0que.cc	/^fts_query_get_token($/;"	f	file:
fts_query_index_fetch_nodes	fts/fts0que.cc	/^fts_query_index_fetch_nodes($/;"	f	file:
fts_query_intersect	fts/fts0que.cc	/^fts_query_intersect($/;"	f
fts_query_intersect_doc_id	fts/fts0que.cc	/^fts_query_intersect_doc_id($/;"	f	file:
fts_query_is_in_proximity_range	fts/fts0que.cc	/^fts_query_is_in_proximity_range($/;"	f
fts_query_match_document	fts/fts0que.cc	/^fts_query_match_document($/;"	f
fts_query_match_phrase	fts/fts0que.cc	/^fts_query_match_phrase($/;"	f	file:
fts_query_match_phrase_add_word_for_parser	fts/fts0que.cc	/^fts_query_match_phrase_add_word_for_parser($/;"	f	file:
fts_query_match_phrase_terms	fts/fts0que.cc	/^fts_query_match_phrase_terms($/;"	f	file:
fts_query_match_phrase_terms_by_parser	fts/fts0que.cc	/^fts_query_match_phrase_terms_by_parser($/;"	f	file:
fts_query_parse	fts/fts0que.cc	/^fts_query_parse($/;"	f	file:
fts_query_phrase_search	fts/fts0que.cc	/^fts_query_phrase_search($/;"	f
fts_query_phrase_split	fts/fts0que.cc	/^fts_query_phrase_split($/;"	f	file:
fts_query_prepare_result	fts/fts0que.cc	/^fts_query_prepare_result($/;"	f	file:
fts_query_process_doc_id	fts/fts0que.cc	/^fts_query_process_doc_id($/;"	f	file:
fts_query_read_node	fts/fts0que.cc	/^fts_query_read_node($/;"	f	file:
fts_query_remove_doc_id	fts/fts0que.cc	/^fts_query_remove_doc_id($/;"	f	file:
fts_query_search_phrase	fts/fts0que.cc	/^fts_query_search_phrase($/;"	f
fts_query_skip_word	fts/fts0que.cc	/^fts_query_skip_word($/;"	f
fts_query_sort_result_on_rank	fts/fts0que.cc	/^fts_query_sort_result_on_rank($/;"	f
fts_query_t	fts/fts0que.cc	/^struct fts_query_t {$/;"	s	file:
fts_query_union	fts/fts0que.cc	/^fts_query_union($/;"	f
fts_query_union_doc_id	fts/fts0que.cc	/^fts_query_union_doc_id($/;"	f	file:
fts_query_visitor	fts/fts0que.cc	/^fts_query_visitor($/;"	f	file:
fts_rank_t	include/fts0fts.h	/^typedef float 		fts_rank_t;$/;"	t
fts_ranking_doc_id_cmp	include/fts0types.ic	/^fts_ranking_doc_id_cmp($/;"	f
fts_ranking_t	include/fts0fts.h	/^struct fts_ranking_t {$/;"	s
fts_ranking_words_add	fts/fts0que.cc	/^fts_ranking_words_add($/;"	f	file:
fts_ranking_words_create	fts/fts0que.cc	/^fts_ranking_words_create($/;"	f	file:
fts_ranking_words_get_next	fts/fts0que.cc	/^fts_ranking_words_get_next($/;"	f	file:
fts_read_doc_id	include/fts0fts.h	78;"	d
fts_read_object_id	include/fts0priv.ic	/^fts_read_object_id($/;"	f
fts_read_stopword	fts/fts0fts.cc	/^fts_read_stopword($/;"	f	file:
fts_read_tables	fts/fts0fts.cc	/^fts_read_tables($/;"	f	file:
fts_read_ulint	fts/fts0fts.cc	/^fts_read_ulint($/;"	f	file:
fts_rename_aux_tables	fts/fts0fts.cc	/^fts_rename_aux_tables($/;"	f
fts_rename_aux_tables_to_hex_format	fts/fts0fts.cc	/^fts_rename_aux_tables_to_hex_format($/;"	f	file:
fts_rename_aux_tables_to_hex_format_low	fts/fts0fts.cc	/^fts_rename_aux_tables_to_hex_format_low($/;"	f
fts_rename_one_aux_table	fts/fts0fts.cc	/^fts_rename_one_aux_table($/;"	f
fts_rename_one_aux_table_to_hex_format	fts/fts0fts.cc	/^fts_rename_one_aux_table_to_hex_format($/;"	f
fts_reset_get_doc	fts/fts0fts.cc	/^fts_reset_get_doc($/;"	f	file:
fts_result_cache_limit	fts/fts0fts.cc	/^ulong	fts_result_cache_limit;$/;"	v
fts_result_t	include/fts0fts.h	/^struct fts_result_t {$/;"	s
fts_retrieve_ranking	fts/fts0que.cc	/^fts_retrieve_ranking($/;"	f
fts_row_state	include/fts0fts.h	/^enum fts_row_state {$/;"	g
fts_savepoint_copy	fts/fts0fts.cc	/^fts_savepoint_copy($/;"	f
fts_savepoint_create	fts/fts0fts.cc	/^fts_savepoint_create($/;"	f	file:
fts_savepoint_free	fts/fts0fts.cc	/^fts_savepoint_free($/;"	f
fts_savepoint_laststmt_refresh	fts/fts0fts.cc	/^fts_savepoint_laststmt_refresh($/;"	f
fts_savepoint_lookup	fts/fts0fts.cc	/^fts_savepoint_lookup($/;"	f
fts_savepoint_release	fts/fts0fts.cc	/^fts_savepoint_release($/;"	f
fts_savepoint_rollback	fts/fts0fts.cc	/^fts_savepoint_rollback($/;"	f
fts_savepoint_rollback_last_stmt	fts/fts0fts.cc	/^fts_savepoint_rollback_last_stmt($/;"	f
fts_savepoint_t	include/fts0fts.h	/^struct fts_savepoint_t {$/;"	s
fts_savepoint_take	fts/fts0fts.cc	/^fts_savepoint_take($/;"	f
fts_scan	fts/fts0pars.cc	/^typedef int (*fts_scan)();$/;"	t	file:
fts_scanner	fts/fts0pars.cc	/^typedef	int	(*fts_scanner)();$/;"	t	file:
fts_scanner_alt	fts/fts0pars.cc	/^typedef	int	(*fts_scanner_alt)(YYSTYPE* val, yyscan_t yyscanner);$/;"	t	file:
fts_select_index	include/fts0types.ic	/^fts_select_index($/;"	f
fts_select_index_by_hash	include/fts0types.ic	/^fts_select_index_by_hash($/;"	f
fts_select_index_by_range	include/fts0types.ic	/^fts_select_index_by_range($/;"	f
fts_select_t	fts/fts0que.cc	/^struct fts_select_t {$/;"	s	file:
fts_set_hex_format	fts/fts0fts.cc	/^fts_set_hex_format($/;"	f	file:
fts_set_index_corrupt	fts/fts0fts.cc	/^fts_set_index_corrupt($/;"	f	file:
fts_set_parent_hex_format_flag	fts/fts0fts.cc	/^fts_set_parent_hex_format_flag($/;"	f	file:
fts_shutdown	fts/fts0fts.cc	/^fts_shutdown($/;"	f
fts_slot_t	fts/fts0opt.cc	/^struct fts_slot_t {$/;"	s	file:
fts_slots	fts/fts0opt.cc	/^static ib_vector_t*  fts_slots;$/;"	v	file:
fts_sort_pll_degree	row/row0ftsort.cc	/^ulong	fts_sort_pll_degree	= 2;$/;"	v
fts_sql_begin	fts/fts0sql.cc	/^static const char* fts_sql_begin=$/;"	v	file:
fts_sql_callback	include/fts0types.h	/^typedef pars_user_func_cb_t fts_sql_callback;$/;"	t
fts_sql_commit	fts/fts0sql.cc	/^fts_sql_commit($/;"	f
fts_sql_end	fts/fts0sql.cc	/^static const char* fts_sql_end=$/;"	v	file:
fts_sql_rollback	fts/fts0sql.cc	/^fts_sql_rollback($/;"	f
fts_start_shutdown	fts/fts0fts.cc	/^fts_start_shutdown($/;"	f
fts_state_t	fts/fts0opt.cc	/^enum fts_state_t {$/;"	g	file:
fts_status	include/fts0fts.h	/^	ulint		fts_status;$/;"	m	class:fts_t
fts_status	include/fts0fts.h	/^enum	fts_status {$/;"	g
fts_status_t	include/fts0fts.h	/^typedef	enum fts_status	fts_status_t;$/;"	t	typeref:enum:fts_status
fts_stopword_t	include/fts0types.h	/^struct fts_stopword_t {$/;"	s
fts_string_dup	include/fts0types.ic	/^fts_string_dup($/;"	f
fts_string_t	include/fts0fts.h	/^struct fts_string_t {$/;"	s
fts_sync	fts/fts0fts.cc	/^fts_sync($/;"	f	file:
fts_sync_add_deleted_cache	fts/fts0fts.cc	/^fts_sync_add_deleted_cache($/;"	f
fts_sync_begin	fts/fts0fts.cc	/^fts_sync_begin($/;"	f	file:
fts_sync_commit	fts/fts0fts.cc	/^fts_sync_commit($/;"	f
fts_sync_index	fts/fts0fts.cc	/^fts_sync_index($/;"	f
fts_sync_index_check	fts/fts0fts.cc	/^fts_sync_index_check($/;"	f	file:
fts_sync_index_reset	fts/fts0fts.cc	/^fts_sync_index_reset($/;"	f	file:
fts_sync_rollback	fts/fts0fts.cc	/^fts_sync_rollback($/;"	f	file:
fts_sync_t	include/fts0types.h	/^struct fts_sync_t {$/;"	s
fts_sync_table	fts/fts0fts.cc	/^fts_sync_table($/;"	f
fts_sync_write_doc_stat	fts/fts0fts.cc	/^fts_sync_write_doc_stat($/;"	f
fts_sync_write_doc_stats	fts/fts0fts.cc	/^fts_sync_write_doc_stats($/;"	f	file:
fts_sync_write_words	fts/fts0fts.cc	/^fts_sync_write_words($/;"	f
fts_t	fts/fts0fts.cc	/^fts_t::fts_t($/;"	f	class:fts_t
fts_t	include/fts0fts.h	/^class fts_t {$/;"	c
fts_table_fetch_doc_ids	fts/fts0opt.cc	/^fts_table_fetch_doc_ids($/;"	f
fts_table_state_enum	include/fts0priv.h	/^enum fts_table_state_enum {$/;"	g
fts_table_state_t	include/fts0priv.h	/^typedef enum fts_table_state_enum fts_table_state_t;$/;"	t	typeref:enum:fts_table_state_enum
fts_table_t	include/fts0fts.h	/^struct fts_table_t {$/;"	s
fts_table_type_t	include/fts0fts.h	/^enum fts_table_type_t {$/;"	g
fts_token_list	include/row0ftsort.h	/^	fts_token_list_t	fts_token_list;$/;"	m	struct:fts_tokenize_ctx
fts_token_list_t	include/row0ftsort.h	/^typedef UT_LIST_BASE_NODE_T(row_fts_token_t)     fts_token_list_t;$/;"	t
fts_token_t	include/fts0types.h	/^struct fts_token_t {$/;"	s
fts_tokenize_add_word_for_parser	fts/fts0fts.cc	/^fts_tokenize_add_word_for_parser($/;"	f	file:
fts_tokenize_by_parser	fts/fts0fts.cc	/^fts_tokenize_by_parser($/;"	f	file:
fts_tokenize_ctx	include/row0ftsort.h	/^	fts_tokenize_ctx() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:fts_tokenize_ctx
fts_tokenize_ctx	include/row0ftsort.h	/^struct fts_tokenize_ctx {$/;"	s
fts_tokenize_ctx_t	include/row0ftsort.h	/^typedef struct fts_tokenize_ctx fts_tokenize_ctx_t;$/;"	t	typeref:struct:fts_tokenize_ctx
fts_tokenize_document	fts/fts0fts.cc	/^fts_tokenize_document($/;"	f
fts_tokenize_document_internal	fts/fts0fts.cc	/^fts_tokenize_document_internal($/;"	f
fts_tokenize_document_next	fts/fts0fts.cc	/^fts_tokenize_document_next($/;"	f
fts_tokenize_param_t	fts/fts0fts.cc	/^struct fts_tokenize_param_t {$/;"	s	file:
fts_tokenizer_word_get	fts/fts0fts.cc	/^fts_tokenizer_word_get($/;"	f	file:
fts_tokenizer_word_t	include/fts0types.h	/^struct fts_tokenizer_word_t {$/;"	s
fts_trx	include/fts0fts.h	/^	fts_trx_t*	fts_trx;	\/*!< link to parent *\/$/;"	m	struct:fts_trx_table_t
fts_trx	include/trx0trx.h	/^	fts_trx_t*	fts_trx;	\/*!< FTS information, or NULL if$/;"	m	struct:trx_t
fts_trx_add_op	fts/fts0fts.cc	/^fts_trx_add_op($/;"	f
fts_trx_create	fts/fts0fts.cc	/^fts_trx_create($/;"	f	file:
fts_trx_free	fts/fts0fts.cc	/^fts_trx_free($/;"	f
fts_trx_init	fts/fts0fts.cc	/^fts_trx_init($/;"	f	file:
fts_trx_row_doc_id_cmp	include/fts0types.ic	/^fts_trx_row_doc_id_cmp($/;"	f
fts_trx_row_get_new_state	fts/fts0fts.cc	/^fts_trx_row_get_new_state($/;"	f	file:
fts_trx_row_t	include/fts0fts.h	/^struct fts_trx_row_t {$/;"	s
fts_trx_t	include/fts0fts.h	/^struct fts_trx_t {$/;"	s
fts_trx_table_add_op	fts/fts0fts.cc	/^fts_trx_table_add_op($/;"	f	file:
fts_trx_table_clone	fts/fts0fts.cc	/^fts_trx_table_clone($/;"	f	file:
fts_trx_table_cmp	include/fts0priv.ic	/^fts_trx_table_cmp($/;"	f
fts_trx_table_create	fts/fts0fts.cc	/^fts_trx_table_create($/;"	f	file:
fts_trx_table_id_cmp	include/fts0priv.ic	/^fts_trx_table_id_cmp($/;"	f
fts_trx_table_rows_free	fts/fts0fts.cc	/^fts_trx_table_rows_free($/;"	f
fts_trx_table_t	include/fts0fts.h	/^struct fts_trx_table_t {$/;"	s
fts_undo_last_stmt	fts/fts0fts.cc	/^fts_undo_last_stmt($/;"	f	file:
fts_update_doc_id	fts/fts0fts.cc	/^fts_update_doc_id($/;"	f
fts_update_doc_id_cmp	include/fts0types.ic	/^fts_update_doc_id_cmp($/;"	f
fts_update_hex_format_flag	fts/fts0fts.cc	/^fts_update_hex_format_flag($/;"	f
fts_update_max_cache_size	fts/fts0fts.cc	/^fts_update_max_cache_size($/;"	f	file:
fts_update_next_doc_id	fts/fts0fts.cc	/^fts_update_next_doc_id($/;"	f
fts_update_sync_doc_id	fts/fts0fts.cc	/^fts_update_sync_doc_id($/;"	f	file:
fts_update_t	include/fts0types.h	/^struct fts_update_t {$/;"	s
fts_valid_parent_table	fts/fts0fts.cc	/^fts_valid_parent_table($/;"	f	file:
fts_valid_stopword_table	fts/fts0fts.cc	/^fts_valid_stopword_table($/;"	f
fts_wait_for_background_thread_to_start	fts/fts0fts.cc	/^fts_wait_for_background_thread_to_start($/;"	f
fts_word_free	fts/fts0opt.cc	/^fts_word_free($/;"	f
fts_word_freq_t	fts/fts0que.cc	/^struct fts_word_freq_t {$/;"	s	file:
fts_word_init	fts/fts0opt.cc	/^fts_word_init($/;"	f
fts_word_t	include/fts0types.h	/^struct fts_word_t {$/;"	s
fts_words_free	fts/fts0fts.cc	/^fts_words_free($/;"	f	file:
fts_write_doc_id	include/fts0fts.h	75;"	d
fts_write_node	fts/fts0fts.cc	/^fts_write_node($/;"	f
fts_write_object_id	include/fts0priv.ic	/^fts_write_object_id($/;"	f
fts_zip_create	fts/fts0opt.cc	/^fts_zip_create($/;"	f	file:
fts_zip_deflate_end	fts/fts0opt.cc	/^fts_zip_deflate_end($/;"	f	file:
fts_zip_init	fts/fts0opt.cc	/^fts_zip_init($/;"	f	file:
fts_zip_initialize	fts/fts0opt.cc	/^fts_zip_initialize($/;"	f	file:
fts_zip_read_word	fts/fts0opt.cc	/^fts_zip_read_word($/;"	f	file:
fts_zip_t	fts/fts0opt.cc	/^struct fts_zip_t {$/;"	s	file:
ftserror	fts/fts0pars.cc	/^ftserror($/;"	f
ftslex	fts/fts0pars.cc	96;"	d	file:
func	include/pars0pars.h	/^	int		func;	\/*!< token code of the function name *\/$/;"	m	struct:func_node_t
func	include/pars0pars.h	/^	pars_user_func_cb_t	func;	\/*!< function address *\/$/;"	m	struct:pars_user_func_t
func	include/row0sel.h	/^			func;		\/*!< User callback function or NULL.$/;"	m	struct:fetch_node_t
func_node_list	include/pars0pars.h	/^	UT_LIST_NODE_T(func_node_t) func_node_list;$/;"	m	struct:func_node_t
func_node_list	include/pars0sym.h	/^				func_node_list;$/;"	m	struct:sym_tab_t
func_node_t	include/pars0pars.h	/^struct func_node_t{$/;"	s
funcs	include/pars0pars.h	/^	ib_vector_t*	funcs;		\/*!< user functions, or NUll$/;"	m	struct:pars_info_t
fut0fut_h	include/fut0fut.h	28;"	d
fut0lst_h	include/fut0lst.h	27;"	d
fut_get_ptr	include/fut0fut.ic	/^fut_get_ptr($/;"	f
general_fetch	handler/ha_innodb.cc	/^ha_innobase::general_fetch($/;"	f	class:ha_innobase
general_space_name	fil/fil0fil.cc	/^const char general_space_name[] = "innodb_general";$/;"	v
generic_indexer_t	include/ut0counter.h	/^struct generic_indexer_t {$/;"	s
get	include/buf0buf.h	/^	buf_page_t* get() const$/;"	f	class:HazardPointer
get	include/ut0pool.h	/^	Type*	get()$/;"	f	struct:Pool
get	include/ut0pool.h	/^	value_type* get()$/;"	f	struct:PoolManager
getLevel	include/btr0bulk.h	/^	ulint	getLevel()$/;"	f	class:PageBulk
getNodePtr	btr/btr0bulk.cc	/^PageBulk::getNodePtr()$/;"	f	class:PageBulk
getPage	include/btr0bulk.h	/^	page_t*	getPage()$/;"	f	class:PageBulk
getPageNo	include/btr0bulk.h	/^	ulint	getPageNo()$/;"	f	class:PageBulk
getPageZip	include/btr0bulk.h	/^	page_zip_des_t*	getPageZip()$/;"	f	class:PageBulk
getRecNo	include/btr0bulk.h	/^	ulint	getRecNo()$/;"	f	class:PageBulk
getSplitRec	btr/btr0bulk.cc	/^PageBulk::getSplitRec()$/;"	f	class:PageBulk
get_array_and_local_segment	os/os0file.cc	/^AIO::get_array_and_local_segment($/;"	f	class:AIO
get_auto_increment	handler/ha_innodb.cc	/^ha_innobase::get_auto_increment($/;"	f	class:ha_innobase
get_auto_increment	handler/ha_innopart.cc	/^ha_innopart::get_auto_increment($/;"	f	class:ha_innopart
get_autoextend_increment	include/fsp0sysspace.h	/^	ulint get_autoextend_increment() const$/;"	f	class:SysTablespace
get_bit	handler/ha_innopart.cc	/^get_bit($/;"	f	file:
get_block	mtr/mtr0mtr.cc	/^	buf_block_t* get_block() const$/;"	f	struct:FindPage
get_buf_dump_dir	buf/buf0dump.cc	/^get_buf_dump_dir()$/;"	f	file:
get_cascade_foreign_key_table_list	handler/ha_innodb.cc	/^ha_innobase::get_cascade_foreign_key_table_list($/;"	f	class:ha_innobase
get_cascade_foreign_key_table_list	handler/ha_innopart.h	/^	get_cascade_foreign_key_table_list($/;"	f	class:ha_innopart
get_col_list_to_be_dropped	handler/handler0alter.cc	/^get_col_list_to_be_dropped($/;"	f	file:
get_count	include/os0thread.h	/^        static int get_count() {$/;"	f	struct:mysql_pfs_key_t
get_counter	include/sync0types.h	/^	Counter* get_counter()$/;"	f	class:LatchMeta
get_dir_path	include/row0trunc.h	/^	const char* get_dir_path() const$/;"	f	class:truncate_t
get_docs	include/fts0types.h	/^	ib_vector_t*	get_docs;	\/*!< information required to read$/;"	m	struct:fts_cache_t
get_document_graph	include/fts0types.h	/^	que_t*		get_document_graph;$/;"	m	struct:fts_get_doc_t
get_dynamic_partition_info	handler/ha_innopart.h	/^	get_dynamic_partition_info($/;"	f	class:ha_innopart
get_eq_range	handler/ha_innopart.h	/^	get_eq_range() const$/;"	f	class:ha_innopart
get_error_key_name	handler/handler0alter.cc	/^get_error_key_name($/;"	f	file:
get_error_message	handler/ha_innodb.cc	/^ha_innobase::get_error_message($/;"	f	class:ha_innobase
get_field_offset	handler/ha_innodb.cc	/^get_field_offset($/;"	f	file:
get_first_lock	lock/lock0lock.cc	/^DeadlockChecker::get_first_lock(ulint* heap_no) const$/;"	f	class:DeadlockChecker
get_flush_observer	include/mtr0mtr.h	/^	FlushObserver* get_flush_observer() const$/;"	f	struct:mtr_t
get_foreign_dup_key	handler/ha_innodb.cc	/^ha_innobase::get_foreign_dup_key($/;"	f	class:ha_innobase
get_foreign_dup_key	handler/ha_innopart.h	/^	get_foreign_dup_key($/;"	f	class:ha_innopart
get_foreign_key_create_info	handler/ha_innodb.cc	/^ha_innobase::get_foreign_key_create_info(void)$/;"	f	class:ha_innobase
get_foreign_key_create_info	handler/ha_innopart.h	/^	get_foreign_key_create_info()$/;"	f	class:ha_innopart
get_foreign_key_info	handler/ha_innodb.cc	/^get_foreign_key_info($/;"	f	file:
get_foreign_key_list	handler/ha_innodb.cc	/^ha_innobase::get_foreign_key_list($/;"	f	class:ha_innobase
get_foreign_key_list	handler/ha_innopart.h	/^	get_foreign_key_list($/;"	f	class:ha_innopart
get_handler	handler/ha_innopart.h	/^	get_handler()$/;"	f	class:ha_innopart
get_id	include/sync0policy.h	/^	latch_id_t get_id() const$/;"	f	class:BlockMutexPolicy
get_id	include/sync0types.h	/^	latch_id_t get_id() const$/;"	f	class:LatchMeta
get_id	include/sync0types.h	/^	latch_id_t get_id() const$/;"	f	struct:latch_t
get_increment	fsp/fsp0sysspace.cc	/^SysTablespace::get_increment() const$/;"	f	class:SysTablespace
get_index	handler/ha_innopart.cc	/^Ha_innopart_share::get_index($/;"	f	class:Ha_innopart_share
get_innobase_type_from_mysql_type	handler/ha_innodb.cc	/^get_innobase_type_from_mysql_type($/;"	f
get_ith_rseg	include/trx0purge.h	/^		trx_rseg_t* get_ith_rseg(ulint id)$/;"	f	class:undo::Truncate
get_level	include/sync0types.h	/^	latch_level_t get_level() const$/;"	f	class:LatchMeta
get_level	sync/sync0debug.cc	/^	latch_level_t get_level() const$/;"	f	struct:Latched
get_level_name	include/sync0types.h	/^	const char* get_level_name() const$/;"	f	class:LatchMeta
get_log	include/mtr0mtr.h	/^	const mtr_buf_t* get_log() const$/;"	f	struct:mtr_t
get_log	include/mtr0mtr.h	/^	mtr_buf_t* get_log()$/;"	f	struct:mtr_t
get_log_mode	include/mtr0mtr.ic	/^mtr_t::get_log_mode() const$/;"	f	class:mtr_t
get_logging_status	row/row0trunc.cc	/^	bool get_logging_status() const$/;"	f	class:Callback
get_marked_space_id	include/trx0purge.h	/^		ulint get_marked_space_id() const$/;"	f	class:undo::Truncate
get_master_key	os/os0file.cc	/^Encryption::get_master_key(ulint master_key_id,$/;"	f	class:Encryption
get_master_key	os/os0file.cc	/^Encryption::get_master_key(ulint* master_key_id,$/;"	f	class:Encryption
get_mem_key	include/ut0new.h	/^	get_mem_key($/;"	f	class:ut_allocator
get_memo	include/mtr0mtr.h	/^	const mtr_buf_t* get_memo() const$/;"	f	struct:mtr_t
get_memo	include/mtr0mtr.h	/^	mtr_buf_t* get_memo()$/;"	f	struct:mtr_t
get_memory_buffer_size	handler/ha_innodb.cc	/^ha_innobase::get_memory_buffer_size() const$/;"	f	class:ha_innobase
get_mlog_string	log/log0recv.cc	/^get_mlog_string(mlog_id_t type)$/;"	f
get_mysql_key	handler/ha_innopart.cc	/^Ha_innopart_share::get_mysql_key($/;"	f	class:Ha_innopart_share
get_name	include/sync0types.h	/^	const char* get_name() const$/;"	f	class:LatchMeta
get_next_lock	lock/lock0lock.cc	/^DeadlockChecker::get_next_lock(const lock_t* lock, ulint heap_no) const$/;"	f	class:DeadlockChecker
get_next_noredo_rseg	trx/trx0trx.cc	/^get_next_noredo_rseg($/;"	f	file:
get_next_redo_rseg	trx/trx0trx.cc	/^get_next_redo_rseg($/;"	f	file:
get_oldest_view	read/read0read.cc	/^MVCC::get_oldest_view() const$/;"	f	class:MVCC
get_page_size	include/fil0fil.h	/^	const page_size_t& get_page_size() const$/;"	f	struct:PageCallback
get_pages_from_size	include/fsp0sysspace.h	/^	ulint get_pages_from_size(os_offset_t size)$/;"	f	class:SysTablespace
get_parent_foreign_key_list	handler/ha_innodb.cc	/^ha_innobase::get_parent_foreign_key_list($/;"	f	class:ha_innobase
get_parent_foreign_key_list	handler/ha_innopart.h	/^	get_parent_foreign_key_list($/;"	f	class:ha_innopart
get_partition_handler	handler/ha_innopart.h	/^	get_partition_handler()$/;"	f	class:ha_innopart
get_pfs_key	include/sync0types.h	/^	pfs_key_t get_pfs_key() const$/;"	f	class:LatchMeta
get_prebuilt	handler/ha_innopart.cc	/^	get_prebuilt($/;"	f	class:Altered_partitions
get_ref_count	include/dict0dict.ic	/^dict_table_t::get_ref_count() const$/;"	f	class:dict_table_t
get_row_format	handler/ha_innodb.cc	/^get_row_format($/;"	f	file:
get_row_format_name	handler/ha_innodb.cc	/^get_row_format_name($/;"	f
get_row_type	handler/ha_innodb.cc	/^ha_innobase::get_row_type() const$/;"	f	class:ha_innobase
get_rseg_truncate_frequency	include/trx0purge.h	/^		ulint get_rseg_truncate_frequency() const$/;"	f	class:undo::Truncate
get_sanity_check_status	include/fsp0sysspace.h	/^	bool get_sanity_check_status()$/;"	f	class:SysTablespace
get_scan_start	include/trx0purge.h	/^		ulint get_scan_start() const$/;"	f	class:undo::Truncate
get_segment_no_from_slot	os/os0file.cc	/^AIO::get_segment_no_from_slot($/;"	f	class:AIO
get_share	handler/ha_innodb.cc	/^get_share($/;"	f	file:
get_slot	mtr/mtr0mtr.cc	/^	mtr_memo_slot_t* get_slot() const$/;"	f	struct:FindPage
get_sum_of_sizes	include/fsp0space.h	/^	ulint get_sum_of_sizes() const$/;"	f	class:Tablespace
get_table	handler/ha_innopart.h	/^	get_table() const$/;"	f	class:ha_innopart
get_table_name_info	handler/ha_innodb.cc	/^get_table_name_info($/;"	f	file:
get_table_part	handler/ha_innopart.h	/^	get_table_part($/;"	f	class:Ha_innopart_share
get_tablespace_full_status	include/fsp0sysspace.h	/^	bool get_tablespace_full_status()$/;"	f	class:SysTablespace
get_thd	handler/ha_innopart.h	/^	get_thd() const$/;"	f	class:ha_innopart
get_truncated_tablespace_init_lsn	row/row0trunc.cc	/^truncate_t::get_truncated_tablespace_init_lsn(ulint space_id)$/;"	f	class:truncate_t
get_trx_no	include/trx0types.h	/^	trx_id_t get_trx_no() const$/;"	f	class:TrxUndoRsegs
get_view	read/read0read.cc	/^MVCC::get_view()$/;"	f	class:MVCC
get_wkb_of_default_point	gis/gis0geo.cc	/^get_wkb_of_default_point($/;"	f
gis0rtree_h	include/gis0rtree.h	27;"	d
gis0type_h	include/gis0type.h	27;"	d
go_up	include/fts0ast.h	/^	bool		go_up;			\/*!< Flag if go one level up *\/$/;"	m	struct:fts_ast_node_t
graph	fts/fts0opt.cc	/^			graph;		\/*optimize *\/$/;"	m	struct:fts_optimize_t	file:
graph	include/que0que.h	/^	que_t*		graph;		\/*!< graph where this node belongs *\/$/;"	m	struct:que_thr_t
graph	include/que0que.h	/^	que_t*		graph;		\/*!< query graph of this node *\/$/;"	m	struct:que_fork_t
graph	include/trx0trx.h	/^	que_t*		graph;		\/*!< query currently run in the session,$/;"	m	struct:trx_t
graph_owns_us	include/pars0pars.h	/^	ibool		graph_owns_us;	\/*!< if TRUE (which is the default),$/;"	m	struct:pars_info_t
graphs	include/que0que.h	/^			graphs;		\/*!< list of query graphs of a session$/;"	m	struct:que_fork_t
grph	api/api0api.cc	/^	ib_qry_grph_t	grph;		\/*!< Query graph *\/$/;"	m	struct:ib_qry_proc_t	file:
guess_block	include/trx0undo.h	/^	buf_block_t*	guess_block;	\/*!< guess for the buffer block where$/;"	m	struct:trx_undo_t
ha0ha_h	include/ha0ha.h	27;"	d
ha0storage_h	include/ha0storage.h	29;"	d
ha_btr_search_latch_x_locked	ha/ha0ha.cc	/^ha_btr_search_latch_x_locked(const hash_table_t* table)$/;"	f	file:
ha_chain_get_first	include/ha0ha.ic	/^ha_chain_get_first($/;"	f
ha_chain_get_next	include/ha0ha.ic	/^ha_chain_get_next($/;"	f
ha_clear	ha/ha0ha.cc	/^ha_clear($/;"	f
ha_delete_hash_node	ha/ha0ha.cc	/^ha_delete_hash_node($/;"	f
ha_innobase	handler/ha_innodb.cc	/^ha_innobase::ha_innobase($/;"	f	class:ha_innobase
ha_innobase	handler/ha_innodb.h	/^class ha_innobase: public handler$/;"	c
ha_innobase	include/univ.i	74;"	d	file:
ha_innobase_exts	handler/ha_innodb.cc	/^static const char* ha_innobase_exts[] = {$/;"	v	file:
ha_innobase_inplace_ctx	handler/handler0alter.cc	/^	ha_innobase_inplace_ctx(row_prebuilt_t*& prebuilt_arg,$/;"	f	struct:ha_innobase_inplace_ctx
ha_innobase_inplace_ctx	handler/handler0alter.cc	/^struct ha_innobase_inplace_ctx : public inplace_alter_handler_ctx$/;"	s	file:
ha_innopart	handler/ha_innopart.cc	/^ha_innopart::ha_innopart($/;"	f	class:ha_innopart
ha_innopart	handler/ha_innopart.h	/^class ha_innopart:$/;"	c
ha_innopart_h	handler/ha_innopart.h	22;"	d
ha_innopart_inplace_ctx	handler/handler0alter.cc	/^	ha_innopart_inplace_ctx(THD *thd, uint tot_parts)$/;"	f	class:ha_innopart_inplace_ctx
ha_innopart_inplace_ctx	handler/handler0alter.cc	/^class ha_innopart_inplace_ctx : public inplace_alter_handler_ctx$/;"	c	file:
ha_insert_for_fold	include/ha0ha.h	146;"	d
ha_insert_for_fold	include/ha0ha.h	160;"	d
ha_insert_for_fold_func	ha/ha0ha.cc	/^ha_insert_for_fold_func($/;"	f
ha_node_get_data	include/ha0ha.ic	/^ha_node_get_data($/;"	f
ha_node_set_data	include/ha0ha.ic	73;"	d	file:
ha_node_set_data	include/ha0ha.ic	79;"	d	file:
ha_node_set_data_func	include/ha0ha.ic	/^ha_node_set_data_func($/;"	f
ha_node_t	include/ha0ha.h	/^struct ha_node_t {$/;"	s
ha_print_info	ha/ha0ha.cc	/^ha_print_info($/;"	f
ha_remove_all_nodes_to_page	ha/ha0ha.cc	/^ha_remove_all_nodes_to_page($/;"	f
ha_search_and_delete_if_found	include/ha0ha.ic	/^ha_search_and_delete_if_found($/;"	f
ha_search_and_get_data	include/ha0ha.ic	/^ha_search_and_get_data($/;"	f
ha_search_and_update_if_found	include/ha0ha.h	69;"	d
ha_search_and_update_if_found	include/ha0ha.h	79;"	d
ha_search_and_update_if_found_func	ha/ha0ha.cc	/^ha_search_and_update_if_found_func($/;"	f
ha_search_with_data	include/ha0ha.ic	/^ha_search_with_data($/;"	f
ha_storage_create	include/ha0storage.ic	/^ha_storage_create($/;"	f
ha_storage_empty	include/ha0storage.ic	/^ha_storage_empty($/;"	f
ha_storage_free	include/ha0storage.ic	/^ha_storage_free($/;"	f
ha_storage_get	ha/ha0storage.cc	/^ha_storage_get($/;"	f	file:
ha_storage_get_size	include/ha0storage.ic	/^ha_storage_get_size($/;"	f
ha_storage_node_t	include/ha0storage.ic	/^struct ha_storage_node_t {$/;"	s	file:
ha_storage_put	include/ha0storage.h	80;"	d
ha_storage_put_memlim	ha/ha0storage.cc	/^ha_storage_put_memlim($/;"	f
ha_storage_put_str	include/ha0storage.h	90;"	d
ha_storage_put_str_memlim	include/ha0storage.h	102;"	d
ha_storage_t	include/ha0storage.ic	/^struct ha_storage_t {$/;"	s	file:
ha_validate	ha/ha0ha.cc	/^ha_validate($/;"	f
handle	include/fil0fil.h	/^	pfs_os_file_t	handle;$/;"	m	struct:fil_node_t
handle	include/fsp0file.h	/^	pfs_os_file_t	handle()	const$/;"	f	class:Datafile
handle	os/os0file.cc	/^	HANDLE			handle;$/;"	m	struct:Slot	file:
has_clust_rec_x_lock	include/row0upd.h	/^	ibool		has_clust_rec_x_lock;$/;"	m	struct:upd_node_t
has_committed	include/mtr0mtr.h	/^	bool has_committed() const$/;"	f	struct:mtr_t
has_modifications	include/mtr0mtr.h	/^	bool has_modifications() const$/;"	f	struct:mtr_t
has_new_v_col	include/dict0mem.h	/^	bool		has_new_v_col;$/;"	m	struct:dict_index_t
has_raw_device	fsp/fsp0sysspace.cc	/^SysTablespace::has_raw_device()$/;"	f	class:SysTablespace
has_search_latch	include/trx0trx.h	/^	bool		has_search_latch;$/;"	m	struct:trx_t
has_space	include/dyn0buf.h	/^	bool has_space(ulint size) const$/;"	f	class:dyn_buf_t
has_space	include/dyn0buf.h	/^	bool has_space(ulint size)$/;"	f	class:dyn_buf_t
hash	include/buf0buf.h	/^	buf_page_t*	hash;		\/*!< node used in chaining to$/;"	m	class:buf_page_t
hash	include/fil0fil.h	/^	hash_node_t	hash;	\/*!< hash chain node *\/$/;"	m	struct:fil_space_t
hash	include/ha0storage.ic	/^	hash_table_t*	hash;	\/*!< hash table used to avoid$/;"	m	struct:ha_storage_t	file:
hash	include/lock0priv.h	/^	lock_t*		hash;		\/*!< hash chain node for a record$/;"	m	struct:lock_t
hash0hash_h	include/hash0hash.h	27;"	d
hash_analysis	include/btr0sea.h	/^	ulint	hash_analysis;	\/*!< when this exceeds$/;"	m	struct:btr_search_t
hash_assert_can_modify	include/ha0ha.h	240;"	d
hash_assert_can_modify	include/ha0ha.ic	/^hash_assert_can_modify($/;"	f
hash_assert_can_search	include/ha0ha.h	241;"	d
hash_assert_can_search	include/ha0ha.ic	/^hash_assert_can_search($/;"	f
hash_calc_hash	include/hash0hash.ic	/^hash_calc_hash($/;"	f
hash_cell_t	include/hash0hash.h	/^struct hash_cell_t{$/;"	s
hash_chain	include/trx0i_s.h	/^	i_s_hash_chain_t hash_chain;	\/*!< hash table chain node for$/;"	m	struct:i_s_locks_row_t
hash_create	ha/hash0hash.cc	/^hash_create($/;"	f
hash_create	include/hash0hash.h	41;"	d
hash_create_sync_obj	ha/hash0hash.cc	/^hash_create_sync_obj($/;"	f
hash_get_heap	include/hash0hash.h	514;"	d
hash_get_heap	include/hash0hash.ic	/^hash_get_heap($/;"	f
hash_get_lock	include/hash0hash.ic	/^hash_get_lock($/;"	f
hash_get_mutex	include/hash0hash.ic	/^hash_get_mutex($/;"	f
hash_get_n_cells	include/hash0hash.ic	/^hash_get_n_cells($/;"	f
hash_get_nth_cell	include/hash0hash.ic	/^hash_get_nth_cell($/;"	f
hash_get_nth_heap	include/hash0hash.ic	/^hash_get_nth_heap($/;"	f
hash_get_nth_lock	include/hash0hash.ic	/^hash_get_nth_lock($/;"	f
hash_get_nth_mutex	include/hash0hash.ic	/^hash_get_nth_mutex($/;"	f
hash_get_sync_obj_index	include/hash0hash.ic	/^hash_get_sync_obj_index($/;"	f
hash_lock_s	ha/hash0hash.cc	/^hash_lock_s($/;"	f
hash_lock_s	include/hash0hash.h	520;"	d
hash_lock_s_confirm	include/hash0hash.ic	/^hash_lock_s_confirm($/;"	f
hash_lock_x	ha/hash0hash.cc	/^hash_lock_x($/;"	f
hash_lock_x	include/hash0hash.h	521;"	d
hash_lock_x_all	ha/hash0hash.cc	/^hash_lock_x_all($/;"	f
hash_lock_x_all	include/hash0hash.h	524;"	d
hash_lock_x_confirm	include/hash0hash.ic	/^hash_lock_x_confirm($/;"	f
hash_mutex_enter	ha/hash0hash.cc	/^hash_mutex_enter($/;"	f
hash_mutex_enter	include/hash0hash.h	515;"	d
hash_mutex_enter_all	ha/hash0hash.cc	/^hash_mutex_enter_all($/;"	f
hash_mutex_enter_all	include/hash0hash.h	517;"	d
hash_mutex_exit	ha/hash0hash.cc	/^hash_mutex_exit($/;"	f
hash_mutex_exit	include/hash0hash.h	516;"	d
hash_mutex_exit_all	ha/hash0hash.cc	/^hash_mutex_exit_all($/;"	f
hash_mutex_exit_all	include/hash0hash.h	518;"	d
hash_mutex_exit_all_but	ha/hash0hash.cc	/^hash_mutex_exit_all_but($/;"	f
hash_mutex_exit_all_but	include/hash0hash.h	519;"	d
hash_node_t	include/hash0hash.h	/^typedef void*	hash_node_t;$/;"	t
hash_table	include/lock0priv.h	/^	hash_table_t* hash_table() const$/;"	f	struct:lock_t
hash_table_clear	include/hash0hash.ic	/^hash_table_clear($/;"	f
hash_table_free	ha/hash0hash.cc	/^hash_table_free($/;"	f
hash_table_locks_key	sync/sync0sync.cc	/^mysql_pfs_key_t	hash_table_locks_key;$/;"	v
hash_table_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	hash_table_mutex_key;$/;"	v
hash_table_sync_t	include/hash0hash.h	/^enum hash_table_sync_t {$/;"	g
hash_table_t	include/hash0hash.h	/^struct hash_table_t {$/;"	s
hash_tables	include/btr0sea.h	/^	hash_table_t**	hash_tables;	\/*!< the adaptive hash tables,$/;"	m	struct:btr_search_sys_t
hash_unlock_s	ha/hash0hash.cc	/^hash_unlock_s($/;"	f
hash_unlock_s	include/hash0hash.h	522;"	d
hash_unlock_x	ha/hash0hash.cc	/^hash_unlock_x($/;"	f
hash_unlock_x	include/hash0hash.h	523;"	d
hash_unlock_x_all	ha/hash0hash.cc	/^hash_unlock_x_all($/;"	f
hash_unlock_x_all	include/hash0hash.h	525;"	d
hash_unlock_x_all_but	ha/hash0hash.cc	/^hash_unlock_x_all_but($/;"	f
hash_unlock_x_all_but	include/hash0hash.h	526;"	d
hashed	handler/i_s.cc	/^	unsigned	hashed:1;	\/*!< Whether hash index has been$/;"	m	struct:buf_page_info_t	file:
hdr_offset	include/trx0purge.h	/^	ulint		hdr_offset;	\/*!< Header byte offset on the page *\/$/;"	m	struct:trx_purge_t
hdr_offset	include/trx0undo.h	/^	ulint		hdr_offset;	\/*!< header offset of the undo log on$/;"	m	struct:trx_undo_t
hdr_page_no	include/trx0purge.h	/^	ulint		hdr_page_no;	\/*!< Header page of the undo log where$/;"	m	struct:trx_purge_t
hdr_page_no	include/trx0undo.h	/^	ulint		hdr_page_no;	\/*!< page number of the header page in$/;"	m	struct:trx_undo_t
head	include/fts0ast.h	/^	fts_ast_node_t*	head;			\/*!< Children list head *\/$/;"	m	struct:fts_ast_list_t
head	row/row0log.cc	/^	row_log_buf_t	head;	\/*!< reader context; protected by MDL only;$/;"	m	struct:row_log_t	file:
heap	api/api0api.cc	/^	mem_heap_t*		heap;	\/*!< Heap used to build$/;"	m	struct:ib_tuple_t	file:
heap	api/api0api.cc	/^	mem_heap_t*	heap;		\/*!< Heap used to build this and all$/;"	m	struct:ib_index_def_t	file:
heap	api/api0api.cc	/^	mem_heap_t*	heap;		\/*!< Heap used to build this and all$/;"	m	struct:ib_table_def_t	file:
heap	api/api0api.cc	/^	mem_heap_t*	heap;		\/*!< Instance heap *\/$/;"	m	struct:ib_cursor_t	file:
heap	fts/fts0opt.cc	/^	mem_heap_t*	heap;		\/*!< The heap used to allocate this$/;"	m	struct:fts_msg_t	file:
heap	fts/fts0que.cc	/^	mem_heap_t*		heap;$/;"	m	struct:fts_phrase_t	file:
heap	fts/fts0que.cc	/^	mem_heap_t*	heap;		\/*!< Heap for word processing *\/$/;"	m	struct:fts_phrase_param_t	file:
heap	fts/fts0que.cc	/^	mem_heap_t*	heap;		\/*!< Heap to use for allocations *\/$/;"	m	struct:fts_query_t	file:
heap	handler/handler0alter.cc	/^	mem_heap_t*	heap;$/;"	m	struct:ha_innobase_inplace_ctx	file:
heap	include/data0data.h	/^	mem_heap_t*	heap;		\/*!< memory heap from which$/;"	m	struct:big_rec_t
heap	include/dict0crea.h	/^	mem_heap_t*	heap;		\/*!< memory heap used as auxiliary$/;"	m	struct:ind_node_t
heap	include/dict0crea.h	/^	mem_heap_t*	heap;		\/*!< memory heap used as auxiliary$/;"	m	struct:tab_node_t
heap	include/dict0mem.h	/^	mem_heap_t*				heap;$/;"	m	struct:dict_table_t
heap	include/dict0mem.h	/^	mem_heap_t*	heap;		\/*!< this object is allocated from$/;"	m	struct:dict_foreign_t
heap	include/dict0mem.h	/^	mem_heap_t*	heap;	\/*!< memory heap *\/$/;"	m	struct:dict_index_t
heap	include/fts0ast.h	/^	mem_heap_t*	heap;			\/*!< Heap to use for alloc *\/$/;"	m	struct:fts_ast_state_t
heap	include/fts0fts.h	/^	mem_heap_t*	heap;		\/*!< heap *\/$/;"	m	struct:fts_trx_t
heap	include/fts0types.h	/^	ib_alloc_t*	heap;		\/*!< The memory allocator to use *\/$/;"	m	struct:fts_stopword_t
heap	include/gis0type.h	/^	mem_heap_t*	heap;	\/*!< memory heap *\/$/;"	m	struct:rtr_info
heap	include/ha0storage.ic	/^	mem_heap_t*	heap;	\/*!< memory heap from which memory is$/;"	m	struct:ha_storage_t	file:
heap	include/hash0hash.h	/^	mem_heap_t*		heap;$/;"	m	struct:hash_table_t
heap	include/log0recv.h	/^	mem_heap_t*	heap;	\/*!< memory heap of log records and file$/;"	m	struct:recv_sys_t
heap	include/pars0pars.h	/^	mem_heap_t*	heap;		\/*!< our own memory heap *\/$/;"	m	struct:pars_info_t
heap	include/pars0sym.h	/^	mem_heap_t*		heap;	\/*!< memory heap from which we can$/;"	m	struct:sym_tab_t
heap	include/que0que.h	/^	mem_heap_t*	heap;		\/*!< memory heap where the fork was$/;"	m	struct:que_fork_t
heap	include/row0ftsort.h	/^	mem_heap_t*	heap;		\/*!< heap *\/$/;"	m	struct:fts_psort_insert
heap	include/row0merge.h	/^	mem_heap_t*	heap;		\/*!< memory heap where allocated *\/$/;"	m	struct:row_merge_buf_t
heap	include/row0mysql.h	/^	mem_heap_t*	heap;		\/*!< memory heap from which$/;"	m	struct:row_prebuilt_t
heap	include/row0purge.h	/^	mem_heap_t*	heap;	\/*!< memory heap used as auxiliary storage for$/;"	m	struct:purge_node_t
heap	include/row0undo.h	/^	mem_heap_t*	heap;	\/*!< memory heap used as auxiliary storage for$/;"	m	struct:undo_node_t
heap	include/row0upd.h	/^	mem_heap_t*	heap;		\/*!< heap from which memory allocated *\/$/;"	m	struct:upd_t
heap	include/row0upd.h	/^	mem_heap_t*	heap;	\/*!< memory heap used as auxiliary storage;$/;"	m	struct:upd_node_t
heap	include/ut0list.h	/^	mem_heap_t*	heap;		\/*!< memory heap *\/$/;"	m	struct:ib_list_helper_t
heap_alloc	fts/fts0opt.cc	/^	ib_alloc_t*	heap_alloc;	\/*!< Heap to use for allocations *\/$/;"	m	struct:fts_zip_t	file:
heap_alloc	include/fts0types.h	/^	ib_alloc_t*	heap_alloc;	\/*!< For handling all allocations *\/$/;"	m	struct:fts_word_t
heaps	include/hash0hash.h	/^	mem_heap_t**		heaps;	\/*!< if this is non-NULL, hash$/;"	m	struct:hash_table_t
height	include/ibuf0ibuf.ic	/^	ulint		height;		\/*!< tree height *\/$/;"	m	struct:ibuf_t	file:
hex	include/ut0ut.h	/^	explicit hex(uintmax_t t): m_val(t) {}$/;"	f	struct:ib::hex
hex	include/ut0ut.h	/^struct hex {$/;"	s	namespace:ib
high_level_read_only	srv/srv0srv.cc	/^my_bool	high_level_read_only;$/;"	v
hint_need_to_fetch_extra_cols	include/row0mysql.h	/^	ulint		hint_need_to_fetch_extra_cols;$/;"	m	struct:row_prebuilt_t
hit_list	include/trx0trx.h	/^	hit_list_t	hit_list;	\/*!< List of transactions to kill,$/;"	m	struct:trx_t
hit_list_t	include/trx0trx.h	/^typedef std::list<TrxVersion, ut_allocator<TrxVersion> > hit_list_t;$/;"	t
i_s_cmp_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_cmp_fields_info[] =$/;"	v	file:
i_s_cmp_fill	handler/i_s.cc	/^i_s_cmp_fill($/;"	f	file:
i_s_cmp_fill_low	handler/i_s.cc	/^i_s_cmp_fill_low($/;"	f	file:
i_s_cmp_init	handler/i_s.cc	/^i_s_cmp_init($/;"	f	file:
i_s_cmp_per_index_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_cmp_per_index_fields_info[] =$/;"	v	file:
i_s_cmp_per_index_fill	handler/i_s.cc	/^i_s_cmp_per_index_fill($/;"	f	file:
i_s_cmp_per_index_fill_low	handler/i_s.cc	/^i_s_cmp_per_index_fill_low($/;"	f	file:
i_s_cmp_per_index_init	handler/i_s.cc	/^i_s_cmp_per_index_init($/;"	f	file:
i_s_cmp_per_index_reset_fill	handler/i_s.cc	/^i_s_cmp_per_index_reset_fill($/;"	f	file:
i_s_cmp_per_index_reset_init	handler/i_s.cc	/^i_s_cmp_per_index_reset_init($/;"	f	file:
i_s_cmp_reset_fill	handler/i_s.cc	/^i_s_cmp_reset_fill($/;"	f	file:
i_s_cmp_reset_init	handler/i_s.cc	/^i_s_cmp_reset_init($/;"	f	file:
i_s_cmpmem_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_cmpmem_fields_info[] =$/;"	v	file:
i_s_cmpmem_fill	handler/i_s.cc	/^i_s_cmpmem_fill($/;"	f	file:
i_s_cmpmem_fill_low	handler/i_s.cc	/^i_s_cmpmem_fill_low($/;"	f	file:
i_s_cmpmem_init	handler/i_s.cc	/^i_s_cmpmem_init($/;"	f	file:
i_s_cmpmem_reset_fill	handler/i_s.cc	/^i_s_cmpmem_reset_fill($/;"	f	file:
i_s_cmpmem_reset_init	handler/i_s.cc	/^i_s_cmpmem_reset_init($/;"	f	file:
i_s_common_deinit	handler/i_s.cc	/^i_s_common_deinit($/;"	f	file:
i_s_dict_fill_sys_columns	handler/i_s.cc	/^i_s_dict_fill_sys_columns($/;"	f	file:
i_s_dict_fill_sys_datafiles	handler/i_s.cc	/^i_s_dict_fill_sys_datafiles($/;"	f	file:
i_s_dict_fill_sys_fields	handler/i_s.cc	/^i_s_dict_fill_sys_fields($/;"	f	file:
i_s_dict_fill_sys_foreign	handler/i_s.cc	/^i_s_dict_fill_sys_foreign($/;"	f	file:
i_s_dict_fill_sys_foreign_cols	handler/i_s.cc	/^i_s_dict_fill_sys_foreign_cols($/;"	f	file:
i_s_dict_fill_sys_indexes	handler/i_s.cc	/^i_s_dict_fill_sys_indexes($/;"	f	file:
i_s_dict_fill_sys_tables	handler/i_s.cc	/^i_s_dict_fill_sys_tables($/;"	f	file:
i_s_dict_fill_sys_tablespaces	handler/i_s.cc	/^i_s_dict_fill_sys_tablespaces($/;"	f	file:
i_s_dict_fill_sys_tablestats	handler/i_s.cc	/^i_s_dict_fill_sys_tablestats($/;"	f	file:
i_s_dict_fill_sys_virtual	handler/i_s.cc	/^i_s_dict_fill_sys_virtual($/;"	f	file:
i_s_files_table_fill	handler/i_s.cc	/^i_s_files_table_fill($/;"	f
i_s_fts_being_deleted_fill	handler/i_s.cc	/^i_s_fts_being_deleted_fill($/;"	f	file:
i_s_fts_being_deleted_init	handler/i_s.cc	/^i_s_fts_being_deleted_init($/;"	f	file:
i_s_fts_config_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_fts_config_fields_info[] =$/;"	v	file:
i_s_fts_config_fill	handler/i_s.cc	/^i_s_fts_config_fill($/;"	f	file:
i_s_fts_config_init	handler/i_s.cc	/^i_s_fts_config_init($/;"	f	file:
i_s_fts_deleted_fill	handler/i_s.cc	/^i_s_fts_deleted_fill($/;"	f	file:
i_s_fts_deleted_generic_fill	handler/i_s.cc	/^i_s_fts_deleted_generic_fill($/;"	f	file:
i_s_fts_deleted_init	handler/i_s.cc	/^i_s_fts_deleted_init($/;"	f	file:
i_s_fts_doc_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_fts_doc_fields_info[] =$/;"	v	file:
i_s_fts_index_cache_fill	handler/i_s.cc	/^i_s_fts_index_cache_fill($/;"	f	file:
i_s_fts_index_cache_fill_one_index	handler/i_s.cc	/^i_s_fts_index_cache_fill_one_index($/;"	f	file:
i_s_fts_index_cache_init	handler/i_s.cc	/^i_s_fts_index_cache_init($/;"	f	file:
i_s_fts_index_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_fts_index_fields_info[] =$/;"	v	file:
i_s_fts_index_table_fill	handler/i_s.cc	/^i_s_fts_index_table_fill($/;"	f	file:
i_s_fts_index_table_fill_one_fetch	handler/i_s.cc	/^i_s_fts_index_table_fill_one_fetch($/;"	f	file:
i_s_fts_index_table_fill_one_index	handler/i_s.cc	/^i_s_fts_index_table_fill_one_index($/;"	f	file:
i_s_fts_index_table_fill_selected	handler/i_s.cc	/^i_s_fts_index_table_fill_selected($/;"	f	file:
i_s_fts_index_table_free_one_fetch	handler/i_s.cc	/^i_s_fts_index_table_free_one_fetch($/;"	f	file:
i_s_fts_index_table_init	handler/i_s.cc	/^i_s_fts_index_table_init($/;"	f	file:
i_s_h	handler/i_s.h	27;"	d
i_s_hash_chain_t	include/trx0i_s.h	/^struct i_s_hash_chain_t {$/;"	s
i_s_info	handler/i_s.cc	/^static struct st_mysql_information_schema	i_s_info =$/;"	v	typeref:struct:st_mysql_information_schema	file:
i_s_innodb_buf_page_lru_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_innodb_buf_page_lru_fields_info[] =$/;"	v	file:
i_s_innodb_buf_page_lru_fill	handler/i_s.cc	/^i_s_innodb_buf_page_lru_fill($/;"	f	file:
i_s_innodb_buf_page_lru_fill_table	handler/i_s.cc	/^i_s_innodb_buf_page_lru_fill_table($/;"	f	file:
i_s_innodb_buffer_page	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_buffer_page =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_buffer_page_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_innodb_buffer_page_fields_info[] =$/;"	v	file:
i_s_innodb_buffer_page_fill	handler/i_s.cc	/^i_s_innodb_buffer_page_fill($/;"	f	file:
i_s_innodb_buffer_page_fill_table	handler/i_s.cc	/^i_s_innodb_buffer_page_fill_table($/;"	f	file:
i_s_innodb_buffer_page_get_info	handler/i_s.cc	/^i_s_innodb_buffer_page_get_info($/;"	f	file:
i_s_innodb_buffer_page_init	handler/i_s.cc	/^i_s_innodb_buffer_page_init($/;"	f	file:
i_s_innodb_buffer_page_lru	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_buffer_page_lru =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_buffer_page_lru_init	handler/i_s.cc	/^i_s_innodb_buffer_page_lru_init($/;"	f	file:
i_s_innodb_buffer_pool_stats_init	handler/i_s.cc	/^i_s_innodb_buffer_pool_stats_init($/;"	f	file:
i_s_innodb_buffer_stats	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_buffer_stats =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_buffer_stats_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_innodb_buffer_stats_fields_info[] =$/;"	v	file:
i_s_innodb_buffer_stats_fill_table	handler/i_s.cc	/^i_s_innodb_buffer_stats_fill_table($/;"	f	file:
i_s_innodb_cmp	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_cmp =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_cmp_per_index	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_cmp_per_index =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_cmp_per_index_reset	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_cmp_per_index_reset =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_cmp_reset	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_cmp_reset =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_cmpmem	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_cmpmem =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_cmpmem_reset	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_cmpmem_reset =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_fill_buffer_lru	handler/i_s.cc	/^i_s_innodb_fill_buffer_lru($/;"	f	file:
i_s_innodb_fill_buffer_pool	handler/i_s.cc	/^i_s_innodb_fill_buffer_pool($/;"	f	file:
i_s_innodb_ft_being_deleted	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_ft_being_deleted =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_ft_config	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_ft_config =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_ft_default_stopword	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_ft_default_stopword =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_ft_deleted	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_ft_deleted =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_ft_index_cache	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_ft_index_cache =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_ft_index_table	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_ft_index_table =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_lock_waits	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_lock_waits =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_locks	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_locks =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_metrics	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_metrics =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_set_page_type	handler/i_s.cc	/^i_s_innodb_set_page_type($/;"	f	file:
i_s_innodb_stats_fill	handler/i_s.cc	/^i_s_innodb_stats_fill($/;"	f	file:
i_s_innodb_sys_columns	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_columns =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_datafiles	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_datafiles =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_fields	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_fields =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_foreign	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_foreign =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_foreign_cols	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_foreign_cols =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_indexes	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_indexes =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_tables	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_tables =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_tablespaces	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_tablespaces =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_tablestats	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_tablestats =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_sys_virtual	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_sys_virtual =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_temp_table_info	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_temp_table_info =$/;"	v	typeref:struct:st_mysql_plugin
i_s_innodb_temp_table_info_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_innodb_temp_table_info_fields_info[] =$/;"	v	file:
i_s_innodb_temp_table_info_fill	handler/i_s.cc	/^i_s_innodb_temp_table_info_fill($/;"	f	file:
i_s_innodb_temp_table_info_fill_table	handler/i_s.cc	/^i_s_innodb_temp_table_info_fill_table($/;"	f	file:
i_s_innodb_temp_table_info_init	handler/i_s.cc	/^i_s_innodb_temp_table_info_init($/;"	f	file:
i_s_innodb_trx	handler/i_s.cc	/^struct st_mysql_plugin	i_s_innodb_trx =$/;"	v	typeref:struct:st_mysql_plugin
i_s_lock_waits_row_t	include/trx0i_s.h	/^struct i_s_lock_waits_row_t {$/;"	s
i_s_locks_row_t	include/trx0i_s.h	/^struct i_s_locks_row_t {$/;"	s
i_s_locks_row_validate	trx/trx0i_s.cc	/^i_s_locks_row_validate($/;"	f	file:
i_s_mem_chunk_t	trx/trx0i_s.cc	/^struct i_s_mem_chunk_t {$/;"	s	file:
i_s_metrics_fill	handler/i_s.cc	/^i_s_metrics_fill($/;"	f	file:
i_s_metrics_fill_table	handler/i_s.cc	/^i_s_metrics_fill_table($/;"	f	file:
i_s_page_type	handler/i_s.cc	/^static buf_page_desc_t	i_s_page_type[] = {$/;"	v	file:
i_s_stopword_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	i_s_stopword_fields_info[] =$/;"	v	file:
i_s_stopword_fill	handler/i_s.cc	/^i_s_stopword_fill($/;"	f	file:
i_s_stopword_init	handler/i_s.cc	/^i_s_stopword_init($/;"	f	file:
i_s_sys_columns_fill_table	handler/i_s.cc	/^i_s_sys_columns_fill_table($/;"	f	file:
i_s_sys_datafiles_fill_table	handler/i_s.cc	/^i_s_sys_datafiles_fill_table($/;"	f	file:
i_s_sys_fields_fill_table	handler/i_s.cc	/^i_s_sys_fields_fill_table($/;"	f	file:
i_s_sys_foreign_cols_fill_table	handler/i_s.cc	/^i_s_sys_foreign_cols_fill_table($/;"	f	file:
i_s_sys_foreign_fill_table	handler/i_s.cc	/^i_s_sys_foreign_fill_table($/;"	f	file:
i_s_sys_indexes_fill_table	handler/i_s.cc	/^i_s_sys_indexes_fill_table($/;"	f	file:
i_s_sys_tables_fill_table	handler/i_s.cc	/^i_s_sys_tables_fill_table($/;"	f	file:
i_s_sys_tables_fill_table_stats	handler/i_s.cc	/^i_s_sys_tables_fill_table_stats($/;"	f	file:
i_s_sys_tablespaces_fill_table	handler/i_s.cc	/^i_s_sys_tablespaces_fill_table($/;"	f	file:
i_s_sys_virtual_fill_table	handler/i_s.cc	/^i_s_sys_virtual_fill_table($/;"	f	file:
i_s_table	include/trx0i_s.h	/^enum i_s_table {$/;"	g
i_s_table_cache_t	trx/trx0i_s.cc	/^struct i_s_table_cache_t {$/;"	s	file:
i_s_trx_row_t	include/trx0i_s.h	/^struct i_s_trx_row_t {$/;"	s
ib	include/ut0ut.h	/^namespace ib {$/;"	n
ib	ut/ut0ut.cc	/^namespace ib {$/;"	n	file:
ib0mutex_h	include/ib0mutex.h	29;"	d
ib_alloc_t	include/ut0vec.h	/^struct ib_alloc_t {$/;"	s
ib_binlog_enabled	api/api0api.cc	/^my_bool ib_binlog_enabled = FALSE;$/;"	v
ib_bk_commit_interval	api/api0api.cc	/^ulong ib_bk_commit_interval = 0;$/;"	v
ib_bool_t	include/api0api.h	/^typedef ib_ulint_t		ib_bool_t;$/;"	t
ib_bpmutex_t	include/ut0mutex.h	/^typedef BlockFutexMutex ib_bpmutex_t;$/;"	t
ib_bpmutex_t	include/ut0mutex.h	/^typedef BlockSyncArrayMutex ib_bpmutex_t;$/;"	t
ib_bpmutex_t	include/ut0mutex.h	/^typedef BlockSysMutex ib_bpmutex_t;$/;"	t
ib_btr_cursor_is_positioned	api/api0api.cc	/^ib_btr_cursor_is_positioned($/;"	f
ib_byte_t	include/api0api.h	/^typedef unsigned char		ib_byte_t;$/;"	t
ib_calc_diff	api/api0api.cc	/^ib_calc_diff($/;"	f	file:
ib_cb_t	include/api0api.h	/^typedef void (*ib_cb_t)(void);$/;"	t
ib_cfg_bk_commit_interval	api/api0api.cc	/^ib_cfg_bk_commit_interval()$/;"	f
ib_cfg_get_cfg	api/api0api.cc	/^ib_cfg_get_cfg()$/;"	f
ib_cfg_trx_level	api/api0api.cc	/^ib_cfg_trx_level()$/;"	f
ib_cfg_type_t	include/api0api.h	/^} ib_cfg_type_t;$/;"	t	typeref:enum:__anon13
ib_charset_t	include/api0api.h	/^typedef ib_opaque_t		ib_charset_t;$/;"	t
ib_client_cmp_t	include/api0api.h	/^typedef int (*ib_client_cmp_t)($/;"	t
ib_clust_read_tuple_create	api/api0api.cc	/^ib_clust_read_tuple_create($/;"	f
ib_clust_search_tuple_create	api/api0api.cc	/^ib_clust_search_tuple_create($/;"	f
ib_col_attr	api/api0api.cc	/^	ib_col_attr_t	ib_col_attr;	\/*!< Column attributes *\/$/;"	m	struct:ib_col_t	file:
ib_col_attr_t	include/api0api.h	/^} ib_col_attr_t;$/;"	t	typeref:enum:__anon16
ib_col_copy_value	api/api0api.cc	/^ib_col_copy_value($/;"	f
ib_col_copy_value_low	api/api0api.cc	/^ib_col_copy_value_low($/;"	f
ib_col_get_attr	api/api0api.cc	/^ib_col_get_attr($/;"	f
ib_col_get_dfield	api/api0api.cc	/^ib_col_get_dfield($/;"	f
ib_col_get_len	api/api0api.cc	/^ib_col_get_len($/;"	f
ib_col_get_meta	api/api0api.cc	/^ib_col_get_meta($/;"	f
ib_col_get_meta_low	api/api0api.cc	/^ib_col_get_meta_low($/;"	f
ib_col_get_name	api/api0api.cc	/^ib_col_get_name($/;"	f
ib_col_get_value	api/api0api.cc	/^ib_col_get_value($/;"	f
ib_col_is_capped	api/api0api.cc	/^ib_col_is_capped($/;"	f
ib_col_meta_t	include/api0api.h	/^} ib_col_meta_t;$/;"	t	typeref:struct:__anon21
ib_col_set_value	api/api0api.cc	/^ib_col_set_value($/;"	f
ib_col_t	api/api0api.cc	/^struct ib_col_t {$/;"	s	file:
ib_col_type	api/api0api.cc	/^	ib_col_type_t	ib_col_type;	\/*!< Main type of the column *\/$/;"	m	struct:ib_col_t	file:
ib_col_type_t	include/api0api.h	/^} ib_col_type_t;$/;"	t	typeref:enum:__anon14
ib_compare_t	include/ut0vec.h	/^typedef int (*ib_compare_t)(const void*, const void*);$/;"	t
ib_counter_t	include/ut0counter.h	/^	ib_counter_t() { memset(m_counter, 0x0, sizeof(m_counter)); }$/;"	f	class:ib_counter_t
ib_counter_t	include/ut0counter.h	/^class ib_counter_t {$/;"	c
ib_create	ha/ha0ha.cc	/^ib_create($/;"	f
ib_create_cursor	api/api0api.cc	/^ib_create_cursor($/;"	f	file:
ib_create_cursor_with_index_id	api/api0api.cc	/^ib_create_cursor_with_index_id($/;"	f	file:
ib_crsr_t	include/api0api.h	/^typedef struct ib_cursor_t* ib_crsr_t;$/;"	t	typeref:struct:ib_cursor_t
ib_cursor_close	api/api0api.cc	/^ib_cursor_close($/;"	f
ib_cursor_close_table	api/api0api.cc	/^ib_cursor_close_table($/;"	f
ib_cursor_commit_trx	api/api0api.cc	/^ib_cursor_commit_trx($/;"	f
ib_cursor_delete_row	api/api0api.cc	/^ib_cursor_delete_row($/;"	f
ib_cursor_first	api/api0api.cc	/^ib_cursor_first($/;"	f
ib_cursor_insert_row	api/api0api.cc	/^ib_cursor_insert_row($/;"	f
ib_cursor_is_positioned	api/api0api.cc	/^ib_cursor_is_positioned($/;"	f
ib_cursor_lock	api/api0api.cc	/^ib_cursor_lock($/;"	f
ib_cursor_moveto	api/api0api.cc	/^ib_cursor_moveto($/;"	f
ib_cursor_new_trx	api/api0api.cc	/^ib_cursor_new_trx($/;"	f
ib_cursor_next	api/api0api.cc	/^ib_cursor_next($/;"	f
ib_cursor_open_index_using_name	api/api0api.cc	/^ib_cursor_open_index_using_name($/;"	f
ib_cursor_open_table	api/api0api.cc	/^ib_cursor_open_table($/;"	f
ib_cursor_open_table_using_id	api/api0api.cc	/^ib_cursor_open_table_using_id($/;"	f
ib_cursor_position	api/api0api.cc	/^ib_cursor_position($/;"	f
ib_cursor_read_row	api/api0api.cc	/^ib_cursor_read_row($/;"	f
ib_cursor_reset	api/api0api.cc	/^ib_cursor_reset($/;"	f
ib_cursor_set_cluster_access	api/api0api.cc	/^ib_cursor_set_cluster_access($/;"	f
ib_cursor_set_lock_mode	api/api0api.cc	/^ib_cursor_set_lock_mode($/;"	f
ib_cursor_set_match_mode	api/api0api.cc	/^ib_cursor_set_match_mode($/;"	f
ib_cursor_set_memcached_sync	api/api0api.cc	/^ib_cursor_set_memcached_sync($/;"	f
ib_cursor_stmt_begin	api/api0api.cc	/^ib_cursor_stmt_begin($/;"	f
ib_cursor_t	api/api0api.cc	/^struct ib_cursor_t {$/;"	s	file:
ib_cursor_truncate	api/api0api.cc	/^ib_cursor_truncate($/;"	f
ib_cursor_unlock	api/api0api.cc	/^ib_cursor_unlock($/;"	f
ib_cursor_update_row	api/api0api.cc	/^ib_cursor_update_row($/;"	f
ib_dec_counter	row/row0mysql.cc	/^	ib_dec_counter() {}$/;"	f	class:ib_dec_counter
ib_dec_counter	row/row0mysql.cc	/^class ib_dec_counter {$/;"	c	file:
ib_dec_in_dtor	row/row0ins.cc	/^	ib_dec_in_dtor(ulint& c): counter(c) {}$/;"	f	class:ib_dec_in_dtor
ib_dec_in_dtor	row/row0ins.cc	/^class ib_dec_in_dtor {$/;"	c	file:
ib_delete_row	api/api0api.cc	/^ib_delete_row($/;"	f	file:
ib_disable_row_lock	api/api0api.cc	/^my_bool ib_disable_row_lock = FALSE;$/;"	v
ib_err_t	include/api0api.h	/^typedef enum dberr_t		ib_err_t;$/;"	t	typeref:enum:dberr_t
ib_errf	handler/ha_innodb.cc	/^ib_errf($/;"	f
ib_execute_insert_query_graph	api/api0api.cc	/^ib_execute_insert_query_graph($/;"	f	file:
ib_execute_update_query_graph	api/api0api.cc	/^ib_execute_update_query_graph($/;"	f
ib_extention	include/fil0fil.h	/^enum ib_extention {$/;"	g
ib_get_idx_field_name	api/api0api.cc	/^ib_get_idx_field_name($/;"	f
ib_handle_errors	api/api0misc.cc	/^ib_handle_errors($/;"	f
ib_heap_allocator_create	include/ut0vec.ic	/^ib_heap_allocator_create($/;"	f
ib_heap_allocator_free	include/ut0vec.ic	/^ib_heap_allocator_free($/;"	f
ib_heap_free	include/ut0vec.ic	/^ib_heap_free($/;"	f
ib_heap_malloc	include/ut0vec.ic	/^ib_heap_malloc($/;"	f
ib_heap_resize	include/ut0vec.ic	/^ib_heap_resize($/;"	f
ib_i16_t	include/api0api.h	/^typedef __int16			ib_i16_t;$/;"	t
ib_i16_t	include/api0api.h	/^typedef int16_t                 ib_i16_t;$/;"	t
ib_i32_t	include/api0api.h	/^typedef __int32			ib_i32_t;$/;"	t
ib_i32_t	include/api0api.h	/^typedef int32_t                 ib_i32_t;$/;"	t
ib_i64_t	include/api0api.h	/^typedef __int64			ib_i64_t;$/;"	t
ib_i64_t	include/api0api.h	/^typedef int64_t                 ib_i64_t;$/;"	t
ib_i8_t	include/api0api.h	/^typedef __int8			ib_i8_t;$/;"	t
ib_i8_t	include/api0api.h	/^typedef int8_t                  ib_i8_t;$/;"	t
ib_id_t	include/univ.i	/^typedef ib_uint64_t		ib_id_t;$/;"	t	file:
ib_id_u64_t	include/api0api.h	/^typedef ib_u64_t		ib_id_u64_t;$/;"	t
ib_index_def_t	api/api0api.cc	/^struct ib_index_def_t {$/;"	s	file:
ib_index_type_t	include/api0api.h	/^} ib_index_type_t;$/;"	t	typeref:enum:__anon18
ib_insert_query_graph_create	api/api0api.cc	/^ib_insert_query_graph_create($/;"	f	file:
ib_insert_row_with_lock_retry	api/api0api.cc	/^ib_insert_row_with_lock_retry($/;"	f
ib_is_virtual_table	api/api0api.cc	/^ib_is_virtual_table($/;"	f
ib_key_col_t	api/api0api.cc	/^struct ib_key_col_t {$/;"	s	file:
ib_key_tuple_new	api/api0api.cc	/^ib_key_tuple_new($/;"	f	file:
ib_key_tuple_new_low	api/api0api.cc	/^ib_key_tuple_new_low($/;"	f	file:
ib_lck_mode_t	include/api0api.h	/^} ib_lck_mode_t;$/;"	t	typeref:enum:__anon17
ib_like_t	include/data0type.h	/^enum ib_like_t {$/;"	g
ib_list_add_after	ut/ut0list.cc	/^ib_list_add_after($/;"	f
ib_list_add_first	ut/ut0list.cc	/^ib_list_add_first($/;"	f
ib_list_add_last	ut/ut0list.cc	/^ib_list_add_last($/;"	f
ib_list_create	ut/ut0list.cc	/^ib_list_create(void)$/;"	f
ib_list_create_heap	ut/ut0list.cc	/^ib_list_create_heap($/;"	f
ib_list_free	ut/ut0list.cc	/^ib_list_free($/;"	f
ib_list_get_first	include/ut0list.ic	/^ib_list_get_first($/;"	f
ib_list_get_last	include/ut0list.ic	/^ib_list_get_last($/;"	f
ib_list_helper_t	include/ut0list.h	/^struct ib_list_helper_t {$/;"	s
ib_list_is_empty	include/ut0list.ic	/^ib_list_is_empty($/;"	f
ib_list_node_t	include/ut0list.h	/^struct ib_list_node_t {$/;"	s
ib_list_remove	ut/ut0list.cc	/^ib_list_remove($/;"	f
ib_list_t	include/ut0list.h	/^struct ib_list_t {$/;"	s
ib_log_level_t	include/ha_prototypes.h	/^enum ib_log_level_t {$/;"	g
ib_lookup_table_by_name	api/api0api.cc	/^ib_lookup_table_by_name($/;"	f	file:
ib_match_mode_t	include/api0api.h	/^} ib_match_mode_t;$/;"	t	typeref:enum:__anon20
ib_mdl_enabled	api/api0api.cc	/^my_bool ib_mdl_enabled = FALSE;$/;"	v
ib_mem_alloc_t	include/ut0vec.h	/^typedef void* (*ib_mem_alloc_t)($/;"	t
ib_mem_free_t	include/ut0vec.h	/^typedef void (*ib_mem_free_t)($/;"	t
ib_mem_resize_t	include/ut0vec.h	/^typedef void* (*ib_mem_resize_t)($/;"	t
ib_msg_log_t	include/api0api.h	/^typedef int (*ib_msg_log_t)(ib_msg_stream_t, const char*, ...);$/;"	t
ib_msg_stream_t	include/api0api.h	/^typedef FILE* ib_msg_stream_t;$/;"	t
ib_mutex_t	include/ut0mutex.h	/^typedef FutexMutex ib_mutex_t;$/;"	t
ib_mutex_t	include/ut0mutex.h	/^typedef SyncArrayMutex ib_mutex_t;$/;"	t
ib_mutex_t	include/ut0mutex.h	/^typedef SysMutex ib_mutex_t;$/;"	t
ib_normalize_table_name	api/api0api.cc	/^ib_normalize_table_name($/;"	f	file:
ib_opaque_t	include/api0api.h	/^typedef void*			ib_opaque_t;$/;"	t
ib_open_table_by_id	api/api0api.cc	/^ib_open_table_by_id($/;"	f	file:
ib_open_table_by_name	api/api0api.cc	/^ib_open_table_by_name($/;"	f	file:
ib_qry_grph_t	api/api0api.cc	/^struct ib_qry_grph_t {$/;"	s	file:
ib_qry_node_t	api/api0api.cc	/^struct ib_qry_node_t {$/;"	s	file:
ib_qry_proc_free	api/api0api.cc	/^ib_qry_proc_free($/;"	f	file:
ib_qry_proc_t	api/api0api.cc	/^struct ib_qry_proc_t {$/;"	s	file:
ib_qry_type_t	api/api0api.cc	/^enum ib_qry_type_t{$/;"	g	file:
ib_quiesce_t	include/dict0types.h	/^enum ib_quiesce_t {$/;"	g
ib_rbt_arg_compare	include/ut0rbt.h	/^typedef int (*ib_rbt_arg_compare)(const void*, const void* p1, const void* p2);$/;"	t
ib_rbt_bound_t	include/ut0rbt.h	/^struct ib_rbt_bound_t {$/;"	s
ib_rbt_color_t	include/ut0rbt.h	/^enum ib_rbt_color_t {$/;"	g
ib_rbt_compare	include/ut0rbt.h	/^typedef int (*ib_rbt_compare)(const void* p1, const void* p2);$/;"	t
ib_rbt_node_t	include/ut0rbt.h	/^struct ib_rbt_node_t {$/;"	s
ib_rbt_print_node	include/ut0rbt.h	/^typedef void (*ib_rbt_print_node)(const ib_rbt_node_t* node);$/;"	t
ib_rbt_t	include/ut0rbt.h	/^struct	ib_rbt_t {$/;"	s
ib_read_tuple	api/api0api.cc	/^ib_read_tuple($/;"	f	file:
ib_recreate	ha/ha0ha.cc	/^ib_recreate($/;"	f
ib_row_tuple_new	api/api0api.cc	/^ib_row_tuple_new($/;"	f	file:
ib_row_tuple_new_low	api/api0api.cc	/^ib_row_tuple_new_low($/;"	f	file:
ib_schema_lock_is_exclusive	api/api0api.cc	/^ib_schema_lock_is_exclusive($/;"	f
ib_schema_lock_is_shared	api/api0api.cc	/^ib_schema_lock_is_shared($/;"	f
ib_sec_read_tuple_create	api/api0api.cc	/^ib_sec_read_tuple_create($/;"	f
ib_sec_search_tuple_create	api/api0api.cc	/^ib_sec_search_tuple_create($/;"	f
ib_senderrf	handler/ha_innodb.cc	/^ib_senderrf($/;"	f
ib_sequence_t	handler/handler0alter.cc	/^ib_sequence_t::ib_sequence_t($/;"	f	class:ib_sequence_t
ib_sequence_t	include/handler0alter.h	/^struct ib_sequence_t {$/;"	s
ib_srch_mode_t	include/api0api.h	/^} ib_srch_mode_t;$/;"	t	typeref:enum:__anon19
ib_table_def_t	api/api0api.cc	/^struct ib_table_def_t {$/;"	s	file:
ib_table_get_id	api/api0api.cc	/^ib_table_get_id($/;"	f
ib_table_get_id_low	api/api0api.cc	/^ib_table_get_id_low($/;"	f	file:
ib_table_lock	api/api0api.cc	/^ib_table_lock($/;"	f
ib_table_truncate	api/api0api.cc	/^ib_table_truncate($/;"	f
ib_tbl_fmt	api/api0api.cc	/^	ib_tbl_fmt_t	ib_tbl_fmt;	\/*!< Row format *\/$/;"	m	struct:ib_table_def_t	file:
ib_tbl_fmt_t	include/api0api.h	/^} ib_tbl_fmt_t;$/;"	t	typeref:enum:__anon15
ib_time_t	include/ut0ut.h	/^typedef time_t	ib_time_t;$/;"	t
ib_to_lower_case	api/api0api.cc	/^ib_to_lower_case($/;"	f	file:
ib_tpl_t	include/api0api.h	/^typedef struct ib_tuple_t* ib_tpl_t;$/;"	t	typeref:struct:ib_tuple_t
ib_trx_begin	api/api0api.cc	/^ib_trx_begin($/;"	f
ib_trx_commit	api/api0api.cc	/^ib_trx_commit($/;"	f
ib_trx_get_start_time	api/api0api.cc	/^ib_trx_get_start_time($/;"	f
ib_trx_level_setting	api/api0api.cc	/^ulong ib_trx_level_setting = IB_TRX_READ_UNCOMMITTED;$/;"	v
ib_trx_level_t	include/api0api.h	/^} ib_trx_level_t;$/;"	t	typeref:enum:__anon22
ib_trx_lock_table_with_retry	api/api0misc.cc	/^ib_trx_lock_table_with_retry($/;"	f
ib_trx_read_only	api/api0api.cc	/^ib_trx_read_only($/;"	f
ib_trx_release	api/api0api.cc	/^ib_trx_release($/;"	f
ib_trx_rollback	api/api0api.cc	/^ib_trx_rollback($/;"	f
ib_trx_start	api/api0api.cc	/^ib_trx_start($/;"	f
ib_trx_t	include/api0api.h	/^typedef struct trx_t* ib_trx_t;$/;"	t	typeref:struct:trx_t
ib_tuple_check_int	api/api0api.cc	/^ib_tuple_check_int($/;"	f
ib_tuple_clear	api/api0api.cc	/^ib_tuple_clear($/;"	f
ib_tuple_delete	api/api0api.cc	/^ib_tuple_delete($/;"	f
ib_tuple_get_cluster_key	api/api0api.cc	/^ib_tuple_get_cluster_key($/;"	f
ib_tuple_get_n_cols	api/api0api.cc	/^ib_tuple_get_n_cols($/;"	f
ib_tuple_get_n_user_cols	api/api0api.cc	/^ib_tuple_get_n_user_cols($/;"	f
ib_tuple_read_double	api/api0api.cc	/^ib_tuple_read_double($/;"	f
ib_tuple_read_float	api/api0api.cc	/^ib_tuple_read_float($/;"	f
ib_tuple_read_i16	api/api0api.cc	/^ib_tuple_read_i16($/;"	f
ib_tuple_read_i32	api/api0api.cc	/^ib_tuple_read_i32($/;"	f
ib_tuple_read_i64	api/api0api.cc	/^ib_tuple_read_i64($/;"	f
ib_tuple_read_i8	api/api0api.cc	/^ib_tuple_read_i8($/;"	f
ib_tuple_read_u16	api/api0api.cc	/^ib_tuple_read_u16($/;"	f
ib_tuple_read_u32	api/api0api.cc	/^ib_tuple_read_u32($/;"	f
ib_tuple_read_u64	api/api0api.cc	/^ib_tuple_read_u64($/;"	f
ib_tuple_read_u8	api/api0api.cc	/^ib_tuple_read_u8($/;"	f
ib_tuple_t	api/api0api.cc	/^struct ib_tuple_t {$/;"	s	file:
ib_tuple_type_t	api/api0api.cc	/^enum ib_tuple_type_t{$/;"	g	file:
ib_tuple_write_double	api/api0api.cc	/^ib_tuple_write_double($/;"	f
ib_tuple_write_float	api/api0api.cc	/^ib_tuple_write_float($/;"	f
ib_u16_t	include/api0api.h	/^typedef uint16_t                ib_u16_t;$/;"	t
ib_u16_t	include/api0api.h	/^typedef unsigned __int16	ib_u16_t;$/;"	t
ib_u32_t	include/api0api.h	/^typedef uint32_t                ib_u32_t;$/;"	t
ib_u32_t	include/api0api.h	/^typedef unsigned __int32	ib_u32_t;$/;"	t
ib_u64_t	include/api0api.h	/^typedef uint64_t                ib_u64_t;$/;"	t
ib_u64_t	include/api0api.h	/^typedef unsigned __int64	ib_u64_t;$/;"	t
ib_u8_t	include/api0api.h	/^typedef uint8_t                 ib_u8_t;$/;"	t
ib_u8_t	include/api0api.h	/^typedef unsigned __int8		ib_u8_t;$/;"	t
ib_uc_t	include/fts0fts.h	/^typedef unsigned short ib_uc_t;$/;"	t
ib_uint32_t	include/univ.i	/^typedef uint32_t ib_uint32_t;$/;"	t	file:
ib_uint32_t	include/univ.i	/^typedef unsigned __int32 ib_uint32_t;$/;"	t	file:
ib_uint64_t	include/univ.i	/^typedef uint64_t ib_uint64_t;$/;"	t	file:
ib_uint64_t	include/univ.i	/^typedef unsigned __int64 ib_uint64_t;$/;"	t	file:
ib_ulint_t	include/api0api.h	/^typedef unsigned __int64	ib_ulint_t;$/;"	t
ib_ulint_t	include/api0api.h	/^typedef unsigned long int	ib_ulint_t;$/;"	t
ib_update_col	api/api0api.cc	/^ib_update_col($/;"	f	file:
ib_update_row_with_lock_retry	api/api0api.cc	/^ib_update_row_with_lock_retry($/;"	f
ib_update_vector_create	api/api0api.cc	/^ib_update_vector_create($/;"	f
ib_ut_strerr	api/api0api.cc	/^ib_ut_strerr($/;"	f
ib_vector_allocator	include/ut0vec.h	63;"	d
ib_vector_create	ut/ut0vec.cc	/^ib_vector_create($/;"	f
ib_vector_free	include/ut0vec.ic	/^ib_vector_free($/;"	f
ib_vector_get	include/ut0vec.ic	/^ib_vector_get($/;"	f
ib_vector_get_const	include/ut0vec.ic	/^ib_vector_get_const($/;"	f
ib_vector_get_last	include/ut0vec.ic	/^ib_vector_get_last($/;"	f
ib_vector_getp	include/ut0vec.h	60;"	d
ib_vector_getp_const	include/ut0vec.h	61;"	d
ib_vector_is_empty	include/ut0vec.ic	/^ib_vector_is_empty($/;"	f
ib_vector_last	include/ut0vec.ic	/^ib_vector_last($/;"	f
ib_vector_last_const	include/ut0vec.ic	/^ib_vector_last_const($/;"	f
ib_vector_pop	include/ut0vec.ic	/^ib_vector_pop($/;"	f
ib_vector_push	include/ut0vec.ic	/^ib_vector_push($/;"	f
ib_vector_remove	include/ut0vec.ic	/^ib_vector_remove($/;"	f
ib_vector_reset	include/ut0vec.ic	/^ib_vector_reset($/;"	f
ib_vector_resize	ut/ut0vec.cc	/^ib_vector_resize($/;"	f
ib_vector_set	include/ut0vec.ic	/^ib_vector_set($/;"	f
ib_vector_size	include/ut0vec.ic	/^ib_vector_size($/;"	f
ib_vector_sort	include/ut0vec.ic	/^ib_vector_sort($/;"	f
ib_vector_t	include/ut0vec.h	/^struct ib_vector_t {$/;"	s
ib_wake_master_thread	api/api0api.cc	/^ib_wake_master_thread(void)$/;"	f
ib_warn_row_too_big	handler/ha_innodb.cc	/^ib_warn_row_too_big(const dict_table_t*	table)$/;"	f
ib_wqueue_add	ut/ut0wqueue.cc	/^ib_wqueue_add($/;"	f
ib_wqueue_create	ut/ut0wqueue.cc	/^ib_wqueue_create(void)$/;"	f
ib_wqueue_free	ut/ut0wqueue.cc	/^ib_wqueue_free($/;"	f
ib_wqueue_is_empty	ut/ut0wqueue.cc	/^ib_wqueue_is_empty($/;"	f
ib_wqueue_t	ut/ut0wqueue.cc	/^struct ib_wqueue_t {$/;"	s	file:
ib_wqueue_timedwait	ut/ut0wqueue.cc	/^ib_wqueue_timedwait($/;"	f
ib_wqueue_wait	ut/ut0wqueue.cc	/^ib_wqueue_wait($/;"	f
ibd_file_missing	include/dict0mem.h	/^	unsigned				ibd_file_missing:1;$/;"	m	struct:dict_table_t
ibool	include/univ.i	476;"	d	file:
ibool	include/ut0rbt.h	42;"	d
ibuf	ibuf/ibuf0ibuf.cc	/^ibuf_t*	ibuf			= NULL;$/;"	v
ibuf0ibuf_h	include/ibuf0ibuf.h	27;"	d
ibuf0types_h	include/ibuf0types.h	27;"	d
ibuf_add_free_page	ibuf/ibuf0ibuf.cc	/^ibuf_add_free_page(void)$/;"	f	file:
ibuf_add_ops	ibuf/ibuf0ibuf.cc	/^ibuf_add_ops($/;"	f	file:
ibuf_bitmap_get_map_page	ibuf/ibuf0ibuf.cc	825;"	d	file:
ibuf_bitmap_get_map_page_func	ibuf/ibuf0ibuf.cc	/^ibuf_bitmap_get_map_page_func($/;"	f	file:
ibuf_bitmap_mutex	ibuf/ibuf0ibuf.cc	/^static ib_mutex_t	ibuf_bitmap_mutex;$/;"	v	file:
ibuf_bitmap_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	ibuf_bitmap_mutex_key;$/;"	v
ibuf_bitmap_page	include/ibuf0ibuf.ic	/^ibuf_bitmap_page($/;"	f
ibuf_bitmap_page_get_bits	ibuf/ibuf0ibuf.cc	643;"	d	file:
ibuf_bitmap_page_get_bits	ibuf/ibuf0ibuf.cc	655;"	d	file:
ibuf_bitmap_page_get_bits_low	ibuf/ibuf0ibuf.cc	/^ibuf_bitmap_page_get_bits_low($/;"	f
ibuf_bitmap_page_init	ibuf/ibuf0ibuf.cc	/^ibuf_bitmap_page_init($/;"	f
ibuf_bitmap_page_no_calc	ibuf/ibuf0ibuf.cc	/^ibuf_bitmap_page_no_calc($/;"	f
ibuf_bitmap_page_set_bits	ibuf/ibuf0ibuf.cc	/^ibuf_bitmap_page_set_bits($/;"	f	file:
ibuf_btr_pcur_commit_specify_mtr	ibuf/ibuf0ibuf.cc	/^ibuf_btr_pcur_commit_specify_mtr($/;"	f
ibuf_build_entry_from_ibuf_rec	ibuf/ibuf0ibuf.cc	1518;"	d	file:
ibuf_build_entry_from_ibuf_rec	ibuf/ibuf0ibuf.cc	1521;"	d	file:
ibuf_build_entry_from_ibuf_rec_func	ibuf/ibuf0ibuf.cc	/^ibuf_build_entry_from_ibuf_rec_func($/;"	f	file:
ibuf_check_bitmap_on_import	ibuf/ibuf0ibuf.cc	/^ibuf_check_bitmap_on_import($/;"	f
ibuf_close	ibuf/ibuf0ibuf.cc	/^ibuf_close(void)$/;"	f
ibuf_contract	ibuf/ibuf0ibuf.cc	/^ibuf_contract($/;"	f	file:
ibuf_contract_after_insert	ibuf/ibuf0ibuf.cc	/^ibuf_contract_after_insert($/;"	f
ibuf_count_check	ibuf/ibuf0ibuf.cc	/^ibuf_count_check($/;"	f
ibuf_count_get	ibuf/ibuf0ibuf.cc	/^ibuf_count_get($/;"	f
ibuf_count_set	ibuf/ibuf0ibuf.cc	/^ibuf_count_set($/;"	f	file:
ibuf_counts	ibuf/ibuf0ibuf.cc	/^static ulint	ibuf_counts[IBUF_COUNT_N_SPACES][IBUF_COUNT_N_PAGES];$/;"	v	file:
ibuf_data_enough_free_for_insert	ibuf/ibuf0ibuf.cc	/^ibuf_data_enough_free_for_insert(void)$/;"	f
ibuf_data_too_much_free	ibuf/ibuf0ibuf.cc	/^ibuf_data_too_much_free(void)$/;"	f
ibuf_debug	ibuf/ibuf0ibuf.cc	/^uint	ibuf_debug;$/;"	v
ibuf_delete	ibuf/ibuf0ibuf.cc	/^ibuf_delete($/;"	f	file:
ibuf_delete_for_discarded_space	ibuf/ibuf0ibuf.cc	/^ibuf_delete_for_discarded_space($/;"	f
ibuf_delete_rec	ibuf/ibuf0ibuf.cc	/^ibuf_delete_rec($/;"	f
ibuf_dummy_index_add_col	ibuf/ibuf0ibuf.cc	/^ibuf_dummy_index_add_col($/;"	f	file:
ibuf_dummy_index_create	ibuf/ibuf0ibuf.cc	/^ibuf_dummy_index_create($/;"	f	file:
ibuf_dummy_index_free	ibuf/ibuf0ibuf.cc	/^ibuf_dummy_index_free($/;"	f	file:
ibuf_enter	ibuf/ibuf0ibuf.cc	/^ibuf_enter($/;"	f
ibuf_entry_build	ibuf/ibuf0ibuf.cc	/^ibuf_entry_build($/;"	f	file:
ibuf_exit	ibuf/ibuf0ibuf.cc	/^ibuf_exit($/;"	f
ibuf_fixed_addr_page	ibuf/ibuf0ibuf.cc	/^ibuf_fixed_addr_page($/;"	f
ibuf_free_excess_pages	ibuf/ibuf0ibuf.cc	/^ibuf_free_excess_pages(void)$/;"	f
ibuf_get_entry_counter	ibuf/ibuf0ibuf.cc	3263;"	d	file:
ibuf_get_entry_counter	ibuf/ibuf0ibuf.cc	3266;"	d	file:
ibuf_get_entry_counter_func	ibuf/ibuf0ibuf.cc	/^ibuf_get_entry_counter_func($/;"	f	file:
ibuf_get_entry_counter_low	ibuf/ibuf0ibuf.cc	3189;"	d	file:
ibuf_get_entry_counter_low	ibuf/ibuf0ibuf.cc	3192;"	d	file:
ibuf_get_entry_counter_low_func	ibuf/ibuf0ibuf.cc	/^ibuf_get_entry_counter_low_func($/;"	f	file:
ibuf_get_merge_page_nos	ibuf/ibuf0ibuf.cc	2227;"	d	file:
ibuf_get_merge_page_nos	ibuf/ibuf0ibuf.cc	2230;"	d	file:
ibuf_get_merge_page_nos_func	ibuf/ibuf0ibuf.cc	/^ibuf_get_merge_page_nos_func($/;"	f	file:
ibuf_get_merge_pages	ibuf/ibuf0ibuf.cc	/^ibuf_get_merge_pages($/;"	f
ibuf_get_user_rec	ibuf/ibuf0ibuf.cc	/^ibuf_get_user_rec($/;"	f
ibuf_get_volume_buffered	ibuf/ibuf0ibuf.cc	/^ibuf_get_volume_buffered($/;"	f	file:
ibuf_get_volume_buffered_count	ibuf/ibuf0ibuf.cc	2815;"	d	file:
ibuf_get_volume_buffered_count	ibuf/ibuf0ibuf.cc	2818;"	d	file:
ibuf_get_volume_buffered_count_func	ibuf/ibuf0ibuf.cc	/^ibuf_get_volume_buffered_count_func($/;"	f	file:
ibuf_get_volume_buffered_hash	ibuf/ibuf0ibuf.cc	/^ibuf_get_volume_buffered_hash($/;"	f	file:
ibuf_header_page_get	ibuf/ibuf0ibuf.cc	/^ibuf_header_page_get($/;"	f	file:
ibuf_index_page_calc_free	include/ibuf0ibuf.ic	/^ibuf_index_page_calc_free($/;"	f
ibuf_index_page_calc_free_bits	include/ibuf0ibuf.ic	/^ibuf_index_page_calc_free_bits($/;"	f
ibuf_index_page_calc_free_from_bits	include/ibuf0ibuf.ic	/^ibuf_index_page_calc_free_from_bits($/;"	f
ibuf_index_page_calc_free_zip	include/ibuf0ibuf.ic	/^ibuf_index_page_calc_free_zip($/;"	f
ibuf_init_at_db_start	ibuf/ibuf0ibuf.cc	/^ibuf_init_at_db_start(void)$/;"	f
ibuf_insert	ibuf/ibuf0ibuf.cc	/^ibuf_insert($/;"	f
ibuf_insert_low	ibuf/ibuf0ibuf.cc	/^ibuf_insert_low($/;"	f
ibuf_insert_to_index_page	ibuf/ibuf0ibuf.cc	/^ibuf_insert_to_index_page($/;"	f	file:
ibuf_insert_to_index_page_low	ibuf/ibuf0ibuf.cc	/^ibuf_insert_to_index_page_low($/;"	f
ibuf_inside	include/ibuf0ibuf.ic	/^ibuf_inside($/;"	f
ibuf_is_empty	ibuf/ibuf0ibuf.cc	/^ibuf_is_empty(void)$/;"	f
ibuf_max_size_update	ibuf/ibuf0ibuf.cc	/^ibuf_max_size_update($/;"	f
ibuf_merge	ibuf/ibuf0ibuf.cc	/^ibuf_merge($/;"	f
ibuf_merge_in_background	ibuf/ibuf0ibuf.cc	/^ibuf_merge_in_background($/;"	f
ibuf_merge_or_delete_for_page	ibuf/ibuf0ibuf.cc	/^ibuf_merge_or_delete_for_page($/;"	f
ibuf_merge_pages	ibuf/ibuf0ibuf.cc	/^ibuf_merge_pages($/;"	f	file:
ibuf_merge_space	ibuf/ibuf0ibuf.cc	/^ibuf_merge_space($/;"	f
ibuf_mtr_commit	include/ibuf0ibuf.ic	/^ibuf_mtr_commit($/;"	f
ibuf_mtr_start	include/ibuf0ibuf.ic	/^ibuf_mtr_start($/;"	f
ibuf_mutex	ibuf/ibuf0ibuf.cc	/^static ib_mutex_t	ibuf_mutex;$/;"	v	file:
ibuf_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	ibuf_mutex_key;$/;"	v
ibuf_op_t	include/ibuf0ibuf.h	/^} ibuf_op_t;$/;"	t	typeref:enum:__anon1
ibuf_page	include/ibuf0ibuf.h	289;"	d
ibuf_page	include/ibuf0ibuf.h	300;"	d
ibuf_page_low	ibuf/ibuf0ibuf.cc	/^ibuf_page_low($/;"	f
ibuf_parse_bitmap_init	ibuf/ibuf0ibuf.cc	/^ibuf_parse_bitmap_init($/;"	f
ibuf_pessimistic_insert_mutex	ibuf/ibuf0ibuf.cc	/^static ib_mutex_t	ibuf_pessimistic_insert_mutex;$/;"	v	file:
ibuf_pessimistic_insert_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	ibuf_pessimistic_insert_mutex_key;$/;"	v
ibuf_print	ibuf/ibuf0ibuf.cc	/^ibuf_print($/;"	f
ibuf_print_ops	ibuf/ibuf0ibuf.cc	/^ibuf_print_ops($/;"	f	file:
ibuf_rec_get_counter	ibuf/ibuf0ibuf.cc	/^ibuf_rec_get_counter($/;"	f
ibuf_rec_get_info	ibuf/ibuf0ibuf.cc	1260;"	d	file:
ibuf_rec_get_info	ibuf/ibuf0ibuf.cc	1263;"	d	file:
ibuf_rec_get_info_func	ibuf/ibuf0ibuf.cc	/^ibuf_rec_get_info_func($/;"	f	file:
ibuf_rec_get_op_type	ibuf/ibuf0ibuf.cc	1346;"	d	file:
ibuf_rec_get_op_type	ibuf/ibuf0ibuf.cc	1348;"	d	file:
ibuf_rec_get_op_type_func	ibuf/ibuf0ibuf.cc	/^ibuf_rec_get_op_type_func($/;"	f	file:
ibuf_rec_get_page_no	ibuf/ibuf0ibuf.cc	1185;"	d	file:
ibuf_rec_get_page_no	ibuf/ibuf0ibuf.cc	1187;"	d	file:
ibuf_rec_get_page_no_func	ibuf/ibuf0ibuf.cc	/^ibuf_rec_get_page_no_func($/;"	f	file:
ibuf_rec_get_size	ibuf/ibuf0ibuf.cc	/^ibuf_rec_get_size($/;"	f
ibuf_rec_get_space	ibuf/ibuf0ibuf.cc	1222;"	d	file:
ibuf_rec_get_space	ibuf/ibuf0ibuf.cc	1224;"	d	file:
ibuf_rec_get_space_func	ibuf/ibuf0ibuf.cc	/^ibuf_rec_get_space_func($/;"	f	file:
ibuf_rec_get_volume	ibuf/ibuf0ibuf.cc	1658;"	d	file:
ibuf_rec_get_volume	ibuf/ibuf0ibuf.cc	1660;"	d	file:
ibuf_rec_get_volume_func	ibuf/ibuf0ibuf.cc	/^ibuf_rec_get_volume_func($/;"	f	file:
ibuf_remove_free_page	ibuf/ibuf0ibuf.cc	/^ibuf_remove_free_page(void)$/;"	f	file:
ibuf_reset_free_bits	ibuf/ibuf0ibuf.cc	/^ibuf_reset_free_bits($/;"	f
ibuf_restore_pos	ibuf/ibuf0ibuf.cc	/^ibuf_restore_pos($/;"	f
ibuf_search_tuple_build	ibuf/ibuf0ibuf.cc	/^ibuf_search_tuple_build($/;"	f	file:
ibuf_set_bitmap_for_bulk_load	ibuf/ibuf0ibuf.cc	/^ibuf_set_bitmap_for_bulk_load($/;"	f
ibuf_set_del_mark	ibuf/ibuf0ibuf.cc	/^ibuf_set_del_mark($/;"	f	file:
ibuf_set_free_bits	include/ibuf0ibuf.ic	110;"	d	file:
ibuf_set_free_bits	include/ibuf0ibuf.ic	112;"	d	file:
ibuf_set_free_bits_func	ibuf/ibuf0ibuf.cc	/^ibuf_set_free_bits_func($/;"	f
ibuf_set_free_bits_low	ibuf/ibuf0ibuf.cc	/^ibuf_set_free_bits_low($/;"	f
ibuf_should_try	include/ibuf0ibuf.ic	/^ibuf_should_try($/;"	f
ibuf_size_update	ibuf/ibuf0ibuf.cc	/^ibuf_size_update($/;"	f	file:
ibuf_t	include/ibuf0ibuf.ic	/^struct ibuf_t{$/;"	s	file:
ibuf_tree_root_get	ibuf/ibuf0ibuf.cc	/^ibuf_tree_root_get($/;"	f	file:
ibuf_update_free_bits_for_two_pages_low	ibuf/ibuf0ibuf.cc	/^ibuf_update_free_bits_for_two_pages_low($/;"	f
ibuf_update_free_bits_if_full	include/ibuf0ibuf.ic	/^ibuf_update_free_bits_if_full($/;"	f
ibuf_update_free_bits_low	ibuf/ibuf0ibuf.cc	/^ibuf_update_free_bits_low($/;"	f
ibuf_update_free_bits_zip	ibuf/ibuf0ibuf.cc	/^ibuf_update_free_bits_zip($/;"	f
ibuf_update_max_tablespace_id	ibuf/ibuf0ibuf.cc	/^ibuf_update_max_tablespace_id(void)$/;"	f
ibuf_use	ibuf/ibuf0ibuf.cc	/^ibuf_use_t	ibuf_use		= IBUF_USE_ALL;$/;"	v
ibuf_use_t	include/ibuf0ibuf.h	/^} ibuf_use_t;$/;"	t	typeref:enum:__anon2
icp_rec_field_no	include/row0mysql.h	/^	ulint	icp_rec_field_no;	\/*!< field number of the column in an$/;"	m	struct:mysql_row_templ_t
id	fts/fts0fts.cc	/^	table_id_t	id;		\/*!< Table id *\/$/;"	m	struct:fts_aux_table_t	file:
id	include/buf0buf.h	/^	page_id_t	id;$/;"	m	class:buf_page_t
id	include/dict0mem.h	/^	char*		id;		\/*!< id of the constraint as a$/;"	m	struct:dict_foreign_t
id	include/dict0mem.h	/^	index_id_t	id;	\/*!< id of the index *\/$/;"	m	struct:dict_index_t
id	include/dict0mem.h	/^	table_id_t				id;$/;"	m	struct:dict_table_t
id	include/fil0fil.h	/^	ulint		id;	\/*!< space id *\/$/;"	m	struct:fil_space_t
id	include/log0log.h	/^	ulint				id;$/;"	m	struct:log_group_t
id	include/pars0pars.h	/^	const char*	id;		\/*!< identifier *\/$/;"	m	struct:pars_bound_id_t
id	include/trx0rseg.h	/^	ulint				id;$/;"	m	struct:trx_rseg_t
id	include/trx0trx.h	/^	trx_id_t	id;		\/*!< transaction id *\/$/;"	m	struct:trx_t
id	include/trx0undo.h	/^	ulint		id;		\/*!< undo log slot number within the$/;"	m	struct:trx_undo_t
id	pars/lexyy.cc	1011;"	d	file:
id	trx/trx0sys.cc	/^	ulint		id;		\/*!< id of the file format *\/$/;"	m	struct:file_format_t	file:
id	trx/trx0undo.cc	/^	ulint*		id,	\/*!< out: slot index within rseg header *\/$/;"	v
id_hash	include/dict0mem.h	/^	hash_node_t				id_hash;$/;"	m	struct:dict_table_t
id_name_t	include/dict0mem.h	/^	explicit id_name_t($/;"	f	class:id_name_t
id_name_t	include/dict0mem.h	/^	id_name_t()$/;"	f	class:id_name_t
id_name_t	include/dict0mem.h	/^class id_name_t$/;"	c
idf	fts/fts0que.cc	/^	double		idf;		\/*!< Inverse document frequency *\/$/;"	m	struct:fts_word_freq_t	file:
ids_t	include/read0types.h	/^		ids_t() : m_ptr(), m_size(), m_reserved() { }$/;"	f	class:ReadView::ids_t
ids_t	include/read0types.h	/^	class ids_t {$/;"	c	class:ReadView
idx_cond	include/row0mysql.h	/^	void*		idx_cond;	\/*!< In ICP, pointer to a ha_innobase,$/;"	m	struct:row_prebuilt_t
idx_cond_n_cols	include/row0mysql.h	/^	ulint		idx_cond_n_cols;\/*!< Number of fields in idx_cond_cols.$/;"	m	struct:row_prebuilt_t
idx_cond_push	handler/ha_innodb.cc	/^ha_innobase::idx_cond_push($/;"	f	class:ha_innobase
idx_trans_tbl	handler/ha_innodb.h	/^			idx_trans_tbl;	\/*!< index translation table between$/;"	m	struct:st_innobase_share
idx_tuple_vec	row/row0merge.cc	/^		idx_tuple_vec;$/;"	t	class:index_tuple_info_t	file:
if_node_t	include/pars0pars.h	/^struct if_node_t{$/;"	s
if_step	eval/eval0proc.cc	/^if_step($/;"	f
ilist	include/fts0types.h	/^	byte*		ilist;		\/*!< Binary list of documents & word$/;"	m	struct:fts_node_t
ilist_size	include/fts0types.h	/^	ulint		ilist_size;	\/*!< Used size of ilist in bytes. *\/$/;"	m	struct:fts_node_t
ilist_size_alloc	include/fts0types.h	/^	ulint		ilist_size_alloc;$/;"	m	struct:fts_node_t
import_page_status_t	row/row0import.cc	/^	enum import_page_status_t {$/;"	g	class:PageConverter	file:
in_LRU_list	include/buf0buf.h	/^	ibool		in_LRU_list;	\/*!< TRUE if the page is in$/;"	m	class:buf_page_t
in_depth	include/trx0trx.h	/^	ib_uint32_t	in_depth;	\/*!< Track nested TrxInInnoDB$/;"	m	struct:trx_t
in_flush_list	include/buf0buf.h	/^	ibool		in_flush_list;	\/*!< TRUE if in buf_pool->flush_list;$/;"	m	class:buf_page_t
in_free_list	include/buf0buf.h	/^	ibool		in_free_list;	\/*!< TRUE if in buf_pool->free; when$/;"	m	class:buf_page_t
in_fts_query	include/row0mysql.h	/^	bool		in_fts_query;	\/*!< Whether we are in a FTS query *\/$/;"	m	struct:row_prebuilt_t
in_innodb	include/trx0trx.h	/^	ib_uint32_t	in_innodb;	\/*!< if the thread is executing$/;"	m	struct:trx_t
in_mysql_interface	include/row0upd.h	/^	ibool		in_mysql_interface;$/;"	m	struct:upd_node_t
in_mysql_trx_list	include/trx0trx.h	/^	bool		in_mysql_trx_list;$/;"	m	struct:trx_t
in_page_hash	include/buf0buf.h	/^	ibool		in_page_hash;	\/*!< TRUE if in buf_pool->page_hash *\/$/;"	m	class:buf_page_t
in_progress	include/fts0types.h	/^	bool		in_progress;	\/*!< flag whether sync is in progress.*\/$/;"	m	struct:fts_sync_t
in_rollback	include/trx0trx.h	/^	bool		in_rollback;	\/*!< true when the transaction is$/;"	m	struct:trx_t
in_rw_trx_list	include/trx0trx.h	/^	bool		in_rw_trx_list;	\/*!< true if in trx_sys->rw_trx_list *\/$/;"	m	struct:trx_t
in_unzip_LRU_list	include/buf0buf.h	/^	ibool		in_unzip_LRU_list;\/*!< TRUE if the page is in the$/;"	m	struct:buf_block_t
in_use	include/buf0dblwr.h	/^	bool*		in_use;	\/*!< flag used to indicate if a slot is$/;"	m	struct:buf_dblwr_t
in_use	include/srv0srv.h	/^	ibool		in_use;			\/*!< TRUE if this slot$/;"	m	struct:srv_slot_t
in_withdraw_list	include/buf0buf.h	/^	ibool		in_withdraw_list;$/;"	m	struct:buf_block_t
in_zip_hash	include/buf0buf.h	/^	ibool		in_zip_hash;	\/*!< TRUE if in buf_pool->zip_hash *\/$/;"	m	class:buf_page_t
inc	include/ut0stage.h	/^	inc($/;"	f	class:ut_stage_alter_t
inc	include/ut0stage.h	/^ut_stage_alter_t::inc($/;"	f	class:ut_stage_alter_t
incr_LRU_size_in_bytes	buf/buf0lru.cc	/^incr_LRU_size_in_bytes($/;"	f	file:
incr_flush_list_size_in_bytes	buf/buf0flu.cc	/^incr_flush_list_size_in_bytes($/;"	f	file:
ind	include/dict0mem.h	/^	unsigned	ind:10;		\/*!< table column position$/;"	m	struct:dict_col_t
ind_create_graph_create	dict/dict0crea.cc	/^ind_create_graph_create($/;"	f
ind_def	include/dict0crea.h	/^	ins_node_t*	ind_def;	\/*!< child node which does the insert of$/;"	m	struct:ind_node_t
ind_node_t	include/dict0crea.h	/^struct ind_node_t{$/;"	s
ind_row	include/dict0crea.h	/^	dtuple_t*	ind_row;	\/* index definition row built *\/$/;"	m	struct:ind_node_t
ind_type	include/row0merge.h	/^	ulint		ind_type;	\/*!< 0, DICT_UNIQUE,$/;"	m	struct:index_def_t
index	api/api0api.cc	/^	const dict_index_t*	index;	\/*!< Index for tuple can be either$/;"	m	struct:ib_tuple_t	file:
index	fts/fts0opt.cc	/^	dict_index_t*	index;		\/*!< The FTS index to be optimized *\/$/;"	m	struct:fts_optimize_t	file:
index	fts/fts0que.cc	/^	dict_index_t*	index;		\/*!< The FTS index to search *\/$/;"	m	struct:fts_query_t	file:
index	include/btr0cur.h	/^	dict_index_t*	index;		\/*!< index where positioned *\/$/;"	m	struct:btr_cur_t
index	include/btr0pcur.h	/^	dict_index_t*	index() const { return(btr_cur.index); }$/;"	f	struct:btr_pcur_t
index	include/buf0buf.h	/^	dict_index_t*	index;		\/*!< Index for which the$/;"	m	struct:buf_block_t
index	include/dict0crea.h	/^	dict_index_t*	index;		\/*!< index to create, built as a$/;"	m	struct:ind_node_t
index	include/dict0mem.h	/^	dict_index_t*	index;$/;"	m	struct:dict_v_idx_t
index	include/fts0types.h	/^	dict_index_t*	index;		\/*!< The FTS index instance *\/$/;"	m	struct:fts_index_cache_t
index	include/gis0type.h	/^	dict_index_t*	index;	\/*!< index it is searching *\/$/;"	m	struct:rtr_info
index	include/ibuf0ibuf.ic	/^	dict_index_t*	index;		\/*!< insert buffer index *\/$/;"	m	struct:ibuf_t	file:
index	include/lock0priv.h	/^	dict_index_t*	index;		\/*!< index for a record lock *\/$/;"	m	struct:lock_t
index	include/page0cur.h	/^	const dict_index_t*	index;$/;"	m	struct:page_cur_t
index	include/row0ins.h	/^	dict_index_t*	index;	\/*!< NULL, or the next index where the index$/;"	m	struct:ins_node_t
index	include/row0merge.h	/^	dict_index_t*		index;	\/*!< index being sorted *\/$/;"	m	struct:row_merge_dup_t
index	include/row0merge.h	/^	dict_index_t*	index;		\/*!< the index the tuples belong to *\/$/;"	m	struct:row_merge_buf_t
index	include/row0mysql.h	/^	dict_index_t*	index;		\/*!< current index for a search, if$/;"	m	struct:row_prebuilt_t
index	include/row0purge.h	/^	dict_index_t*	index;	\/*!< NULL, or the next index whose record should$/;"	m	struct:purge_node_t
index	include/row0sel.h	/^	dict_index_t*	index;		\/*!< table index used in the search *\/$/;"	m	struct:plan_t
index	include/row0undo.h	/^	dict_index_t*	index;	\/*!< the next index whose record should be$/;"	m	struct:undo_node_t
index	include/row0upd.h	/^	dict_index_t*	index;	\/*!< NULL, or the next index whose record should$/;"	m	struct:upd_node_t
index_cache	include/fts0types.h	/^			index_cache;	\/*!< The index cache instance *\/$/;"	m	struct:fts_get_doc_t
index_count	handler/ha_innodb.h	/^	ulint		index_count;	\/*!< number of valid index entries$/;"	m	struct:innodb_idx_translate_t
index_def_t	include/row0merge.h	/^struct index_def_t {$/;"	s
index_end	handler/ha_innodb.cc	/^ha_innobase::index_end(void)$/;"	f	class:ha_innobase
index_end	handler/ha_innopart.cc	/^ha_innopart::index_end()$/;"	f	class:ha_innopart
index_fetch_t	dict/dict0stats.cc	/^struct index_fetch_t {$/;"	s	file:
index_field_t	include/row0merge.h	/^struct index_field_t {$/;"	s
index_first	handler/ha_innodb.cc	/^ha_innobase::index_first($/;"	f	class:ha_innobase
index_first	handler/ha_innopart.h	/^	index_first($/;"	f	class:ha_innopart
index_first_in_part	handler/ha_innopart.cc	/^ha_innopart::index_first_in_part($/;"	f	class:ha_innopart
index_flags	handler/ha_innodb.cc	/^ha_innobase::index_flags($/;"	f	class:ha_innobase
index_fts_syncing	include/dict0mem.h	/^	bool		index_fts_syncing;\/*!< Whether the fts index is$/;"	m	struct:dict_index_t
index_id	fts/fts0fts.cc	/^	table_id_t	index_id;	\/*!< Table FT index id *\/$/;"	m	struct:fts_aux_table_t	file:
index_id	handler/i_s.cc	/^	index_id_t	index_id;	\/*!< Index ID if a index page *\/$/;"	m	struct:buf_page_info_t	file:
index_id	include/fts0fts.h	/^	index_id_t	index_id;	\/*!< The index id *\/$/;"	m	struct:fts_table_t
index_id	include/page0types.h	/^	index_id_t	index_id;	\/*!< index id *\/$/;"	m	struct:redo_page_compress_t
index_id_t	include/dict0types.h	/^typedef ib_id_t		index_id_t;$/;"	t
index_init	handler/ha_innodb.cc	/^ha_innobase::index_init($/;"	f	class:ha_innobase
index_init	handler/ha_innopart.cc	/^ha_innopart::index_init($/;"	f	class:ha_innopart
index_last	handler/ha_innodb.cc	/^ha_innobase::index_last($/;"	f	class:ha_innobase
index_last	handler/ha_innopart.h	/^	index_last($/;"	f	class:ha_innopart
index_last_in_part	handler/ha_innopart.cc	/^ha_innopart::index_last_in_part($/;"	f	class:ha_innopart
index_map_t	dict/dict0stats.cc	/^		index_map_t_allocator>	index_map_t;$/;"	t	file:
index_map_t_allocator	dict/dict0stats.cc	/^	index_map_t_allocator;$/;"	t	file:
index_mapping	handler/ha_innodb.h	/^	dict_index_t**	index_mapping;	\/*!< index pointer array directly$/;"	m	struct:innodb_idx_translate_t
index_next	handler/ha_innodb.cc	/^ha_innobase::index_next($/;"	f	class:ha_innobase
index_next	handler/ha_innopart.h	/^	index_next($/;"	f	class:ha_innopart
index_next_in_part	handler/ha_innopart.cc	/^ha_innopart::index_next_in_part($/;"	f	class:ha_innopart
index_next_same	handler/ha_innodb.cc	/^ha_innobase::index_next_same($/;"	f	class:ha_innobase
index_next_same	handler/ha_innopart.h	/^	index_next_same($/;"	f	class:ha_innopart
index_next_same_in_part	handler/ha_innopart.cc	/^ha_innopart::index_next_same_in_part($/;"	f	class:ha_innopart
index_online_log_key	sync/sync0sync.cc	/^mysql_pfs_key_t	index_online_log_key;$/;"	v
index_prev	handler/ha_innodb.cc	/^ha_innobase::index_prev($/;"	f	class:ha_innobase
index_prev	handler/ha_innopart.h	/^	index_prev($/;"	f	class:ha_innopart
index_prev_in_part	handler/ha_innopart.cc	/^ha_innopart::index_prev_in_part($/;"	f	class:ha_innopart
index_read	handler/ha_innodb.cc	/^ha_innobase::index_read($/;"	f	class:ha_innobase
index_read_idx_map	handler/ha_innopart.h	/^	index_read_idx_map($/;"	f	class:ha_innopart
index_read_idx_map_in_part	handler/ha_innopart.cc	/^ha_innopart::index_read_idx_map_in_part($/;"	f	class:ha_innopart
index_read_last	handler/ha_innodb.cc	/^ha_innobase::index_read_last($/;"	f	class:ha_innobase
index_read_last_map	handler/ha_innopart.h	/^	index_read_last_map($/;"	f	class:ha_innopart
index_read_last_map_in_part	handler/ha_innopart.cc	/^ha_innopart::index_read_last_map_in_part($/;"	f	class:ha_innopart
index_read_map	handler/ha_innopart.h	/^	index_read_map($/;"	f	class:ha_innopart
index_read_map_in_part	handler/ha_innopart.cc	/^ha_innopart::index_read_map_in_part($/;"	f	class:ha_innopart
index_t	include/row0trunc.h	/^	struct index_t {$/;"	s	class:truncate_t
index_t	row/row0trunc.cc	/^truncate_t::index_t::index_t()$/;"	f	class:truncate_t::index_t
index_tree_rw_lock_key	sync/sync0sync.cc	/^mysql_pfs_key_t	index_tree_rw_lock_key;$/;"	v
index_tuple_info_t	row/row0merge.cc	/^class index_tuple_info_t {$/;"	c	file:
index_type	handler/ha_innodb.cc	/^ha_innobase::index_type($/;"	f	class:ha_innobase
index_usable	include/row0mysql.h	/^	unsigned	index_usable:1;	\/*!< caches the value of$/;"	m	struct:row_prebuilt_t
indexes	api/api0api.cc	/^	ib_vector_t*	indexes;	\/*!< Vector of indexes *\/$/;"	m	struct:ib_table_def_t	file:
indexes	include/dict0mem.h	/^			indexes;\/*!< list of indexes of the table *\/$/;"	m	struct:dict_index_t
indexes	include/dict0mem.h	/^	UT_LIST_BASE_NODE_T(dict_index_t)	indexes;$/;"	m	struct:dict_table_t
indexes	include/fts0fts.h	/^	ib_vector_t*	indexes;$/;"	m	class:fts_t
indexes	include/fts0types.h	/^	ib_vector_t*	indexes;	\/*!< We store the stats and inverted$/;"	m	struct:fts_cache_t
indexes	row/row0trunc.cc	/^truncate_t::indexes() const$/;"	f	class:truncate_t
indexes_t	include/row0trunc.h	/^	typedef std::vector<index_t, ut_allocator<index_t> >	indexes_t;$/;"	t	class:truncate_t
indirection	include/pars0sym.h	/^	sym_node_t*			indirection;	\/*!< pointer to$/;"	m	struct:sym_node_t
infimum_data	page/page0zip.cc	/^static const byte infimum_data[] = {$/;"	v	file:
infimum_extra	page/page0zip.cc	/^static const byte infimum_extra[] = {$/;"	v	file:
infimum_supremum_compact	page/page0page.cc	/^static const byte infimum_supremum_compact[] = {$/;"	v	file:
infimum_supremum_redundant	page/page0page.cc	/^static const byte infimum_supremum_redundant[] = {$/;"	v	file:
info	handler/ha_innodb.cc	/^ha_innobase::info($/;"	f	class:ha_innobase
info	include/pars0sym.h	/^	pars_info_t*		info;	\/*!< extra information, or NULL *\/$/;"	m	struct:sym_tab_t
info	include/que0que.h	/^	pars_info_t*	info;		\/*!< info struct, or NULL *\/$/;"	m	struct:que_fork_t
info	include/ut0ut.h	/^class info : public logger {$/;"	c	namespace:ib
info_bits	include/data0data.h	/^	ulint		info_bits;	\/*!< info bits of an index record:$/;"	m	struct:dtuple_t
info_bits	include/row0upd.h	/^	ulint		info_bits;	\/*!< new value of info bits to record;$/;"	m	struct:upd_t
info_low	handler/ha_innodb.cc	/^ha_innobase::info_low($/;"	f	class:ha_innobase
info_low	handler/ha_innopart.cc	/^ha_innopart::info_low($/;"	f	class:ha_innopart
init	btr/btr0bulk.cc	/^PageBulk::init()$/;"	f	class:PageBulk
init	fsp/fsp0file.cc	/^Datafile::init($/;"	f	class:Datafile
init	include/btr0bulk.h	/^	void init()$/;"	f	class:BtrBulk
init	include/dyn0buf.h	/^		void init()$/;"	f	class:dyn_buf_t::block_t
init	include/lock0priv.h	/^	void init(const page_t* page)$/;"	f	class:RecLock
init	include/ut0lst.h	/^	ulint		init;			\/*!< UT_LIST_INITIALISED if$/;"	m	struct:ut_list_base
init	include/ut0pool.h	/^	void init(size_t n_elems)$/;"	f	struct:Pool
init	mtr/mtr0mtr.cc	/^	void init(mtr_t* mtr)$/;"	f	class:mtr_t::Command
init	os/os0file.cc	/^	void init(ulint n_slots)$/;"	f	class:SimulatedAIOHandler
init	os/os0file.cc	/^AIO::init()$/;"	f	class:AIO
init	row/row0trunc.cc	/^	dberr_t init()$/;"	f	class:TruncateLogger
init	trx/trx0purge.cc	/^	dberr_t init(ulint space_id)$/;"	f	namespace:undo
init	trx/trx0trx.cc	/^	static void init(trx_t* trx)$/;"	f	struct:TrxFactory
init_file_info	fsp/fsp0file.cc	/^Datafile::init_file_info()$/;"	f	class:Datafile
init_flush	include/buf0buf.h	/^	ibool		init_flush[BUF_FLUSH_N_TYPES];$/;"	m	struct:buf_pool_t
init_fts_doc_id_for_ref	row/row0mysql.cc	/^init_fts_doc_id_for_ref($/;"	f	file:
init_linux_native_aio	os/os0file.cc	/^AIO::init_linux_native_aio()$/;"	f	class:AIO
init_lock	include/fts0types.h	/^	rw_lock_t	init_lock;	\/*!< lock used for the cache$/;"	m	struct:fts_cache_t
init_pos	include/row0ftsort.h	/^	ulint			init_pos;       \/*!< doc start position *\/$/;"	m	struct:fts_tokenize_ctx
init_record_priority_queue_for_parts	handler/ha_innopart.cc	/^ha_innopart::init_record_priority_queue_for_parts($/;"	f	class:ha_innopart
init_size	include/fil0fil.h	/^	ulint		init_size;$/;"	m	struct:fil_node_t
init_slots	os/os0file.cc	/^AIO::init_slots()$/;"	f	class:AIO
init_table_handle_for_HANDLER	handler/ha_innodb.cc	/^ha_innobase::init_table_handle_for_HANDLER(void)$/;"	f	class:ha_innobase
initialize	handler/ha_innodb.cc	/^create_table_info_t::initialize()$/;"	f	class:create_table_info_t
initialize	handler/ha_innopart.cc	/^Altered_partitions::initialize()$/;"	f	class:Altered_partitions
initialize_auto_increment	handler/ha_innopart.cc	/^ha_innopart::initialize_auto_increment($/;"	f	class:ha_innopart
initialize_partitioning	handler/ha_innopart.h	/^	initialize_partitioning($/;"	f	class:ha_innopart
innobase_active_counter	handler/ha_innodb.cc	/^static ulong	innobase_active_counter	= 0;$/;"	v	file:
innobase_active_small	handler/ha_innodb.cc	/^innobase_active_small(void)$/;"	f
innobase_add_one_virtual	handler/handler0alter.cc	/^innobase_add_one_virtual($/;"	f	file:
innobase_add_virtual_try	handler/handler0alter.cc	/^innobase_add_virtual_try($/;"	f	file:
innobase_alter_tablespace	handler/ha_innodb.cc	/^innobase_alter_tablespace($/;"	f	file:
innobase_autoinc_lock_mode	handler/ha_innodb.cc	/^static long innobase_autoinc_lock_mode;$/;"	v	file:
innobase_basename	handler/ha_innodb.cc	/^innobase_basename($/;"	f
innobase_buffer_pool_size	handler/ha_innodb.cc	/^static long long innobase_buffer_pool_size, innobase_log_file_size;$/;"	v	file:
innobase_build_col_map	handler/handler0alter.cc	/^innobase_build_col_map($/;"	f
innobase_build_col_map_add	handler/handler0alter.cc	/^innobase_build_col_map_add($/;"	f	file:
innobase_build_default_mysql_point	handler/handler0alter.cc	/^innobase_build_default_mysql_point($/;"	f	file:
innobase_build_index_translation	handler/ha_innodb.cc	/^innobase_build_index_translation($/;"	f	file:
innobase_build_v_templ	handler/ha_innodb.cc	/^innobase_build_v_templ($/;"	f
innobase_build_v_templ_callback	handler/ha_innodb.cc	/^innobase_build_v_templ_callback($/;"	f
innobase_casedn_str	handler/ha_innodb.cc	/^innobase_casedn_str($/;"	f
innobase_change_buffering	handler/ha_innodb.cc	/^static char*	innobase_change_buffering		= NULL;$/;"	v	file:
innobase_change_buffering_values	handler/ha_innodb.cc	/^static const char* innobase_change_buffering_values[IBUF_USE_COUNT] = {$/;"	v	file:
innobase_check_column_length	handler/handler0alter.cc	/^innobase_check_column_length($/;"	f
innobase_check_fk_option	handler/handler0alter.cc	/^innobase_check_fk_option($/;"	f
innobase_check_fk_stored	handler/handler0alter.cc	/^innobase_check_fk_stored($/;"	f	file:
innobase_check_foreign_key_index	handler/handler0alter.cc	/^innobase_check_foreign_key_index($/;"	f
innobase_check_foreigns	handler/handler0alter.cc	/^innobase_check_foreigns($/;"	f
innobase_check_foreigns_low	handler/handler0alter.cc	/^innobase_check_foreigns_low($/;"	f
innobase_check_gis_columns	handler/handler0alter.cc	/^innobase_check_gis_columns($/;"	f	file:
innobase_check_identifier_length	handler/ha_innodb.cc	/^innobase_check_identifier_length($/;"	f
innobase_check_index_keys	handler/handler0alter.cc	/^innobase_check_index_keys($/;"	f
innobase_close_connection	handler/ha_innodb.cc	/^innobase_close_connection($/;"	f	file:
innobase_col_check_fk	handler/handler0alter.cc	/^innobase_col_check_fk($/;"	f	file:
innobase_col_to_mysql	handler/handler0alter.cc	/^innobase_col_to_mysql($/;"	f	file:
innobase_commit	handler/ha_innodb.cc	/^innobase_commit($/;"	f	file:
innobase_commit_by_xid	handler/ha_innodb.cc	/^innobase_commit_by_xid($/;"	f	file:
innobase_commit_concurrency	handler/ha_innodb.cc	/^static ulong innobase_commit_concurrency = 0;$/;"	v	file:
innobase_commit_concurrency_init_default	handler/ha_innodb.cc	/^innobase_commit_concurrency_init_default()$/;"	f	file:
innobase_commit_concurrency_validate	handler/ha_innodb.cc	/^innobase_commit_concurrency_validate($/;"	f	file:
innobase_commit_low	handler/ha_innodb.cc	/^innobase_commit_low($/;"	f
innobase_convert_from_id	handler/ha_innodb.cc	/^innobase_convert_from_id($/;"	f
innobase_convert_from_table_id	handler/ha_innodb.cc	/^innobase_convert_from_table_id($/;"	f
innobase_convert_identifier	handler/ha_innodb.cc	/^innobase_convert_identifier($/;"	f
innobase_convert_name	handler/ha_innodb.cc	/^innobase_convert_name($/;"	f
innobase_convert_string	handler/ha_innodb.cc	/^innobase_convert_string($/;"	f
innobase_convert_to_filename_charset	handler/ha_innodb.cc	/^innobase_convert_to_filename_charset($/;"	f
innobase_convert_to_system_charset	handler/ha_innodb.cc	/^innobase_convert_to_system_charset($/;"	f
innobase_copy_frm_flags_from_create_info	handler/ha_innodb.cc	/^innobase_copy_frm_flags_from_create_info($/;"	f
innobase_copy_frm_flags_from_table_share	handler/ha_innodb.cc	/^innobase_copy_frm_flags_from_table_share($/;"	f
innobase_create_handler	handler/ha_innodb.cc	/^innobase_create_handler($/;"	f	file:
innobase_create_index_def	handler/handler0alter.cc	/^innobase_create_index_def($/;"	f	file:
innobase_create_index_field_def	handler/handler0alter.cc	/^innobase_create_index_field_def($/;"	f	file:
innobase_create_key_defs	handler/handler0alter.cc	/^innobase_create_key_defs($/;"	f
innobase_create_status_file	handler/ha_innodb.cc	/^static my_bool	innobase_create_status_file		= FALSE;$/;"	v	file:
innobase_create_tablespace	handler/ha_innodb.cc	/^innobase_create_tablespace($/;"	f	file:
innobase_data_file_path	handler/ha_innodb.cc	/^static char*	innobase_data_file_path			= NULL;$/;"	v	file:
innobase_data_home_dir	handler/ha_innodb.cc	/^static char*	innobase_data_home_dir			= NULL;$/;"	v	file:
innobase_deadlock_detect	lock/lock0lock.cc	/^my_bool	innobase_deadlock_detect = TRUE;$/;"	v
innobase_disable_monitor_counter	handler/ha_innodb.cc	/^static char*	innobase_disable_monitor_counter	= NULL;$/;"	v	file:
innobase_drop_database	handler/ha_innodb.cc	/^innobase_drop_database($/;"	f	file:
innobase_drop_foreign_try	handler/handler0alter.cc	/^innobase_drop_foreign_try($/;"	f
innobase_drop_fts_index_table	handler/handler0alter.cc	/^innobase_drop_fts_index_table($/;"	f	file:
innobase_drop_one_virtual_sys_columns	handler/handler0alter.cc	/^innobase_drop_one_virtual_sys_columns($/;"	f	file:
innobase_drop_one_virtual_sys_virtual	handler/handler0alter.cc	/^innobase_drop_one_virtual_sys_virtual($/;"	f	file:
innobase_drop_tablespace	handler/ha_innodb.cc	/^innobase_drop_tablespace($/;"	f	file:
innobase_drop_virtual_try	handler/handler0alter.cc	/^innobase_drop_virtual_try($/;"	f	file:
innobase_dropping_foreign	handler/handler0alter.cc	/^innobase_dropping_foreign($/;"	f
innobase_enable_monitor_counter	handler/ha_innodb.cc	/^static char*	innobase_enable_monitor_counter		= NULL;$/;"	v	file:
innobase_encryption_key_rotation	handler/ha_innodb.cc	/^innobase_encryption_key_rotation()$/;"	f
innobase_end	handler/ha_innodb.cc	/^innobase_end($/;"	f	file:
innobase_enlarge_column_try	handler/handler0alter.cc	/^innobase_enlarge_column_try($/;"	f
innobase_enlarge_columns_try	handler/handler0alter.cc	/^innobase_enlarge_columns_try($/;"	f
innobase_fast_shutdown	handler/ha_innodb.cc	/^static ulong	innobase_fast_shutdown			= 1;$/;"	v	file:
innobase_fields_to_mysql	handler/handler0alter.cc	/^innobase_fields_to_mysql($/;"	f
innobase_file_flush_method	handler/ha_innodb.cc	/^static char*	innobase_file_flush_method		= NULL;$/;"	v	file:
innobase_file_format_check	handler/ha_innodb.cc	/^static my_bool	innobase_file_format_check		= TRUE;$/;"	v	file:
innobase_file_format_max	handler/ha_innodb.cc	/^char*	innobase_file_format_max		= NULL;$/;"	v
innobase_file_format_name	handler/ha_innodb.cc	/^static char*	innobase_file_format_name		= NULL;$/;"	v	file:
innobase_file_format_name_lookup	handler/ha_innodb.cc	/^innobase_file_format_name_lookup($/;"	f	file:
innobase_file_format_validate_and_set	handler/ha_innodb.cc	/^innobase_file_format_validate_and_set($/;"	f	file:
innobase_fill_factor	btr/btr0bulk.cc	/^long	innobase_fill_factor;$/;"	v
innobase_fill_i_s_table	handler/ha_innodb.cc	/^innobase_fill_i_s_table($/;"	f	file:
innobase_find_equiv_index	handler/handler0alter.cc	/^innobase_find_equiv_index($/;"	f
innobase_find_fk_index	handler/handler0alter.cc	/^innobase_find_fk_index($/;"	f
innobase_flush_logs	handler/ha_innodb.cc	/^innobase_flush_logs($/;"	f	file:
innobase_format_name	handler/ha_innodb.cc	/^innobase_format_name($/;"	f
innobase_fts_casedn_str	handler/ha_innodb.cc	/^innobase_fts_casedn_str($/;"	f
innobase_fts_check_doc_id_col	handler/handler0alter.cc	/^innobase_fts_check_doc_id_col($/;"	f	file:
innobase_fts_check_doc_id_index	handler/handler0alter.cc	/^innobase_fts_check_doc_id_index($/;"	f
innobase_fts_check_doc_id_index_in_def	handler/handler0alter.cc	/^innobase_fts_check_doc_id_index_in_def($/;"	f
innobase_fts_close_ranking	handler/ha_innodb.cc	/^innobase_fts_close_ranking($/;"	f
innobase_fts_count_matches	handler/ha_innodb.cc	/^innobase_fts_count_matches($/;"	f
innobase_fts_create_doc_id_key	handler/ha_innodb.cc	/^innobase_fts_create_doc_id_key($/;"	f	file:
innobase_fts_find_ranking	handler/ha_innodb.cc	/^innobase_fts_find_ranking($/;"	f
innobase_fts_flags	handler/ha_innodb.cc	/^innobase_fts_flags()$/;"	f
innobase_fts_get_version	handler/ha_innodb.cc	/^innobase_fts_get_version()$/;"	f
innobase_fts_load_stopword	handler/ha_innodb.cc	/^innobase_fts_load_stopword($/;"	f
innobase_fts_retrieve_docid	handler/ha_innodb.cc	/^innobase_fts_retrieve_docid($/;"	f
innobase_fts_retrieve_ranking	handler/ha_innodb.cc	/^innobase_fts_retrieve_ranking($/;"	f
innobase_fts_store_docid	handler/ha_innodb.cc	/^innobase_fts_store_docid($/;"	f	file:
innobase_fts_text_case_cmp	handler/ha_innodb.cc	/^innobase_fts_text_case_cmp($/;"	f
innobase_fts_text_cmp	handler/ha_innodb.cc	/^innobase_fts_text_cmp($/;"	f
innobase_fts_text_cmp_prefix	handler/ha_innodb.cc	/^innobase_fts_text_cmp_prefix($/;"	f
innobase_fulltext_exist	handler/handler0alter.cc	/^innobase_fulltext_exist($/;"	f	file:
innobase_get_at_most_n_mbchars	handler/ha_innodb.cc	/^innobase_get_at_most_n_mbchars($/;"	f
innobase_get_autoinc	handler/ha_innodb.cc	/^ha_innobase::innobase_get_autoinc($/;"	f	class:ha_innobase
innobase_get_charset	handler/ha_innodb.cc	/^innobase_get_charset($/;"	f
innobase_get_col_names	handler/handler0alter.cc	/^innobase_get_col_names($/;"	f
innobase_get_computed_value	handler/ha_innodb.cc	/^innobase_get_computed_value($/;"	f
innobase_get_cset_width	handler/ha_innodb.cc	/^innobase_get_cset_width($/;"	f
innobase_get_err_msg	handler/ha_innodb.cc	/^innobase_get_err_msg($/;"	f
innobase_get_field_from_update_vector	handler/ha_innodb.cc	/^innobase_get_field_from_update_vector($/;"	f	file:
innobase_get_foreign_key_info	handler/handler0alter.cc	/^innobase_get_foreign_key_info($/;"	f
innobase_get_index	handler/ha_innodb.cc	/^ha_innobase::innobase_get_index($/;"	f	class:ha_innobase
innobase_get_index	handler/ha_innopart.cc	/^ha_innopart::innobase_get_index($/;"	f	class:ha_innopart
innobase_get_lower_case_table_names	handler/ha_innodb.cc	/^innobase_get_lower_case_table_names(void)$/;"	f
innobase_get_mysql_key_number_for_index	handler/ha_innodb.cc	/^innobase_get_mysql_key_number_for_index($/;"	f	file:
innobase_get_stmt_safe	handler/ha_innodb.cc	/^innobase_get_stmt_safe($/;"	f
innobase_get_stmt_unsafe	handler/ha_innodb.cc	/^innobase_get_stmt_unsafe($/;"	f
innobase_get_table_cache_size	handler/ha_innodb.cc	/^innobase_get_table_cache_size(void)$/;"	f
innobase_hton_name	handler/ha_innodb.cc	/^static const char innobase_hton_name[]= "InnoDB";$/;"	v	file:
innobase_index_cond	handler/ha_innodb.cc	/^innobase_index_cond($/;"	f
innobase_index_lookup	handler/ha_innodb.cc	/^innobase_index_lookup($/;"	f	file:
innobase_index_name_is_reserved	handler/ha_innodb.cc	/^innobase_index_name_is_reserved($/;"	f
innobase_index_reserve_name	include/dict0mem.h	/^const char innobase_index_reserve_name[] = "GEN_CLUST_INDEX";$/;"	v
innobase_init	handler/ha_innodb.cc	/^innobase_init($/;"	f	file:
innobase_init_abort	handler/ha_innodb.cc	/^innobase_init_abort()$/;"	f	file:
innobase_init_foreign	handler/handler0alter.cc	/^innobase_init_foreign($/;"	f	file:
innobase_init_vc_templ	handler/ha_innodb.cc	/^innobase_init_vc_templ($/;"	f
innobase_initialize_autoinc	handler/ha_innodb.cc	/^ha_innobase::innobase_initialize_autoinc()$/;"	f	class:ha_innobase
innobase_initialize_autoinc	handler/ha_innopart.cc	/^ha_innopart::innobase_initialize_autoinc()$/;"	f	class:ha_innopart
innobase_insert_sys_virtual	handler/handler0alter.cc	/^innobase_insert_sys_virtual($/;"	f	file:
innobase_invalidate_query_cache	handler/ha_innodb.cc	/^innobase_invalidate_query_cache($/;"	f
innobase_is_s_fld	handler/ha_innodb.h	1004;"	d
innobase_is_supported_system_table	handler/ha_innodb.cc	/^static bool innobase_is_supported_system_table(const char *db,$/;"	f	file:
innobase_is_v_fld	handler/ha_innodb.h	1007;"	d
innobase_kill_connection	handler/ha_innodb.cc	/^innobase_kill_connection($/;"	f	file:
innobase_large_prefix	handler/ha_innodb.cc	/^static my_bool	innobase_large_prefix			= FALSE;$/;"	v	file:
innobase_lock_autoinc	handler/ha_innodb.cc	/^ha_innobase::innobase_lock_autoinc(void)$/;"	f	class:ha_innobase
innobase_locks_unsafe_for_binlog	handler/ha_innodb.cc	/^static my_bool	innobase_locks_unsafe_for_binlog	= FALSE;$/;"	v	file:
innobase_log_buffer_size	handler/ha_innodb.cc	/^static long innobase_log_buffer_size;$/;"	v	file:
innobase_log_file_size	handler/ha_innodb.cc	/^static long long innobase_buffer_pool_size, innobase_log_file_size;$/;"	v	file:
innobase_map_isolation_level	handler/ha_innodb.cc	/^innobase_map_isolation_level($/;"	f	file:
innobase_match_index_columns	handler/ha_innodb.cc	/^innobase_match_index_columns($/;"	f
innobase_mysql_cmp	rem/rem0cmp.cc	/^innobase_mysql_cmp($/;"	f
innobase_mysql_fts_get_token	handler/ha_innodb.cc	/^innobase_mysql_fts_get_token($/;"	f
innobase_mysql_print_thd	handler/ha_innodb.cc	/^innobase_mysql_print_thd($/;"	f
innobase_mysql_tmpdir	handler/ha_innodb.cc	/^char *innobase_mysql_tmpdir(void) { return (mysql_tmpdir); }$/;"	f
innobase_mysql_tmpfile	handler/ha_innodb.cc	/^innobase_mysql_tmpfile($/;"	f
innobase_need_rebuild	handler/handler0alter.cc	/^innobase_need_rebuild($/;"	f
innobase_next_autoinc	handler/ha_innodb.cc	/^innobase_next_autoinc($/;"	f
innobase_old_blocks_pct	handler/ha_innodb.cc	/^static uint innobase_old_blocks_pct;$/;"	v	file:
innobase_online_rebuild_log_free	handler/handler0alter.cc	/^innobase_online_rebuild_log_free($/;"	f	file:
innobase_open_files	handler/ha_innodb.cc	/^static long innobase_open_files;$/;"	v	file:
innobase_open_tables	handler/ha_innodb.cc	/^static hash_table_t*	innobase_open_tables;$/;"	v	file:
innobase_parse_hint_from_comment	handler/ha_innodb.cc	/^innobase_parse_hint_from_comment($/;"	f
innobase_parse_merge_threshold	handler/ha_innodb.cc	/^innobase_parse_merge_threshold($/;"	f	file:
innobase_partition_flags	handler/ha_innodb.cc	/^static uint innobase_partition_flags()$/;"	f	file:
innobase_peek_autoinc	handler/ha_innodb.cc	/^ha_innobase::innobase_peek_autoinc(void)$/;"	f	class:ha_innobase
innobase_pk_col_is_existing	handler/handler0alter.cc	/^innobase_pk_col_is_existing($/;"	f	file:
innobase_pk_col_prefix_compare	handler/handler0alter.cc	/^innobase_pk_col_prefix_compare($/;"	f	file:
innobase_pk_order_preserved	handler/handler0alter.cc	/^innobase_pk_order_preserved($/;"	f
innobase_query_caching_of_table_permitted	handler/ha_innodb.cc	/^innobase_query_caching_of_table_permitted($/;"	f	file:
innobase_quote_identifier	handler/ha_innodb.cc	/^innobase_quote_identifier($/;"	f
innobase_raw_format	handler/ha_innodb.cc	/^innobase_raw_format($/;"	f
innobase_read_from_2_little_endian	handler/ha_innodb.cc	/^innobase_read_from_2_little_endian($/;"	f	file:
innobase_read_io_threads	handler/ha_innodb.cc	/^static ulong innobase_read_io_threads;$/;"	v	file:
innobase_rec_reset	handler/handler0alter.cc	/^innobase_rec_reset($/;"	f
innobase_rec_to_mysql	handler/handler0alter.cc	/^innobase_rec_to_mysql($/;"	f
innobase_register_trx	handler/ha_innodb.cc	/^innobase_register_trx($/;"	f	file:
innobase_release_savepoint	handler/ha_innodb.cc	/^innobase_release_savepoint($/;"	f	file:
innobase_release_temporary_latches	handler/ha_innodb.cc	/^innobase_release_temporary_latches($/;"	f
innobase_rename_column_try	handler/handler0alter.cc	/^innobase_rename_column_try($/;"	f
innobase_rename_columns_try	handler/handler0alter.cc	/^innobase_rename_columns_try($/;"	f
innobase_rename_or_enlarge_columns_cache	handler/handler0alter.cc	/^innobase_rename_or_enlarge_columns_cache($/;"	f	file:
innobase_rename_table	handler/ha_innodb.cc	/^innobase_rename_table($/;"	f
innobase_rename_vc_templ	handler/ha_innodb.cc	/^innobase_rename_vc_templ($/;"	f
innobase_reset_all_monitor_counter	handler/ha_innodb.cc	/^static char*	innobase_reset_all_monitor_counter	= NULL;$/;"	v	file:
innobase_reset_monitor_counter	handler/ha_innodb.cc	/^static char*	innobase_reset_monitor_counter		= NULL;$/;"	v	file:
innobase_rollback	handler/ha_innodb.cc	/^innobase_rollback($/;"	f	file:
innobase_rollback_by_xid	handler/ha_innodb.cc	/^innobase_rollback_by_xid($/;"	f	file:
innobase_rollback_on_timeout	handler/ha_innodb.cc	/^static my_bool	innobase_rollback_on_timeout		= FALSE;$/;"	v	file:
innobase_rollback_sec_index	handler/handler0alter.cc	/^innobase_rollback_sec_index($/;"	f	file:
innobase_rollback_to_savepoint	handler/ha_innodb.cc	/^innobase_rollback_to_savepoint($/;"	f	file:
innobase_rollback_to_savepoint_can_release_mdl	handler/ha_innodb.cc	/^innobase_rollback_to_savepoint_can_release_mdl($/;"	f	file:
innobase_rollback_trx	handler/ha_innodb.cc	/^innobase_rollback_trx($/;"	f	file:
innobase_row_to_mysql	handler/handler0alter.cc	/^innobase_row_to_mysql($/;"	f
innobase_savepoint	handler/ha_innodb.cc	/^innobase_savepoint($/;"	f	file:
innobase_server_stopword_table	handler/ha_innodb.cc	/^static char*	innobase_server_stopword_table		= NULL;$/;"	v	file:
innobase_set_foreign_key_option	handler/handler0alter.cc	/^innobase_set_foreign_key_option($/;"	f
innobase_set_max_autoinc	handler/ha_innodb.cc	/^ha_innobase::innobase_set_max_autoinc($/;"	f	class:ha_innobase
innobase_share_mutex	handler/ha_innodb.cc	/^static mysql_mutex_t innobase_share_mutex;$/;"	v	file:
innobase_share_mutex_key	handler/ha_innodb.cc	/^static mysql_pfs_key_t	innobase_share_mutex_key;$/;"	v	file:
innobase_show_status	handler/ha_innodb.cc	/^innobase_show_status($/;"	f	file:
innobase_shutdown_for_mysql	srv/srv0start.cc	/^innobase_shutdown_for_mysql(void)$/;"	f
innobase_space_shutdown	handler/ha_innodb.cc	/^innobase_space_shutdown()$/;"	f	file:
innobase_spatial_exist	handler/handler0alter.cc	/^innobase_spatial_exist($/;"	f	file:
innobase_srv_conc_enter_innodb	handler/ha_innodb.cc	/^innobase_srv_conc_enter_innodb($/;"	f	file:
innobase_srv_conc_exit_innodb	handler/ha_innodb.cc	/^innobase_srv_conc_exit_innodb($/;"	f	file:
innobase_srv_conc_force_exit_innodb	handler/ha_innodb.cc	/^innobase_srv_conc_force_exit_innodb($/;"	f	file:
innobase_start_or_create_for_mysql	srv/srv0start.cc	/^innobase_start_or_create_for_mysql(void)$/;"	f
innobase_start_trx_and_assign_read_view	handler/ha_innodb.cc	/^innobase_start_trx_and_assign_read_view($/;"	f	file:
innobase_stats_on_metadata	handler/ha_innodb.cc	/^my_bool	innobase_stats_on_metadata		= TRUE;$/;"	v
innobase_storage_engine	handler/ha_innodb.cc	/^static struct st_mysql_storage_engine innobase_storage_engine=$/;"	v	typeref:struct:st_mysql_storage_engine	file:
innobase_strcasecmp	handler/ha_innodb.cc	/^innobase_strcasecmp($/;"	f
innobase_strnxfrm	handler/ha_innodb.cc	/^innobase_strnxfrm($/;"	f
innobase_system_variables	handler/ha_innodb.cc	/^static struct st_mysql_sys_var* innobase_system_variables[]= {$/;"	v	typeref:struct:st_mysql_sys_var	file:
innobase_table_flags	handler/ha_innodb.cc	/^create_table_info_t::innobase_table_flags()$/;"	f	class:create_table_info_t
innobase_temp_data_file_path	handler/ha_innodb.cc	/^static char*	innobase_temp_data_file_path		= NULL;$/;"	v	file:
innobase_trx_allocate	handler/ha_innodb.cc	/^innobase_trx_allocate($/;"	f
innobase_trx_init	handler/ha_innodb.cc	/^innobase_trx_init($/;"	f	file:
innobase_undo_logs_init_default_max	handler/ha_innodb.cc	/^innobase_undo_logs_init_default_max()$/;"	f	file:
innobase_update_foreign_cache	handler/handler0alter.cc	/^innobase_update_foreign_cache($/;"	f
innobase_update_foreign_try	handler/handler0alter.cc	/^innobase_update_foreign_try($/;"	f
innobase_update_gis_column_type	handler/handler0alter.cc	/^innobase_update_gis_column_type($/;"	f	file:
innobase_update_n_virtual	handler/handler0alter.cc	/^innobase_update_n_virtual($/;"	f	file:
innobase_update_v_pos_sys_columns	handler/handler0alter.cc	/^innobase_update_v_pos_sys_columns($/;"	f	file:
innobase_update_v_pos_sys_virtual	handler/handler0alter.cc	/^innobase_update_v_pos_sys_virtual($/;"	f	file:
innobase_use_checksums	handler/ha_innodb.cc	/^static my_bool	innobase_use_checksums			= TRUE;$/;"	v	file:
innobase_use_doublewrite	handler/ha_innodb.cc	/^static my_bool	innobase_use_doublewrite		= TRUE;$/;"	v	file:
innobase_vcol_build_templ	handler/ha_innodb.cc	/^innobase_vcol_build_templ($/;"	f	file:
innobase_wildcasecmp	handler/ha_innodb.cc	/^innobase_wildcasecmp($/;"	f
innobase_write_io_threads	handler/ha_innodb.cc	/^static ulong innobase_write_io_threads;$/;"	v	file:
innobase_xa_prepare	handler/ha_innodb.cc	/^innobase_xa_prepare($/;"	f	file:
innobase_xa_recover	handler/ha_innodb.cc	/^innobase_xa_recover($/;"	f	file:
innodb_adaptive_hash_index_update	handler/ha_innodb.cc	/^innodb_adaptive_hash_index_update($/;"	f	file:
innodb_ahi_drop_lookups	include/srv0srv.h	/^	ulint innodb_ahi_drop_lookups;		\/*!< number of adaptive hash$/;"	m	struct:export_var_t
innodb_api	include/row0mysql.h	/^	unsigned	innodb_api:1;	\/*!< whether this is a InnoDB API$/;"	m	struct:row_prebuilt_t
innodb_api_buf	include/row0mysql.h	/^	void*           innodb_api_buf; \/*!< Buffer holding copy of the physical$/;"	m	struct:row_prebuilt_t
innodb_api_cb	handler/ha_innodb.cc	/^ib_cb_t innodb_api_cb[] = {$/;"	v
innodb_api_rec	include/row0mysql.h	/^	const rec_t*	innodb_api_rec;	\/*!< InnoDB API search result *\/$/;"	m	struct:row_prebuilt_t
innodb_api_rec_size	include/row0mysql.h	/^	ulint           innodb_api_rec_size; \/*!< Size of the Innodb API record *\/$/;"	m	struct:row_prebuilt_t
innodb_available_undo_logs	include/srv0srv.h	/^	ulint innodb_available_undo_logs;       \/*!< srv_available_undo_logs *\/$/;"	m	struct:export_var_t
innodb_background_drop_list_empty	handler/ha_innodb.cc	/^static my_bool	innodb_background_drop_list_empty = TRUE;$/;"	v	file:
innodb_base_col_setup	handler/ha_innodb.cc	/^innodb_base_col_setup($/;"	f
innodb_base_col_setup_for_stored	handler/ha_innodb.cc	/^innodb_base_col_setup_for_stored($/;"	f
innodb_buf_flush_list_now	handler/ha_innodb.cc	/^static my_bool	innodb_buf_flush_list_now = TRUE;$/;"	v	file:
innodb_buffer_pool_bytes_data	include/srv0srv.h	/^	ulint innodb_buffer_pool_bytes_data;	\/*!< File bytes used *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_bytes_dirty	include/srv0srv.h	/^	ulint innodb_buffer_pool_bytes_dirty;	\/*!< File bytes modified *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_dump_now	handler/ha_innodb.cc	/^static my_bool	innodb_buffer_pool_dump_now = FALSE;$/;"	v	file:
innodb_buffer_pool_dump_status	include/srv0srv.h	/^	char  innodb_buffer_pool_dump_status[OS_FILE_MAX_PATH + 128];\/*!< Buf pool dump status *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_evict_uncompressed	handler/ha_innodb.cc	/^innodb_buffer_pool_evict_uncompressed(void)$/;"	f
innodb_buffer_pool_evict_update	handler/ha_innodb.cc	/^innodb_buffer_pool_evict_update($/;"	f	file:
innodb_buffer_pool_load_abort	handler/ha_innodb.cc	/^static my_bool	innodb_buffer_pool_load_abort = FALSE;$/;"	v	file:
innodb_buffer_pool_load_now	handler/ha_innodb.cc	/^static my_bool	innodb_buffer_pool_load_now = FALSE;$/;"	v	file:
innodb_buffer_pool_load_status	include/srv0srv.h	/^	char  innodb_buffer_pool_load_status[OS_FILE_MAX_PATH + 128];\/*!< Buf pool load status *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_pages_data	include/srv0srv.h	/^	ulint innodb_buffer_pool_pages_data;	\/*!< Data pages *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_pages_dirty	include/srv0srv.h	/^	ulint innodb_buffer_pool_pages_dirty;	\/*!< Dirty data pages *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_pages_flushed	include/srv0srv.h	/^	ulint innodb_buffer_pool_pages_flushed;	\/*!< srv_buf_pool_flushed *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_pages_free	include/srv0srv.h	/^	ulint innodb_buffer_pool_pages_free;	\/*!< Free pages *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_pages_latched	include/srv0srv.h	/^	ulint innodb_buffer_pool_pages_latched;	\/*!< Latched pages *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_pages_misc	include/srv0srv.h	/^	ulint innodb_buffer_pool_pages_misc;	\/*!< Miscellanous pages *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_pages_total	include/srv0srv.h	/^	ulint innodb_buffer_pool_pages_total;	\/*!< Buffer pool size *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_read_ahead	include/srv0srv.h	/^	ulint innodb_buffer_pool_read_ahead;	\/*!< srv_read_ahead *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_read_ahead_evicted	include/srv0srv.h	/^	ulint innodb_buffer_pool_read_ahead_evicted;\/*!< srv_read_ahead evicted*\/$/;"	m	struct:export_var_t
innodb_buffer_pool_read_ahead_rnd	include/srv0srv.h	/^	ulint innodb_buffer_pool_read_ahead_rnd;\/*!< srv_read_ahead_rnd *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_read_requests	include/srv0srv.h	/^	ulint innodb_buffer_pool_read_requests;	\/*!< buf_pool->stat.n_page_gets *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_reads	include/srv0srv.h	/^	ulint innodb_buffer_pool_reads;		\/*!< srv_buf_pool_reads *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_resize_status	include/srv0srv.h	/^	char  innodb_buffer_pool_resize_status[512];\/*!< Buf pool resize status *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_size_update	handler/ha_innodb.cc	/^innodb_buffer_pool_size_update($/;"	f	file:
innodb_buffer_pool_size_validate	handler/ha_innodb.cc	/^innodb_buffer_pool_size_validate($/;"	f	file:
innodb_buffer_pool_wait_free	include/srv0srv.h	/^	ulint innodb_buffer_pool_wait_free;	\/*!< srv_buf_pool_wait_free *\/$/;"	m	struct:export_var_t
innodb_buffer_pool_write_requests	include/srv0srv.h	/^	ulint innodb_buffer_pool_write_requests;\/*!< srv_buf_pool_write_requests *\/$/;"	m	struct:export_var_t
innodb_calling_exit	os/os0file.cc	/^bool	innodb_calling_exit;$/;"	v
innodb_change_buffer_max_size_update	handler/ha_innodb.cc	/^innodb_change_buffer_max_size_update($/;"	f	file:
innodb_change_buffering_update	handler/ha_innodb.cc	/^innodb_change_buffering_update($/;"	f	file:
innodb_change_buffering_validate	handler/ha_innodb.cc	/^innodb_change_buffering_validate($/;"	f	file:
innodb_checksum_algorithm_names	handler/ha_innodb.cc	/^static const char* innodb_checksum_algorithm_names[] = {$/;"	v	file:
innodb_checksum_algorithm_typelib	handler/ha_innodb.cc	/^static TYPELIB innodb_checksum_algorithm_typelib = {$/;"	v	file:
innodb_cmp_per_index_update	handler/ha_innodb.cc	/^innodb_cmp_per_index_update($/;"	f	file:
innodb_counter_info	srv/srv0mon.cc	/^static monitor_info_t	innodb_counter_info[] =$/;"	v	file:
innodb_counter_value	srv/srv0mon.cc	/^monitor_value_t	innodb_counter_value[NUM_MONITOR];$/;"	v
innodb_data_file_key	os/os0file.cc	/^mysql_pfs_key_t  innodb_data_file_key;$/;"	v
innodb_data_fsyncs	include/srv0srv.h	/^	ulint innodb_data_fsyncs;		\/*!< Number of fsyncs so far *\/$/;"	m	struct:export_var_t
innodb_data_pending_fsyncs	include/srv0srv.h	/^	ulint innodb_data_pending_fsyncs;	\/*!< Pending fsyncs *\/$/;"	m	struct:export_var_t
innodb_data_pending_reads	include/srv0srv.h	/^	ulint innodb_data_pending_reads;	\/*!< Pending reads *\/$/;"	m	struct:export_var_t
innodb_data_pending_writes	include/srv0srv.h	/^	ulint innodb_data_pending_writes;	\/*!< Pending writes *\/$/;"	m	struct:export_var_t
innodb_data_read	include/srv0srv.h	/^	ulint innodb_data_read;			\/*!< Data bytes read *\/$/;"	m	struct:export_var_t
innodb_data_reads	include/srv0srv.h	/^	ulint innodb_data_reads;		\/*!< I\/O read requests *\/$/;"	m	struct:export_var_t
innodb_data_writes	include/srv0srv.h	/^	ulint innodb_data_writes;		\/*!< I\/O write requests *\/$/;"	m	struct:export_var_t
innodb_data_written	include/srv0srv.h	/^	ulint innodb_data_written;		\/*!< Data bytes written *\/$/;"	m	struct:export_var_t
innodb_dblwr_pages_written	include/srv0srv.h	/^	ulint innodb_dblwr_pages_written;	\/*!< srv_dblwr_pages_written *\/$/;"	m	struct:export_var_t
innodb_dblwr_writes	include/srv0srv.h	/^	ulint innodb_dblwr_writes;		\/*!< srv_dblwr_writes *\/$/;"	m	struct:export_var_t
innodb_debug_compress_names	handler/ha_innodb.cc	/^static const char* innodb_debug_compress_names[] = {$/;"	v	file:
innodb_debug_compress_typelib	handler/ha_innodb.cc	/^static TYPELIB innodb_debug_compress_typelib = {$/;"	v	file:
innodb_default_row_format	handler/ha_innodb.cc	/^static ulong	innodb_default_row_format = DEFAULT_ROW_FORMAT_DYNAMIC;$/;"	v	file:
innodb_default_row_format_names	handler/ha_innodb.cc	/^static const char* innodb_default_row_format_names[] = {$/;"	v	file:
innodb_default_row_format_typelib	handler/ha_innodb.cc	/^static TYPELIB innodb_default_row_format_typelib = {$/;"	v	file:
innodb_dict_stats_disabled_debug	dict/dict0stats_bg.cc	/^my_bool				innodb_dict_stats_disabled_debug;$/;"	v
innodb_disable_monitor_update	handler/ha_innodb.cc	/^innodb_disable_monitor_update($/;"	f	file:
innodb_enable_monitor_at_startup	handler/ha_innodb.cc	/^innodb_enable_monitor_at_startup($/;"	f	file:
innodb_enable_monitor_update	handler/ha_innodb.cc	/^innodb_enable_monitor_update($/;"	f	file:
innodb_export_status	handler/ha_innodb.cc	/^innodb_export_status()$/;"	f	file:
innodb_file_format_default	handler/ha_innodb.cc	/^static const char*	innodb_file_format_default	= "Barracuda";$/;"	v	file:
innodb_file_format_max_default	handler/ha_innodb.cc	/^static const char*	innodb_file_format_max_default	= "Antelope";$/;"	v	file:
innodb_file_format_max_update	handler/ha_innodb.cc	/^innodb_file_format_max_update($/;"	f	file:
innodb_file_format_max_validate	handler/ha_innodb.cc	/^innodb_file_format_max_validate($/;"	f	file:
innodb_file_format_name_update	handler/ha_innodb.cc	/^innodb_file_format_name_update($/;"	f	file:
innodb_file_format_name_validate	handler/ha_innodb.cc	/^innodb_file_format_name_validate($/;"	f	file:
innodb_file_formats_enum	include/univ.i	/^enum innodb_file_formats_enum {$/;"	g	file:
innodb_file_formats_t	include/univ.i	/^typedef enum innodb_file_formats_enum innodb_file_formats_t;$/;"	t	typeref:enum:innodb_file_formats_enum	file:
innodb_fill_old_vcol_val	handler/ha_innodb.cc	/^innodb_fill_old_vcol_val($/;"	f	file:
innodb_find_change_buffering_value	handler/ha_innodb.cc	/^innodb_find_change_buffering_value($/;"	f	file:
innodb_hton_ptr	handler/ha_innodb.cc	/^static struct handlerton* innodb_hton_ptr;$/;"	v	typeref:struct:handlerton	file:
innodb_idx_translate_t	handler/ha_innodb.h	/^struct innodb_idx_translate_t {$/;"	s
innodb_inited	handler/ha_innodb.cc	/^static bool innodb_inited = 0;$/;"	v	file:
innodb_internal_table_update	handler/ha_innodb.cc	/^innodb_internal_table_update($/;"	f	file:
innodb_internal_table_validate	handler/ha_innodb.cc	/^innodb_internal_table_validate($/;"	f	file:
innodb_io_capacity_max_update	handler/ha_innodb.cc	/^innodb_io_capacity_max_update($/;"	f	file:
innodb_io_capacity_update	handler/ha_innodb.cc	/^innodb_io_capacity_update($/;"	f	file:
innodb_large_prefix_update	handler/ha_innodb.cc	/^innodb_large_prefix_update($/;"	f	file:
innodb_lock_waits	trx/trx0i_s.cc	/^	i_s_table_cache_t innodb_lock_waits;\/*!< innodb_lock_waits table *\/$/;"	m	struct:trx_i_s_cache_t	file:
innodb_lock_waits_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_lock_waits_fields_info[] =$/;"	v	file:
innodb_lock_waits_init	handler/i_s.cc	/^innodb_lock_waits_init($/;"	f	file:
innodb_locks	trx/trx0i_s.cc	/^	i_s_table_cache_t innodb_locks;	\/*!< innodb_locks table *\/$/;"	m	struct:trx_i_s_cache_t	file:
innodb_locks_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_locks_fields_info[] =$/;"	v	file:
innodb_locks_init	handler/i_s.cc	/^innodb_locks_init($/;"	f	file:
innodb_log_checkpoint_now	handler/ha_innodb.cc	/^static my_bool	innodb_log_checkpoint_now = TRUE;$/;"	v	file:
innodb_log_checksums	log/log0log.cc	/^my_bool	innodb_log_checksums;$/;"	v
innodb_log_checksums_func_update	handler/ha_innodb.cc	/^innodb_log_checksums_func_update(bool	check)$/;"	f	file:
innodb_log_checksums_update	handler/ha_innodb.cc	/^innodb_log_checksums_update($/;"	f	file:
innodb_log_file_key	os/os0file.cc	/^mysql_pfs_key_t  innodb_log_file_key;$/;"	v
innodb_log_waits	include/srv0srv.h	/^	ulint innodb_log_waits;			\/*!< srv_log_waits *\/$/;"	m	struct:export_var_t
innodb_log_write_ahead_size_update	handler/ha_innodb.cc	/^innodb_log_write_ahead_size_update($/;"	f	file:
innodb_log_write_requests	include/srv0srv.h	/^	ulint innodb_log_write_requests;	\/*!< srv_log_write_requests *\/$/;"	m	struct:export_var_t
innodb_log_writes	include/srv0srv.h	/^	ulint innodb_log_writes;		\/*!< srv_log_writes *\/$/;"	m	struct:export_var_t
innodb_make_page_dirty	handler/ha_innodb.cc	/^innodb_make_page_dirty($/;"	f	file:
innodb_max_dirty_pages_pct_lwm_update	handler/ha_innodb.cc	/^innodb_max_dirty_pages_pct_lwm_update($/;"	f	file:
innodb_max_dirty_pages_pct_update	handler/ha_innodb.cc	/^innodb_max_dirty_pages_pct_update($/;"	f	file:
innodb_merge_threshold_set_all_debug	handler/ha_innodb.cc	/^static uint	innodb_merge_threshold_set_all_debug$/;"	v	file:
innodb_merge_threshold_set_all_debug_update	handler/ha_innodb.cc	/^innodb_merge_threshold_set_all_debug_update($/;"	f	file:
innodb_metrics_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_metrics_fields_info[] =$/;"	v	file:
innodb_metrics_init	handler/i_s.cc	/^innodb_metrics_init($/;"	f	file:
innodb_monitor_id_by_name_get	handler/ha_innodb.cc	/^innodb_monitor_id_by_name_get($/;"	f	file:
innodb_monitor_set_option	handler/ha_innodb.cc	/^innodb_monitor_set_option($/;"	f	file:
innodb_monitor_update	handler/ha_innodb.cc	/^innodb_monitor_update($/;"	f	file:
innodb_monitor_update_wildcard	handler/ha_innodb.cc	/^innodb_monitor_update_wildcard($/;"	f	file:
innodb_monitor_valid_byname	handler/ha_innodb.cc	/^innodb_monitor_valid_byname($/;"	f	file:
innodb_monitor_validate	handler/ha_innodb.cc	/^innodb_monitor_validate($/;"	f	file:
innodb_monitor_validate_wildcard_name	handler/ha_innodb.cc	/^innodb_monitor_validate_wildcard_name($/;"	f	file:
innodb_num_open_files	include/srv0srv.h	/^	ulint innodb_num_open_files;		\/*!< fil_n_file_opened *\/$/;"	m	struct:export_var_t
innodb_old_blocks_pct_update	handler/ha_innodb.cc	/^innodb_old_blocks_pct_update($/;"	f	file:
innodb_optimize_fulltext_only	handler/ha_innodb.cc	/^static my_bool	innodb_optimize_fulltext_only		= FALSE;$/;"	v	file:
innodb_os_log_fsyncs	include/srv0srv.h	/^	ulint innodb_os_log_fsyncs;		\/*!< fil_n_log_flushes *\/$/;"	m	struct:export_var_t
innodb_os_log_pending_fsyncs	include/srv0srv.h	/^	ulint innodb_os_log_pending_fsyncs;	\/*!< fil_n_pending_log_flushes *\/$/;"	m	struct:export_var_t
innodb_os_log_pending_writes	include/srv0srv.h	/^	ulint innodb_os_log_pending_writes;	\/*!< srv_os_log_pending_writes *\/$/;"	m	struct:export_var_t
innodb_os_log_written	include/srv0srv.h	/^	lsn_t innodb_os_log_written;		\/*!< srv_os_log_written *\/$/;"	m	struct:export_var_t
innodb_page_cleaner_disabled_debug	buf/buf0flu.cc	/^my_bool innodb_page_cleaner_disabled_debug;$/;"	v
innodb_page_size	include/srv0srv.h	/^	ulint innodb_page_size;			\/*!< UNIV_PAGE_SIZE *\/$/;"	m	struct:export_var_t
innodb_page_size_validate	handler/ha_innodb.cc	/^innodb_page_size_validate($/;"	f
innodb_pages_created	include/srv0srv.h	/^	ulint innodb_pages_created;		\/*!< buf_pool->stat.n_pages_created *\/$/;"	m	struct:export_var_t
innodb_pages_read	include/srv0srv.h	/^	ulint innodb_pages_read;		\/*!< buf_pool->stat.n_pages_read *\/$/;"	m	struct:export_var_t
innodb_pages_written	include/srv0srv.h	/^	ulint innodb_pages_written;		\/*!< buf_pool->stat.n_pages_written *\/$/;"	m	struct:export_var_t
innodb_purge_run_now	handler/ha_innodb.cc	/^static my_bool	innodb_purge_run_now = TRUE;$/;"	v	file:
innodb_purge_stop_now	handler/ha_innodb.cc	/^static my_bool	innodb_purge_stop_now = TRUE;$/;"	v	file:
innodb_purge_trx_id_age	include/srv0srv.h	/^	ulint innodb_purge_trx_id_age;		\/*!< rw_max_trx_id - purged trx_id *\/$/;"	m	struct:export_var_t
innodb_purge_view_trx_id_age	include/srv0srv.h	/^	ulint innodb_purge_view_trx_id_age;	\/*!< rw_max_trx_id$/;"	m	struct:export_var_t
innodb_rec_per_key	handler/ha_innodb.cc	/^innodb_rec_per_key($/;"	f
innodb_replace_trx_in_thd	handler/ha_innodb.cc	/^innodb_replace_trx_in_thd($/;"	f	file:
innodb_reset_all_monitor_update	handler/ha_innodb.cc	/^innodb_reset_all_monitor_update($/;"	f	file:
innodb_reset_monitor_update	handler/ha_innodb.cc	/^innodb_reset_monitor_update($/;"	f	file:
innodb_row_lock_current_waits	include/srv0srv.h	/^	ulint innodb_row_lock_current_waits;	\/*!< srv_n_lock_wait_current_count *\/$/;"	m	struct:export_var_t
innodb_row_lock_time	include/srv0srv.h	/^	int64_t innodb_row_lock_time;		\/*!< srv_n_lock_wait_time$/;"	m	struct:export_var_t
innodb_row_lock_time_avg	include/srv0srv.h	/^	ulint innodb_row_lock_time_avg;		\/*!< srv_n_lock_wait_time$/;"	m	struct:export_var_t
innodb_row_lock_time_max	include/srv0srv.h	/^	ulint innodb_row_lock_time_max;		\/*!< srv_n_lock_max_wait_time$/;"	m	struct:export_var_t
innodb_row_lock_waits	include/srv0srv.h	/^	ulint innodb_row_lock_waits;		\/*!< srv_n_lock_wait_count *\/$/;"	m	struct:export_var_t
innodb_rows_deleted	include/srv0srv.h	/^	ulint innodb_rows_deleted;		\/*!< srv_n_rows_deleted *\/$/;"	m	struct:export_var_t
innodb_rows_inserted	include/srv0srv.h	/^	ulint innodb_rows_inserted;		\/*!< srv_n_rows_inserted *\/$/;"	m	struct:export_var_t
innodb_rows_read	include/srv0srv.h	/^	ulint innodb_rows_read;			\/*!< srv_n_rows_read *\/$/;"	m	struct:export_var_t
innodb_rows_updated	include/srv0srv.h	/^	ulint innodb_rows_updated;		\/*!< srv_n_rows_updated *\/$/;"	m	struct:export_var_t
innodb_save_page_no	handler/ha_innodb.cc	/^innodb_save_page_no($/;"	f	file:
innodb_session_t	include/sess0sess.h	/^	innodb_session_t()$/;"	f	class:innodb_session_t
innodb_session_t	include/sess0sess.h	/^class innodb_session_t {$/;"	c
innodb_set_buf_pool_size	handler/ha_innodb.cc	/^innodb_set_buf_pool_size(ulonglong buf_pool_size)$/;"	f
innodb_show_latch_status	handler/ha_innodb.cc	/^innodb_show_latch_status($/;"	f	file:
innodb_show_mutex_status	handler/ha_innodb.cc	/^innodb_show_mutex_status($/;"	f	file:
innodb_show_rwlock_status	handler/ha_innodb.cc	/^innodb_show_rwlock_status($/;"	f	file:
innodb_show_status	handler/ha_innodb.cc	/^innodb_show_status($/;"	f	file:
innodb_srv_buf_dump_filename_validate	handler/ha_innodb.cc	/^innodb_srv_buf_dump_filename_validate($/;"	f	file:
innodb_srv_buf_dump_filename_validate	handler/ha_innodb.cc	18637;"	d	file:
innodb_stats_method_names	handler/ha_innodb.cc	/^static const char* innodb_stats_method_names[] = {$/;"	v	file:
innodb_stats_method_typelib	handler/ha_innodb.cc	/^static TYPELIB innodb_stats_method_typelib = {$/;"	v	file:
innodb_stats_sample_pages_update	handler/ha_innodb.cc	/^innodb_stats_sample_pages_update($/;"	f	file:
innodb_status_output_update	handler/ha_innodb.cc	/^innodb_status_output_update($/;"	f	file:
innodb_status_variables	handler/ha_innodb.cc	/^static SHOW_VAR innodb_status_variables[]= {$/;"	v	file:
innodb_status_variables_export	handler/ha_innodb.cc	/^static SHOW_VAR innodb_status_variables_export[]= {$/;"	v	file:
innodb_stopword_table_validate	handler/ha_innodb.cc	/^innodb_stopword_table_validate($/;"	f	file:
innodb_support_xa_update	handler/ha_innodb.cc	/^innodb_support_xa_update($/;"	f	file:
innodb_sys_columns_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_columns_fields_info[] =$/;"	v	file:
innodb_sys_columns_init	handler/i_s.cc	/^innodb_sys_columns_init($/;"	f	file:
innodb_sys_datafiles_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_datafiles_fields_info[] =$/;"	v	file:
innodb_sys_datafiles_init	handler/i_s.cc	/^innodb_sys_datafiles_init($/;"	f	file:
innodb_sys_fields_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_fields_fields_info[] =$/;"	v	file:
innodb_sys_fields_init	handler/i_s.cc	/^innodb_sys_fields_init($/;"	f	file:
innodb_sys_foreign_cols_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_foreign_cols_fields_info[] =$/;"	v	file:
innodb_sys_foreign_cols_init	handler/i_s.cc	/^innodb_sys_foreign_cols_init($/;"	f	file:
innodb_sys_foreign_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_foreign_fields_info[] =$/;"	v	file:
innodb_sys_foreign_init	handler/i_s.cc	/^innodb_sys_foreign_init($/;"	f	file:
innodb_sys_indexes_init	handler/i_s.cc	/^innodb_sys_indexes_init($/;"	f	file:
innodb_sys_tables_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_tables_fields_info[] =$/;"	v	file:
innodb_sys_tables_init	handler/i_s.cc	/^innodb_sys_tables_init($/;"	f	file:
innodb_sys_tablespaces_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_tablespaces_fields_info[] =$/;"	v	file:
innodb_sys_tablespaces_init	handler/i_s.cc	/^innodb_sys_tablespaces_init($/;"	f	file:
innodb_sys_tablestats_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_tablestats_fields_info[] =$/;"	v	file:
innodb_sys_tablestats_init	handler/i_s.cc	/^innodb_sys_tablestats_init($/;"	f	file:
innodb_sys_virtual_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sys_virtual_fields_info[] =$/;"	v	file:
innodb_sys_virtual_init	handler/i_s.cc	/^innodb_sys_virtual_init($/;"	f	file:
innodb_sysindex_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_sysindex_fields_info[] =$/;"	v	file:
innodb_temp_file_key	os/os0file.cc	/^mysql_pfs_key_t  innodb_temp_file_key;$/;"	v
innodb_temp_table_populate_cache	handler/i_s.cc	/^innodb_temp_table_populate_cache($/;"	f	file:
innodb_tmpdir_validate	handler/ha_innodb.cc	/^innodb_tmpdir_validate($/;"	f	file:
innodb_truncated_status_writes	include/srv0srv.h	/^	ulint innodb_truncated_status_writes;	\/*!< srv_truncated_status_writes *\/$/;"	m	struct:export_var_t
innodb_trx	trx/trx0i_s.cc	/^	i_s_table_cache_t innodb_trx;	\/*!< innodb_trx table *\/$/;"	m	struct:trx_i_s_cache_t	file:
innodb_trx_fields_info	handler/i_s.cc	/^static ST_FIELD_INFO	innodb_trx_fields_info[] =$/;"	v	file:
innodb_trx_init	handler/i_s.cc	/^innodb_trx_init($/;"	f	file:
innodb_undo_logs_update	handler/ha_innodb.cc	/^innodb_undo_logs_update($/;"	f	file:
innodb_v_adjust_idx_col	handler/handler0alter.cc	/^innodb_v_adjust_idx_col($/;"	f	file:
innodb_version_str	handler/ha_innodb.cc	/^static char*	innodb_version_str = (char*) INNODB_VERSION_STR;$/;"	v	file:
innopart_get_index	handler/ha_innopart.cc	/^ha_innopart::innopart_get_index($/;"	f	class:ha_innopart
inplace_alter_table	handler/handler0alter.cc	/^ha_innobase::inplace_alter_table($/;"	f	class:ha_innobase
inplace_alter_table	handler/handler0alter.cc	/^ha_innopart::inplace_alter_table($/;"	f	class:ha_innopart
ins	api/api0api.cc	/^	ins_node_t*	ins;		\/*!< Innobase SQL insert node$/;"	m	struct:ib_qry_node_t	file:
ins	api/api0api.cc	/^	que_fork_t*	ins;		\/*!< Innobase SQL query graph used$/;"	m	struct:ib_qry_grph_t	file:
ins_graph	include/fts0types.h	/^	que_t**		ins_graph;	\/*!< Insert query graphs *\/$/;"	m	struct:fts_index_cache_t
ins_graph	include/row0mysql.h	/^	que_fork_t*	ins_graph;	\/*!< Innobase SQL query graph used$/;"	m	struct:row_prebuilt_t
ins_node	include/row0mysql.h	/^	ins_node_t*	ins_node;	\/*!< Innobase SQL insert node$/;"	m	struct:row_prebuilt_t
ins_node_create	row/row0ins.cc	/^ins_node_create($/;"	f
ins_node_create_entry_list	row/row0ins.cc	/^ins_node_create_entry_list($/;"	f	file:
ins_node_set_new_row	row/row0ins.cc	/^ins_node_set_new_row($/;"	f
ins_node_t	include/row0ins.h	/^struct ins_node_t{$/;"	s
ins_sel_stmt	include/row0mysql.h	/^	bool		ins_sel_stmt;	\/*!< if true then ins_sel_statement. *\/$/;"	m	struct:row_prebuilt_t
ins_type	include/row0ins.h	/^	ulint		ins_type;\/* INS_VALUES, INS_SEARCHED, or INS_DIRECT *\/$/;"	m	struct:ins_node_t
ins_upd_rec_buff	include/row0mysql.h	/^	byte*		ins_upd_rec_buff;\/*!< buffer for storing data converted$/;"	m	struct:row_prebuilt_t
insert	btr/btr0bulk.cc	/^BtrBulk::insert($/;"	f	class:BtrBulk
insert	btr/btr0bulk.cc	/^PageBulk::insert($/;"	f	class:PageBulk
insert	include/btr0bulk.h	/^	dberr_t	insert(dtuple_t*	tuple)$/;"	f	class:BtrBulk
insert	read/read0read.cc	/^ReadView::ids_t::insert(value_type value)$/;"	f	class:ReadView::ids_t
insert	row/row0merge.cc	/^	dberr_t insert($/;"	f	class:index_tuple_info_t
insert_undo	include/trx0trx.h	/^	trx_undo_t*	insert_undo;	\/*!< pointer to the insert undo log, or$/;"	m	struct:trx_undo_ptr_t
insert_undo_cached	include/trx0rseg.h	/^	UT_LIST_BASE_NODE_T(trx_undo_t) insert_undo_cached;$/;"	m	struct:trx_rseg_t
insert_undo_list	include/trx0rseg.h	/^	UT_LIST_BASE_NODE_T(trx_undo_t) insert_undo_list;$/;"	m	struct:trx_rseg_t
instance_no	include/buf0buf.h	/^	ulint		instance_no;	\/*!< Array index of this buffer$/;"	m	struct:buf_pool_t
int64_counter_t	include/sync0rw.h	/^	typedef ib_counter_t<int64_t, IB_N_SLOTS> int64_counter_t;$/;"	t	struct:rw_lock_stats_t
int64_ctr_1_t	include/srv0srv.h	/^	typedef ib_counter_t<int64_t, 1, single_indexer_t> int64_ctr_1_t;$/;"	t	struct:srv_stats_t
internal	include/trx0trx.h	/^	bool		internal;	\/*!< true if it is a system\/internal$/;"	m	struct:trx_t
interrupted	include/buf0flu.h	/^	void interrupted()$/;"	f	class:FlushObserver
interrupted	include/fts0types.h	/^	ibool		interrupted;	\/*!< TRUE if SYNC was interrupted *\/$/;"	m	struct:fts_sync_t
intersection	fsp/fsp0space.cc	/^Tablespace::intersection($/;"	f	class:Tablespace
intersection	fts/fts0que.cc	/^	ib_rbt_t*	intersection;	\/*!< The doc ids that were found in$/;"	m	struct:fts_query_t	file:
interval_time	fts/fts0opt.cc	/^	ib_time_t	interval_time;	\/*!< Minimum time to wait before$/;"	m	struct:fts_slot_t	file:
into_list	include/row0sel.h	/^	sym_node_t*	into_list;	\/*!< variables list or NULL *\/$/;"	m	struct:sel_node_t
into_list	include/row0sel.h	/^	sym_node_t*	into_list;	\/*!< variables to set *\/$/;"	m	struct:fetch_node_t
intrinsic_table_write_row	handler/ha_innodb.cc	/^ha_innobase::intrinsic_table_write_row(uchar* record)$/;"	f	class:ha_innobase
invalid	include/dict0mem.h	/^	bool		invalid;$/;"	m	class:last_ops_cur_t
io	include/buf0lru.h	/^	ulint	io;	\/**< Counter of buffer pool I\/O operations. *\/$/;"	m	struct:buf_LRU_stat_t
io	os/os0file.cc	/^	void io()$/;"	f	class:SimulatedAIOHandler
io_already_done	os/os0file.cc	/^	bool			io_already_done;$/;"	m	struct:Slot	file:
io_buffer	fil/fil0fil.cc	/^	byte*		io_buffer;		\/*!< Buffer to use for IO *\/$/;"	m	struct:fil_iterator_t	file:
io_complete	os/os0file.cc	/^	static dberr_t io_complete(const Slot* slot)$/;"	f	class:AIOHandler
io_complete	os/os0file.cc	/^	void io_complete()$/;"	f	class:SimulatedAIOHandler
io_cur	include/buf0buf.h	/^	ulint	io_cur;			\/*!< buf_LRU_stat_cur.io, num of IO$/;"	m	struct:buf_pool_info_t
io_fix	handler/i_s.cc	/^	unsigned	io_fix:2;	\/*!< type of pending I\/O operation *\/$/;"	m	struct:buf_page_info_t	file:
io_fix	include/buf0buf.h	/^	buf_io_fix	io_fix;$/;"	m	class:buf_page_t
io_handler_thread	srv/srv0start.cc	/^DECLARE_THREAD(io_handler_thread)($/;"	f
io_handler_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	io_handler_thread_key;$/;"	v
io_ibuf_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	io_ibuf_thread_key;$/;"	v
io_log_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	io_log_thread_key;$/;"	v
io_read_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	io_read_thread_key;$/;"	v
io_sum	include/buf0buf.h	/^	ulint	io_sum;			\/*!< buf_LRU_stat_sum.io *\/$/;"	m	struct:buf_pool_info_t
io_write_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	io_write_thread_key;$/;"	v
isSpaceAvailable	btr/btr0bulk.cc	/^PageBulk::isSpaceAvailable($/;"	f	class:PageBulk
is_aborted	include/trx0trx.h	/^	bool is_aborted() const$/;"	f	class:TrxInInnoDB
is_aborted	include/trx0trx.h	/^	static bool is_aborted(const trx_t* trx)$/;"	f	class:TrxInInnoDB
is_absolute_path	include/os0file.h	/^is_absolute_path($/;"	f
is_active	include/mtr0mtr.h	/^	bool is_active() const$/;"	f	struct:mtr_t
is_active	include/que0que.h	/^	ibool		is_active;	\/*!< TRUE if the thread has been set$/;"	m	struct:que_thr_t
is_aggregate	include/row0sel.h	/^	ibool		is_aggregate;	\/*!< TRUE if the select list consists of$/;"	m	struct:sel_node_t
is_async	include/mtr0mtr.h	/^	bool is_async() const$/;"	f	struct:mtr_t
is_async_rollback	include/trx0trx.h	/^	static bool is_async_rollback(const trx_t* trx)$/;"	f	class:TrxInInnoDB
is_being_truncated	include/fil0fil.h	/^	bool		is_being_truncated;$/;"	m	struct:fil_space_t
is_block_dirtied	mtr/mtr0mtr.cc	/^mtr_t::is_block_dirtied(const buf_block_t* block)$/;"	f	class:mtr_t
is_block_lock	include/sync0rw.h	/^	unsigned	is_block_lock:1;$/;"	m	struct:rw_lock_t
is_checksum_strict	include/buf0types.h	/^is_checksum_strict(srv_checksum_algorithm_t algo)$/;"	f
is_checksum_strict	include/buf0types.h	/^is_checksum_strict(ulint algo)$/;"	f
is_closed	include/read0types.h	/^	bool is_closed() const$/;"	f	class:ReadView
is_committed	include/dict0mem.h	/^	bool is_committed() const$/;"	f	struct:dict_index_t
is_committing	include/mtr0mtr.h	/^	bool is_committing() const$/;"	f	struct:mtr_t
is_complete	include/buf0flu.h	/^	bool is_complete(ulint	instance_no)$/;"	f	class:FlushObserver
is_compressed	include/page0size.h	/^	inline bool is_compressed() const$/;"	f	class:page_size_t
is_compressed_page	os/os0file.cc	/^	static bool is_compressed_page(const Slot* slot)$/;"	f	class:AIOHandler	file:
is_compressed_page	os/os0file.cc	/^Compression::is_compressed_page(const byte* page)$/;"	f	class:Compression
is_dd_trx	include/trx0trx.h	/^	bool		is_dd_trx;	\/*!< True if the transaction is used for$/;"	m	struct:trx_t
is_delete	include/row0upd.h	/^	ibool		is_delete;\/* TRUE if delete, FALSE if update *\/$/;"	m	struct:upd_node_t
is_dirty	include/mtr0mtr.h	/^	bool is_dirty() const$/;"	f	struct:mtr_t
is_encrypted_page	os/os0file.cc	/^	static bool is_encrypted_page(const Slot* slot)$/;"	f	class:AIOHandler	file:
is_encrypted_page	os/os0file.cc	/^Encryption::is_encrypted_page(const byte* page)$/;"	f	class:Encryption
is_extending	include/log0log.h	/^	volatile bool	is_extending;	\/*!< this is set to true during extend$/;"	m	struct:log_t
is_fast	include/ut0counter.h	/^	static bool is_fast() { return(Indexer<Type, N>::fast); }$/;"	f	class:ib_counter_t
is_finished	buf/buf0flu.cc	/^	os_event_t		is_finished;	\/*!< event to signal that all$/;"	m	struct:page_cleaner_t	file:
is_forced_rollback	include/trx0trx.h	/^	static bool is_forced_rollback(const trx_t* trx)$/;"	f	class:TrxInInnoDB
is_freed	row/row0log.cc	/^	bool is_freed(ulonglong offset_arg) const {$/;"	f	class:row_log_table_blob_t
is_gap	include/lock0priv.h	/^	bool is_gap() const$/;"	f	struct:lock_t
is_heap_list	include/ut0list.h	/^	ibool			is_heap_list;	\/*!< TRUE if this list was$/;"	m	struct:ib_list_t
is_hp	buf/buf0buf.cc	/^HazardPointer::is_hp(const buf_page_t* bpage)$/;"	f	class:HazardPointer
is_ignorable_error	handler/ha_innopart.cc	/^ha_innopart::is_ignorable_error($/;"	f	class:ha_innopart
is_in_unflushed_spaces	include/fil0fil.h	/^	bool		is_in_unflushed_spaces;$/;"	m	struct:fil_space_t
is_index_modified_since_logged	row/row0trunc.cc	/^truncate_t::is_index_modified_since_logged($/;"	f	class:truncate_t
is_insert_intention	include/lock0priv.h	/^	bool is_insert_intention() const$/;"	f	struct:lock_t
is_inside_ibuf	include/mtr0mtr.h	/^	bool is_inside_ibuf() const$/;"	f	struct:mtr_t
is_intermediate_file	include/fil0fil.h	/^is_intermediate_file(const std::string& filepath)$/;"	f
is_intrinsic_temp_table	handler/ha_innodb.h	/^	inline bool is_intrinsic_temp_table() const$/;"	f	class:create_table_info_t
is_linux_native_aio_supported	os/os0file.cc	/^AIO::is_linux_native_aio_supported()$/;"	f	class:AIO
is_log_present	trx/trx0purge.cc	/^	bool is_log_present($/;"	f	namespace:undo
is_marked	include/trx0purge.h	/^		bool is_marked() const$/;"	f	class:undo::Truncate
is_modified	include/row0upd.h	/^	bool is_modified(const ulint field_no) const$/;"	f	struct:upd_t
is_named_space	mtr/mtr0mtr.cc	/^mtr_t::is_named_space(ulint space) const$/;"	f	class:mtr_t
is_ngram	include/dict0mem.h	/^	bool		is_ngram;$/;"	m	struct:dict_index_t
is_ngram	include/fts0types.h	/^	bool		is_ngram;	\/*!< Whether it is a ngram parser *\/$/;"	m	struct:fts_doc_t
is_ngram	include/row0merge.h	/^	bool		is_ngram;	\/*!< true if it's ngram parser *\/$/;"	m	struct:index_def_t
is_none	handler/ha_innodb.cc	/^Compression::is_none(const char* algorithm)$/;"	f	class:Compression
is_none	handler/ha_innodb.cc	/^Encryption::is_none(const char* algorithm)$/;"	f	class:Encryption
is_old	handler/i_s.cc	/^	unsigned	is_old:1;	\/*!< TRUE if the block is in the old$/;"	m	struct:buf_page_info_t	file:
is_on_row	lock/lock0lock.cc	/^RecLock::is_on_row(const lock_t* lock) const$/;"	f	class:RecLock
is_online_redo_copy	log/log0recv.cc	/^volatile bool is_online_redo_copy = true;$/;"	v
is_oom_fatal	include/ut0new.h	/^	bool is_oom_fatal() const {$/;"	f	class:ut_allocator
is_open	include/fil0fil.h	/^	bool		is_open;$/;"	m	struct:fil_node_t
is_open	include/fsp0file.h	/^	bool	is_open()	const$/;"	f	class:Datafile
is_predefined_tablespace	include/fsp0sysspace.h	/^is_predefined_tablespace($/;"	f
is_predicate	include/lock0priv.h	/^	bool is_predicate() const$/;"	f	struct:lock_t
is_predicate_lock	include/lock0priv.h	/^	static bool is_predicate_lock(ulint mode)$/;"	f	class:RecLock
is_punch_hole_supported	include/os0file.h	/^	static bool is_punch_hole_supported()$/;"	f	class:IORequest
is_raw_device	include/fsp0file.h	/^	bool is_raw_device()$/;"	f	class:Datafile
is_raw_disk	include/fil0fil.h	/^	bool		is_raw_disk;$/;"	m	struct:fil_node_t
is_record_lock	include/lock0priv.h	/^	bool is_record_lock() const$/;"	f	struct:lock_t
is_record_not_gap	include/lock0priv.h	/^	bool is_record_not_gap() const$/;"	f	struct:lock_t
is_recovered	include/trx0trx.h	/^	bool		is_recovered;	\/*!< 0=normal transaction,$/;"	m	struct:trx_t
is_registered	include/trx0trx.h	/^	bool		is_registered;	\/* This flag is set to true after the$/;"	m	struct:trx_t
is_requested	buf/buf0flu.cc	/^	os_event_t		is_requested;	\/*!< event to activate worker$/;"	m	struct:page_cleaner_t	file:
is_reserved	os/os0file.cc	/^	bool			is_reserved;$/;"	m	struct:Slot	file:
is_rollback_disabled	include/trx0trx.h	/^	bool is_rollback_disabled() const$/;"	f	class:TrxInInnoDB
is_running	buf/buf0flu.cc	/^	bool			is_running;	\/*!< false if attempt$/;"	m	struct:page_cleaner_t	file:
is_shared_tablespace	handler/ha_innodb.h	/^bool is_shared_tablespace(const char *tablespace_name) {$/;"	f
is_shutdown	os/os0file.cc	/^	bool is_shutdown() const$/;"	f	class:LinuxAIOHandler	file:
is_started	include/trx0trx.h	/^	static bool is_started(const trx_t* trx)$/;"	f	class:TrxInInnoDB
is_system_or_undo_tablespace	include/fsp0sysspace.h	/^is_system_or_undo_tablespace($/;"	f
is_system_tablespace	include/fsp0sysspace.h	/^is_system_tablespace($/;"	f
is_table_found	row/row0trunc.cc	/^	bool is_table_found() const$/;"	f	class:TableLocator
is_tablespace_truncated	include/trx0purge.h	/^		static bool is_tablespace_truncated(ulint space_id)$/;"	f	class:undo::Truncate
is_tablespace_truncated	row/row0trunc.cc	/^truncate_t::is_tablespace_truncated(ulint space_id)$/;"	f	class:truncate_t
is_too_deep	lock/lock0lock.cc	/^	bool is_too_deep() const$/;"	f	class:DeadlockChecker	file:
is_truncated	trx/trx0i_s.cc	/^	ibool		is_truncated;	\/*!< this is TRUE if the memory$/;"	m	struct:trx_i_s_cache_t	file:
is_undo_tablespace	fsp/fsp0space.cc	/^Tablespace::is_undo_tablespace($/;"	f	class:Tablespace
is_unsigned	include/row0mysql.h	/^	ulint	is_unsigned;		\/*!< if a column type is an integer$/;"	m	struct:mysql_row_templ_t
is_v_col	include/row0merge.h	/^	bool		is_v_col;	\/*!< whether this is a virtual column *\/$/;"	m	struct:index_field_t
is_valid	include/fsp0file.h	/^	bool	is_valid()	const$/;"	f	class:Datafile
is_valid_size	include/fsp0sysspace.h	/^	bool is_valid_size() const$/;"	f	class:SysTablespace
is_view_active	include/read0read.h	/^	static bool is_view_active(ReadView* view)$/;"	f	class:MVCC
is_virtual	include/row0mysql.h	/^	ulint	is_virtual;		\/*!< if a column is a virtual column *\/$/;"	m	struct:mysql_row_templ_t
is_visited	lock/lock0lock.cc	/^	bool is_visited(const lock_t* lock) const$/;"	f	class:DeadlockChecker	file:
is_waiting	include/lock0priv.h	/^	bool is_waiting() const$/;"	f	struct:lock_t
isolation_level	include/trx0trx.h	/^	ulint		isolation_level;\/*!< TRX_ISO_REPEATABLE_READ, ... *\/$/;"	m	struct:trx_t
items	ut/ut0wqueue.cc	/^	ib_list_t*	items;	\/*!< work item list *\/$/;"	m	struct:ib_wqueue_t	file:
iter	include/trx0purge.h	/^	purge_iter_t	iter;		\/* Limit up to which we have read and$/;"	m	struct:trx_purge_t
iterator	include/trx0types.h	/^	typedef trx_rsegs_t::iterator iterator;$/;"	t	class:TrxUndoRsegs
iv	include/log0recv.h	/^	byte*		iv;		\/*!< encryption iv *\/$/;"	m	struct:recv_encryption
jump_queue	lock/lock0lock.cc	/^RecLock::jump_queue($/;"	f	class:RecLock
keep_other_fields_on_keyread	include/row0mysql.h	/^	ibool		keep_other_fields_on_keyread; \/*!< when using fetch$/;"	m	struct:row_prebuilt_t
key	include/gis0geo.h	/^	uchar*	key;		\/* key. *\/$/;"	m	struct:rtr_split_node_t
key	include/log0recv.h	/^	byte*		key;		\/*!< encryption key *\/$/;"	m	struct:recv_encryption
key_and_rowid_cmp	handler/ha_innopart.cc	/^ha_innopart::key_and_rowid_cmp($/;"	f	class:ha_innopart
key_has_null_cols	include/dict0mem.h	/^	bool		key_has_null_cols;$/;"	m	class:rec_cache_t
key_number	include/row0merge.h	/^	ulint		key_number;	\/*!< MySQL key number,$/;"	m	struct:index_def_t
keys_to_use_for_scanning	handler/ha_innodb.cc	/^ha_innobase::keys_to_use_for_scanning()$/;"	f	class:ha_innobase
killed_by	include/trx0trx.h	/^	os_thread_id_t	killed_by;	\/*!< The thread ID that wants to$/;"	m	struct:trx_t
last	include/ut0list.h	/^	ib_list_node_t*		last;		\/*!< last node *\/$/;"	m	struct:ib_list_t
last	include/ut0rbt.h	/^			last;			\/* Last node visited *\/$/;"	m	struct:ib_rbt_bound_t
last_big_block	fts/fts0opt.cc	/^	ulint		last_big_block;	\/*!< Offset of last block in the$/;"	m	struct:fts_zip_t	file:
last_block	include/log0recv.h	/^	byte*		last_block;$/;"	m	struct:recv_sys_t
last_block_buf_start	include/log0recv.h	/^	byte*		last_block_buf_start;$/;"	m	struct:recv_sys_t
last_check_sync_time	fts/fts0opt.cc	/^static ib_time_t	last_check_sync_time;$/;"	v	file:
last_checkpoint_lsn	include/log0log.h	/^	lsn_t		last_checkpoint_lsn;$/;"	m	struct:log_t
last_del_marks	include/trx0rseg.h	/^	ibool				last_del_marks;$/;"	m	struct:trx_rseg_t
last_doc_id	include/fts0types.h	/^	doc_id_t	last_doc_id;	\/*!< Last document id in ilist. *\/$/;"	m	struct:fts_node_t
last_file_size	include/fsp0sysspace.h	/^	ulint last_file_size() const$/;"	f	class:SysTablespace
last_hash_succ	include/btr0sea.h	/^	ibool	last_hash_succ;	\/*!< TRUE if the last search would have$/;"	m	struct:btr_search_t
last_ins_cur	include/dict0mem.h	/^	last_ops_cur_t*	last_ins_cur;$/;"	m	struct:dict_index_t
last_offset	include/trx0rseg.h	/^	ulint				last_offset;$/;"	m	struct:trx_rseg_t
last_ops_cur_t	include/dict0mem.h	/^	last_ops_cur_t()$/;"	f	class:last_ops_cur_t
last_ops_cur_t	include/dict0mem.h	/^class last_ops_cur_t$/;"	c
last_os_error	include/fsp0file.h	/^	ulint	last_os_error()		const$/;"	f	class:Datafile
last_page_no	include/trx0rseg.h	/^	ulint				last_page_no;$/;"	m	struct:trx_rseg_t
last_page_no	include/trx0undo.h	/^	ulint		last_page_no;	\/*!< page number of the last page in the$/;"	m	struct:trx_undo_t
last_printout_time	include/buf0buf.h	/^	time_t		last_printout_time;$/;"	m	struct:buf_pool_t
last_printout_time	include/log0log.h	/^	time_t		last_printout_time;\/*!< when log_print was last time$/;"	m	struct:log_t
last_read	trx/trx0i_s.cc	/^	uintmax_t	last_read;	\/*!< last time the cache was read;$/;"	m	struct:trx_i_s_cache_t	file:
last_read_mutex	trx/trx0i_s.cc	/^	ib_mutex_t		last_read_mutex;\/*!< mutex protecting the$/;"	m	struct:trx_i_s_cache_t	file:
last_run	fts/fts0opt.cc	/^	ib_time_t	last_run;	\/*!< Time last run completed *\/$/;"	m	struct:fts_slot_t	file:
last_s_file_name	include/sync0rw.h	/^	const char*	last_s_file_name;$/;"	m	struct:rw_lock_t
last_s_line	include/sync0rw.h	/^	unsigned	last_s_line:14;$/;"	m	struct:rw_lock_t
last_sel_cur	include/dict0mem.h	/^	last_ops_cur_t*	last_sel_cur;$/;"	m	struct:dict_index_t
last_sel_node	include/que0que.h	/^	sel_node_t*	last_sel_node;	\/*!< last executed select node, or NULL$/;"	m	struct:que_fork_t
last_slot	include/lock0lock.h	/^	srv_slot_t*	last_slot;		\/*!< highest slot ever used$/;"	m	struct:lock_sys_t
last_sql_stat_start	include/trx0trx.h	/^	trx_savept_t	last_sql_stat_start;$/;"	m	struct:trx_t
last_stmt	include/fts0fts.h	/^	ib_vector_t*	last_stmt;	\/*!< last_stmt *\/$/;"	m	struct:fts_trx_t
last_trx_no	include/trx0rseg.h	/^	trx_id_t			last_trx_no;$/;"	m	struct:trx_rseg_t
last_x_file_name	include/sync0rw.h	/^	const char*	last_x_file_name;$/;"	m	struct:rw_lock_t
last_x_line	include/sync0rw.h	/^	unsigned	last_x_line:14;$/;"	m	struct:rw_lock_t
latch	btr/btr0bulk.cc	/^BtrBulk::latch()$/;"	f	class:BtrBulk
latch	btr/btr0bulk.cc	/^PageBulk::latch()$/;"	f	class:PageBulk
latch	include/fil0fil.h	/^	rw_lock_t	latch;	\/*!< latch protecting the file space storage$/;"	m	struct:fil_space_t
latch	include/trx0purge.h	/^	rw_lock_t	latch;		\/*!< The latch protecting the purge$/;"	m	struct:trx_purge_t
latch	sync/sync0arr.cc	/^	sync_object_t	latch;		\/*!< pointer to the object the$/;"	m	struct:sync_cell_t	file:
latch_id_t	include/sync0types.h	/^enum latch_id_t {$/;"	g
latch_level_less	sync/sync0debug.cc	/^	struct latch_level_less$/;"	s	struct:LatchDebug	file:
latch_level_t	include/sync0types.h	/^enum latch_level_t {$/;"	g
latch_meta	sync/sync0debug.cc	/^LatchMetaData	latch_meta;$/;"	v
latch_meta_t	include/sync0types.h	/^typedef LatchMeta<LatchCounter> latch_meta_t;$/;"	t
latch_mode	include/btr0pcur.h	/^	ulint		latch_mode;$/;"	m	struct:btr_pcur_t
latch_t	include/sync0types.h	/^struct latch_t {$/;"	s
latches_t	include/sync0types.h	/^		latches_t;$/;"	t	struct:sync_allowed_latches
le	include/read0types.h	/^	bool le(const ReadView* rhs) const$/;"	f	class:ReadView
least_undo_no	include/trx0types.h	/^	undo_no_t	least_undo_no;	\/*!< least undo number to undo *\/$/;"	m	struct:trx_savept_t
left	include/ut0rbt.h	/^	ib_rbt_node_t*	left;			\/* points left child *\/$/;"	m	struct:ib_rbt_node_t
left_block	include/btr0cur.h	/^	buf_block_t*	left_block;	\/*!< this field is used to store$/;"	m	struct:btr_cur_t
left_side	include/btr0sea.h	/^	ibool	left_side;	\/*!< TRUE or FALSE, depending on whether$/;"	m	struct:btr_search_t
left_side	include/buf0buf.h	/^	volatile bool	left_side;	\/*!< true or false, depending on$/;"	m	struct:buf_block_t
legacy_big_endian_checksum	buf/buf0checksum.cc	/^bool	legacy_big_endian_checksum = false;$/;"	v
len	api/api0api.cc	/^	ulint		len;		\/*!< Length of the column *\/$/;"	m	struct:ib_col_t	file:
len	include/data0data.h	/^	ulint		len;		\/*!< stored data length, in bytes *\/$/;"	m	struct:big_rec_field_t
len	include/data0data.h	/^	unsigned	len;	\/*!< data length; UNIV_SQL_NULL if SQL null *\/$/;"	m	struct:dfield_t
len	include/data0type.h	/^	unsigned	len:16;		\/*!< length; for MySQL data this$/;"	m	struct:dtype_t
len	include/dict0dict.h	/^	ulint		len;		\/* required column length *\/$/;"	m	struct:dict_col_meta_t
len	include/dict0mem.h	/^	unsigned	len:16;		\/*!< length; for MySQL data this$/;"	m	struct:dict_col_t
len	include/fil0fil.h	/^	size_t len()$/;"	f	class:Folder
len	include/fts0ast.h	/^	ulint		len;$/;"	m	struct:fts_ast_string_t
len	include/fts0tokenize.h	/^        uint   len;     \/*!< word len *\/$/;"	m	struct:st_ft_word
len	include/log0recv.h	/^	ulint		len;	\/*!< amount of data in buf *\/$/;"	m	struct:recv_sys_t
len	include/log0recv.h	/^	ulint		len;	\/*!< log record body length in bytes *\/$/;"	m	struct:recv_t
len	include/mem0mem.h	/^	ulint	len;	\/*!< physical length of this block in bytes *\/$/;"	m	struct:mem_block_info_t
len	include/row0ext.h	/^	ulint		len[1];	\/*!< prefix lengths; 0 if not cached *\/$/;"	m	struct:row_ext_t
len	include/row0sel.h	/^	ulint		len;	\/*!< data length or UNIV_SQL_NULL *\/$/;"	m	struct:sel_buf_t
len	os/os0file.cc	/^	DWORD			len;$/;"	m	struct:Slot	file:
len	os/os0file.cc	/^	ulint			len;$/;"	m	struct:Slot	file:
length	include/pars0pars.h	/^	ulint		length;		\/*!< length of data *\/$/;"	m	struct:pars_bound_lit_t
level	dict/dict0stats.cc	/^	ulint		level;$/;"	m	struct:n_diff_data_t	file:
level	include/gis0type.h	/^	ulint		level;		\/*!< the page's index level *\/$/;"	m	struct:node_visit
level	include/sync0rw.h	/^	latch_level_t	level;$/;"	m	struct:rw_lock_t
lexer	include/fts0ast.h	/^	fts_lexer_t*	lexer;			\/*!< Lexer callback + arg *\/$/;"	m	struct:fts_ast_state_t
like_node	include/pars0sym.h	/^	sym_node_t*			like_node;	\/* LIKE operator node*\/$/;"	m	struct:sym_node_t
limit	fts/fts0que.cc	/^	ulonglong		limit;$/;"	m	struct:fts_query_t	file:
limit	include/trx0purge.h	/^	purge_iter_t	limit;		\/* The 'purge pointer' which advances$/;"	m	struct:trx_purge_t
line	include/mem0mem.h	/^	ulint	line;	\/*!< line number where the mem heap was created *\/$/;"	m	struct:mem_block_info_t
line	include/sync0rw.h	/^	ulint	line;		\/*!< Line where the rw-lock was locked *\/$/;"	m	struct:rw_lock_debug_t
line	sync/sync0arr.cc	/^	ulint		line;		\/*!< in debug version line where$/;"	m	struct:sync_cell_t	file:
link_filepath	include/fsp0file.h	/^	const char*	link_filepath()	const$/;"	f	class:RemoteDatafile
lint	include/univ.i	/^typedef __int64			lint;$/;"	t	file:
lint	include/univ.i	/^typedef long int		lint;$/;"	t	file:
lint_ctr_1_t	include/srv0srv.h	/^	typedef ib_counter_t<lint, 1, single_indexer_t> lint_ctr_1_t;$/;"	t	struct:srv_stats_t
linux_create_io_ctx	os/os0file.cc	/^AIO::linux_create_io_ctx($/;"	f	class:AIO
linux_dispatch	os/os0file.cc	/^AIO::linux_dispatch(Slot* slot)$/;"	f	class:AIO
list	include/buf0buf.h	/^	UT_LIST_NODE_T(buf_buddy_free_t) list;$/;"	m	struct:buf_buddy_free_t
list	include/buf0buf.h	/^	UT_LIST_NODE_T(buf_page_t) list;$/;"	m	class:buf_page_t
list	include/fts0ast.h	/^	fts_ast_list_t	list;			\/*!< Expression list *\/$/;"	m	struct:fts_ast_node_t
list	include/fts0ast.h	/^	fts_ast_list_t	list;			\/*!< List of nodes allocated *\/$/;"	m	struct:fts_ast_state_t
list	include/log0recv.h	/^	typedef std::list<const byte*, ut_allocator<const byte*> >	list;$/;"	t	struct:recv_dblwr_t
list	include/mem0mem.h	/^	UT_LIST_NODE_T(mem_block_t) list; \/* This contains pointers to next$/;"	m	struct:mem_block_info_t
list	include/sync0rw.h	/^	UT_LIST_NODE_T(rw_lock_debug_t) list;$/;"	m	struct:rw_lock_debug_t
list	include/sync0rw.h	/^	UT_LIST_NODE_T(rw_lock_t) list;$/;"	m	struct:rw_lock_t
lock	include/buf0buf.h	/^	BPageLock	lock;		\/*!< read-write lock of the buffer$/;"	m	struct:buf_block_t
lock	include/dict0mem.h	/^	rw_lock_t	lock;	\/*!< read-write lock protecting the$/;"	m	struct:dict_index_t
lock	include/fts0types.h	/^	rw_lock_t	lock;		\/*!< lock protecting all access to the$/;"	m	struct:fts_cache_t
lock	include/trx0trx.h	/^	trx_lock_t	lock;		\/*!< Information about the transaction$/;"	m	struct:trx_t
lock	sync/sync0arr.cc	/^	rw_lock_t*	lock;$/;"	m	union:sync_object_t	file:
lock0iter_h	include/lock0iter.h	27;"	d
lock0lock_h	include/lock0lock.h	27;"	d
lock0prdt_h	include/lock0prdt.h	26;"	d
lock0priv_h	include/lock0priv.h	27;"	d
lock0types_h	include/lock0types.h	29;"	d
lock_add	lock/lock0lock.cc	/^RecLock::lock_add(lock_t* lock, bool add_to_hash)$/;"	f	class:RecLock
lock_add_priority	lock/lock0lock.cc	/^RecLock::lock_add_priority($/;"	f	class:RecLock
lock_alloc	lock/lock0lock.cc	/^RecLock::lock_alloc($/;"	f	class:RecLock
lock_cancel_waiting_and_release	lock/lock0lock.cc	/^lock_cancel_waiting_and_release($/;"	f
lock_check_dict_lock	lock/lock0lock.cc	/^lock_check_dict_lock($/;"	f	file:
lock_check_trx_id_sanity	lock/lock0lock.cc	/^lock_check_trx_id_sanity($/;"	f
lock_clust_rec_cons_read_sees	lock/lock0lock.cc	/^lock_clust_rec_cons_read_sees($/;"	f
lock_clust_rec_modify_check_and_lock	lock/lock0lock.cc	/^lock_clust_rec_modify_check_and_lock($/;"	f
lock_clust_rec_read_check_and_lock	lock/lock0lock.cc	/^lock_clust_rec_read_check_and_lock($/;"	f
lock_clust_rec_read_check_and_lock_alt	lock/lock0lock.cc	/^lock_clust_rec_read_check_and_lock_alt($/;"	f
lock_clust_rec_some_has_impl	include/lock0priv.ic	/^lock_clust_rec_some_has_impl($/;"	f
lock_compatibility_matrix	include/lock0priv.h	/^static const byte lock_compatibility_matrix[5][5] = {$/;"	v
lock_count	handler/ha_innodb.cc	/^ha_innobase::lock_count(void) const$/;"	f	class:ha_innobase
lock_data	include/trx0i_s.h	/^	const char*	lock_data;	\/*!< (some) content of the record *\/$/;"	m	struct:i_s_locks_row_t
lock_deadlock_found	lock/lock0lock.cc	/^bool	lock_deadlock_found = false;$/;"	v
lock_get_min_heap_no	include/lock0lock.ic	/^lock_get_min_heap_no($/;"	f
lock_get_mode	include/lock0priv.ic	/^lock_get_mode($/;"	f
lock_get_mode_str	lock/lock0lock.cc	/^lock_get_mode_str($/;"	f
lock_get_n_rec_locks	lock/lock0lock.cc	/^lock_get_n_rec_locks(void)$/;"	f	file:
lock_get_prdt_from_lock	lock/lock0prdt.cc	/^lock_get_prdt_from_lock($/;"	f
lock_get_size	lock/lock0lock.cc	/^lock_get_size(void)$/;"	f
lock_get_src_table	lock/lock0lock.cc	/^lock_get_src_table($/;"	f
lock_get_table	lock/lock0lock.cc	/^lock_get_table($/;"	f
lock_get_table_id	lock/lock0lock.cc	/^lock_get_table_id($/;"	f
lock_get_table_name	lock/lock0lock.cc	/^lock_get_table_name($/;"	f
lock_get_trx_id	lock/lock0lock.cc	/^lock_get_trx_id($/;"	f
lock_get_type	lock/lock0lock.cc	/^lock_get_type($/;"	f
lock_get_type_low	include/lock0priv.ic	/^lock_get_type_low($/;"	f
lock_get_type_str	lock/lock0lock.cc	/^lock_get_type_str($/;"	f
lock_get_wait	include/lock0priv.ic	/^lock_get_wait($/;"	f
lock_grant	lock/lock0lock.cc	/^lock_grant($/;"	f	file:
lock_has_to_wait	lock/lock0lock.cc	/^lock_has_to_wait($/;"	f
lock_hash_get	include/lock0lock.ic	/^lock_hash_get($/;"	f
lock_hash_val	include/buf0buf.h	/^	unsigned	lock_hash_val:32;\/*!< hashed value of the page address$/;"	m	struct:buf_block_t
lock_heap	include/trx0trx.h	/^	mem_heap_t*	lock_heap;	\/*!< memory heap for trx_locks;$/;"	m	struct:trx_lock_t
lock_index	include/trx0i_s.h	/^	const char*	lock_index;	\/*!< index name from$/;"	m	struct:i_s_locks_row_t
lock_init_prdt_from_mbr	lock/lock0prdt.cc	/^lock_init_prdt_from_mbr($/;"	f
lock_is_table_exclusive	lock/lock0lock.cc	/^lock_is_table_exclusive($/;"	f
lock_iter	lock/lock0lock.cc	/^	TrxLockIterator& lock_iter()$/;"	f	class:TrxListIterator
lock_latest_err_file	lock/lock0lock.cc	/^static FILE*		lock_latest_err_file;$/;"	v	file:
lock_mode	include/lock0types.h	/^enum lock_mode {$/;"	g
lock_mode	include/trx0i_s.h	/^	const char*	lock_mode;	\/*!< lock mode from$/;"	m	struct:i_s_locks_row_t
lock_mode_compatible	include/lock0priv.ic	/^lock_mode_compatible($/;"	f
lock_mode_string	include/lock0types.h	/^const char* lock_mode_string(enum lock_mode mode)$/;"	f
lock_mode_stronger_or_eq	include/lock0priv.ic	/^lock_mode_stronger_or_eq($/;"	f
lock_move_rec_list_end	lock/lock0lock.cc	/^lock_move_rec_list_end($/;"	f
lock_move_rec_list_start	lock/lock0lock.cc	/^lock_move_rec_list_start($/;"	f
lock_move_reorganize_page	lock/lock0lock.cc	/^lock_move_reorganize_page($/;"	f
lock_move_reorganize_page	page/page0zip.cc	63;"	d	file:
lock_mutex_enter	include/lock0lock.h	1095;"	d
lock_mutex_enter_nowait	include/lock0lock.h	1088;"	d
lock_mutex_exit	include/lock0lock.h	1100;"	d
lock_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	lock_mutex_key;$/;"	v
lock_mutex_own	include/lock0lock.h	1092;"	d
lock_number_of_rows_locked	lock/lock0lock.cc	/^lock_number_of_rows_locked($/;"	f
lock_number_of_tables_locked	lock/lock0lock.cc	/^lock_number_of_tables_locked($/;"	f
lock_op_t	include/lock0lock.h	/^struct lock_op_t{$/;"	s
lock_page	include/trx0i_s.h	/^	ulint		lock_page;	\/*!< page number within the_space *\/$/;"	m	struct:i_s_locks_row_t
lock_place_prdt_page_lock	lock/lock0prdt.cc	/^lock_place_prdt_page_lock($/;"	f
lock_pool_t	include/trx0trx.h	/^typedef std::vector<ib_lock_t*, ut_allocator<ib_lock_t*> >	lock_pool_t;$/;"	t
lock_prdt	include/lock0prdt.h	/^typedef struct lock_prdt {$/;"	s
lock_prdt_add_to_queue	lock/lock0prdt.cc	/^lock_prdt_add_to_queue($/;"	f	file:
lock_prdt_consistent	lock/lock0prdt.cc	/^lock_prdt_consistent($/;"	f
lock_prdt_enlarge_mbr	lock/lock0prdt.cc	/^lock_prdt_enlarge_mbr($/;"	f	file:
lock_prdt_enlarge_prdt	lock/lock0prdt.cc	/^lock_prdt_enlarge_prdt($/;"	f	file:
lock_prdt_find_on_page	lock/lock0prdt.cc	/^lock_prdt_find_on_page($/;"	f	file:
lock_prdt_get_mbr_from_lock	lock/lock0prdt.cc	/^lock_prdt_get_mbr_from_lock($/;"	f
lock_prdt_has_lock	lock/lock0prdt.cc	/^lock_prdt_has_lock($/;"	f
lock_prdt_has_to_wait	lock/lock0prdt.cc	/^lock_prdt_has_to_wait($/;"	f
lock_prdt_insert_check_and_lock	lock/lock0prdt.cc	/^lock_prdt_insert_check_and_lock($/;"	f
lock_prdt_is_same	lock/lock0prdt.cc	/^lock_prdt_is_same($/;"	f	file:
lock_prdt_lock	lock/lock0prdt.cc	/^lock_prdt_lock($/;"	f
lock_prdt_other_has_conflicting	lock/lock0prdt.cc	/^lock_prdt_other_has_conflicting($/;"	f	file:
lock_prdt_page_free_from_discard	lock/lock0prdt.cc	/^lock_prdt_page_free_from_discard($/;"	f
lock_prdt_rec_move	lock/lock0prdt.cc	/^lock_prdt_rec_move($/;"	f
lock_prdt_set_prdt	lock/lock0prdt.cc	/^lock_prdt_set_prdt($/;"	f
lock_prdt_t	include/lock0prdt.h	/^} lock_prdt_t;$/;"	t	typeref:struct:lock_prdt
lock_prdt_update_parent	lock/lock0prdt.cc	/^lock_prdt_update_parent($/;"	f
lock_prdt_update_split	lock/lock0prdt.cc	/^lock_prdt_update_split($/;"	f
lock_prdt_update_split_low	lock/lock0prdt.cc	/^lock_prdt_update_split_low($/;"	f	file:
lock_print_info_all_transactions	lock/lock0lock.cc	/^lock_print_info_all_transactions($/;"	f
lock_print_info_summary	lock/lock0lock.cc	/^lock_print_info_summary($/;"	f
lock_queue_iterator_get_prev	lock/lock0iter.cc	/^lock_queue_iterator_get_prev($/;"	f
lock_queue_iterator_reset	lock/lock0iter.cc	/^lock_queue_iterator_reset($/;"	f
lock_queue_iterator_t	include/lock0iter.h	/^struct lock_queue_iterator_t {$/;"	s
lock_rec	include/trx0i_s.h	/^	ulint		lock_rec;	\/*!< heap number of the record$/;"	m	struct:i_s_locks_row_t
lock_rec_add_to_queue	lock/lock0lock.cc	/^lock_rec_add_to_queue($/;"	f	file:
lock_rec_bitmap_reset	lock/lock0lock.cc	/^lock_rec_bitmap_reset($/;"	f	file:
lock_rec_block_validate	lock/lock0lock.cc	/^lock_rec_block_validate($/;"	f	file:
lock_rec_cancel	lock/lock0lock.cc	/^lock_rec_cancel($/;"	f	file:
lock_rec_convert_impl_to_expl	lock/lock0lock.cc	/^lock_rec_convert_impl_to_expl($/;"	f	file:
lock_rec_convert_impl_to_expl_for_trx	lock/lock0lock.cc	/^lock_rec_convert_impl_to_expl_for_trx($/;"	f	file:
lock_rec_copy	lock/lock0lock.cc	/^lock_rec_copy($/;"	f	file:
lock_rec_dequeue_from_page	lock/lock0lock.cc	/^lock_rec_dequeue_from_page($/;"	f
lock_rec_discard	lock/lock0lock.cc	/^lock_rec_discard($/;"	f
lock_rec_expl_exist_on_page	lock/lock0lock.cc	/^lock_rec_expl_exist_on_page($/;"	f
lock_rec_fetch_page	lock/lock0lock.cc	/^lock_rec_fetch_page($/;"	f	file:
lock_rec_find_set_bit	lock/lock0lock.cc	/^lock_rec_find_set_bit($/;"	f
lock_rec_find_similar_on_page	include/lock0priv.ic	/^lock_rec_find_similar_on_page($/;"	f
lock_rec_fold	include/lock0lock.ic	/^lock_rec_fold($/;"	f
lock_rec_free_all_from_discard_page	lock/lock0lock.cc	/^lock_rec_free_all_from_discard_page($/;"	f
lock_rec_free_all_from_discard_page_low	lock/lock0lock.cc	/^lock_rec_free_all_from_discard_page_low($/;"	f	file:
lock_rec_get_first	include/lock0priv.ic	/^lock_rec_get_first($/;"	f
lock_rec_get_first_on_page	include/lock0priv.ic	/^lock_rec_get_first_on_page($/;"	f
lock_rec_get_first_on_page_addr	include/lock0priv.ic	/^lock_rec_get_first_on_page_addr($/;"	f
lock_rec_get_gap	lock/lock0lock.cc	/^lock_rec_get_gap($/;"	f
lock_rec_get_index	lock/lock0lock.cc	/^lock_rec_get_index($/;"	f
lock_rec_get_index_name	lock/lock0lock.cc	/^lock_rec_get_index_name($/;"	f
lock_rec_get_insert_intention	lock/lock0lock.cc	/^lock_rec_get_insert_intention($/;"	f
lock_rec_get_n_bits	include/lock0priv.ic	/^lock_rec_get_n_bits($/;"	f
lock_rec_get_next	include/lock0priv.ic	/^lock_rec_get_next($/;"	f
lock_rec_get_next_const	include/lock0priv.ic	/^lock_rec_get_next_const($/;"	f
lock_rec_get_next_on_page	include/lock0priv.ic	/^lock_rec_get_next_on_page($/;"	f
lock_rec_get_next_on_page_const	include/lock0priv.ic	/^lock_rec_get_next_on_page_const($/;"	f
lock_rec_get_nth_bit	include/lock0priv.ic	/^lock_rec_get_nth_bit($/;"	f
lock_rec_get_page_no	lock/lock0lock.cc	/^lock_rec_get_page_no($/;"	f
lock_rec_get_prev	lock/lock0lock.cc	/^lock_rec_get_prev($/;"	f
lock_rec_get_rec_not_gap	lock/lock0lock.cc	/^lock_rec_get_rec_not_gap($/;"	f
lock_rec_get_space_id	lock/lock0lock.cc	/^lock_rec_get_space_id($/;"	f
lock_rec_grant	lock/lock0lock.cc	/^lock_rec_grant(lock_t* in_lock)$/;"	f	file:
lock_rec_has_expl	lock/lock0lock.cc	/^lock_rec_has_expl($/;"	f
lock_rec_has_to_wait	lock/lock0lock.cc	/^lock_rec_has_to_wait($/;"	f
lock_rec_has_to_wait_in_queue	lock/lock0lock.cc	/^lock_rec_has_to_wait_in_queue($/;"	f	file:
lock_rec_hash	include/lock0lock.ic	/^lock_rec_hash($/;"	f
lock_rec_inherit_to_gap	lock/lock0lock.cc	/^lock_rec_inherit_to_gap($/;"	f	file:
lock_rec_inherit_to_gap_if_gap_lock	lock/lock0lock.cc	/^lock_rec_inherit_to_gap_if_gap_lock($/;"	f	file:
lock_rec_insert_check_and_lock	lock/lock0lock.cc	/^lock_rec_insert_check_and_lock($/;"	f
lock_rec_lock	lock/lock0lock.cc	/^lock_rec_lock($/;"	f	file:
lock_rec_lock_fast	lock/lock0lock.cc	/^lock_rec_lock_fast($/;"	f
lock_rec_lock_fold	lock/lock0lock.cc	/^lock_rec_lock_fold($/;"	f	file:
lock_rec_lock_slow	lock/lock0lock.cc	/^lock_rec_lock_slow($/;"	f	file:
lock_rec_move	include/lock0lock.ic	/^lock_rec_move($/;"	f
lock_rec_move_low	lock/lock0lock.cc	/^lock_rec_move_low($/;"	f
lock_rec_other_has_conflicting	lock/lock0lock.cc	/^lock_rec_other_has_conflicting($/;"	f	file:
lock_rec_other_has_expl_req	lock/lock0lock.cc	/^lock_rec_other_has_expl_req($/;"	f	file:
lock_rec_other_trx_holds_expl	lock/lock0lock.cc	/^lock_rec_other_trx_holds_expl($/;"	f	file:
lock_rec_print	lock/lock0lock.cc	/^lock_rec_print($/;"	f
lock_rec_queue_validate	lock/lock0lock.cc	/^lock_rec_queue_validate($/;"	f	file:
lock_rec_req_status	include/lock0priv.h	/^enum lock_rec_req_status {$/;"	g
lock_rec_reset_and_inherit_gap_locks	lock/lock0lock.cc	/^lock_rec_reset_and_inherit_gap_locks($/;"	f
lock_rec_reset_and_release_wait	lock/lock0lock.cc	/^lock_rec_reset_and_release_wait($/;"	f	file:
lock_rec_reset_and_release_wait_low	lock/lock0lock.cc	/^lock_rec_reset_and_release_wait_low($/;"	f	file:
lock_rec_reset_nth_bit	lock/lock0lock.cc	/^lock_rec_reset_nth_bit($/;"	f
lock_rec_restore_from_page_infimum	lock/lock0lock.cc	/^lock_rec_restore_from_page_infimum($/;"	f
lock_rec_set_nth_bit	include/lock0priv.ic	/^lock_rec_set_nth_bit($/;"	f
lock_rec_store_on_page_infimum	lock/lock0lock.cc	/^lock_rec_store_on_page_infimum($/;"	f
lock_rec_t	include/lock0priv.h	/^struct lock_rec_t {$/;"	s
lock_rec_trx_wait	lock/lock0lock.cc	/^lock_rec_trx_wait($/;"	f
lock_rec_unlock	lock/lock0lock.cc	/^lock_rec_unlock($/;"	f
lock_rec_validate	lock/lock0lock.cc	/^lock_rec_validate($/;"	f
lock_rec_validate_page	lock/lock0lock.cc	/^lock_rec_validate_page($/;"	f	file:
lock_release	lock/lock0lock.cc	/^lock_release($/;"	f	file:
lock_release_autoinc_last_lock	lock/lock0lock.cc	/^lock_release_autoinc_last_lock($/;"	f
lock_release_autoinc_locks	lock/lock0lock.cc	/^lock_release_autoinc_locks($/;"	f	file:
lock_remove_all_on_table	lock/lock0lock.cc	/^lock_remove_all_on_table($/;"	f
lock_remove_all_on_table_for_trx	lock/lock0lock.cc	/^lock_remove_all_on_table_for_trx($/;"	f	file:
lock_remove_gap_lock	lock/lock0lock.cc	/^lock_remove_gap_lock(lock_t* lock)$/;"	f	file:
lock_remove_recovered_trx_record_locks	lock/lock0lock.cc	/^lock_remove_recovered_trx_record_locks($/;"	f	file:
lock_report_trx_id_insanity	lock/lock0lock.cc	/^lock_report_trx_id_insanity($/;"	f
lock_reset_lock_and_trx_wait	lock/lock0lock.cc	/^lock_reset_lock_and_trx_wait($/;"	f
lock_rtr_move_rec_list	lock/lock0lock.cc	/^lock_rtr_move_rec_list($/;"	f
lock_sec_rec_cons_read_sees	lock/lock0lock.cc	/^lock_sec_rec_cons_read_sees($/;"	f
lock_sec_rec_modify_check_and_lock	lock/lock0lock.cc	/^lock_sec_rec_modify_check_and_lock($/;"	f
lock_sec_rec_read_check_and_lock	lock/lock0lock.cc	/^lock_sec_rec_read_check_and_lock($/;"	f
lock_sec_rec_some_has_impl	lock/lock0lock.cc	/^lock_sec_rec_some_has_impl($/;"	f	file:
lock_set_lock_and_trx_wait	lock/lock0lock.cc	/^lock_set_lock_and_trx_wait($/;"	f
lock_set_timeout_event	lock/lock0lock.cc	/^lock_set_timeout_event()$/;"	f
lock_size	include/lock0priv.h	/^	size_t lock_size() const$/;"	f	class:RecLock
lock_size	include/lock0priv.h	/^	static size_t lock_size(const page_t* page)$/;"	f	class:RecLock
lock_size	include/lock0priv.h	/^	static size_t lock_size(ulint mode)$/;"	f	class:RecLock
lock_space	include/trx0i_s.h	/^	ulint		lock_space;	\/*!< tablespace identifier *\/$/;"	m	struct:i_s_locks_row_t
lock_state	include/que0que.h	/^	ulint		lock_state;	\/*!< lock state of thread (table or$/;"	m	struct:que_thr_t
lock_strength_matrix	include/lock0priv.h	/^static const byte lock_strength_matrix[5][5] = {$/;"	v
lock_sys	lock/lock0lock.cc	/^lock_sys_t*	lock_sys	= NULL;$/;"	v
lock_sys_close	lock/lock0lock.cc	/^lock_sys_close(void)$/;"	f
lock_sys_create	lock/lock0lock.cc	/^lock_sys_create($/;"	f
lock_sys_resize	lock/lock0lock.cc	/^lock_sys_resize($/;"	f
lock_sys_t	include/lock0lock.h	/^struct lock_sys_t{$/;"	s
lock_t	include/lock0priv.h	/^struct lock_t {$/;"	s
lock_t	include/lock0types.h	31;"	d
lock_table	include/trx0i_s.h	/^	const char*	lock_table;	\/*!< table name from$/;"	m	struct:i_s_locks_row_t
lock_table	lock/lock0lock.cc	/^lock_table($/;"	f
lock_table_create	lock/lock0lock.cc	/^lock_table_create($/;"	f
lock_table_dequeue	lock/lock0lock.cc	/^lock_table_dequeue($/;"	f	file:
lock_table_enqueue_waiting	lock/lock0lock.cc	/^lock_table_enqueue_waiting($/;"	f	file:
lock_table_for_trx	lock/lock0lock.cc	/^lock_table_for_trx($/;"	f
lock_table_get_n_locks	lock/lock0lock.cc	/^lock_table_get_n_locks($/;"	f
lock_table_has	include/lock0priv.ic	/^lock_table_has($/;"	f
lock_table_has_locks	lock/lock0lock.cc	/^lock_table_has_locks($/;"	f
lock_table_has_to_wait_in_queue	lock/lock0lock.cc	/^lock_table_has_to_wait_in_queue($/;"	f	file:
lock_table_id	include/trx0i_s.h	/^	table_id_t	lock_table_id;$/;"	m	struct:i_s_locks_row_t
lock_table_ix_resurrect	lock/lock0lock.cc	/^lock_table_ix_resurrect($/;"	f
lock_table_lock_list_init	lock/lock0lock.cc	/^lock_table_lock_list_init($/;"	f
lock_table_locks_lookup	lock/lock0lock.cc	/^lock_table_locks_lookup($/;"	f	file:
lock_table_other_has_incompatible	lock/lock0lock.cc	/^lock_table_other_has_incompatible($/;"	f
lock_table_pop_autoinc_locks	lock/lock0lock.cc	/^lock_table_pop_autoinc_locks($/;"	f
lock_table_print	lock/lock0lock.cc	/^lock_table_print($/;"	f
lock_table_queue_validate	lock/lock0lock.cc	/^lock_table_queue_validate($/;"	f	file:
lock_table_remove_autoinc_lock	lock/lock0lock.cc	/^lock_table_remove_autoinc_lock($/;"	f
lock_table_remove_low	lock/lock0lock.cc	/^lock_table_remove_low($/;"	f
lock_table_t	include/lock0priv.h	/^struct lock_table_t {$/;"	s
lock_test_prdt_page_lock	lock/lock0prdt.cc	/^lock_test_prdt_page_lock($/;"	f
lock_trx_alloc_locks	lock/lock0lock.cc	/^lock_trx_alloc_locks(trx_t* trx)$/;"	f
lock_trx_handle_wait	lock/lock0lock.cc	/^lock_trx_handle_wait($/;"	f
lock_trx_has_rec_x_lock	lock/lock0lock.cc	/^lock_trx_has_rec_x_lock($/;"	f
lock_trx_has_sys_table_locks	lock/lock0lock.cc	/^lock_trx_has_sys_table_locks($/;"	f
lock_trx_holds_autoinc_locks	lock/lock0lock.cc	/^lock_trx_holds_autoinc_locks($/;"	f	file:
lock_trx_id	include/trx0i_s.h	/^	trx_id_t	lock_trx_id;	\/*!< transaction identifier *\/$/;"	m	struct:i_s_locks_row_t
lock_trx_lock_list_init	lock/lock0lock.cc	/^lock_trx_lock_list_init($/;"	f
lock_trx_print_locks	lock/lock0lock.cc	/^lock_trx_print_locks($/;"	f	file:
lock_trx_print_wait_and_mvcc_state	lock/lock0lock.cc	/^lock_trx_print_wait_and_mvcc_state($/;"	f
lock_trx_release_locks	lock/lock0lock.cc	/^lock_trx_release_locks($/;"	f
lock_trx_release_read_locks	lock/lock0lock.cc	/^lock_trx_release_read_locks($/;"	f
lock_trx_table_locks_find	lock/lock0lock.cc	/^lock_trx_table_locks_find($/;"	f	file:
lock_trx_table_locks_remove	lock/lock0lock.cc	/^lock_trx_table_locks_remove($/;"	f	file:
lock_type	include/sync0rw.h	/^	ulint	lock_type;	\/*!< Type of the lock: RW_LOCK_X,$/;"	m	struct:rw_lock_debug_t
lock_type	include/trx0i_s.h	/^	const char*	lock_type;	\/*!< lock type from$/;"	m	struct:i_s_locks_row_t
lock_types	include/lock0priv.h	/^static const ulint      lock_types = UT_ARR_SIZE(lock_compatibility_matrix);$/;"	v
lock_unlock_table_autoinc	lock/lock0lock.cc	/^lock_unlock_table_autoinc($/;"	f
lock_update_copy_and_discard	lock/lock0lock.cc	/^lock_update_copy_and_discard($/;"	f
lock_update_delete	lock/lock0lock.cc	/^lock_update_delete($/;"	f
lock_update_discard	lock/lock0lock.cc	/^lock_update_discard($/;"	f
lock_update_insert	lock/lock0lock.cc	/^lock_update_insert($/;"	f
lock_update_merge_left	lock/lock0lock.cc	/^lock_update_merge_left($/;"	f
lock_update_merge_right	lock/lock0lock.cc	/^lock_update_merge_right($/;"	f
lock_update_root_raise	lock/lock0lock.cc	/^lock_update_root_raise($/;"	f
lock_update_split_left	lock/lock0lock.cc	/^lock_update_split_left($/;"	f
lock_update_split_right	lock/lock0lock.cc	/^lock_update_split_right($/;"	f
lock_validate	lock/lock0lock.cc	/^lock_validate()$/;"	f	file:
lock_validate_table_locks	lock/lock0lock.cc	/^lock_validate_table_locks($/;"	f	file:
lock_wait_check_and_cancel	lock/lock0wait.cc	/^lock_wait_check_and_cancel($/;"	f	file:
lock_wait_mutex_enter	include/lock0lock.h	1108;"	d
lock_wait_mutex_exit	include/lock0lock.h	1113;"	d
lock_wait_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	lock_wait_mutex_key;$/;"	v
lock_wait_mutex_own	include/lock0lock.h	1105;"	d
lock_wait_release_thread_if_suspended	lock/lock0wait.cc	/^lock_wait_release_thread_if_suspended($/;"	f
lock_wait_suspend_thread	lock/lock0wait.cc	/^lock_wait_suspend_thread($/;"	f
lock_wait_table_print	lock/lock0wait.cc	/^lock_wait_table_print(void)$/;"	f	file:
lock_wait_table_release_slot	lock/lock0wait.cc	/^lock_wait_table_release_slot($/;"	f	file:
lock_wait_table_reserve_slot	lock/lock0wait.cc	/^lock_wait_table_reserve_slot($/;"	f	file:
lock_wait_timeout_thread	lock/lock0wait.cc	/^DECLARE_THREAD(lock_wait_timeout_thread)($/;"	f
lock_word	include/sync0rw.h	/^	volatile lint	lock_word;$/;"	m	struct:rw_lock_t
lock_word_t	include/os0atomic.h	/^typedef LONG	lock_word_t;$/;"	t
lock_word_t	include/os0atomic.h	/^typedef int	lock_word_t;$/;"	t
lock_word_t	include/os0atomic.h	/^typedef ulint	lock_word_t;$/;"	t
locked	include/gis0type.h	/^		bool	locked;		\/*!< whether the record locked *\/$/;"	m	struct:rtr_rec
locked	include/gis0type.h	/^	bool		locked;		\/*!< whether these recs locked *\/$/;"	m	struct:matched_rec
locked_from	include/sync0policy.h	/^		virtual std::string locked_from() const$/;"	f	struct:MutexDebug::Context
locked_from	sync/sync0rw.cc	/^rw_lock_t::locked_from() const$/;"	f	class:rw_lock_t
locks	include/dict0mem.h	/^	table_lock_list_t			locks;$/;"	m	struct:dict_table_t
locks	include/lock0priv.h	/^			locks;		\/*!< list of locks on the same$/;"	m	struct:lock_table_t
locks_hash	trx/trx0i_s.cc	/^	hash_table_t*	locks_hash;	\/*!< hash table used to eliminate$/;"	m	struct:trx_i_s_cache_t	file:
locks_row_eq_lock	trx/trx0i_s.cc	/^locks_row_eq_lock($/;"	f	file:
log	row/row0trunc.cc	/^	dberr_t log() const$/;"	f	class:TruncateLogger
log0log_h	include/log0log.h	34;"	d
log0recv_h	include/log0recv.h	27;"	d
log0types_h	include/log0types.h	33;"	d
logFreeCheck	btr/btr0bulk.cc	/^BtrBulk::logFreeCheck()$/;"	f	class:BtrBulk
log_append_on_checkpoint	log/log0log.cc	/^log_append_on_checkpoint($/;"	f
log_block_calc_checksum	include/log0log.ic	/^log_block_calc_checksum($/;"	f
log_block_calc_checksum_crc32	include/log0log.ic	/^log_block_calc_checksum_crc32($/;"	f
log_block_calc_checksum_format_0	include/log0log.ic	/^log_block_calc_checksum_format_0($/;"	f
log_block_calc_checksum_none	include/log0log.ic	/^log_block_calc_checksum_none($/;"	f
log_block_checksum_is_ok	log/log0recv.cc	/^log_block_checksum_is_ok($/;"	f	file:
log_block_convert_lsn_to_no	include/log0log.ic	/^log_block_convert_lsn_to_no($/;"	f
log_block_get_checkpoint_no	include/log0log.ic	/^log_block_get_checkpoint_no($/;"	f
log_block_get_checksum	include/log0log.ic	/^log_block_get_checksum($/;"	f
log_block_get_data_len	include/log0log.ic	/^log_block_get_data_len($/;"	f
log_block_get_first_rec_group	include/log0log.ic	/^log_block_get_first_rec_group($/;"	f
log_block_get_flush_bit	include/log0log.ic	/^log_block_get_flush_bit($/;"	f
log_block_get_hdr_no	include/log0log.ic	/^log_block_get_hdr_no($/;"	f
log_block_init	include/log0log.ic	/^log_block_init($/;"	f
log_block_init_in_old_format	include/log0log.ic	/^log_block_init_in_old_format($/;"	f
log_block_set_checkpoint_no	include/log0log.ic	/^log_block_set_checkpoint_no($/;"	f
log_block_set_checksum	include/log0log.ic	/^log_block_set_checksum($/;"	f
log_block_set_data_len	include/log0log.ic	/^log_block_set_data_len($/;"	f
log_block_set_first_rec_group	include/log0log.ic	/^log_block_set_first_rec_group($/;"	f
log_block_set_flush_bit	include/log0log.ic	/^log_block_set_flush_bit($/;"	f
log_block_set_hdr_no	include/log0log.ic	/^log_block_set_hdr_no($/;"	f
log_block_store_checksum	log/log0log.cc	/^log_block_store_checksum($/;"	f	file:
log_buf_pool_get_oldest_modification	log/log0log.cc	/^log_buf_pool_get_oldest_modification(void)$/;"	f	file:
log_buffer_extend	log/log0log.cc	/^log_buffer_extend($/;"	f
log_buffer_flush_to_disk	log/log0log.cc	/^log_buffer_flush_to_disk($/;"	f
log_buffer_switch	log/log0log.cc	/^log_buffer_switch()$/;"	f	file:
log_buffer_sync_in_background	log/log0log.cc	/^log_buffer_sync_in_background($/;"	f
log_calc_max_ages	log/log0log.cc	/^log_calc_max_ages(void)$/;"	f
log_calc_where_lsn_is	log/log0log.cc	/^log_calc_where_lsn_is($/;"	f
log_calculate_actual_len	log/log0log.cc	/^log_calculate_actual_len($/;"	f	file:
log_check_margins	log/log0log.cc	/^log_check_margins(void)$/;"	f
log_checkpoint	log/log0log.cc	/^log_checkpoint($/;"	f
log_checkpoint_margin	log/log0log.cc	/^log_checkpoint_margin(void)$/;"	f	file:
log_checksum_algorithm_ptr	log/log0log.cc	/^log_checksum_func_t log_checksum_algorithm_ptr;$/;"	v
log_checksum_func_t	include/log0log.h	/^typedef ulint (*log_checksum_func_t)(const byte* log_block);$/;"	t
log_close	log/log0log.cc	/^log_close(void)$/;"	f
log_cmdq_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	log_cmdq_mutex_key;$/;"	v
log_complete_checkpoint	log/log0log.cc	/^log_complete_checkpoint(void)$/;"	f	file:
log_flush_margin	log/log0log.cc	/^log_flush_margin(void)$/;"	f	file:
log_flush_order_mutex	include/log0log.h	/^	FlushOrderMutex	log_flush_order_mutex;\/*!< mutex to serialize access to$/;"	m	struct:log_t
log_flush_order_mutex_enter	include/log0log.h	770;"	d
log_flush_order_mutex_exit	include/log0log.h	774;"	d
log_flush_order_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	log_flush_order_mutex_key;$/;"	v
log_flush_order_mutex_own	include/log0log.h	766;"	d
log_free_check	include/log0log.ic	/^log_free_check(void)$/;"	f
log_get_capacity	include/log0log.ic	/^log_get_capacity(void)$/;"	f
log_get_lsn	include/log0log.ic	/^log_get_lsn(void)$/;"	f
log_get_max_modified_age_async	include/log0log.ic	/^log_get_max_modified_age_async(void)$/;"	f
log_group_calc_lsn_offset	log/log0log.cc	/^log_group_calc_lsn_offset($/;"	f
log_group_calc_real_offset	log/log0log.cc	/^log_group_calc_real_offset($/;"	f
log_group_calc_size_offset	log/log0log.cc	/^log_group_calc_size_offset($/;"	f
log_group_capacity	include/log0log.h	/^	lsn_t		log_group_capacity; \/*!< capacity of the log group; if$/;"	m	struct:log_t
log_group_checkpoint	log/log0log.cc	/^log_group_checkpoint($/;"	f	file:
log_group_close	log/log0log.cc	/^log_group_close($/;"	f	file:
log_group_close_all	log/log0log.cc	/^log_group_close_all(void)$/;"	f
log_group_file_header_flush	log/log0log.cc	/^log_group_file_header_flush($/;"	f	file:
log_group_get_capacity	log/log0log.cc	/^log_group_get_capacity($/;"	f
log_group_header_read	log/log0log.cc	/^log_group_header_read($/;"	f
log_group_init	log/log0log.cc	/^log_group_init($/;"	f
log_group_read_log_seg	log/log0log.cc	/^log_group_read_log_seg($/;"	f
log_group_set_fields	log/log0log.cc	/^log_group_set_fields($/;"	f
log_group_state_t	include/log0log.h	/^enum log_group_state_t {$/;"	g
log_group_t	include/log0log.h	/^struct log_group_t{$/;"	s
log_group_write_buf	log/log0log.cc	/^log_group_write_buf($/;"	f	file:
log_groups	include/log0log.h	/^			log_groups;	\/*!< log groups *\/$/;"	m	struct:log_t
log_groups	include/log0log.h	/^	UT_LIST_NODE_T(log_group_t)	log_groups;$/;"	m	struct:log_group_t
log_has_printed_chkp_margine_warning	log/log0log.cc	/^bool	log_has_printed_chkp_margine_warning = false;$/;"	v
log_has_printed_chkp_warning	log/log0log.cc	/^bool	log_has_printed_chkp_warning = false;$/;"	v
log_init	log/log0log.cc	/^log_init(void)$/;"	f
log_io_complete	log/log0log.cc	/^log_io_complete($/;"	f
log_io_complete_checkpoint	log/log0log.cc	/^log_io_complete_checkpoint(void)$/;"	f	file:
log_last_margine_warning_time	log/log0log.cc	/^time_t	log_last_margine_warning_time;$/;"	v
log_last_warning_time	log/log0log.cc	/^time_t	log_last_warning_time;$/;"	v
log_make_checkpoint_at	log/log0log.cc	/^log_make_checkpoint_at($/;"	f
log_margin_checkpoint_age	log/log0log.cc	/^log_margin_checkpoint_age($/;"	f
log_mem_free	log/log0log.cc	/^log_mem_free(void)$/;"	f
log_mutex_enter	include/log0log.h	785;"	d
log_mutex_enter_all	include/log0log.h	791;"	d
log_mutex_exit	include/log0log.h	797;"	d
log_mutex_exit_all	include/log0log.h	803;"	d
log_mutex_own	include/log0log.h	779;"	d
log_padded	include/srv0srv.h	/^	ulint_ctr_1_t		log_padded;$/;"	m	struct:srv_stats_t
log_peek_lsn	log/log0log.cc	/^log_peek_lsn($/;"	f
log_pos	row/row0log.cc	1411;"	d	file:
log_preflush_pool_modified_pages	log/log0log.cc	/^log_preflush_pool_modified_pages($/;"	f	file:
log_print	log/log0log.cc	/^log_print($/;"	f
log_refresh_stats	log/log0log.cc	/^log_refresh_stats(void)$/;"	f
log_reserve_and_open	log/log0log.cc	/^log_reserve_and_open($/;"	f
log_reserve_and_write_fast	include/log0log.ic	/^log_reserve_and_write_fast($/;"	f
log_reset_first_header_and_checkpoint	log/log0log.cc	/^log_reset_first_header_and_checkpoint($/;"	f
log_shutdown	log/log0log.cc	/^log_shutdown(void)$/;"	f
log_sys	log/log0log.cc	/^log_t*	log_sys	= NULL;$/;"	v
log_sys_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	log_sys_mutex_key;$/;"	v
log_sys_write_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	log_sys_write_mutex_key;$/;"	v
log_t	include/log0log.h	/^struct log_t{$/;"	s
log_waits	include/srv0srv.h	/^	ulint_ctr_1_t		log_waits;$/;"	m	struct:srv_stats_t
log_write_checkpoint_info	log/log0log.cc	/^log_write_checkpoint_info($/;"	f
log_write_flush_to_disk_low	log/log0log.cc	/^log_write_flush_to_disk_low()$/;"	f	file:
log_write_low	log/log0log.cc	/^log_write_low($/;"	f
log_write_mutex_enter	include/log0log.h	788;"	d
log_write_mutex_exit	include/log0log.h	800;"	d
log_write_mutex_own	include/log0log.h	782;"	d
log_write_requests	include/srv0srv.h	/^	ulint_ctr_1_t		log_write_requests;$/;"	m	struct:srv_stats_t
log_write_up_to	log/log0log.cc	/^log_write_up_to($/;"	f
log_writes	include/srv0srv.h	/^	ulint_ctr_1_t		log_writes;$/;"	m	struct:srv_stats_t
logger	include/ut0ut.h	/^	logger() {}$/;"	f	class:ib::logger
logger	include/ut0ut.h	/^class logger {$/;"	c	namespace:ib
logical	include/page0size.h	/^	inline ulint logical() const$/;"	f	class:page_size_t
logs_empty_and_mark_files_at_shutdown	log/log0log.cc	/^logs_empty_and_mark_files_at_shutdown(void)$/;"	f
lookup_sys_space	mtr/mtr0mtr.cc	/^mtr_t::lookup_sys_space()$/;"	f	class:mtr_t
lookup_table_handler	include/sess0sess.h	/^	dict_table_t* lookup_table_handler($/;"	f	class:innodb_session_t
lookup_user_space	mtr/mtr0mtr.cc	/^mtr_t::lookup_user_space(ulint space_id)$/;"	f	class:mtr_t
loop_end_limit	include/pars0pars.h	/^	que_node_t*	loop_end_limit;	\/*!< end value of loop variable *\/$/;"	m	struct:for_node_t
loop_end_value	include/pars0pars.h	/^	lint		loop_end_value;	\/*!< evaluated value for the end value:$/;"	m	struct:for_node_t
loop_start_limit	include/pars0pars.h	/^	que_node_t*	loop_start_limit;\/*!< initial value of loop variable *\/$/;"	m	struct:for_node_t
loop_var	include/pars0pars.h	/^	sym_node_t*	loop_var;	\/*!< loop variable: this is the$/;"	m	struct:for_node_t
low_bytes	include/btr0cur.h	/^	ulint		low_bytes;	\/*!< number of matched bytes to the$/;"	m	struct:btr_cur_t
low_limit_id	include/read0types.h	/^	trx_id_t low_limit_id() const$/;"	f	class:ReadView
low_limit_no	include/read0types.h	/^	trx_id_t low_limit_no() const$/;"	f	class:ReadView
low_match	include/btr0cur.h	/^	ulint		low_match;	\/*!< if search mode was PAGE_CUR_LE,$/;"	m	struct:btr_cur_t
lower_doc_id	fts/fts0que.cc	/^	doc_id_t	lower_doc_id;	\/*!< Lowest doc id in doc_ids *\/$/;"	m	struct:fts_query_t	file:
lower_index	include/fts0types.h	/^	ulint		lower_index;	\/*!< the start index of the doc id$/;"	m	struct:fts_sync_t
lru_hp	include/buf0buf.h	/^	LRUHp		lru_hp;$/;"	m	struct:buf_pool_t
lru_len	include/buf0buf.h	/^	ulint	lru_len;		\/*!< Length of buf_pool->LRU *\/$/;"	m	struct:buf_pool_info_t
lru_scan_itr	include/buf0buf.h	/^	LRUItr		lru_scan_itr;$/;"	m	struct:buf_pool_t
lsn	include/log0log.h	/^	lsn_t				lsn;$/;"	m	struct:log_group_t
lsn	include/log0log.h	/^	lsn_t		lsn;		\/*!< log sequence number *\/$/;"	m	struct:log_t
lsn_avg_rate	buf/buf0flu.cc	/^static lsn_t lsn_avg_rate = 0;$/;"	v	file:
lsn_ctr_1_t	include/srv0srv.h	/^	typedef ib_counter_t<lsn_t, 1, single_indexer_t> lsn_ctr_1_t;$/;"	t	struct:srv_stats_t
lsn_limit	buf/buf0flu.cc	/^	lsn_t			lsn_limit;	\/*!< upper limit of LSN to be$/;"	m	struct:page_cleaner_t	file:
lsn_offset	include/log0log.h	/^	lsn_t				lsn_offset;$/;"	m	struct:log_group_t
lsn_t	include/log0log.h	/^typedef	ib_uint64_t		lsn_t;$/;"	t
lsn_t	include/log0types.h	/^typedef	ib_uint64_t		lsn_t;$/;"	t
m1	os/os0file.cc	/^	fil_node_t*		m1;$/;"	m	struct:Slot	file:
m2	os/os0file.cc	/^	void*			m2;$/;"	m	struct:Slot	file:
m_abs_len	include/fil0fil.h	/^	size_t	m_abs_len;$/;"	m	class:Folder
m_abs_path	include/fil0fil.h	/^	char	m_abs_path[FN_REFLEN + 2];$/;"	m	class:Folder
m_active	include/sync0types.h	/^		m_active(false)$/;"	f	class:LatchCounter
m_active	include/sync0types.h	/^	bool			m_active;$/;"	m	class:LatchCounter
m_aio_ctx	os/os0file.cc	/^	io_context_t*		m_aio_ctx;$/;"	m	class:AIO	file:
m_algorithm	include/os0file.h	/^		Type		m_algorithm;$/;"	m	struct:Compression::meta_t
m_alloc_size	include/os0file.h	/^	os_offset_t	m_alloc_size;$/;"	m	struct:os_file_size_t
m_allow_file_per_table	handler/ha_innodb.h	/^	bool		m_allow_file_per_table;$/;"	m	class:create_table_info_t
m_array	os/os0file.cc	/^	AIO*			m_array;$/;"	m	class:LinuxAIOHandler	file:
m_array	os/os0file.cc	/^	AIO*		m_array;$/;"	m	class:SimulatedAIOHandler	file:
m_atomic_write	include/fsp0file.h	/^	bool			m_atomic_write;$/;"	m	class:Datafile
m_auto_extend_last_file	include/fsp0sysspace.h	/^	bool		m_auto_extend_last_file;$/;"	m	class:SysTablespace
m_autoinc	row/row0import.cc	/^	ib_uint64_t	m_autoinc;		\/*!< Next autoinc value *\/$/;"	m	struct:row_import	file:
m_blob_heap_parts	handler/ha_innopart.h	/^	mem_heap_t**		m_blob_heap_parts;$/;"	m	class:ha_innopart
m_block	btr/btr0cur.cc	/^	buf_block_t**	m_block;$/;"	m	struct:btr_blob_log_check_t	file:
m_block	include/btr0bulk.h	/^	buf_block_t*	m_block;$/;"	m	class:PageBulk
m_block_size	include/os0file.h	/^	uint32_t		m_block_size;$/;"	m	class:IORequest
m_buf	include/dyn0buf.h	/^	mtr_buf_t	m_buf;$/;"	m	struct:mtr_buf_copy_t
m_buf	os/os0file.cc	/^	byte*		m_buf;$/;"	m	class:SimulatedAIOHandler	file:
m_buf	os/os0file.cc	/^	void*			m_buf;$/;"	m	class:SyncFileIO	file:
m_buf_end	include/dyn0buf.h	/^		ulint		m_buf_end;$/;"	m	class:dyn_buf_t::block_t
m_buf_pool	include/buf0buf.h	/^	const buf_pool_t*	m_buf_pool;$/;"	m	class:HazardPointer
m_calls	handler/ha_innodb.cc	/^		uint64_t		m_calls;$/;"	m	struct:ShowStatus::Value	file:
m_calls	include/sync0types.h	/^		uint32_t	m_calls;$/;"	m	struct:LatchCounter::Count
m_cfg	row/row0import.cc	/^	row_import*		m_cfg;$/;"	m	class:PageConverter	file:
m_cfp_missing	row/row0import.cc	/^		m_cfp_missing(true)	{ }$/;"	f	struct:row_import
m_cfp_missing	row/row0import.cc	/^	bool		m_cfp_missing;		\/*!< true if a .cfp file was$/;"	m	struct:row_import	file:
m_closed	include/read0types.h	/^	bool		m_closed;$/;"	m	class:ReadView
m_clust_pcur	handler/ha_innopart.h	/^	btr_pcur_t*		m_clust_pcur;$/;"	m	class:ha_innopart
m_clust_pcur_parts	handler/ha_innopart.h	/^	btr_pcur_t*		m_clust_pcur_parts;$/;"	m	class:ha_innopart
m_cluster_index	row/row0import.cc	/^	dict_index_t*		m_cluster_index;$/;"	m	class:PageConverter	file:
m_col	include/dict0mem.h	/^	dict_col_t		m_col;$/;"	m	struct:dict_v_col_t
m_col	include/dict0mem.h	/^	dict_col_t*	m_col;$/;"	m	struct:dict_s_col_t
m_col_names	row/row0import.cc	/^	byte**		m_col_names;		\/*!< Column names, we store the$/;"	m	struct:row_import	file:
m_cols	row/row0import.cc	/^	dict_col_t*	m_cols;			\/*!< Column data *\/$/;"	m	struct:row_import	file:
m_commit_lsn	include/mtr0mtr.h	/^	volatile lsn_t		m_commit_lsn;$/;"	m	struct:mtr_t
m_compressed_size	include/os0file.h	/^		uint16_t	m_compressed_size;$/;"	m	struct:Compression::meta_t
m_compression	include/os0file.h	/^	Compression		m_compression;$/;"	m	class:IORequest
m_context	include/sync0policy.h	/^	Context			m_context;$/;"	m	class:MutexDebug
m_cost	lock/lock0lock.cc	/^	ulint			m_cost;$/;"	m	class:DeadlockChecker	file:
m_count	include/sync0policy.h	/^	Counter::Count		m_count;$/;"	m	struct:GenericPolicy
m_count	include/sync0policy.h	/^	Counter::Count*		m_count;$/;"	m	class:BlockMutexPolicy
m_counter	include/sync0types.h	/^	Counter			m_counter;$/;"	m	class:LatchMeta
m_counter	include/ut0counter.h	/^	Type		m_counter[(N + 1) * (CACHE_LINE_SIZE \/ sizeof(Type))];$/;"	m	class:ib_counter_t
m_counters	include/sync0types.h	/^	Counters		m_counters;$/;"	m	class:LatchCounter
m_create_info	handler/ha_innodb.h	/^	HA_CREATE_INFO*	m_create_info;$/;"	m	class:create_table_info_t
m_created_new_raw	include/fsp0sysspace.h	/^	bool		m_created_new_raw;$/;"	m	class:SysTablespace
m_creator_trx_id	include/read0types.h	/^	trx_id_t	m_creator_trx_id;$/;"	m	class:ReadView
m_cur	row/row0import.cc	/^	page_cur_t	m_cur;$/;"	m	class:RecIterator	file:
m_cur_phase	include/ut0stage.h	/^	}			m_cur_phase;$/;"	m	class:ut_stage_alter_t	typeref:enum:ut_stage_alter_t::__anon11
m_cur_rec	include/btr0bulk.h	/^	rec_t*		m_cur_rec;$/;"	m	class:PageBulk
m_current_lsn	row/row0import.cc	/^	lsn_t			m_current_lsn;$/;"	m	class:PageConverter	file:
m_data	include/dyn0buf.h	/^		byte		m_data[MAX_DATA_SIZE];$/;"	m	class:dyn_buf_t::block_t
m_destroy_at_exit	include/ib0mutex.h	/^	bool			m_destroy_at_exit;$/;"	m	struct:OSTrackMutex
m_dict_mutex_allowed	include/sync0types.h	/^	const bool	m_dict_mutex_allowed;$/;"	m	struct:dict_sync_check
m_dir_path	include/row0trunc.h	/^	char*			m_dir_path;$/;"	m	class:truncate_t
m_ds_mrr	handler/ha_innodb.h	/^	DsMrr_impl		m_ds_mrr;$/;"	m	class:ha_innobase
m_dtuple_vec	row/row0merge.cc	/^	idx_tuple_vec*		m_dtuple_vec;$/;"	m	class:index_tuple_info_t	file:
m_enabled	include/sync0types.h	/^			m_enabled()$/;"	f	struct:LatchCounter::Count
m_enabled	include/sync0types.h	/^		bool		m_enabled;$/;"	m	struct:LatchCounter::Count
m_encryption	include/os0file.h	/^	Encryption		m_encryption;$/;"	m	class:IORequest
m_encryption_iv	include/fsp0file.h	/^	byte*			m_encryption_iv;$/;"	m	class:Datafile
m_encryption_key	include/fsp0file.h	/^	byte*			m_encryption_key;$/;"	m	class:Datafile
m_end	include/page0types.h	/^	unsigned	m_end:16;	\/*!< end offset of modification log *\/$/;"	m	struct:page_zip_des_t
m_end	include/ut0pool.h	/^	Element*		m_end;$/;"	m	struct:Pool
m_end_lsn	mtr/mtr0mtr.cc	/^	lsn_t			m_end_lsn;$/;"	m	class:mtr_t::Command	file:
m_end_lsn	mtr/mtr0mtr.cc	/^	lsn_t		m_end_lsn;$/;"	m	struct:ReleaseBlocks	file:
m_end_range	include/row0mysql.h	/^	bool		m_end_range;$/;"	m	struct:row_prebuilt_t
m_eof	include/handler0alter.h	/^	bool		m_eof;$/;"	m	struct:ib_sequence_t
m_error	include/ut0ut.h	/^	const bool	m_error;$/;"	m	class:ib::error_or_warn
m_events	os/os0file.cc	/^	IOEvents		m_events;$/;"	m	class:AIO	file:
m_exists	include/fsp0file.h	/^	bool			m_exists;$/;"	m	class:Datafile
m_external	include/page0types.h	/^	bool		m_external;	\/*!< Allocated externally, not from the$/;"	m	struct:page_zip_des_t
m_fatal	include/ut0ut.h	/^	const bool	m_fatal;$/;"	m	class:ib::fatal_or_error
m_fh	os/os0file.cc	/^	os_file_t		m_fh;$/;"	m	class:SyncFileIO	file:
m_fields	include/row0trunc.h	/^		fields_t	m_fields;$/;"	m	struct:truncate_t::index_t
m_fields	row/row0import.cc	/^	dict_field_t*	m_fields;		\/*!< Index fields *\/$/;"	m	struct:row_index_t	file:
m_file	include/fil0fil.h	/^	pfs_os_file_t		m_file;$/;"	m	struct:PageCallback
m_file	include/os0file.h	/^	os_file_t   m_file;$/;"	m	struct:pfs_os_file_t
m_file	lock/lock0lock.cc	/^	FILE*		m_file;$/;"	m	struct:PrintNotStarted	file:
m_file_info	include/fsp0file.h	/^	BY_HANDLE_FILE_INFORMATION	m_file_info;$/;"	m	class:Datafile
m_file_info	include/fsp0file.h	/^	struct stat			m_file_info;$/;"	m	class:Datafile	typeref:struct:Datafile::stat
m_filename	include/fsp0file.h	/^	char*			m_filename;$/;"	m	class:Datafile
m_filename	include/sync0policy.h	/^		const char*	m_filename;$/;"	m	struct:MutexDebug::Context
m_filepath	include/fil0fil.h	/^	const char*		m_filepath;$/;"	m	struct:PageCallback
m_filepath	include/fsp0file.h	/^	char*			m_filepath;$/;"	m	class:Datafile
m_files	include/fsp0space.h	/^	files_t		m_files;$/;"	m	class:Tablespace
m_files	sync/sync0debug.cc	/^	Files			m_files;$/;"	m	struct:CreateTracker	file:
m_first_block	include/dyn0buf.h	/^	block_t			m_first_block;$/;"	m	class:dyn_buf_t
m_first_page	include/fsp0file.h	/^	byte*			m_first_page;$/;"	m	class:Datafile
m_first_page_buf	include/fsp0file.h	/^	byte*			m_first_page_buf;$/;"	m	class:Datafile
m_flags	handler/ha_innodb.h	/^	ulint		m_flags;$/;"	m	class:create_table_info_t
m_flags	include/fsp0file.h	/^	ulint			m_flags;$/;"	m	class:Datafile
m_flags	include/fsp0space.h	/^	ulint		m_flags;$/;"	m	class:Tablespace
m_flags	mtr/mtr0mtr.cc	/^	const ulint		m_flags;$/;"	m	struct:FindPage	file:
m_flags	mtr/mtr0mtr.cc	/^	ulint		m_flags;$/;"	m	struct:FlaggedCheck	file:
m_flags	row/row0import.cc	/^	ulint		m_flags;		\/*!< Table flags *\/$/;"	m	struct:row_import	file:
m_flags	row/row0trunc.cc	/^	ulint			m_flags;$/;"	m	class:TruncateLogger	file:
m_flags2	handler/ha_innodb.h	/^	ulint		m_flags2;$/;"	m	class:create_table_info_t
m_flush_observer	include/btr0bulk.h	/^	FlushObserver*		m_flush_observer;$/;"	m	class:BtrBulk
m_flush_observer	include/btr0bulk.h	/^	FlushObserver*	m_flush_observer;$/;"	m	class:PageBulk
m_flush_observer	include/mtr0mtr.h	/^		FlushObserver*	m_flush_observer;$/;"	m	struct:mtr_t::Impl
m_flush_observer	mtr/mtr0mtr.cc	/^	FlushObserver*	m_flush_observer;$/;"	m	struct:ReleaseBlocks	file:
m_flushed	include/buf0flu.h	/^	std::vector<ulint>*	m_flushed;$/;"	m	class:FlushObserver
m_fold	include/buf0buf.h	/^	mutable ulint	m_fold;$/;"	m	class:page_id_t
m_fold	include/lock0priv.h	/^	ulint			m_fold;$/;"	m	struct:RecID
m_folder	include/fil0fil.h	/^	char*	m_folder;$/;"	m	class:Folder
m_folder_len	include/fil0fil.h	/^	size_t	m_folder_len;$/;"	m	class:Folder
m_foreign_set	include/dict0mem.h	/^	const dict_foreign_set&	m_foreign_set;$/;"	m	struct:dict_foreign_set_free
m_foreigns	include/dict0mem.h	/^	const dict_foreign_set&	m_foreigns;$/;"	m	struct:dict_foreign_not_exists
m_form	handler/ha_innodb.h	/^	const TABLE*	m_form;$/;"	m	class:create_table_info_t
m_format_flags	include/row0trunc.h	/^	ulint			m_format_flags;$/;"	m	class:truncate_t
m_free	include/read0read.h	/^	view_list_t		m_free;$/;"	m	class:MVCC
m_free_limit	row/row0import.cc	/^	ulint			m_free_limit;$/;"	m	class:AbstractCallback	file:
m_free_space	include/btr0bulk.h	/^	ulint		m_free_space;$/;"	m	class:PageBulk
m_freed	include/ib0mutex.h	/^	bool			m_freed;$/;"	m	struct:OSTrackMutex
m_freed	include/sync0types.h	/^	bool			m_freed;$/;"	m	struct:OSMutex
m_fts_limit	include/row0mysql.h	/^	ulonglong	m_fts_limit;$/;"	m	struct:row_prebuilt_t
m_functor	mtr/mtr0mtr.cc	/^	Functor&	m_functor;$/;"	m	struct:Iterate	file:
m_global_segment	os/os0file.cc	/^	ulint			m_global_segment;$/;"	m	class:LinuxAIOHandler	file:
m_handle	include/fsp0file.h	/^	pfs_os_file_t		m_handle;$/;"	m	class:Datafile
m_handler	include/sess0sess.h	/^	dict_table_t*				m_handler;$/;"	m	class:dict_intrinsic_table_t
m_handles	os/os0file.cc	/^	Handles*		m_handles;$/;"	m	class:AIO	file:
m_has_search_latch	include/sync0types.h	/^	const bool	m_has_search_latch;$/;"	m	struct:btrsea_sync_check
m_header	include/fsp0types.h	/^	const fseg_header_t*	m_header;$/;"	m	class:fseg_header
m_heap	include/btr0bulk.h	/^	mem_heap_t*		m_heap;$/;"	m	class:BtrBulk
m_heap	include/btr0bulk.h	/^	mem_heap_t*	m_heap;$/;"	m	class:PageBulk
m_heap	include/dyn0buf.h	/^	mem_heap_t*		m_heap;$/;"	m	class:dyn_buf_t
m_heap	include/mem0mem.h	/^	mem_heap_t*	m_heap;$/;"	m	class:mem_heap_allocator
m_heap	row/row0import.cc	/^	mem_heap_t*		m_heap;$/;"	m	class:PageConverter	file:
m_heap	row/row0merge.cc	/^	mem_heap_t*		m_heap;$/;"	m	class:index_tuple_info_t	file:
m_heap_no	include/lock0priv.h	/^	uint32_t		m_heap_no;$/;"	m	struct:RecID
m_heap_no	lock/lock0lock.cc	/^		ulint		m_heap_no;	\/*!< heap number if rec lock *\/$/;"	m	struct:DeadlockChecker::state_t	file:
m_heap_top	include/btr0bulk.h	/^	byte*		m_heap_top;$/;"	m	class:PageBulk
m_hostname	row/row0import.cc	/^	byte*		m_hostname;		\/*!< Hostname where the$/;"	m	struct:row_import	file:
m_hp	include/buf0buf.h	/^	buf_page_t*		m_hp;$/;"	m	class:HazardPointer
m_i	buf/buf0buddy.cc	/^	ulint		m_i;$/;"	m	struct:CheckZipFree	file:
m_id	include/dict0mem.h	/^	const char*	m_id;$/;"	m	struct:dict_foreign_matches_id
m_id	include/row0trunc.h	/^		index_id_t	m_id;$/;"	m	struct:truncate_t::index_t
m_id	include/sync0policy.h	/^		m_id()$/;"	f	struct:GenericPolicy
m_id	include/sync0policy.h	/^	latch_id_t		m_id;$/;"	m	class:BlockMutexPolicy
m_id	include/sync0policy.h	/^	latch_id_t		m_id;$/;"	m	struct:GenericPolicy
m_id	include/sync0types.h	/^	latch_id_t		m_id;$/;"	m	class:LatchMeta
m_id	include/sync0types.h	/^	latch_id_t	m_id;$/;"	m	struct:latch_t
m_id	include/trx0types.h	/^	trx_id_t	m_id;$/;"	m	struct:TrxTrack
m_id	row/row0import.cc	/^		index_id_t	m_id;		\/*!< Index id *\/$/;"	m	struct:FetchIndexRootPages::Index	file:
m_id	row/row0import.cc	/^	index_id_t	m_id;			\/*!< Index id of the table$/;"	m	struct:row_index_t	file:
m_id	row/row0trunc.cc	/^	table_id_t		m_id;$/;"	m	class:Callback	file:
m_ids	include/read0types.h	/^	ids_t		m_ids;$/;"	m	class:ReadView
m_ignore_read_only	include/fsp0space.h	/^	bool		m_ignore_read_only;$/;"	m	class:Tablespace
m_impl	include/mtr0mtr.h	/^	Impl			m_impl;$/;"	m	struct:mtr_t
m_impl	mtr/mtr0mtr.cc	/^	mtr_t::Impl*		m_impl;$/;"	m	class:mtr_t::Command	file:
m_in_use	os/os0file.cc	/^	lock_word_t	m_in_use;$/;"	m	struct:Block	file:
m_increment	include/handler0alter.h	/^	ulong		m_increment;$/;"	m	struct:ib_sequence_t
m_index	include/btr0bulk.h	/^	dict_index_t*		m_index;$/;"	m	class:BtrBulk
m_index	include/btr0bulk.h	/^	dict_index_t*	m_index;$/;"	m	class:PageBulk
m_index	include/dict0mem.h	/^	const dict_index_t*	m_index;$/;"	m	struct:dict_foreign_with_index
m_index	include/lock0priv.h	/^	dict_index_t*		m_index;$/;"	m	class:RecLock
m_index	include/rem0rec.h	/^	const dict_index_t*	m_index;$/;"	m	struct:rec_index_print
m_index	lock/lock0lock.cc	/^	ulint			m_index;$/;"	m	class:TrxListIterator	file:
m_index	lock/lock0lock.cc	/^	ulint		m_index;$/;"	m	class:TrxLockIterator	file:
m_index	row/row0import.cc	/^	dict_index_t*		m_index;	\/*!< Index to be processed *\/$/;"	m	class:IndexPurge	file:
m_index	row/row0import.cc	/^	row_index_t*		m_index;$/;"	m	class:PageConverter	file:
m_index	row/row0merge.cc	/^	dict_index_t*		m_index;$/;"	m	class:index_tuple_info_t	file:
m_index	row/row0trunc.cc	/^	dict_index_t*	m_index;$/;"	m	class:IndexIterator	file:
m_index_count	handler/ha_innopart.h	/^	uint			m_index_count;$/;"	m	class:Ha_innopart_share
m_index_mapping	handler/ha_innopart.h	/^	dict_index_t**		m_index_mapping;$/;"	m	class:Ha_innopart_share
m_indexes	include/row0trunc.h	/^	indexes_t		m_indexes;$/;"	m	class:truncate_t
m_indexes	row/row0import.cc	/^	Indexes			m_indexes;$/;"	m	struct:FetchIndexRootPages	file:
m_indexes	row/row0import.cc	/^	row_index_t*	m_indexes;		\/*!< Index meta data *\/$/;"	m	struct:row_import	file:
m_innodb_file_per_table	handler/ha_innodb.h	/^	bool		m_innodb_file_per_table;$/;"	m	class:create_table_info_t
m_ins_node_parts	handler/ha_innopart.h	/^	ins_node_t**		m_ins_node_parts;$/;"	m	class:ha_innopart
m_ins_nodes	handler/ha_innopart.cc	/^	ins_node_t**	m_ins_nodes;$/;"	m	class:Altered_partitions	file:
m_inside_ibuf	include/mtr0mtr.h	/^		bool		m_inside_ibuf;$/;"	m	struct:mtr_t::Impl
m_int_table_flags	handler/ha_innodb.h	/^	Table_flags		m_int_table_flags;$/;"	m	class:ha_innobase
m_interrupted	include/buf0flu.h	/^	bool			m_interrupted;$/;"	m	class:FlushObserver
m_is_comp	include/btr0bulk.h	/^	const bool	m_is_comp;$/;"	m	class:PageBulk
m_is_compressed	handler/i_s.cc	/^	char		m_is_compressed[64];$/;"	m	struct:temp_table_info_t	file:
m_is_empty	os/os0file.cc	/^	os_event_t		m_is_empty;$/;"	m	class:AIO	file:
m_is_tablespace_full	include/fsp0sysspace.h	/^	bool		m_is_tablespace_full;$/;"	m	class:SysTablespace
m_is_valid	include/fsp0file.h	/^	bool			m_is_valid;$/;"	m	class:Datafile
m_iter	include/trx0purge.h	/^	TrxUndoRsegs::iterator		m_iter;$/;"	m	struct:TrxUndoRsegsIterator
m_iv	include/os0file.h	/^	byte*			m_iv;$/;"	m	struct:Encryption
m_key	include/os0file.h	/^	byte*			m_key;$/;"	m	struct:Encryption
m_key	include/ut0new.h	/^	PSI_memory_key	m_key;$/;"	m	class:ut_allocator
m_key	include/ut0new.h	/^	PSI_memory_key	m_key;$/;"	m	struct:ut_new_pfx_t
m_klen	include/os0file.h	/^	ulint			m_klen;$/;"	m	struct:Encryption
m_last	include/ut0pool.h	/^	Element*		m_last;$/;"	m	struct:Pool
m_last_file_size_max	include/fsp0sysspace.h	/^	ulint		m_last_file_size_max;$/;"	m	class:SysTablespace
m_last_match_mode	handler/ha_innodb.h	/^	uint			m_last_match_mode;$/;"	m	class:ha_innobase
m_last_os_error	include/fsp0file.h	/^	ulint			m_last_os_error;$/;"	m	class:Datafile
m_latch	sync/sync0debug.cc	/^	const latch_t*		m_latch;$/;"	m	struct:Latched	file:
m_latches	include/sync0types.h	/^	latches_t	m_latches;$/;"	m	struct:sync_allowed_latches
m_level	include/btr0bulk.h	/^	ulint		m_level;$/;"	m	class:PageBulk
m_level	include/sync0types.h	/^	latch_level_t		m_level;$/;"	m	class:LatchMeta
m_level	sync/sync0debug.cc	/^	latch_level_t		m_level;$/;"	m	struct:Latched	file:
m_level_name	include/sync0types.h	/^	const char*		m_level_name;$/;"	m	class:LatchMeta
m_levels	sync/sync0debug.cc	/^	Levels			m_levels;$/;"	m	struct:LatchDebug	file:
m_line	include/sync0policy.h	/^		ulint		m_line;$/;"	m	struct:MutexDebug::Context
m_line	sync/sync0debug.cc	/^			m_line(line)$/;"	f	struct:CreateTracker::File
m_line	sync/sync0debug.cc	/^		File() UNIV_NOTHROW : m_name(), m_line() { }$/;"	f	struct:CreateTracker::File
m_line	sync/sync0debug.cc	/^		uint16_t		m_line;$/;"	m	struct:CreateTracker::File	file:
m_link_filepath	include/fsp0file.h	/^	char*	m_link_filepath;$/;"	m	class:RemoteDatafile
m_list	include/dyn0buf.h	/^	block_list_t		m_list;$/;"	m	class:dyn_buf_t
m_lock	lock/lock0lock.cc	/^		const lock_t*	m_lock;		\/*!< Current lock *\/$/;"	m	struct:DeadlockChecker::state_t	file:
m_lock_iter	lock/lock0lock.cc	/^	TrxLockIterator		m_lock_iter;$/;"	m	class:TrxListIterator	file:
m_lock_strategy	include/ut0pool.h	/^	LockStrategy		m_lock_strategy;$/;"	m	struct:Pool
m_lock_strategy	include/ut0pool.h	/^	LockStrategy		m_lock_strategy;$/;"	m	struct:PoolManager
m_locked	include/ib0mutex.h	/^	bool			m_locked;$/;"	m	struct:OSTrackMutex
m_locks_released	mtr/mtr0mtr.cc	/^	volatile ulint		m_locks_released;$/;"	m	class:mtr_t::Command	file:
m_log	include/mtr0mtr.h	/^		mtr_buf_t	m_log;$/;"	m	struct:mtr_t::Impl
m_log_file_name	include/row0trunc.h	/^	char*			m_log_file_name;$/;"	m	class:truncate_t
m_log_file_name	row/row0trunc.cc	/^	char*			m_log_file_name;$/;"	m	class:TruncateLogger	file:
m_log_lsn	include/row0trunc.h	/^	lsn_t			m_log_lsn;$/;"	m	class:truncate_t
m_log_mode	include/mtr0mtr.h	/^		mtr_log_t	m_log_mode;$/;"	m	struct:mtr_t::Impl
m_low_limit_id	include/read0types.h	/^	trx_id_t	m_low_limit_id;$/;"	m	class:ReadView
m_low_limit_no	include/read0types.h	/^	trx_id_t	m_low_limit_no;$/;"	m	class:ReadView
m_lowest_offset	os/os0file.cc	/^	os_offset_t	m_lowest_offset;$/;"	m	class:SimulatedAIOHandler	file:
m_made_dirty	include/mtr0mtr.h	/^		bool		m_made_dirty;$/;"	m	struct:mtr_t::Impl
m_magic_n	include/dyn0buf.h	/^		ulint		m_magic_n;$/;"	m	class:dyn_buf_t::block_t
m_magic_n	include/mtr0mtr.h	/^		ulint		m_magic_n;$/;"	m	struct:mtr_t::Impl
m_magic_n	include/sync0policy.h	/^	ulint			m_magic_n;$/;"	m	class:MutexDebug
m_mark_start	lock/lock0lock.cc	/^	ib_uint64_t		m_mark_start;$/;"	m	class:DeadlockChecker	file:
m_max_value	include/handler0alter.h	/^	const ulonglong	m_max_value;$/;"	m	struct:ib_sequence_t
m_memo	include/mtr0mtr.h	/^		mtr_buf_t	m_memo;$/;"	m	struct:mtr_t::Impl
m_missing	row/row0import.cc	/^	bool		m_missing;		\/*!< true if a .cfg file was$/;"	m	struct:row_import	file:
m_mode	include/lock0priv.h	/^	ulint			m_mode;$/;"	m	class:RecLock
m_modifications	include/mtr0mtr.h	/^		bool		m_modifications;$/;"	m	struct:mtr_t::Impl
m_modify_clock	include/btr0bulk.h	/^	ib_uint64_t     m_modify_clock;$/;"	m	class:PageBulk
m_mtr	btr/btr0cur.cc	/^	mtr_t*		m_mtr;$/;"	m	struct:btr_blob_log_check_t	file:
m_mtr	include/btr0bulk.h	/^	mtr_t*		m_mtr;$/;"	m	class:PageBulk
m_mtr	include/fsp0types.h	/^	mtr_t*			m_mtr;$/;"	m	class:fseg_header
m_mtr	include/mtr0mtr.h	/^		mtr_t*		m_mtr;$/;"	m	struct:mtr_t::Impl
m_mtr	row/row0import.cc	/^	mtr_t			m_mtr;		\/*!< Mini-transaction *\/$/;"	m	class:IndexPurge	file:
m_mtr	row/row0trunc.cc	/^	mtr_t		m_mtr;$/;"	m	class:IndexIterator	file:
m_mutex	include/buf0buf.h	/^	const ib_mutex_t*	m_mutex;$/;"	m	class:HazardPointer
m_mutex	include/ib0mutex.h	/^	OSMutex			m_mutex;$/;"	m	struct:OSTrackMutex
m_mutex	include/sync0policy.h	/^		const Mutex*	m_mutex;$/;"	m	struct:MutexDebug::Context
m_mutex	include/sync0types.h	/^	Mutex			m_mutex;$/;"	m	class:LatchCounter
m_mutex	include/sync0types.h	/^	sys_mutex_t		m_mutex;$/;"	m	struct:OSMutex
m_mutex	os/os0file.cc	/^	mutable SysMutex	m_mutex;$/;"	m	class:AIO	file:
m_mutex	sync/sync0debug.cc	/^	Mutex			m_mutex;$/;"	m	struct:CreateTracker	file:
m_mutex	sync/sync0debug.cc	/^	Mutex			m_mutex;$/;"	m	struct:LatchDebug	file:
m_mutex	trx/trx0trx.cc	/^	ib_mutex_t	m_mutex;$/;"	m	struct:TrxPoolLock	file:
m_mutex	trx/trx0trx.cc	/^	ib_mutex_t	m_mutex;$/;"	m	struct:TrxPoolManagerLock	file:
m_mysql_handler	include/row0mysql.h	/^	ha_innobase*	m_mysql_handler;$/;"	m	struct:row_prebuilt_t
m_mysql_has_locked	handler/ha_innodb.h	/^        bool                    m_mysql_has_locked;$/;"	m	class:ha_innobase
m_mysql_table	include/row0mysql.h	/^	TABLE*		m_mysql_table;$/;"	m	struct:row_prebuilt_t
m_n	os/os0file.cc	/^	ssize_t			m_n;$/;"	m	class:SyncFileIO	file:
m_n_cols	handler/i_s.cc	/^	unsigned	m_n_cols;$/;"	m	struct:temp_table_info_t	file:
m_n_cols	row/row0import.cc	/^	ulint		m_n_cols;		\/*!< Number of columns in the$/;"	m	struct:row_import	file:
m_n_deleted	row/row0import.cc	/^	ulint		m_n_deleted;		\/*!< Number of deleted records$/;"	m	struct:row_stats_t	file:
m_n_elems	lock/lock0lock.cc	/^	size_t			m_n_elems;$/;"	m	class:DeadlockChecker	file:
m_n_elems	os/os0file.cc	/^	ulint		m_n_elems;$/;"	m	class:SimulatedAIOHandler	file:
m_n_fields	include/row0trunc.h	/^		ulint		m_n_fields;$/;"	m	struct:truncate_t::index_t
m_n_fields	row/row0import.cc	/^	ulint		m_n_fields;		\/*!< Total number of fields *\/$/;"	m	struct:row_index_t	file:
m_n_flush_pages	include/ut0stage.h	/^	ulint			m_n_flush_pages;$/;"	m	class:ut_stage_alter_t
m_n_indexes	row/row0import.cc	/^	ulint		m_n_indexes;		\/*!< Number of indexes,$/;"	m	struct:row_import	file:
m_n_log_recs	include/mtr0mtr.h	/^		ib_uint32_t	m_n_log_recs;$/;"	m	struct:mtr_t::Impl
m_n_nullable	row/row0import.cc	/^	ulint		m_n_nullable;		\/*!< Number of nullable$/;"	m	struct:row_index_t	file:
m_n_pk_pages	include/ut0stage.h	/^	ulint			m_n_pk_pages;$/;"	m	class:ut_stage_alter_t
m_n_pk_recs	include/ut0stage.h	/^	ulint			m_n_pk_recs;$/;"	m	class:ut_stage_alter_t
m_n_purge_failed	row/row0import.cc	/^	ulint		m_n_purge_failed;	\/*!< Number of deleted rows$/;"	m	struct:row_stats_t	file:
m_n_purged	row/row0import.cc	/^	ulint		m_n_purged;		\/*!< Number of records purged$/;"	m	struct:row_stats_t	file:
m_n_recs_per_page	include/ut0stage.h	/^	double			m_n_recs_per_page;$/;"	m	class:ut_stage_alter_t
m_n_recs_processed	include/ut0stage.h	/^	ulint			m_n_recs_processed;$/;"	m	class:ut_stage_alter_t
m_n_reserved	os/os0file.cc	/^	ulint			m_n_reserved;$/;"	m	class:AIO	file:
m_n_rows	row/row0import.cc	/^	ulint			m_n_rows;	\/*!< Records in index *\/$/;"	m	class:IndexPurge	file:
m_n_rows	row/row0import.cc	/^	ulint		m_n_rows;		\/*!< Number of rows *\/$/;"	m	struct:row_stats_t	file:
m_n_segments	os/os0file.cc	/^	ulint			m_n_segments;$/;"	m	class:AIO	file:
m_n_slots	os/os0file.cc	/^	ulint			m_n_slots;$/;"	m	class:LinuxAIOHandler	file:
m_n_slots	os/os0file.cc	/^	ulint		m_n_slots;$/;"	m	class:SimulatedAIOHandler	file:
m_n_sort_indexes	include/ut0stage.h	/^	ulint			m_n_sort_indexes;$/;"	m	class:ut_stage_alter_t
m_n_uniq	row/row0import.cc	/^	ulint		m_n_uniq;		\/*!< Number of columns that can$/;"	m	struct:row_index_t	file:
m_n_user_defined_cols	row/row0import.cc	/^	ulint		m_n_user_defined_cols;	\/*!< User defined columns *\/$/;"	m	struct:row_index_t	file:
m_name	handler/ha_innodb.cc	/^		const char*	m_name;$/;"	m	struct:ShowStatus::GetCount	file:
m_name	handler/ha_innodb.cc	/^		std::string		m_name;$/;"	m	struct:ShowStatus::Value	file:
m_name	include/dict0mem.h	/^	char*	m_name;$/;"	m	struct:table_name_t
m_name	include/dict0mem.h	/^	const char*	m_name;$/;"	m	class:id_name_t
m_name	include/fsp0file.h	/^	char*			m_name;$/;"	m	class:Datafile
m_name	include/fsp0space.h	/^	char*		m_name;$/;"	m	class:Tablespace
m_name	include/sync0types.h	/^	const char*		m_name;$/;"	m	class:LatchMeta
m_name	include/ut0dbg.h	/^	const char*	m_name;$/;"	m	class:ut_chrono_t
m_name	row/row0import.cc	/^	byte*		m_name;			\/*!< Index name *\/$/;"	m	struct:row_index_t	file:
m_name	sync/sync0debug.cc	/^		std::string		m_name;$/;"	m	struct:CreateTracker::File	file:
m_new_partitions	handler/ha_innopart.h	/^	Altered_partitions*	m_new_partitions;$/;"	m	class:ha_innopart
m_new_root_page_no	include/row0trunc.h	/^		ulint		m_new_root_page_no;$/;"	m	struct:truncate_t::index_t
m_new_table_id	include/row0trunc.h	/^	table_id_t		m_new_table_id;$/;"	m	class:truncate_t
m_new_table_parts	handler/ha_innopart.cc	/^	dict_table_t**	m_new_table_parts;$/;"	m	class:Altered_partitions	file:
m_next_value	include/handler0alter.h	/^	ulonglong	m_next_value;$/;"	m	struct:ib_sequence_t
m_no_prefetch	include/row0mysql.h	/^	bool		m_no_prefetch;$/;"	m	struct:row_prebuilt_t
m_node	include/dyn0buf.h	/^		block_node_t	m_node;$/;"	m	class:dyn_buf_t::block_t
m_node	include/ut0lst.h	/^	node_type	Type::*m_node;$/;"	m	class:GenericGetNode::Type
m_nonempty	include/page0types.h	/^	unsigned	m_nonempty:1;	\/*!< TRUE if the modification log$/;"	m	struct:page_zip_des_t
m_noredo	include/trx0trx.h	/^	trx_undo_ptr_t	m_noredo;$/;"	m	struct:trx_rsegs_t
m_noredo	row/row0trunc.cc	/^	const bool		m_noredo;$/;"	m	class:Callback	file:
m_not_full	os/os0file.cc	/^	os_event_t		m_not_full;$/;"	m	class:AIO	file:
m_num_new_parts	handler/ha_innopart.cc	/^	size_t		m_num_new_parts;$/;"	m	class:Altered_partitions	file:
m_num_write_row	handler/ha_innodb.h	/^	uint			m_num_write_row;$/;"	m	class:ha_innobase
m_object	mtr/mtr0mtr.cc	/^	const void*	m_object;$/;"	m	struct:Find	file:
m_offset	include/handler0alter.h	/^	ulong		m_offset;$/;"	m	struct:ib_sequence_t
m_offset	os/os0file.cc	/^	os_offset_t		m_offset;$/;"	m	class:SyncFileIO	file:
m_offsets	btr/btr0cur.cc	/^	const ulint*	m_offsets;$/;"	m	struct:btr_blob_log_check_t	file:
m_offsets	include/rem0rec.h	/^	const ulint*		m_offsets;$/;"	m	struct:rec_offsets_print
m_offsets	row/row0import.cc	/^	ulint*			m_offsets;$/;"	m	class:PageConverter	file:
m_offsets_	row/row0import.cc	/^	ulint			m_offsets_[REC_OFFS_NORMAL_SIZE];$/;"	m	class:PageConverter	file:
m_old_table_id	include/row0trunc.h	/^	table_id_t		m_old_table_id;$/;"	m	class:truncate_t
m_oldest	os/os0file.cc	/^	ulint		m_oldest;$/;"	m	class:SimulatedAIOHandler	file:
m_only_create	handler/ha_innopart.cc	/^	bool		m_only_create;$/;"	m	class:Altered_partitions	file:
m_oom_fatal	include/ut0new.h	/^	bool	m_oom_fatal;$/;"	m	class:ut_allocator
m_op	btr/btr0cur.cc	/^	enum blob_op	m_op;$/;"	m	struct:btr_blob_log_check_t	typeref:enum:btr_blob_log_check_t::blob_op	file:
m_open_flags	include/fsp0file.h	/^	os_file_create_t	m_open_flags;$/;"	m	class:Datafile
m_open_tables	include/sess0sess.h	/^	table_cache_t	m_open_tables;$/;"	m	class:innodb_session_t
m_order	include/fsp0file.h	/^	ulint			m_order;$/;"	m	class:Datafile
m_original_size	include/os0file.h	/^		uint16_t	m_original_size;$/;"	m	struct:Compression::meta_t
m_original_type	include/os0file.h	/^		uint16_t	m_original_type;$/;"	m	struct:Compression::meta_t
m_oss	include/ut0ut.h	/^	std::ostringstream	m_oss;$/;"	m	class:ib::logger
m_out	include/dict0mem.h	/^	std::ostream&	m_out;$/;"	m	struct:dict_foreign_print
m_owner	include/ut0new.h	/^        struct PSI_thread *m_owner;$/;"	m	struct:ut_new_pfx_t	typeref:struct:ut_new_pfx_t::PSI_thread
m_padding_space	include/btr0bulk.h	/^	ulint		m_padding_space;$/;"	m	class:PageBulk
m_page	include/btr0bulk.h	/^	page_t*		m_page;$/;"	m	class:PageBulk
m_page_bulks	include/btr0bulk.h	/^	page_bulk_vector*	m_page_bulks;$/;"	m	class:BtrBulk
m_page_no	include/btr0bulk.h	/^	ulint		m_page_no;$/;"	m	class:PageBulk
m_page_no	include/buf0buf.h	/^	ib_uint32_t	m_page_no;$/;"	m	class:page_id_t
m_page_no	include/lock0priv.h	/^	uint32_t		m_page_no;$/;"	m	struct:RecID
m_page_no	row/row0import.cc	/^		ulint		m_page_no;	\/*!< Root page number *\/$/;"	m	struct:FetchIndexRootPages::Index	file:
m_page_no	row/row0import.cc	/^	ulint		m_page_no;		\/*!< Root page number *\/$/;"	m	struct:row_index_t	file:
m_page_size	include/fil0fil.h	/^	page_size_t		m_page_size;$/;"	m	struct:PageCallback
m_page_size	row/row0import.cc	/^	page_size_t	m_page_size;		\/*!< Tablespace page size *\/$/;"	m	struct:row_import	file:
m_page_zip	include/btr0bulk.h	/^	page_zip_des_t*	m_page_zip;$/;"	m	class:PageBulk
m_page_zip_ptr	row/row0import.cc	/^	page_zip_des_t*		m_page_zip_ptr;$/;"	m	class:PageConverter	file:
m_part_share	handler/ha_innopart.h	/^	Ha_innopart_share*	m_part_share;$/;"	m	class:ha_innopart
m_path	include/fsp0space.h	/^	char*		m_path;$/;"	m	class:Tablespace
m_pcur	btr/btr0cur.cc	/^	btr_pcur_t*	m_pcur;$/;"	m	struct:btr_blob_log_check_t	file:
m_pcur	handler/ha_innopart.h	/^	btr_pcur_t*		m_pcur;$/;"	m	class:ha_innopart
m_pcur	row/row0import.cc	/^	btr_pcur_t		m_pcur;		\/*!< Persistent cursor *\/$/;"	m	class:IndexPurge	file:
m_pcur	row/row0trunc.cc	/^	btr_pcur_t	m_pcur;$/;"	m	class:IndexIterator	file:
m_pcur_map	handler/ha_innopart.h	/^	uint16_t*		m_pcur_map;$/;"	m	class:ha_innopart
m_pcur_parts	handler/ha_innopart.h	/^	btr_pcur_t*		m_pcur_parts;$/;"	m	class:ha_innopart
m_per_table_tablespace	handler/i_s.cc	/^	char		m_per_table_tablespace[64];$/;"	m	struct:temp_table_info_t	file:
m_pfs_key	include/sync0types.h	/^	pfs_key_t		m_pfs_key;$/;"	m	class:LatchMeta
m_pk	include/ut0stage.h	/^	const dict_index_t*	m_pk;$/;"	m	class:ut_stage_alter_t
m_policy	include/ib0mutex.h	/^	MutexPolicy		m_policy;$/;"	m	struct:OSTrackMutex
m_policy	include/ib0mutex.h	/^	MutexPolicy		m_policy;$/;"	v
m_policy	include/ut0counter.h	/^	Indexer<Type, N>m_policy;$/;"	m	class:ib_counter_t
m_pool	include/ut0pool.h	/^		Pool*		m_pool;$/;"	m	struct:Pool::Element
m_pools	include/ut0pool.h	/^	Pools		m_pools;$/;"	m	struct:PoolManager
m_pqueue	include/ut0pool.h	/^	pqueue_t		m_pqueue;$/;"	m	struct:Pool
m_prebuilt	handler/ha_innodb.h	/^	row_prebuilt_t*		m_prebuilt;$/;"	m	class:ha_innobase
m_prebuilt_ptr	handler/ha_innodb.h	/^	row_prebuilt_t**	m_prebuilt_ptr;$/;"	m	class:ha_innobase
m_prev_view	read/read0read.cc	/^	const ReadView*	m_prev_view;$/;"	m	struct:ViewCheck	file:
m_primary_key	handler/ha_innodb.h	/^	uint			m_primary_key;$/;"	m	class:ha_innobase
m_progress	include/ut0stage.h	/^	PSI_stage_progress*	m_progress;$/;"	m	class:ut_stage_alter_t
m_psi	include/os0file.h	/^	struct PSI_file *m_psi;$/;"	m	struct:pfs_os_file_t	typeref:struct:pfs_os_file_t::PSI_file
m_ptr	include/read0types.h	/^		value_type*	m_ptr;$/;"	m	class:ReadView::ids_t
m_ptr	mtr/mtr0mtr.cc	/^	const void*	m_ptr;$/;"	m	struct:FlaggedCheck	file:
m_ptr	mtr/mtr0mtr.cc	/^	const void*const	m_ptr;$/;"	m	struct:FindPage	file:
m_ptr	os/os0file.cc	/^	byte*		m_ptr;$/;"	m	class:SimulatedAIOHandler	file:
m_ptr	os/os0file.cc	/^	byte*		m_ptr;$/;"	m	struct:Block	file:
m_purge_rseg_truncate_frequency	include/trx0purge.h	/^		ulint			m_purge_rseg_truncate_frequency;$/;"	m	class:undo::Truncate
m_purge_sys	include/trx0purge.h	/^	trx_purge_t*			m_purge_sys;$/;"	m	struct:TrxUndoRsegsIterator
m_read_virtual_key	include/row0mysql.h	/^	bool		m_read_virtual_key;$/;"	m	struct:row_prebuilt_t
m_rec	btr/btr0cur.cc	/^	rec_t**		m_rec;$/;"	m	struct:btr_blob_log_check_t	file:
m_rec	include/rem0rec.h	/^	const rec_t*		m_rec;$/;"	m	struct:rec_index_print
m_rec	include/rem0rec.h	/^	const rec_t*		m_rec;$/;"	m	struct:rec_offsets_print
m_rec_id	include/lock0priv.h	/^	RecID			m_rec_id;$/;"	m	class:RecLock
m_rec_iter	row/row0import.cc	/^	RecIterator		m_rec_iter;$/;"	m	class:PageConverter	file:
m_rec_no	include/btr0bulk.h	/^	ulint		m_rec_no;$/;"	m	class:PageBulk
m_redo	include/trx0trx.h	/^	trx_undo_ptr_t	m_redo;$/;"	m	struct:trx_rsegs_t
m_ref_count	handler/ha_innopart.h	/^	uint			m_ref_count;$/;"	m	class:Ha_innopart_share
m_remote_path	handler/ha_innodb.h	/^	char*		m_remote_path;$/;"	m	class:create_table_info_t
m_removed	include/buf0flu.h	/^	std::vector<ulint>*	m_removed;$/;"	m	class:FlushObserver
m_reserved	include/read0types.h	/^		ulint		m_reserved;$/;"	m	class:ReadView::ids_t
m_reserved_space	include/btr0bulk.h	/^	ulint		m_reserved_space;$/;"	m	class:PageBulk
m_result	include/sync0types.h	/^	bool		m_result;$/;"	m	struct:btrsea_sync_check
m_result	include/sync0types.h	/^	bool		m_result;$/;"	m	struct:dict_sync_check
m_result	include/sync0types.h	/^	bool		m_result;$/;"	m	struct:sync_allowed_latches
m_root_level	include/btr0bulk.h	/^	ulint			m_root_level;$/;"	m	class:BtrBulk
m_root_page_no	include/row0trunc.h	/^		ulint		m_root_page_no;$/;"	m	struct:truncate_t::index_t
m_row_read_type_parts	handler/ha_innopart.h	/^	ulint*			m_row_read_type_parts;$/;"	m	class:ha_innopart
m_rseg_for_trunc	include/trx0purge.h	/^		rseg_for_trunc_t	m_rseg_for_trunc;$/;"	m	class:undo::Truncate
m_rsegs	include/trx0types.h	/^	trx_rsegs_t		m_rsegs;$/;"	m	class:TrxUndoRsegs
m_ru	include/ut0dbg.h	/^	struct rusage	m_ru;$/;"	m	class:ut_chrono_t	typeref:struct:ut_chrono_t::rusage
m_rw_lock	include/sync0types.h	/^	bool		m_rw_lock;$/;"	m	struct:latch_t
m_sanity_checks_done	include/fsp0sysspace.h	/^	bool		m_sanity_checks_done;$/;"	m	class:SysTablespace
m_scan_start	include/trx0purge.h	/^		ulint			m_scan_start;$/;"	m	class:undo::Truncate
m_segment	os/os0file.cc	/^	ulint			m_segment;$/;"	m	class:LinuxAIOHandler	file:
m_segment	os/os0file.cc	/^	ulint		m_segment;$/;"	m	class:SimulatedAIOHandler	file:
m_set	os/os0event.cc	/^	bool			m_set;		\/*!< this is true when the$/;"	m	struct:os_event	file:
m_share	handler/ha_innodb.h	/^	INNOBASE_SHARE*		m_share;$/;"	m	class:ha_innobase
m_show_from_destructor	include/ut0dbg.h	/^	bool		m_show_from_destructor;$/;"	m	class:ut_chrono_t
m_size	include/dyn0buf.h	/^	ulint			m_size;$/;"	m	class:dyn_buf_t
m_size	include/fsp0file.h	/^	ulint			m_size;$/;"	m	class:Datafile
m_size	include/lock0priv.h	/^	size_t			m_size;$/;"	m	class:RecLock
m_size	include/read0types.h	/^		ulint		m_size;$/;"	m	class:ReadView::ids_t
m_size	include/ut0new.h	/^	size_t		m_size;$/;"	m	struct:ut_new_pfx_t
m_size	include/ut0pool.h	/^	size_t			m_size;$/;"	m	struct:Pool
m_size	include/ut0pool.h	/^	size_t		m_size;$/;"	m	struct:PoolManager
m_size	row/row0import.cc	/^	ulint			m_size;$/;"	m	class:AbstractCallback	file:
m_slot	mtr/mtr0mtr.cc	/^	mtr_memo_slot_t*	m_slot;$/;"	m	struct:FindPage	file:
m_slot	mtr/mtr0mtr.cc	/^	mtr_memo_slot_t*m_slot;$/;"	m	struct:Find	file:
m_slots	os/os0file.cc	/^	Slots			m_slots;$/;"	m	class:AIO	file:
m_slots	os/os0file.cc	/^	slots_t		m_slots;$/;"	m	class:SimulatedAIOHandler	file:
m_sort_multi_factor	include/ut0stage.h	/^	ulint			m_sort_multi_factor;$/;"	m	class:ut_stage_alter_t
m_space	include/buf0buf.h	/^	ib_uint32_t	m_space;$/;"	m	class:page_id_t
m_space	include/fil0fil.h	/^	fil_space_t*	m_space;$/;"	m	class:FilSpace
m_space	row/row0import.cc	/^	ulint			m_space;$/;"	m	class:AbstractCallback	file:
m_space	row/row0import.cc	/^	ulint		m_space;		\/*!< Space where it is placed *\/$/;"	m	struct:row_index_t	file:
m_space_flags	row/row0import.cc	/^	ulint			m_space_flags;$/;"	m	class:AbstractCallback	file:
m_space_id	handler/i_s.cc	/^	unsigned	m_space_id;$/;"	m	struct:temp_table_info_t	file:
m_space_id	include/buf0flu.h	/^	ulint			m_space_id;$/;"	m	class:FlushObserver
m_space_id	include/fsp0file.h	/^	ulint			m_space_id;$/;"	m	class:Datafile
m_space_id	include/fsp0space.h	/^	ulint		m_space_id;$/;"	m	class:Tablespace
m_space_id	include/lock0priv.h	/^	uint32_t		m_space_id;$/;"	m	struct:RecID
m_space_id	include/row0trunc.h	/^	ulint			m_space_id;$/;"	m	class:truncate_t
m_spins	handler/ha_innodb.cc	/^		ulint			m_spins;$/;"	m	struct:ShowStatus::Value	file:
m_spins	include/sync0types.h	/^		uint32_t	m_spins;$/;"	m	struct:LatchCounter::Count
m_sql_stat_start	handler/ha_innopart.cc	/^	byte*		m_sql_stat_start;$/;"	m	class:Altered_partitions	file:
m_sql_stat_start_parts	handler/ha_innopart.h	/^	uchar*			m_sql_stat_start_parts;$/;"	m	class:ha_innopart
m_srv_index	row/row0import.cc	/^			m_srv_index;		\/*!< Index instance in the$/;"	m	struct:row_index_t	file:
m_stage	handler/handler0alter.cc	/^	ut_stage_alter_t* m_stage;$/;"	m	struct:ha_innobase_inplace_ctx	file:
m_stage	include/buf0flu.h	/^	ut_stage_alter_t*	m_stage;$/;"	m	class:FlushObserver
m_start	include/page0types.h	/^	unsigned	m_start:16;	\/*!< start offset of modification log *\/$/;"	m	struct:page_zip_des_t
m_start	include/ut0pool.h	/^	Element*		m_start;$/;"	m	struct:Pool
m_start	lock/lock0lock.cc	/^	const trx_t*		m_start;$/;"	m	class:DeadlockChecker	file:
m_start_lsn	mtr/mtr0mtr.cc	/^	lsn_t			m_start_lsn;$/;"	m	class:mtr_t::Command	file:
m_start_lsn	mtr/mtr0mtr.cc	/^	lsn_t		m_start_lsn;$/;"	m	struct:ReleaseBlocks	file:
m_start_of_scan	handler/ha_innodb.h	/^	bool			m_start_of_scan;$/;"	m	class:ha_innobase
m_state	include/mtr0mtr.h	/^		mtr_state_t	m_state;$/;"	m	struct:mtr_t::Impl
m_stats	row/row0import.cc	/^	row_stats_t	m_stats;		\/*!< Statistics gathered during$/;"	m	struct:row_index_t	file:
m_sync	include/mtr0mtr.h	/^	bool			m_sync;$/;"	m	struct:mtr_t
m_sync	mtr/mtr0mtr.cc	/^	bool			m_sync;$/;"	m	class:mtr_t::Command	file:
m_sys_space	include/mtr0mtr.h	/^		fil_space_t*	m_sys_space;$/;"	m	struct:mtr_t::Impl
m_table	row/row0import.cc	/^	const dict_table_t*	m_table;$/;"	m	struct:FetchIndexRootPages	file:
m_table	row/row0import.cc	/^	dict_table_t*	m_table;		\/*!< Table instance *\/$/;"	m	struct:row_import	file:
m_table	row/row0trunc.cc	/^	dict_table_t*		m_table;$/;"	m	class:CreateIndex	file:
m_table	row/row0trunc.cc	/^	dict_table_t*		m_table;$/;"	m	class:DropIndex	file:
m_table	row/row0trunc.cc	/^	dict_table_t*		m_table;$/;"	m	class:TruncateLogger	file:
m_table_flags	row/row0import.cc	/^	ulint			m_table_flags;$/;"	m	class:AbstractCallback	file:
m_table_found	row/row0trunc.cc	/^	bool			m_table_found;$/;"	m	class:TableLocator	file:
m_table_id	handler/i_s.cc	/^	table_id_t	m_table_id;$/;"	m	struct:temp_table_info_t	file:
m_table_name	handler/ha_innodb.h	/^	char*		m_table_name;$/;"	m	class:create_table_info_t
m_table_name	handler/i_s.cc	/^	char		m_table_name[MAX_TABLE_UTF8_LEN];$/;"	m	struct:temp_table_info_t	file:
m_table_name	row/row0import.cc	/^	byte*		m_table_name;		\/*!< Exporting instance table$/;"	m	struct:row_import	file:
m_table_parts	handler/ha_innopart.h	/^	dict_table_t**		m_table_parts;$/;"	m	class:Ha_innopart_share
m_table_share	handler/ha_innopart.h	/^	TABLE_SHARE*		m_table_share;$/;"	m	class:Ha_innopart_share
m_tablename	include/row0trunc.h	/^	char*			m_tablename;$/;"	m	class:truncate_t
m_tablespace	handler/ha_innodb.h	/^	char*		m_tablespace;$/;"	m	class:create_table_info_t
m_tablespace_flags	include/row0trunc.h	/^	ulint			m_tablespace_flags;$/;"	m	class:truncate_t
m_temp_fsp	include/sync0types.h	/^		m_temp_fsp() { }$/;"	f	struct:latch_t
m_temp_fsp	include/sync0types.h	/^	bool		m_temp_fsp;$/;"	m	struct:latch_t
m_temp_path	handler/ha_innodb.h	/^	char*		m_temp_path;$/;"	m	class:create_table_info_t
m_thd	handler/ha_innodb.h	/^	THD*		m_thd;$/;"	m	class:create_table_info_t
m_thr	include/lock0priv.h	/^	que_thr_t*		m_thr;$/;"	m	class:RecLock
m_thread_id	include/sync0policy.h	/^		os_thread_id_t	m_thread_id;$/;"	m	struct:MutexDebug::Context
m_threads	sync/sync0debug.cc	/^	ThreadMap		m_threads;$/;"	m	struct:LatchDebug	file:
m_too_deep	lock/lock0lock.cc	/^	bool			m_too_deep;$/;"	m	class:DeadlockChecker	file:
m_tot_parts	handler/ha_innopart.h	/^	uint			m_tot_parts;$/;"	m	class:Ha_innopart_share
m_tot_parts	handler/handler0alter.cc	/^	uint				m_tot_parts;$/;"	m	class:ha_innopart_inplace_ctx	file:
m_total_data	include/btr0bulk.h	/^	ulint		m_total_data;$/;"	m	class:PageBulk
m_total_size	include/os0file.h	/^	os_offset_t	m_total_size;$/;"	m	struct:os_file_size_t
m_truncate	row/row0trunc.cc	/^	truncate_t		m_truncate;$/;"	m	class:TruncateLogger	file:
m_trx	handler/ha_innodb.h	/^	trx_t*		m_trx;$/;"	m	class:create_table_info_t
m_trx	include/buf0flu.h	/^	trx_t*			m_trx;$/;"	m	class:FlushObserver
m_trx	include/lock0priv.h	/^	trx_t*			m_trx;$/;"	m	class:RecLock
m_trx	include/sess0sess.h	/^	trx_t*		m_trx;$/;"	m	class:innodb_session_t
m_trx	include/trx0trx.h	/^	trx_t*			m_trx;$/;"	m	class:TrxInInnoDB
m_trx	include/trx0trx.h	/^	trx_t*		m_trx;$/;"	m	struct:TrxVersion
m_trx	include/trx0types.h	/^	trx_t*		m_trx;$/;"	m	struct:TrxTrack
m_trx	row/row0import.cc	/^	trx_t*			m_trx;		\/*!< User transaction *\/$/;"	m	class:IndexPurge	file:
m_trx	row/row0import.cc	/^	trx_t*			m_trx;$/;"	m	class:AbstractCallback	file:
m_trx_id	include/btr0bulk.h	/^	trx_id_t		m_trx_id;$/;"	m	class:BtrBulk
m_trx_id	include/btr0bulk.h	/^	trx_id_t	m_trx_id;$/;"	m	class:PageBulk
m_trx_id_offset	row/row0import.cc	/^	ulint		m_trx_id_offset;	\/*!< Relevant only for clustered$/;"	m	struct:row_index_t	file:
m_trx_id_parts	handler/ha_innopart.h	/^	trx_id_t*		m_trx_id_parts;$/;"	m	class:ha_innopart
m_trx_id_pos	include/row0trunc.h	/^		ulint		m_trx_id_pos;$/;"	m	struct:truncate_t::index_t
m_trx_ids	handler/ha_innopart.cc	/^	trx_id_t*	m_trx_ids;$/;"	m	class:Altered_partitions	file:
m_trx_list	lock/lock0lock.cc	/^	trx_ut_list_t*		m_trx_list;$/;"	m	class:TrxListIterator	file:
m_trx_no	include/trx0types.h	/^	trx_id_t		m_trx_no;$/;"	m	class:TrxUndoRsegs
m_trx_undo_rsegs	include/trx0purge.h	/^	TrxUndoRsegs			m_trx_undo_rsegs;$/;"	m	struct:TrxUndoRsegsIterator
m_tv	include/ut0dbg.h	/^	struct timeval	m_tv;$/;"	m	class:ut_chrono_t	typeref:struct:ut_chrono_t::timeval
m_type	include/fsp0file.h	/^	device_t		m_type;$/;"	m	class:Datafile
m_type	include/os0file.h	/^	Type			m_type;$/;"	m	struct:Encryption
m_type	include/os0file.h	/^	Type		m_type;$/;"	m	struct:Compression
m_type	include/os0file.h	/^	uint16_t		m_type;$/;"	m	class:IORequest
m_type	include/row0trunc.h	/^		ulint		m_type;$/;"	m	struct:truncate_t::index_t
m_type	include/ut0pool.h	/^		value_type	m_type;$/;"	m	struct:Pool::Element
m_type	mtr/mtr0mtr.cc	/^	ulint		m_type;$/;"	m	struct:Find	file:
m_type	row/row0import.cc	/^	ulint		m_type;			\/*!< Index type *\/$/;"	m	struct:row_index_t	file:
m_undo_for_trunc	include/trx0purge.h	/^		ulint			m_undo_for_trunc;$/;"	m	class:undo::Truncate
m_undo_space	include/mtr0mtr.h	/^		fil_space_t*	m_undo_space;$/;"	m	struct:mtr_t::Impl
m_up_limit_id	include/read0types.h	/^	trx_id_t	m_up_limit_id;$/;"	m	class:ReadView
m_upd_buf	handler/ha_innodb.h	/^	uchar*			m_upd_buf;$/;"	m	class:ha_innobase
m_upd_buf_size	handler/ha_innodb.h	/^	ulint			m_upd_buf_size;$/;"	m	class:ha_innobase
m_upd_node_parts	handler/ha_innopart.h	/^	upd_node_t**		m_upd_node_parts;$/;"	m	class:ha_innopart
m_use_data_dir	handler/ha_innodb.h	/^	bool		m_use_data_dir;$/;"	m	class:create_table_info_t
m_use_file_per_table	handler/ha_innodb.h	/^	bool		m_use_file_per_table;$/;"	m	class:create_table_info_t
m_use_shared_space	handler/ha_innodb.h	/^	bool		m_use_shared_space;$/;"	m	class:create_table_info_t
m_used	include/dyn0buf.h	/^		ib_uint32_t	m_used;$/;"	m	class:dyn_buf_t::block_t
m_user_space	include/mtr0mtr.h	/^		fil_space_t*	m_user_space;$/;"	m	struct:mtr_t::Impl
m_user_space_id	include/mtr0mtr.h	/^		ulint		m_user_space_id;$/;"	m	struct:mtr_t::Impl
m_user_thd	handler/ha_innodb.h	/^	THD*			m_user_thd;$/;"	m	class:ha_innobase
m_val	include/ut0ut.h	/^	const uintmax_t	m_val;$/;"	m	struct:ib::hex
m_value	include/os0thread.h	/^        unsigned int            m_value;$/;"	m	struct:mysql_pfs_key_t
m_values	handler/ha_innodb.cc	/^			m_values(values)$/;"	f	struct:ShowStatus::GetCount
m_values	handler/ha_innodb.cc	/^		Values*		m_values;$/;"	m	struct:ShowStatus::GetCount	file:
m_values	handler/ha_innodb.cc	/^	Values		m_values;$/;"	m	struct:ShowStatus	file:
m_version	include/os0file.h	/^		uint8_t		m_version;$/;"	m	struct:Compression::meta_t
m_version	include/trx0trx.h	/^	ulint		m_version;$/;"	m	struct:TrxVersion
m_version	row/row0import.cc	/^	ulint		m_version;		\/*!< Version of config file *\/$/;"	m	struct:row_import	file:
m_view_list	include/read0types.h	/^	node_t		m_view_list;$/;"	m	class:ReadView
m_views	include/read0read.h	/^	view_list_t		m_views;$/;"	m	class:MVCC
m_wait_lock	lock/lock0lock.cc	/^		const lock_t*	m_wait_lock;	\/*!< Waiting for lock *\/$/;"	m	struct:DeadlockChecker::state_t	file:
m_wait_lock	lock/lock0lock.cc	/^	const lock_t*		m_wait_lock;$/;"	m	class:DeadlockChecker	file:
m_waits	handler/ha_innodb.cc	/^		uint64_t		m_waits;$/;"	m	struct:ShowStatus::Value	file:
m_waits	include/sync0types.h	/^		uint32_t	m_waits;$/;"	m	struct:LatchCounter::Count
m_xdes	row/row0import.cc	/^	xdes_t*			m_xdes;$/;"	m	class:AbstractCallback	file:
m_xdes_page_no	row/row0import.cc	/^	ulint			m_xdes_page_no;$/;"	m	class:AbstractCallback	file:
mach0data_h	include/mach0data.h	28;"	d
mach_decode_2	include/mach0data.ic	/^mach_decode_2($/;"	f
mach_double_read	include/mach0data.ic	/^mach_double_read($/;"	f
mach_double_write	include/mach0data.ic	/^mach_double_write($/;"	f
mach_encode_2	include/mach0data.ic	/^mach_encode_2($/;"	f
mach_float_read	include/mach0data.ic	/^mach_float_read($/;"	f
mach_float_write	include/mach0data.ic	/^mach_float_write($/;"	f
mach_get_compressed_size	include/mach0data.ic	/^mach_get_compressed_size($/;"	f
mach_parse_compressed	mach/mach0data.cc	/^mach_parse_compressed($/;"	f
mach_read_compressed	include/mach0data.ic	/^mach_read_compressed($/;"	f
mach_read_from_1	include/mach0data.ic	/^mach_read_from_1($/;"	f
mach_read_from_2	include/mach0data.ic	/^mach_read_from_2($/;"	f
mach_read_from_2_little_endian	include/mach0data.ic	/^mach_read_from_2_little_endian($/;"	f
mach_read_from_3	include/mach0data.ic	/^mach_read_from_3($/;"	f
mach_read_from_4	include/mach0data.ic	/^mach_read_from_4($/;"	f
mach_read_from_6	include/mach0data.ic	/^mach_read_from_6($/;"	f
mach_read_from_7	include/mach0data.ic	/^mach_read_from_7($/;"	f
mach_read_from_8	include/mach0data.ic	/^mach_read_from_8($/;"	f
mach_read_from_n_little_endian	include/mach0data.ic	/^mach_read_from_n_little_endian($/;"	f
mach_read_int_type	include/mach0data.ic	/^mach_read_int_type($/;"	f
mach_read_next_compressed	include/mach0data.ic	/^mach_read_next_compressed($/;"	f
mach_read_next_much_compressed	include/mach0data.ic	/^mach_read_next_much_compressed($/;"	f
mach_read_ulint	include/mach0data.ic	/^mach_read_ulint($/;"	f
mach_swap_byte_order	include/mach0data.ic	/^mach_swap_byte_order($/;"	f
mach_u64_parse_compressed	include/mach0data.ic	/^mach_u64_parse_compressed($/;"	f
mach_u64_read_much_compressed	include/mach0data.ic	/^mach_u64_read_much_compressed($/;"	f
mach_u64_read_next_compressed	include/mach0data.ic	/^mach_u64_read_next_compressed($/;"	f
mach_u64_write_compressed	include/mach0data.ic	/^mach_u64_write_compressed($/;"	f
mach_u64_write_much_compressed	include/mach0data.ic	/^mach_u64_write_much_compressed($/;"	f
mach_write_compressed	include/mach0data.ic	/^mach_write_compressed($/;"	f
mach_write_int_type	include/mach0data.ic	/^mach_write_int_type($/;"	f
mach_write_to_1	include/mach0data.ic	/^mach_write_to_1($/;"	f
mach_write_to_2	include/mach0data.ic	/^mach_write_to_2($/;"	f
mach_write_to_2_little_endian	include/mach0data.ic	/^mach_write_to_2_little_endian($/;"	f
mach_write_to_3	include/mach0data.ic	/^mach_write_to_3($/;"	f
mach_write_to_4	include/mach0data.ic	/^mach_write_to_4($/;"	f
mach_write_to_6	include/mach0data.ic	/^mach_write_to_6($/;"	f
mach_write_to_7	include/mach0data.ic	/^mach_write_to_7($/;"	f
mach_write_to_8	include/mach0data.ic	/^mach_write_to_8($/;"	f
mach_write_to_n_little_endian	include/mach0data.ic	/^mach_write_to_n_little_endian($/;"	f
mach_write_ulonglong	include/mach0data.ic	/^mach_write_ulonglong($/;"	f
made_dirty_with_no_latch	include/buf0buf.h	/^	bool		made_dirty_with_no_latch;$/;"	m	struct:buf_block_t
magic_n	include/btr0sea.h	/^	ulint	magic_n;	\/*!< magic number @see BTR_SEARCH_MAGIC_N *\/$/;"	m	struct:btr_search_t
magic_n	include/data0data.h	/^	ulint		magic_n;	\/*!< magic number, used in$/;"	m	struct:dtuple_t
magic_n	include/dict0mem.h	/^	uint32_t	magic_n;\/*!< magic number *\/$/;"	m	struct:dict_index_t
magic_n	include/dict0mem.h	/^	ulint					magic_n;$/;"	m	struct:dict_table_t
magic_n	include/fil0fil.h	/^	ulint		magic_n;$/;"	m	struct:fil_node_t
magic_n	include/fil0fil.h	/^	ulint		magic_n;\/*!< FIL_SPACE_MAGIC_N *\/$/;"	m	struct:fil_space_t
magic_n	include/hash0hash.h	/^	ulint			magic_n;$/;"	m	struct:hash_table_t
magic_n	include/mem0mem.h	/^	ulint	magic_n;\/* magic number for debugging *\/$/;"	m	struct:mem_block_info_t
magic_n	include/que0que.h	/^	ulint		magic_n;	\/*!< magic number to catch memory$/;"	m	struct:que_thr_t
magic_n	include/row0ins.h	/^	ulint		magic_n;$/;"	m	struct:ins_node_t
magic_n	include/row0mysql.h	/^	ulint		magic_n;	\/*!< this magic number is set to$/;"	m	struct:row_prebuilt_t
magic_n	include/row0upd.h	/^	ulint		magic_n;$/;"	m	struct:upd_node_t
magic_n	include/sync0rw.h	/^	ulint		magic_n;$/;"	m	struct:rw_lock_t
magic_n	include/trx0trx.h	/^	ulint		magic_n;$/;"	m	struct:trx_t
magic_n2	include/row0mysql.h	/^	ulint		magic_n2;	\/*!< this should be the same as$/;"	m	struct:row_prebuilt_t
make_abs_file_path	log/log0recv.cc	/^make_abs_file_path($/;"	f	file:
make_abs_path	fil/fil0fil.cc	/^Folder::make_abs_path()$/;"	f	class:Folder
make_filepath	fsp/fsp0file.cc	/^Datafile::make_filepath($/;"	f	class:Datafile
make_path	fil/fil0fil.cc	/^Folder::make_path(const char* path, size_t len)$/;"	f	class:Folder
make_trx_hit_list	lock/lock0lock.cc	/^RecLock::make_trx_hit_list($/;"	f	class:RecLock
malloc	include/fts0ast.h	34;"	d
malloc	pars/lexyy.cc	964;"	d	file:
mark	include/trx0purge.h	/^		void mark(ulint undo_id)$/;"	f	class:undo::Truncate
mark_all_entries	gis/gis0geo.cc	/^mark_all_entries($/;"	f	file:
mark_trx_for_rollback	lock/lock0lock.cc	/^RecLock::mark_trx_for_rollback(trx_t* trx)$/;"	f	class:RecLock
master_key_id	include/os0file.h	/^	static ulint		master_key_id;$/;"	m	struct:Encryption
master_key_id	os/os0file.cc	/^ulint	Encryption::master_key_id = 0;$/;"	m	class:Encryption	file:
master_key_id_mutex	handler/ha_innodb.cc	/^ib_mutex_t	master_key_id_mutex;$/;"	v
master_key_id_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	master_key_id_mutex_key;$/;"	v
match	fts/fts0que.cc	/^	const fts_match_t*	match;$/;"	m	struct:fts_phrase_t	file:
match	row/row0trunc.cc	/^	bool match(mtr_t* mtr, btr_pcur_t* pcur) const$/;"	f	class:Callback
match_array	fts/fts0que.cc	/^	ib_vector_t**	match_array;	\/*!< Used for proximity search, contains$/;"	m	struct:fts_query_t	file:
match_mode	api/api0api.cc	/^	ib_match_mode_t	match_mode;	\/*!< ib_cursor_moveto match mode *\/$/;"	m	struct:ib_cursor_t	file:
matched	fts/fts0que.cc	/^	ib_vector_t*	matched;	\/*!< Array of matching documents$/;"	m	struct:fts_query_t	file:
matched_rec	include/gis0type.h	/^typedef	struct matched_rec {$/;"	s
matched_rec_t	include/gis0type.h	/^} matched_rec_t;$/;"	t	typeref:struct:matched_rec
matched_recs	include/gis0type.h	/^	rtr_rec_vector*	matched_recs;	\/*!< vector holding the matching rec *\/$/;"	m	struct:matched_rec
matches	include/gis0type.h	/^	matched_rec_t*	matches;\/*!< struct holding matching leaf records *\/$/;"	m	struct:rtr_info
max_assigned_id	fil/fil0fil.cc	/^	ulint		max_assigned_id;\/*!< maximum space id in the existing$/;"	m	struct:fil_system_t	file:
max_autoinc	handler/handler0alter.cc	/^	ulonglong	max_autoinc;$/;"	m	struct:ha_innobase_inplace_ctx	file:
max_buf_free	include/log0log.h	/^	ulint		max_buf_free;	\/*!< recommended maximum value of$/;"	m	struct:log_t
max_cache_size	include/fts0types.h	/^	ulint		max_cache_size;	\/*!< Max size in bytes of the cache *\/$/;"	m	struct:fts_sync_t
max_checkpoint_age	include/log0log.h	/^	lsn_t		max_checkpoint_age;$/;"	m	struct:log_t
max_checkpoint_age_async	include/log0log.h	/^	lsn_t		max_checkpoint_age_async;$/;"	m	struct:log_t
max_doc_id	include/fts0types.h	/^	doc_id_t	max_doc_id;	\/*!< The doc id at which the cache was$/;"	m	struct:fts_sync_t
max_len	include/row0ext.h	/^	ulint		max_len;\/*!< maximum prefix length, it could be$/;"	m	struct:row_ext_t
max_lsn	include/fil0fil.h	/^	lsn_t		max_lsn;$/;"	m	struct:fil_space_t
max_modified_age_async	include/log0log.h	/^	lsn_t		max_modified_age_async;$/;"	m	struct:log_t
max_modified_age_sync	include/log0log.h	/^	lsn_t		max_modified_age_sync;$/;"	m	struct:log_t
max_n_open	fil/fil0fil.cc	/^	ulint		max_n_open;	\/*!< n_open is not allowed to exceed$/;"	m	struct:fil_system_t	file:
max_pos	fts/fts0que.cc	/^	pos_vector_t	max_pos;	\/*!< the maximum position (in bytes)$/;"	m	struct:fts_proximity_t	file:
max_prefix	include/dict0mem.h	/^	unsigned	max_prefix:12;	\/*!< maximum index prefix length on$/;"	m	struct:dict_col_t
max_size	include/fil0fil.h	/^	ulint		max_size;$/;"	m	struct:fil_node_t
max_size	include/ibuf0ibuf.ic	/^	ulint		max_size;	\/*!< recommended maximum size of the$/;"	m	struct:ibuf_t	file:
max_size	include/mem0mem.h	/^	size_type max_size() const$/;"	f	class:mem_heap_allocator
max_size	include/trx0rseg.h	/^	ulint				max_size;$/;"	m	struct:trx_rseg_t
max_size	include/ut0new.h	/^	max_size() const$/;"	f	class:ut_allocator
max_supported_key_length	handler/ha_innodb.cc	/^ha_innobase::max_supported_key_length() const$/;"	f	class:ha_innobase
max_supported_key_part_length	handler/ha_innodb.cc	/^ha_innobase::max_supported_key_part_length(HA_CREATE_INFO *create_info) const$/;"	f	class:ha_innobase
max_supported_keys	handler/ha_innodb.cc	/^ha_innobase::max_supported_keys() const$/;"	f	class:ha_innobase
max_trx	row/row0log.cc	/^	trx_id_t	max_trx;\/*!< biggest observed trx_id in$/;"	m	struct:row_log_t	file:
max_trx_id	include/trx0sys.h	/^			max_trx_id;	\/*!< The smallest number not yet$/;"	m	struct:trx_sys_t
max_tuples	include/row0merge.h	/^	ulint		max_tuples;	\/*!< maximum number of data tuples *\/$/;"	m	struct:row_merge_buf_t
max_words	fts/fts0opt.cc	/^	ulint		max_words;	\/*!< maximum number of words to read$/;"	m	struct:fts_zip_t	file:
mbmaxlen	include/row0mysql.h	/^	ulint	mbmaxlen;		\/*!< maximum length of a char, in bytes,$/;"	m	struct:mysql_row_templ_t
mbminlen	include/row0mysql.h	/^	ulint	mbminlen;		\/*!< minimum length of a char, in bytes,$/;"	m	struct:mysql_row_templ_t
mbminmaxlen	include/data0type.h	/^	unsigned	mbminmaxlen:5;	\/*!< minimum and maximum length of a$/;"	m	struct:dtype_t
mbminmaxlen	include/dict0mem.h	/^	unsigned	mbminmaxlen:5;	\/*!< minimum and maximum length of a$/;"	m	struct:dict_col_t
mbr	include/gis0type.h	/^	rtr_mbr_t	mbr;	\/*!< the search MBR *\/$/;"	m	struct:rtr_info
mbr_adj	include/gis0type.h	/^	bool		mbr_adj;\/*!< whether mbr will need to be enlarged$/;"	m	struct:rtr_info
mbr_inc	include/gis0type.h	/^	double		mbr_inc;	\/*!< whether this node needs to be$/;"	m	struct:node_visit
mbr_join	gis/gis0geo.cc	/^mbr_join($/;"	f	file:
mbr_join_square	gis/gis0geo.cc	/^mbr_join_square($/;"	f	file:
mem	include/buf0buf.ic	/^	unsigned char*	mem;		\/*!< pointer to the memory area which$/;"	m	struct:buf_chunk_t	file:
mem0mem_h	include/mem0mem.h	27;"	d
mem_allocd	trx/trx0i_s.cc	/^	ulint		mem_allocd;	\/*!< the amount of memory$/;"	m	struct:trx_i_s_cache_t	file:
mem_block_get_free	include/mem0mem.ic	/^mem_block_get_free(mem_block_t* block)$/;"	f
mem_block_get_len	include/mem0mem.ic	/^mem_block_get_len(mem_block_t* block)$/;"	f
mem_block_get_start	include/mem0mem.ic	/^mem_block_get_start(mem_block_t* block)$/;"	f
mem_block_get_type	include/mem0mem.ic	/^mem_block_get_type(mem_block_t* block)$/;"	f
mem_block_info_t	include/mem0mem.h	/^struct mem_block_info_t {$/;"	s
mem_block_set_free	include/mem0mem.ic	/^mem_block_set_free(mem_block_t* block, ulint free)$/;"	f
mem_block_set_len	include/mem0mem.ic	/^mem_block_set_len(mem_block_t* block, ulint len)$/;"	f
mem_block_set_start	include/mem0mem.ic	/^mem_block_set_start(mem_block_t* block, ulint start)$/;"	f
mem_block_set_type	include/mem0mem.ic	/^mem_block_set_type(mem_block_t* block, ulint type)$/;"	f
mem_block_t	include/mem0mem.h	/^typedef struct mem_block_info_t	mem_block_t;$/;"	t	typeref:struct:mem_block_info_t
mem_block_validate	include/mem0mem.ic	/^mem_block_validate($/;"	f
mem_free	include/ut0pool.h	/^	static void mem_free(value_type* ptr)$/;"	f	struct:Pool
mem_free	include/ut0pool.h	/^	static void mem_free(value_type* ptr)$/;"	f	struct:PoolManager
mem_heap_add_block	mem/mem0mem.cc	/^mem_heap_add_block($/;"	f
mem_heap_alloc	include/mem0mem.ic	/^mem_heap_alloc($/;"	f
mem_heap_allocator	include/mem0mem.h	/^	mem_heap_allocator (const mem_heap_allocator<U>& other)$/;"	f	class:mem_heap_allocator
mem_heap_allocator	include/mem0mem.h	/^	mem_heap_allocator(const mem_heap_allocator& other)$/;"	f	class:mem_heap_allocator
mem_heap_allocator	include/mem0mem.h	/^	mem_heap_allocator(mem_heap_t* heap) : m_heap(heap) { }$/;"	f	class:mem_heap_allocator
mem_heap_allocator	include/mem0mem.h	/^class mem_heap_allocator$/;"	c
mem_heap_block_free	mem/mem0mem.cc	/^mem_heap_block_free($/;"	f
mem_heap_create	include/mem0mem.h	86;"	d
mem_heap_create	include/mem0mem.h	98;"	d
mem_heap_create_at	include/mem0mem.ic	31;"	d	file:
mem_heap_create_at	include/mem0mem.ic	36;"	d	file:
mem_heap_create_block	include/mem0mem.ic	29;"	d	file:
mem_heap_create_block	include/mem0mem.ic	34;"	d	file:
mem_heap_create_block_func	mem/mem0mem.cc	/^mem_heap_create_block_func($/;"	f
mem_heap_create_func	include/mem0mem.ic	/^mem_heap_create_func($/;"	f
mem_heap_create_typed	include/mem0mem.h	103;"	d
mem_heap_create_typed	include/mem0mem.h	92;"	d
mem_heap_dup	mem/mem0mem.cc	/^mem_heap_dup($/;"	f
mem_heap_dup_replace	include/mem0mem.ic	/^mem_heap_dup_replace($/;"	f
mem_heap_empty	include/mem0mem.ic	/^mem_heap_empty($/;"	f
mem_heap_free	include/mem0mem.ic	/^mem_heap_free($/;"	f
mem_heap_free_block_free	mem/mem0mem.cc	/^mem_heap_free_block_free($/;"	f
mem_heap_free_heap_top	include/mem0mem.ic	/^mem_heap_free_heap_top($/;"	f
mem_heap_free_top	include/mem0mem.ic	/^mem_heap_free_top($/;"	f
mem_heap_get_heap_top	include/mem0mem.ic	/^mem_heap_get_heap_top($/;"	f
mem_heap_get_size	include/mem0mem.ic	/^mem_heap_get_size($/;"	f
mem_heap_get_top	include/mem0mem.ic	/^mem_heap_get_top($/;"	f
mem_heap_is_top	include/mem0mem.ic	/^mem_heap_is_top($/;"	f
mem_heap_printf	mem/mem0mem.cc	/^mem_heap_printf($/;"	f
mem_heap_printf_low	mem/mem0mem.cc	/^mem_heap_printf_low($/;"	f	file:
mem_heap_replace	include/mem0mem.ic	/^mem_heap_replace($/;"	f
mem_heap_strcat	mem/mem0mem.cc	/^mem_heap_strcat($/;"	f
mem_heap_strdup	mem/mem0mem.cc	/^mem_heap_strdup($/;"	f
mem_heap_strdup_replace	include/mem0mem.ic	/^mem_heap_strdup_replace($/;"	f
mem_heap_strdupl	include/mem0mem.ic	/^mem_heap_strdupl($/;"	f
mem_heap_t	include/mem0mem.h	/^typedef mem_block_t		mem_heap_t;$/;"	t
mem_heap_validate	mem/mem0mem.cc	/^mem_heap_validate($/;"	f
mem_heap_zalloc	include/mem0mem.ic	/^mem_heap_zalloc($/;"	f
mem_key_ahi	ut/ut0new.cc	/^PSI_memory_key	mem_key_ahi;$/;"	v
mem_key_buf_buf_pool	ut/ut0new.cc	/^PSI_memory_key	mem_key_buf_buf_pool;$/;"	v
mem_key_dict_stats_bg_recalc_pool_t	ut/ut0new.cc	/^PSI_memory_key	mem_key_dict_stats_bg_recalc_pool_t;$/;"	v
mem_key_dict_stats_index_map_t	ut/ut0new.cc	/^PSI_memory_key	mem_key_dict_stats_index_map_t;$/;"	v
mem_key_dict_stats_n_diff_on_level	ut/ut0new.cc	/^PSI_memory_key	mem_key_dict_stats_n_diff_on_level;$/;"	v
mem_key_other	ut/ut0new.cc	/^PSI_memory_key	mem_key_other;$/;"	v
mem_key_partitioning	ut/ut0new.cc	/^PSI_memory_key	mem_key_partitioning;$/;"	v
mem_key_row_log_buf	ut/ut0new.cc	/^PSI_memory_key	mem_key_row_log_buf;$/;"	v
mem_key_row_merge_sort	ut/ut0new.cc	/^PSI_memory_key	mem_key_row_merge_sort;$/;"	v
mem_key_std	ut/ut0new.cc	/^PSI_memory_key	mem_key_std;$/;"	v
mem_key_trx_sys_t_rw_trx_ids	ut/ut0new.cc	/^PSI_memory_key	mem_key_trx_sys_t_rw_trx_ids;$/;"	v
mem_keys_auto	ut/ut0new.cc	/^static mem_keys_auto_t	mem_keys_auto;$/;"	v	file:
mem_keys_auto_t	ut/ut0new.cc	/^	mem_keys_auto_t;$/;"	t	file:
mem_malloc	include/ut0vec.h	/^	ib_mem_alloc_t	mem_malloc;	\/* For allocating memory *\/$/;"	m	struct:ib_alloc_t
mem_pfx	include/buf0buf.ic	/^	ut_new_pfx_t	mem_pfx;	\/*!< Auxiliary structure, describing$/;"	m	struct:buf_chunk_t	file:
mem_release	include/ut0vec.h	/^	ib_mem_free_t	mem_release;	\/* For freeing memory *\/$/;"	m	struct:ib_alloc_t
mem_resize	include/ut0vec.h	/^	ib_mem_resize_t	mem_resize;	\/* For resizing memory *\/$/;"	m	struct:ib_alloc_t
mem_size	include/buf0buf.ic	/^	size_t	mem_size() const {$/;"	f	struct:buf_chunk_t
mem_strdup	include/mem0mem.ic	/^mem_strdup($/;"	f
mem_strdupl	include/mem0mem.ic	/^mem_strdupl($/;"	f
memcached_sync_count	include/dict0mem.h	/^	lint					memcached_sync_count;$/;"	m	struct:dict_table_t
memo_block_unfix	mtr/mtr0mtr.cc	/^memo_block_unfix(mtr_memo_slot_t* slot)$/;"	f	file:
memo_contains	mtr/mtr0mtr.cc	/^mtr_t::memo_contains($/;"	f	class:mtr_t
memo_contains_flagged	mtr/mtr0mtr.cc	/^mtr_t::memo_contains_flagged(const void* ptr, ulint flags) const$/;"	f	class:mtr_t
memo_contains_page_flagged	mtr/mtr0mtr.cc	/^mtr_t::memo_contains_page_flagged($/;"	f	class:mtr_t
memo_latch_release	mtr/mtr0mtr.cc	/^memo_latch_release(mtr_memo_slot_t* slot)$/;"	f	file:
memo_modify_page	mtr/mtr0mtr.cc	/^mtr_t::memo_modify_page(const byte* ptr)$/;"	f	class:mtr_t
memo_push	include/mtr0mtr.ic	/^mtr_t::memo_push(void* object, mtr_memo_type_t type)$/;"	f	class:mtr_t
memo_release	mtr/mtr0mtr.cc	/^mtr_t::memo_release(const void* object, ulint type)$/;"	f	class:mtr_t
memo_slot_release	mtr/mtr0mtr.cc	/^memo_slot_release(mtr_memo_slot_t* slot)$/;"	f	file:
memory_used	include/row0ftsort.h	/^	ulint			memory_used;	\/*!< memory used by fts_doc_list *\/$/;"	m	struct:fts_psort_t
merge	os/os0file.cc	/^	void merge()$/;"	f	class:SimulatedAIOHandler
merge_adjacent	os/os0file.cc	/^	bool merge_adjacent(Slot*& current)$/;"	f	class:SimulatedAIOHandler	file:
merge_block	include/row0ftsort.h	/^	row_merge_block_t*	merge_block[FTS_NUM_AUX_INDEX];$/;"	m	struct:fts_psort_t
merge_buf	include/row0ftsort.h	/^	row_merge_buf_t*	merge_buf[FTS_NUM_AUX_INDEX];$/;"	m	struct:fts_psort_t
merge_event	include/row0ftsort.h	/^	os_event_t		merge_event;	\/*!< merge event *\/$/;"	m	struct:fts_psort_common_t
merge_file	include/row0ftsort.h	/^	merge_file_t*		merge_file[FTS_NUM_AUX_INDEX];$/;"	m	struct:fts_psort_t
merge_file_t	include/row0merge.h	/^struct merge_file_t {$/;"	s
merge_threshold	include/dict0mem.h	/^	unsigned	merge_threshold:6;$/;"	m	struct:dict_index_t
meta_t	include/os0file.h	/^	struct meta_t {$/;"	s	struct:Compression
min_doc_id	include/fts0types.h	/^	doc_id_t	min_doc_id;	\/*!< The smallest doc id added to the$/;"	m	struct:fts_sync_t
min_pos	fts/fts0que.cc	/^	pos_vector_t	min_pos;	\/*!< the minimum position (in bytes)$/;"	m	struct:fts_proximity_t	file:
min_pos	fts/fts0que.cc	/^	ulint		min_pos;	\/*!< For found to be TRUE at least$/;"	m	struct:fts_select_t	file:
misc_word_char	handler/ha_innodb.cc	6542;"	d	file:
misc_word_char	include/fts0tokenize.h	35;"	d
mlog_catenate_string	mtr/mtr0log.cc	/^mlog_catenate_string($/;"	f
mlog_catenate_ulint	include/mtr0log.ic	/^mlog_catenate_ulint($/;"	f
mlog_catenate_ulint_compressed	include/mtr0log.ic	/^mlog_catenate_ulint_compressed($/;"	f
mlog_catenate_ull_compressed	include/mtr0log.ic	/^mlog_catenate_ull_compressed($/;"	f
mlog_checkpoint_lsn	include/log0recv.h	/^	lsn_t		mlog_checkpoint_lsn;$/;"	m	struct:recv_sys_t
mlog_close	include/mtr0log.ic	/^mlog_close($/;"	f
mlog_id_t	include/mtr0types.h	/^enum mlog_id_t {$/;"	g
mlog_log_string	mtr/mtr0log.cc	/^mlog_log_string($/;"	f
mlog_open	include/mtr0log.ic	/^mlog_open($/;"	f
mlog_open_and_write_index	mtr/mtr0log.cc	/^mlog_open_and_write_index($/;"	f
mlog_parse_index	mtr/mtr0log.cc	/^mlog_parse_index($/;"	f
mlog_parse_initial_log_record	mtr/mtr0log.cc	/^mlog_parse_initial_log_record($/;"	f
mlog_parse_nbytes	mtr/mtr0log.cc	/^mlog_parse_nbytes($/;"	f
mlog_parse_string	mtr/mtr0log.cc	/^mlog_parse_string($/;"	f
mlog_write_initial_log_record	include/mtr0log.h	182;"	d
mlog_write_initial_log_record	mtr/mtr0log.cc	/^mlog_write_initial_log_record($/;"	f
mlog_write_initial_log_record_fast	include/mtr0log.h	183;"	d
mlog_write_initial_log_record_fast	include/mtr0log.ic	/^mlog_write_initial_log_record_fast($/;"	f
mlog_write_initial_log_record_low	include/mtr0log.ic	/^mlog_write_initial_log_record_low($/;"	f
mlog_write_string	mtr/mtr0log.cc	/^mlog_write_string($/;"	f
mlog_write_ulint	mtr/mtr0log.cc	/^mlog_write_ulint($/;"	f
mlog_write_ull	mtr/mtr0log.cc	/^mlog_write_ull($/;"	f
mod_tables	include/trx0trx.h	/^	trx_mod_tables_t mod_tables;	\/*!< List of tables that were modified$/;"	m	struct:trx_t
mode	include/lock0lock.h	/^	lock_mode	mode;	\/*!< lock mode *\/$/;"	m	struct:lock_op_t
mode	include/lock0priv.h	/^	enum lock_mode mode() const$/;"	f	struct:lock_t
mode	include/row0sel.h	/^	page_cur_mode_t	mode;		\/*!< search mode: PAGE_CUR_G, ... *\/$/;"	m	struct:plan_t
modification_counter	fil/fil0fil.cc	/^	int64_t		modification_counter;\/*!< when we write to a file we$/;"	m	struct:fil_system_t	file:
modification_counter	include/fil0fil.h	/^	int64_t		modification_counter;$/;"	m	struct:fil_node_t
modify_clock	include/btr0pcur.h	/^	ib_uint64_t	modify_clock;$/;"	m	struct:btr_pcur_t
modify_clock	include/buf0buf.h	/^	ib_uint64_t	modify_clock;	\/*!< this clock is incremented every$/;"	m	struct:buf_block_t
mon_last_value	include/srv0mon.h	/^	mon_type_t	mon_last_value;	\/*!< Last set of values *\/$/;"	m	struct:monitor_value_t
mon_max_value	include/srv0mon.h	/^	mon_type_t	mon_max_value;	\/*!< Current Max value *\/$/;"	m	struct:monitor_value_t
mon_max_value_start	include/srv0mon.h	/^	mon_type_t	mon_max_value_start; \/*!< Max value since start *\/$/;"	m	struct:monitor_value_t
mon_min_value	include/srv0mon.h	/^	mon_type_t	mon_min_value;	\/*!< Current Min value *\/$/;"	m	struct:monitor_value_t
mon_min_value_start	include/srv0mon.h	/^	mon_type_t	mon_min_value_start; \/*!< Min value since start *\/$/;"	m	struct:monitor_value_t
mon_option_t	include/srv0mon.h	/^enum mon_option_t {$/;"	g
mon_reset_time	include/srv0mon.h	/^	ib_time_t	mon_reset_time;	\/*!< Time counter resetted *\/$/;"	m	struct:monitor_value_t
mon_start_time	include/srv0mon.h	/^	ib_time_t	mon_start_time;	\/*!< Start time of monitoring  *\/$/;"	m	struct:monitor_value_t
mon_start_value	include/srv0mon.h	/^	mon_type_t	mon_start_value;\/*!< Value at the start time *\/$/;"	m	struct:monitor_value_t
mon_status	include/srv0mon.h	/^	monitor_running_t mon_status;	\/* whether monitor still running *\/$/;"	m	struct:monitor_value_t
mon_stop_time	include/srv0mon.h	/^	ib_time_t	mon_stop_time;	\/*!< Stop time of monitoring *\/$/;"	m	struct:monitor_value_t
mon_type_t	include/srv0mon.h	/^typedef	int64_t				mon_type_t;$/;"	t
mon_value	include/srv0mon.h	/^	mon_type_t	mon_value;	\/*!< Current counter Value *\/$/;"	m	struct:monitor_value_t
mon_value_reset	include/srv0mon.h	/^	mon_type_t	mon_value_reset;\/*!< value at last reset *\/$/;"	m	struct:monitor_value_t
monitor_desc	include/srv0mon.h	/^	const char*	monitor_desc;	\/*!< Brief desc of monitor counter *\/$/;"	m	struct:monitor_info_t
monitor_id	include/srv0mon.h	/^	monitor_id_t	monitor_id;	\/*!< Monitor ID as defined in enum$/;"	m	struct:monitor_info_t
monitor_id_t	include/srv0mon.h	/^enum monitor_id_t {$/;"	g
monitor_info_t	include/srv0mon.h	/^struct monitor_info_t {$/;"	s
monitor_module	include/srv0mon.h	/^	const char*	monitor_module;	\/*!< Sub Module the monitor$/;"	m	struct:monitor_info_t
monitor_name	include/srv0mon.h	/^	const char*	monitor_name;	\/*!< Monitor name *\/$/;"	m	struct:monitor_info_t
monitor_related_id	include/srv0mon.h	/^	monitor_id_t	monitor_related_id;\/*!< Monitor ID of counter that$/;"	m	struct:monitor_info_t
monitor_running_status	include/srv0mon.h	/^enum monitor_running_status {$/;"	g
monitor_running_t	include/srv0mon.h	/^typedef enum monitor_running_status	monitor_running_t;$/;"	t	typeref:enum:monitor_running_status
monitor_set_tbl	srv/srv0mon.cc	/^ulint		monitor_set_tbl[(NUM_MONITOR + NUM_BITS_ULINT$/;"	v
monitor_type	include/srv0mon.h	/^	monitor_type_t	monitor_type;	\/*!< Type of Monitor Info *\/$/;"	m	struct:monitor_info_t
monitor_type_t	include/srv0mon.h	/^enum monitor_type_t {$/;"	g
monitor_value_t	include/srv0mon.h	/^struct monitor_value_t {$/;"	s
moved	include/gis0type.h	/^	bool		moved;		\/*!< whether lock are moved too *\/$/;"	m	struct:rtr_rec_move
mrec_buf_t	include/row0merge.h	/^typedef byte	mrec_buf_t[UNIV_PAGE_SIZE_MAX];$/;"	t
mrec_t	include/row0merge.h	/^typedef byte	mrec_t;$/;"	t
mtime	include/os0file.h	/^	time_t		mtime;			\/*!< modification time *\/$/;"	m	struct:os_file_stat_t
mtr	include/dict0mem.h	/^	mtr_t		mtr;$/;"	m	class:last_ops_cur_t
mtr0log_h	include/mtr0log.h	27;"	d
mtr0mtr_h	include/mtr0mtr.h	28;"	d
mtr0types_h	include/mtr0types.h	27;"	d
mtr_block_dirtied	include/mtr0mtr.h	147;"	d
mtr_block_sx_latch_at_savepoint	include/mtr0mtr.h	138;"	d
mtr_block_x_latch_at_savepoint	include/mtr0mtr.h	141;"	d
mtr_buf_copy_t	include/dyn0buf.h	/^struct mtr_buf_copy_t {$/;"	s
mtr_buf_t	include/dyn0buf.h	/^typedef dyn_buf_t<DYN_ARRAY_DATA_SIZE> mtr_buf_t;$/;"	t
mtr_commit	include/mtr0mtr.h	47;"	d
mtr_get_flush_observer	include/mtr0mtr.h	68;"	d
mtr_get_log	include/mtr0mtr.h	112;"	d
mtr_get_log_mode	include/mtr0mtr.h	60;"	d
mtr_is_block_fix	include/mtr0mtr.h	86;"	d
mtr_is_page_fix	include/mtr0mtr.h	92;"	d
mtr_log_t	include/mtr0types.h	/^enum mtr_log_t {$/;"	g
mtr_memo_contains	include/mtr0mtr.h	98;"	d
mtr_memo_contains_flagged	include/mtr0mtr.h	129;"	d
mtr_memo_contains_page	include/mtr0mtr.h	103;"	d
mtr_memo_contains_page_flagged	include/mtr0mtr.h	132;"	d
mtr_memo_push	include/mtr0mtr.h	115;"	d
mtr_memo_release	include/mtr0mtr.h	79;"	d
mtr_memo_slot_t	include/mtr0mtr.h	/^struct mtr_memo_slot_t {$/;"	s
mtr_memo_type_t	include/mtr0types.h	/^enum mtr_memo_type_t {$/;"	g
mtr_print	include/mtr0mtr.h	108;"	d
mtr_read_ulint	include/mtr0mtr.h	75;"	d
mtr_release_block_at_savepoint	include/mtr0mtr.h	135;"	d
mtr_release_s_latch_at_savepoint	include/mtr0mtr.h	55;"	d
mtr_s_lock	include/mtr0mtr.h	118;"	d
mtr_set_flush_observer	include/mtr0mtr.h	71;"	d
mtr_set_log_mode	include/mtr0mtr.h	64;"	d
mtr_set_savepoint	include/mtr0mtr.h	51;"	d
mtr_start	include/mtr0mtr.h	38;"	d
mtr_start_ro	include/mtr0mtr.h	44;"	d
mtr_start_sync	include/mtr0mtr.h	41;"	d
mtr_state_t	include/mtr0types.h	/^enum mtr_state_t {$/;"	g
mtr_sx_lock	include/mtr0mtr.h	127;"	d
mtr_t	include/mtr0mtr.h	/^	mtr_t()$/;"	f	struct:mtr_t
mtr_t	include/mtr0mtr.h	/^struct mtr_t {$/;"	s
mtr_write_log	mtr/mtr0mtr.cc	/^mtr_write_log($/;"	f
mtr_write_log_t	mtr/mtr0mtr.cc	/^struct mtr_write_log_t {$/;"	s	file:
mtr_x_lock	include/mtr0mtr.h	121;"	d
mtr_x_lock_space	include/mtr0mtr.h	124;"	d
mtuple_t	include/row0merge.h	/^struct mtuple_t {$/;"	s
mtype	include/data0type.h	/^	unsigned	mtype:8;	\/*!< main data type *\/$/;"	m	struct:dtype_t
mtype	include/dict0dict.h	/^	ulint		mtype;		\/* required column main type *\/$/;"	m	struct:dict_col_meta_t
mtype	include/dict0mem.h	/^	unsigned	mtype:8;	\/*!< main data type *\/$/;"	m	struct:dict_col_t
multi_exist	fts/fts0que.cc	/^	bool		multi_exist;	\/*!< multiple FTS_EXIST oper *\/$/;"	m	struct:fts_query_t	file:
multi_range_read_info	handler/ha_innodb.cc	/^ha_innobase::multi_range_read_info($/;"	f	class:ha_innobase
multi_range_read_info_const	handler/ha_innodb.cc	/^ha_innobase::multi_range_read_info_const($/;"	f	class:ha_innobase
multi_range_read_init	handler/ha_innodb.cc	/^ha_innobase::multi_range_read_init($/;"	f	class:ha_innobase
multi_range_read_next	handler/ha_innodb.cc	/^ha_innobase::multi_range_read_next($/;"	f	class:ha_innobase
must_flush_log_later	include/trx0trx.h	/^	bool		must_flush_log_later;\/*!< this flag is set to TRUE in$/;"	m	struct:trx_t
must_get_clust	include/row0sel.h	/^	ibool		must_get_clust;	\/*!< TRUE if index is a non-clustered$/;"	m	struct:plan_t
mutex	buf/buf0flu.cc	/^	ib_mutex_t		mutex;		\/*!< mutex to protect whole of$/;"	m	struct:page_cleaner_t	file:
mutex	fil/fil0fil.cc	/^	ib_mutex_t	mutex;		\/*!< The mutex protecting the cache *\/$/;"	m	struct:fil_system_t	file:
mutex	include/buf0buf.h	/^	BPageMutex	mutex;		\/*!< mutex protecting this block:$/;"	m	struct:buf_block_t
mutex	include/buf0buf.h	/^	BufPoolMutex	mutex;		\/*!< Buffer pool mutex of this$/;"	m	struct:buf_pool_t
mutex	include/buf0dblwr.h	/^	ib_mutex_t	mutex;	\/*!< mutex protecting the first_free$/;"	m	struct:buf_dblwr_t
mutex	include/dict0dict.h	/^	DictSysMutex	mutex;		\/*!< mutex protecting the data$/;"	m	struct:dict_sys_t
mutex	include/dict0mem.h	/^	SysMutex*	mutex;	\/*!< mutex protecting the info *\/$/;"	m	struct:zip_pad_info_t
mutex	include/gis0type.h	/^        ib_mutex_t      mutex;          \/*!< mutex protect the seq num *\/$/;"	m	struct:rtree_ssn
mutex	include/lock0lock.h	/^	LockMutex	mutex;			\/*!< Mutex protecting the$/;"	m	struct:lock_sys_t
mutex	include/log0log.h	/^	LogSysMutex	mutex;		\/*!< mutex protecting the log *\/$/;"	m	struct:log_t
mutex	include/log0recv.h	/^	ib_mutex_t		mutex;	\/*!< mutex protecting the fields apply_log_recs,$/;"	m	struct:recv_sys_t
mutex	include/row0ftsort.h	/^	ib_mutex_t		mutex;		\/*!< mutex for fts_doc_list *\/$/;"	m	struct:fts_psort_t
mutex	include/sync0rw.h	/^	mutable ib_mutex_t mutex;$/;"	m	struct:rw_lock_t
mutex	include/trx0rseg.h	/^	RsegMutex			mutex;$/;"	m	struct:trx_rseg_t
mutex	include/trx0sys.h	/^	TrxSysMutex	mutex;		\/*!< mutex protecting most fields in$/;"	m	struct:trx_sys_t
mutex	include/trx0trx.h	/^	TrxMutex	mutex;		\/*!< Mutex protecting the fields$/;"	m	struct:trx_t
mutex	os/os0event.cc	/^	EventMutex		mutex;		\/*!< this mutex protects$/;"	m	struct:os_event	file:
mutex	row/row0log.cc	/^	ib_mutex_t	mutex;	\/*!< mutex protecting error,$/;"	m	struct:row_log_t	file:
mutex	srv/srv0srv.cc	/^	ib_mutex_t	mutex;			\/*!< variable protecting the$/;"	m	struct:srv_sys_t	file:
mutex	sync/sync0arr.cc	/^	SysMutex	mutex;		\/*!< System mutex protecting the$/;"	m	struct:sync_array_t	file:
mutex	sync/sync0arr.cc	/^	WaitMutex*	mutex;$/;"	m	union:sync_object_t	file:
mutex	trx/trx0sys.cc	/^	ib_mutex_t		mutex;		\/*!< covers changes to the above$/;"	m	struct:file_format_t	file:
mutex	ut/ut0wqueue.cc	/^	ib_mutex_t	mutex;	\/*!< mutex protecting everything *\/$/;"	m	struct:ib_wqueue_t	file:
mutex_create	include/ut0mutex.h	105;"	d
mutex_created	include/dict0mem.h	/^			mutex_created;$/;"	m	struct:zip_pad_info_t
mutex_destroy	include/ut0mutex.h	/^void mutex_destroy($/;"	f
mutex_enter	include/ut0mutex.h	107;"	d
mutex_enter_nospin	include/ut0mutex.h	112;"	d
mutex_enter_nowait	include/ut0mutex.h	117;"	d
mutex_exit	include/ut0mutex.h	119;"	d
mutex_exit_forbidden	include/buf0buf.h	/^	ulint		mutex_exit_forbidden; \/*!< Forbid release mutex *\/$/;"	m	struct:buf_pool_t
mutex_free	include/ut0mutex.h	121;"	d
mutex_init	include/ut0mutex.h	/^void mutex_init($/;"	f
mutex_list_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	mutex_list_mutex_key;$/;"	v
mutex_monitor	sync/sync0sync.cc	/^MutexMonitor*	mutex_monitor;$/;"	v
mutex_own	include/ut0mutex.h	131;"	d
mutex_own	include/ut0mutex.h	133;"	d
mutex_state_t	include/sync0types.h	/^enum mutex_state_t {$/;"	g
mutex_validate	include/ut0mutex.h	126;"	d
mutex_validate	include/ut0mutex.h	134;"	d
mutexes	include/hash0hash.h	/^		ib_mutex_t*	mutexes;\/* NULL, or an array of mutexes$/;"	m	union:hash_table_t::__anon23
mvcc	include/trx0sys.h	/^	MVCC*		mvcc;		\/*!< Multi version concurrency control$/;"	m	struct:trx_sys_t
my_error_innodb	handler/handler0alter.cc	/^my_error_innodb($/;"	f	file:
my_gcolumn_templatecallback_t	handler/ha_innodb.h	/^typedef void (*my_gcolumn_templatecallback_t)(const TABLE*, void*);$/;"	t
mysql_binlog_cache_pos	include/trx0roll.h	/^	int64_t		mysql_binlog_cache_pos;$/;"	m	struct:trx_named_savept_t
mysql_col_len	include/row0mysql.h	/^	ulint	mysql_col_len;		\/*!< length of the column in the MySQL$/;"	m	struct:mysql_row_templ_t
mysql_col_offset	include/row0mysql.h	/^	ulint	mysql_col_offset;	\/*!< offset of the column in the MySQL$/;"	m	struct:mysql_row_templ_t
mysql_declare_plugin	handler/ha_innodb.cc	/^mysql_declare_plugin(innobase)$/;"	f
mysql_declare_plugin_end	handler/ha_innodb.cc	/^mysql_declare_plugin_end;$/;"	v
mysql_length_bytes	include/row0mysql.h	/^	ulint	mysql_length_bytes;	\/*!< if mysql_type$/;"	m	struct:mysql_row_templ_t
mysql_log_file_name	include/trx0trx.h	/^	const char*	mysql_log_file_name;$/;"	m	struct:trx_t
mysql_log_offset	include/trx0trx.h	/^	int64_t		mysql_log_offset;$/;"	m	struct:trx_t
mysql_n_tables_locked	include/trx0trx.h	/^	ib_uint32_t	mysql_n_tables_locked;$/;"	m	struct:trx_t
mysql_null_bit_mask	include/row0mysql.h	/^	ulint	mysql_null_bit_mask;	\/*!< bit mask to get the NULL bit,$/;"	m	struct:mysql_row_templ_t
mysql_null_byte_offset	include/row0mysql.h	/^	ulint	mysql_null_byte_offset;	\/*!< MySQL NULL bit byte offset in a$/;"	m	struct:mysql_row_templ_t
mysql_pfs_key_t	include/os0thread.h	/^        mysql_pfs_key_t() {$/;"	f	struct:mysql_pfs_key_t
mysql_pfs_key_t	include/os0thread.h	/^        mysql_pfs_key_t(unsigned int    val) : m_value(val) {}$/;"	f	struct:mysql_pfs_key_t
mysql_pfs_key_t	include/os0thread.h	/^struct mysql_pfs_key_t {$/;"	s
mysql_prefix_len	include/row0mysql.h	/^	ulint		mysql_prefix_len;\/*!< byte offset of the end of$/;"	m	struct:row_prebuilt_t
mysql_row_len	include/row0mysql.h	/^	ulint		mysql_row_len;	\/*!< length in bytes of a row in the$/;"	m	struct:row_prebuilt_t
mysql_row_templ_t	include/row0mysql.h	/^struct mysql_row_templ_t {$/;"	s
mysql_template	include/row0mysql.h	/^	mysql_row_templ_t* mysql_template;\/*!< template used to transform$/;"	m	struct:row_prebuilt_t
mysql_thd	include/trx0trx.h	/^	THD*		mysql_thd;	\/*!< MySQL thread handle corresponding$/;"	m	struct:trx_t
mysql_trx_list	include/trx0sys.h	/^	trx_ut_list_t	mysql_trx_list;	\/*!< List of transactions created$/;"	m	struct:trx_sys_t
mysql_trx_list	include/trx0trx.h	/^			mysql_trx_list;	\/*!< list of transactions created for$/;"	m	struct:trx_t
mysql_type	include/row0mysql.h	/^	ulint	mysql_type;		\/*!< MySQL type code; this is always$/;"	m	struct:mysql_row_templ_t
n	srv/srv0start.cc	/^static ulint		n[SRV_MAX_N_IO_THREADS + 6];$/;"	v	file:
n_active	srv/srv0conc.cc	/^	volatile lint	n_active;$/;"	m	struct:srv_conc_t	file:
n_active_thrs	include/que0que.h	/^	ulint		n_active_thrs;	\/*!< if this is the root of a graph, the$/;"	m	struct:que_fork_t
n_active_thrs	include/trx0trx.h	/^	ulint		n_active_thrs;	\/*!< number of active query threads *\/$/;"	m	struct:trx_lock_t
n_addrs	include/log0recv.h	/^	ulint		n_addrs;\/*!< number of not processed hashed file$/;"	m	struct:recv_sys_t
n_autoinc_rows	include/trx0trx.h	/^	ulint		n_autoinc_rows;	\/*!< no. of AUTO-INC rows required for$/;"	m	struct:trx_t
n_bits	include/lock0priv.h	/^	ib_uint32_t	n_bits;		\/*!< number of bits in the lock$/;"	m	struct:lock_rec_t
n_blobs	include/page0types.h	/^	unsigned	n_blobs:12;	\/*!< number of externally stored$/;"	m	struct:page_zip_des_t
n_bytes	include/btr0cur.h	/^	ulint		n_bytes;	\/*!< hash prefix bytes if hash_node !=$/;"	m	struct:btr_cur_t
n_bytes	include/btr0sea.h	/^	ulint	n_bytes;	\/*!< recommended prefix: number of bytes in$/;"	m	struct:btr_search_t
n_bytes	include/buf0buf.h	/^	volatile ulint	n_bytes;	\/*!< recommended prefix length for hash$/;"	m	struct:buf_block_t
n_bytes	os/os0file.cc	/^	DWORD			n_bytes;$/;"	m	struct:Slot	file:
n_bytes	os/os0file.cc	/^	ssize_t			n_bytes;$/;"	m	struct:Slot	file:
n_bytes	os/os0file.cc	/^	ulint			n_bytes;$/;"	m	struct:Slot	file:
n_cells	include/hash0hash.h	/^	ulint			n_cells;\/* number of cells in the hash table *\/$/;"	m	struct:hash_table_t
n_cells	sync/sync0arr.cc	/^	ulint		n_cells;	\/*!< number of cells in the$/;"	m	struct:sync_array_t	file:
n_chunks	include/buf0buf.h	/^	volatile ulint	n_chunks;	\/*!< number of buffer pool chunks *\/$/;"	m	struct:buf_pool_t
n_chunks_new	include/buf0buf.h	/^	volatile ulint	n_chunks_new;	\/*!< new number of buffer pool chunks *\/$/;"	m	struct:buf_pool_t
n_col	include/dict0mem.h	/^	ulint			n_col;$/;"	m	struct:dict_vcol_templ_t
n_cols	include/dict0dict.h	/^	ulint			n_cols;		\/* the number of columns the$/;"	m	struct:dict_table_schema_t
n_cols	include/dict0mem.h	/^	unsigned				n_cols:10;$/;"	m	struct:dict_table_t
n_completed	fts/fts0opt.cc	/^	ulint		n_completed;	\/*!< Number of FTS indexes that have$/;"	m	struct:fts_optimize_t	file:
n_completed	include/trx0purge.h	/^	volatile ulint	n_completed;	\/*!< Count of total tasks completed *\/$/;"	m	struct:trx_purge_t
n_def	include/dict0mem.h	/^	unsigned				n_def:10;$/;"	m	struct:dict_table_t
n_def	include/dict0mem.h	/^	unsigned	n_def:10;\/*!< number of fields defined so far *\/$/;"	m	struct:dict_index_t
n_diff_all_analyzed_pages	dict/dict0stats.cc	/^	ib_uint64_t	n_diff_all_analyzed_pages;$/;"	m	struct:n_diff_data_t	file:
n_diff_data_t	dict/dict0stats.cc	/^struct n_diff_data_t {$/;"	s	file:
n_diff_on_level	dict/dict0stats.cc	/^	ib_uint64_t	n_diff_on_level;$/;"	m	struct:n_diff_data_t	file:
n_disabled_debug	buf/buf0flu.cc	/^	ulint			n_disabled_debug;$/;"	m	struct:page_cleaner_t	file:
n_discarded_ops	include/ibuf0ibuf.ic	/^	ulint		n_discarded_ops[IBUF_OP_COUNT];$/;"	m	struct:ibuf_t	file:
n_docs	fts/fts0que.cc	/^	ulonglong		n_docs;$/;"	m	struct:fts_query_t	file:
n_dup	include/row0merge.h	/^	ulint			n_dup;	\/*!< number of duplicates *\/$/;"	m	struct:row_merge_dup_t
n_elements_allocated	include/ut0new.h	/^	n_elements_allocated($/;"	f	class:ut_allocator
n_exact_match	include/row0sel.h	/^	ulint		n_exact_match;	\/*!< number of first fields in$/;"	m	struct:plan_t
n_ext	include/row0ext.h	/^	ulint		n_ext;	\/*!< number of externally stored columns *\/$/;"	m	struct:row_ext_t
n_external_pages_sum	dict/dict0stats.cc	/^	ib_uint64_t	n_external_pages_sum;$/;"	m	struct:n_diff_data_t	file:
n_fetch_cached	include/row0mysql.h	/^	ulint		n_fetch_cached;	\/*!< number of not yet fetched rows$/;"	m	struct:row_prebuilt_t
n_fields	include/btr0cur.h	/^	ulint		n_fields;	\/*!< prefix length used in a hash$/;"	m	struct:btr_cur_t
n_fields	include/btr0sea.h	/^	ulint	n_fields;	\/*!< recommended prefix length for hash search:$/;"	m	struct:btr_search_t
n_fields	include/btr0types.h	/^	ulint			n_fields;$/;"	m	struct:btr_create_t
n_fields	include/buf0buf.h	/^	volatile ulint	n_fields;	\/*!< recommended prefix length for hash$/;"	m	struct:buf_block_t
n_fields	include/data0data.h	/^	ulint		n_fields;	\/*!< number of fields in dtuple *\/$/;"	m	struct:dtuple_t
n_fields	include/data0data.h	/^	ulint		n_fields;	\/*!< number of stored fields *\/$/;"	m	struct:big_rec_t
n_fields	include/dict0mem.h	/^	unsigned	n_fields:10;	\/*!< number of indexes' first fields$/;"	m	struct:dict_foreign_t
n_fields	include/dict0mem.h	/^	unsigned	n_fields:10;\/*!< number of fields in the index *\/$/;"	m	struct:dict_index_t
n_fields	include/page0types.h	/^	ulint		n_fields;	\/*!< number of index fields *\/$/;"	m	struct:redo_page_compress_t
n_fields	include/row0merge.h	/^	ulint		n_fields;	\/*!< number of fields in index *\/$/;"	m	struct:index_def_t
n_fields	include/row0upd.h	/^	ulint		n_fields;	\/*!< number of update fields *\/$/;"	m	struct:upd_t
n_fields_cmp	include/data0data.h	/^	ulint		n_fields_cmp;	\/*!< number of fields which should$/;"	m	struct:dtuple_t
n_files	include/log0log.h	/^	ulint				n_files;$/;"	m	struct:log_group_t
n_flush	include/buf0buf.h	/^	ulint		n_flush[BUF_FLUSH_N_TYPES];$/;"	m	struct:buf_pool_t
n_flushed_list	buf/buf0flu.cc	/^	ulint			n_flushed_list;$/;"	m	struct:page_cleaner_slot_t	file:
n_flushed_lru	buf/buf0flu.cc	/^	ulint			n_flushed_lru;$/;"	m	struct:page_cleaner_slot_t	file:
n_foreign	include/dict0dict.h	/^	ulint			n_foreign;	\/* number of foreign keys this$/;"	m	struct:dict_table_schema_t
n_foreign_key_checks_running	include/dict0mem.h	/^	ulint					n_foreign_key_checks_running;$/;"	m	struct:dict_table_t
n_hash_fail	include/btr0sea.h	/^	ulint	n_hash_fail;	\/*!< number of failed hash searches *\/$/;"	m	struct:btr_search_t
n_hash_helps	include/buf0buf.h	/^	ulint		n_hash_helps;	\/*!< counter which controls building$/;"	m	struct:buf_block_t
n_hash_potential	include/btr0sea.h	/^	ulint	n_hash_potential;$/;"	m	struct:btr_search_t
n_hash_succ	include/btr0sea.h	/^	ulint	n_hash_succ;	\/*!< number of successful hash searches thus$/;"	m	struct:btr_search_t
n_io_buffers	fil/fil0fil.cc	/^	ulint		n_io_buffers;		\/*!< Number of pages to use$/;"	m	struct:fil_iterator_t	file:
n_leaf_pages_to_analyze	dict/dict0stats.cc	/^	ib_uint64_t	n_leaf_pages_to_analyze;$/;"	m	struct:n_diff_data_t	file:
n_lock_max_wait_time	include/lock0lock.h	/^	ulint		n_lock_max_wait_time;	\/*!< Max wait time *\/$/;"	m	struct:lock_sys_t
n_lock_wait_count	include/srv0srv.h	/^	ulint_ctr_1_t		n_lock_wait_count;$/;"	m	struct:srv_stats_t
n_lock_wait_current_count	include/srv0srv.h	/^	lint_ctr_1_t		n_lock_wait_current_count;$/;"	m	struct:srv_stats_t
n_lock_wait_time	include/srv0srv.h	/^	int64_ctr_1_t		n_lock_wait_time;$/;"	m	struct:srv_stats_t
n_log_ios	include/log0log.h	/^	ulint		n_log_ios;	\/*!< number of log i\/os initiated thus$/;"	m	struct:log_t
n_log_ios_old	include/log0log.h	/^	ulint		n_log_ios_old;	\/*!< number of log i\/o's at the$/;"	m	struct:log_t
n_merged_ops	include/ibuf0ibuf.ic	/^	ulint		n_merged_ops[IBUF_OP_COUNT];$/;"	m	struct:ibuf_t	file:
n_merges	include/ibuf0ibuf.ic	/^	ulint		n_merges;	\/*!< number of pages merged *\/$/;"	m	struct:ibuf_t	file:
n_mysql_tables_in_use	include/trx0trx.h	/^	ib_uint32_t	n_mysql_tables_in_use; \/*!< number of Innobase tables$/;"	m	struct:trx_t
n_node	include/gis0geo.h	/^	int	n_node;		\/* which group in.*\/$/;"	m	struct:rtr_split_node_t
n_nodes	fts/fts0fts.cc	/^ulint n_nodes = 0;$/;"	v
n_nodes	include/ut0rbt.h	/^	ulint		n_nodes;		\/* Total number of data nodes *\/$/;"	m	struct:ib_rbt_t
n_nullable	include/dict0mem.h	/^	unsigned	n_nullable:10;\/*!< number of nullable fields *\/$/;"	m	struct:dict_index_t
n_old_col	row/row0log.cc	/^	ulint		n_old_col;$/;"	m	struct:row_log_t	file:
n_old_vcol	row/row0log.cc	/^	ulint		n_old_vcol;$/;"	m	struct:row_log_t	file:
n_open	fil/fil0fil.cc	/^	ulint		n_open;		\/*!< number of files currently open *\/$/;"	m	struct:fil_system_t	file:
n_open	fil/fil0fil.cc	/^	ulint	n_open;$/;"	m	struct:Check	file:
n_page_get_delta	include/buf0buf.h	/^	ulint	n_page_get_delta;	\/*!< num of buffer pool page gets since$/;"	m	struct:buf_pool_info_t
n_page_gets	include/buf0buf.h	/^	ulint	n_page_gets;		\/*!< buf_pool->n_page_gets *\/$/;"	m	struct:buf_pool_info_t
n_page_gets	include/buf0buf.h	/^	ulint	n_page_gets;	\/*!< number of page gets performed;$/;"	m	struct:buf_pool_stat_t
n_pages_created	include/buf0buf.h	/^	ulint	n_pages_created;	\/*!< buf_pool->n_pages_created *\/$/;"	m	struct:buf_pool_info_t
n_pages_created	include/buf0buf.h	/^	ulint	n_pages_created;\/*!< number of pages created$/;"	m	struct:buf_pool_stat_t
n_pages_made_young	include/buf0buf.h	/^	ulint	n_pages_made_young;	\/*!< number of pages made young *\/$/;"	m	struct:buf_pool_info_t
n_pages_made_young	include/buf0buf.h	/^	ulint	n_pages_made_young; \/*!< number of pages made young, in$/;"	m	struct:buf_pool_stat_t
n_pages_not_made_young	include/buf0buf.h	/^	ulint	n_pages_not_made_young;	\/*!< number of pages not made young *\/$/;"	m	struct:buf_pool_info_t
n_pages_not_made_young	include/buf0buf.h	/^	ulint	n_pages_not_made_young; \/*!< number of pages not made$/;"	m	struct:buf_pool_stat_t
n_pages_read	include/buf0buf.h	/^	ulint	n_pages_read;		\/*!< buf_pool->n_pages_read *\/$/;"	m	struct:buf_pool_info_t
n_pages_read	include/buf0buf.h	/^	ulint	n_pages_read;	\/*!< number read operations *\/$/;"	m	struct:buf_pool_stat_t
n_pages_requested	buf/buf0flu.cc	/^	ulint			n_pages_requested;$/;"	m	struct:page_cleaner_slot_t	file:
n_pages_written	include/buf0buf.h	/^	ulint	n_pages_written;	\/*!< buf_pool->n_pages_written *\/$/;"	m	struct:buf_pool_info_t
n_pages_written	include/buf0buf.h	/^	ulint	n_pages_written;\/*!< number write operations *\/$/;"	m	struct:buf_pool_stat_t
n_patt_succ	include/btr0sea.h	/^	ulint	n_patt_succ;	\/*!< number of successful pattern searches thus$/;"	m	struct:btr_search_t
n_pend_reads	include/buf0buf.h	/^	ulint		n_pend_reads;	\/*!< number of pending read$/;"	m	struct:buf_pool_t
n_pend_reads	include/buf0buf.h	/^	ulint	n_pend_reads;		\/*!< buf_pool->n_pend_reads, pages$/;"	m	struct:buf_pool_info_t
n_pend_unzip	include/buf0buf.h	/^	ulint		n_pend_unzip;	\/*!< number of pending decompressions *\/$/;"	m	struct:buf_pool_t
n_pend_unzip	include/buf0buf.h	/^	ulint	n_pend_unzip;		\/*!< buf_pool->n_pend_unzip, pages$/;"	m	struct:buf_pool_info_t
n_pending	include/fil0fil.h	/^	ulint		n_pending;$/;"	m	struct:fil_node_t
n_pending_checkpoint_writes	include/log0log.h	/^	ulint		n_pending_checkpoint_writes;$/;"	m	struct:log_t
n_pending_flush_list	include/buf0buf.h	/^	ulint	n_pending_flush_list;	\/*!< Pages pending flush in FLUSH$/;"	m	struct:buf_pool_info_t
n_pending_flush_lru	include/buf0buf.h	/^	ulint	n_pending_flush_lru;	\/*!< Pages pending flush in LRU *\/$/;"	m	struct:buf_pool_info_t
n_pending_flush_single_page	include/buf0buf.h	/^	ulint	n_pending_flush_single_page;\/*!< Pages pending to be$/;"	m	struct:buf_pool_info_t
n_pending_flushes	include/fil0fil.h	/^	ulint		n_pending_flushes; \/*!< this is positive when flushing$/;"	m	struct:fil_space_t
n_pending_flushes	include/fil0fil.h	/^	ulint		n_pending_flushes;$/;"	m	struct:fil_node_t
n_pending_flushes	include/log0log.h	/^	ulint		n_pending_flushes;\/*!< number of currently$/;"	m	struct:log_t
n_pending_ops	include/fil0fil.h	/^	ulint		n_pending_ops;\/*!< this is positive when we$/;"	m	struct:fil_space_t
n_pk_recs_inc	include/ut0stage.h	/^	n_pk_recs_inc()$/;"	f	class:ut_stage_alter_t
n_pk_recs_inc	include/ut0stage.h	/^ut_stage_alter_t::n_pk_recs_inc()$/;"	f	class:ut_stage_alter_t
n_pointers	include/buf0buf.h	/^	ulint		n_pointers;	\/*!< used in debugging: the number of$/;"	m	struct:buf_block_t
n_pos	fts/fts0que.cc	/^	ulint		n_pos;		\/*!< number of position set, defines$/;"	m	struct:fts_proximity_t	file:
n_prepared_recovered_trx	include/trx0sys.h	/^	ulint		n_prepared_recovered_trx; \/*!< Number of transactions$/;"	m	struct:trx_sys_t
n_prepared_trx	include/trx0sys.h	/^	ulint		n_prepared_trx;	\/*!< Number of transactions currently$/;"	m	struct:trx_sys_t
n_ra_pages_evicted	include/buf0buf.h	/^	ulint	n_ra_pages_evicted;	\/*!< buf_pool->n_ra_pages_evicted,$/;"	m	struct:buf_pool_info_t
n_ra_pages_evicted	include/buf0buf.h	/^	ulint	n_ra_pages_evicted;\/*!< number of read ahead$/;"	m	struct:buf_pool_stat_t
n_ra_pages_read	include/buf0buf.h	/^	ulint	n_ra_pages_read;	\/*!< buf_pool->n_ra_pages_read, number$/;"	m	struct:buf_pool_info_t
n_ra_pages_read	include/buf0buf.h	/^	ulint	n_ra_pages_read;\/*!< number of pages read in$/;"	m	struct:buf_pool_stat_t
n_ra_pages_read_rnd	include/buf0buf.h	/^	ulint	n_ra_pages_read_rnd;	\/*!< buf_pool->n_ra_pages_read_rnd,$/;"	m	struct:buf_pool_info_t
n_ra_pages_read_rnd	include/buf0buf.h	/^	ulint	n_ra_pages_read_rnd;\/*!< number of pages read in$/;"	m	struct:buf_pool_stat_t
n_rec	include/row0merge.h	/^	ib_uint64_t	n_rec;		\/*!< number of records in the file *\/$/;"	m	struct:merge_file_t
n_rec_locks	include/dict0mem.h	/^	ulint					n_rec_locks;$/;"	m	struct:dict_table_t
n_rec_locks	include/trx0trx.h	/^	ulint		n_rec_locks;	\/*!< number of rec locks in this trx *\/$/;"	m	struct:trx_lock_t
n_recs	include/btr0cur.h	/^	ulint	n_recs;$/;"	m	struct:btr_path_t
n_recs	row/row0import.cc	/^	ulint		n_recs;			\/*!< Number of recs processed *\/$/;"	m	struct:discard_t	file:
n_recs_on_level	dict/dict0stats.cc	/^	ib_uint64_t	n_recs_on_level;$/;"	m	struct:n_diff_data_t	file:
n_ref	include/trx0trx.h	/^	lint		n_ref;		\/*!< Count of references, protected$/;"	m	struct:trx_t
n_ref_count	include/dict0mem.h	/^	ulint					n_ref_count;$/;"	m	struct:dict_table_t
n_referenced	include/dict0dict.h	/^	ulint			n_referenced;	\/* number of foreign keys other$/;"	m	struct:dict_table_schema_t
n_reserved	sync/sync0arr.cc	/^	ulint		n_reserved;	\/*!< number of currently reserved$/;"	m	struct:sync_array_t	file:
n_reserved_extents	include/fil0fil.h	/^	ulint		n_reserved_extents;$/;"	m	struct:fil_space_t
n_rounds	include/dict0mem.h	/^	ulint		n_rounds;\/*!< number of currently successful$/;"	m	struct:zip_pad_info_t
n_rows_deleted	include/srv0srv.h	/^	ulint_ctr_64_t		n_rows_deleted;$/;"	m	struct:srv_stats_t
n_rows_fetched	include/row0mysql.h	/^	ulint		n_rows_fetched;	\/*!< number of rows fetched after$/;"	m	struct:row_prebuilt_t
n_rows_fetched	include/row0sel.h	/^	ulint		n_rows_fetched;	\/*!< number of rows fetched using pcur$/;"	m	struct:plan_t
n_rows_inserted	include/srv0srv.h	/^	ulint_ctr_64_t		n_rows_inserted;$/;"	m	struct:srv_stats_t
n_rows_prefetched	include/row0sel.h	/^	ulint		n_rows_prefetched;\/*!< number of prefetched rows cached$/;"	m	struct:plan_t
n_rows_read	include/srv0srv.h	/^	ulint_ctr_64_t		n_rows_read;$/;"	m	struct:srv_stats_t
n_rows_updated	include/srv0srv.h	/^	ulint_ctr_64_t		n_rows_updated;$/;"	m	struct:srv_stats_t
n_searches	include/btr0sea.h	/^	ulint	n_searches;	\/*!< number of searches *\/$/;"	m	struct:btr_search_t
n_slots	buf/buf0flu.cc	/^	ulint			n_slots;	\/*!< total number of slots *\/$/;"	m	struct:page_cleaner_t	file:
n_slots_finished	buf/buf0flu.cc	/^	ulint			n_slots_finished;$/;"	m	struct:page_cleaner_t	file:
n_slots_flushing	buf/buf0flu.cc	/^	ulint			n_slots_flushing;$/;"	m	struct:page_cleaner_t	file:
n_slots_requested	buf/buf0flu.cc	/^	ulint			n_slots_requested;$/;"	m	struct:page_cleaner_t	file:
n_stop	include/trx0purge.h	/^	ulint		n_stop;		\/*!< Counter to track number stops *\/$/;"	m	struct:trx_purge_t
n_submitted	include/trx0purge.h	/^	volatile ulint	n_submitted;	\/*!< Count of total tasks submitted$/;"	m	struct:trx_purge_t
n_sync_obj	include/hash0hash.h	/^	ulint			n_sync_obj;\/* if sync_objs != NULL, then$/;"	m	struct:hash_table_t
n_sys_threads	srv/srv0srv.cc	/^	ulint		n_sys_threads;		\/*!< size of the sys_threads$/;"	m	struct:srv_sys_t	file:
n_t_cols	include/dict0mem.h	/^	unsigned				n_t_cols:10;$/;"	m	struct:dict_table_t
n_t_def	include/dict0mem.h	/^	unsigned                                n_t_def:10;$/;"	m	struct:dict_table_t
n_tables	include/row0sel.h	/^	ulint		n_tables;	\/*!< number of tables *\/$/;"	m	struct:sel_node_t
n_template	include/row0mysql.h	/^	unsigned	n_template:10;	\/*!< number of elements in the$/;"	m	struct:row_prebuilt_t
n_threads_active	srv/srv0srv.cc	/^	ulint		n_threads_active[SRV_MASTER + 1];$/;"	m	struct:srv_sys_t	file:
n_tickets_to_enter_innodb	include/trx0trx.h	/^	ib_uint32_t	n_tickets_to_enter_innodb;$/;"	m	struct:trx_t
n_tuples	include/row0merge.h	/^	ulint		n_tuples;	\/*!< number of data tuples *\/$/;"	m	struct:row_merge_buf_t
n_uniq	include/dict0mem.h	/^	unsigned	n_uniq:10;\/*!< number of fields from the beginning$/;"	m	struct:dict_index_t
n_user_defined_cols	include/dict0mem.h	/^	unsigned	n_user_defined_cols:10;$/;"	m	struct:dict_index_t
n_v_col	include/dict0mem.h	/^	ulint			n_v_col;$/;"	m	struct:dict_add_v_col_t
n_v_col	include/dict0mem.h	/^	ulint			n_v_col;$/;"	m	struct:dict_vcol_templ_t
n_v_cols	include/dict0mem.h	/^	unsigned                                n_v_cols:10;$/;"	m	struct:dict_table_t
n_v_def	include/dict0mem.h	/^	unsigned                                n_v_def:10;$/;"	m	struct:dict_table_t
n_v_fields	include/data0data.h	/^	ulint		n_v_fields;	\/*!< number of virtual fields *\/$/;"	m	struct:dtuple_t
n_waiting	srv/srv0conc.cc	/^	volatile lint	n_waiting;$/;"	m	struct:srv_conc_t	file:
n_waiting_or_granted_auto_inc_locks	include/dict0mem.h	/^	ulong					n_waiting_or_granted_auto_inc_locks;$/;"	m	struct:dict_table_t
n_words	fts/fts0opt.cc	/^	ulint		n_words;	\/*!< Number of words compressed *\/$/;"	m	struct:fts_zip_t	file:
n_workers	buf/buf0flu.cc	/^	volatile ulint		n_workers;	\/*!< number of worker threads$/;"	m	struct:page_cleaner_t	file:
name	api/api0api.cc	/^	const char*	name;		\/*!< Index name *\/$/;"	m	struct:ib_index_def_t	file:
name	api/api0api.cc	/^	const char*	name;		\/*!< Name of column *\/$/;"	m	struct:ib_col_t	file:
name	api/api0api.cc	/^	const char*	name;		\/*!< Name of column *\/$/;"	m	struct:ib_key_col_t	file:
name	api/api0api.cc	/^	const char*	name;		\/*!< Table name *\/$/;"	m	struct:ib_table_def_t	file:
name	fts/fts0fts.cc	/^	char*		name;		\/*!< Name of the table *\/$/;"	m	struct:fts_aux_table_t	file:
name	handler/ha_innodb.cc	/^	const char*		name;$/;"	m	struct:table_list_item	file:
name	include/dict0dict.h	/^	const char*	name;		\/* column name *\/$/;"	m	struct:dict_col_meta_t
name	include/dict0mem.h	/^	id_name_t	name;		\/*!< name of the column *\/$/;"	m	struct:dict_field_t
name	include/dict0mem.h	/^	id_name_t	name;	\/*!< index name *\/$/;"	m	struct:dict_index_t
name	include/dict0mem.h	/^	table_name_t				name;$/;"	m	struct:dict_table_t
name	include/fil0fil.h	/^	char*		name;	\/*!< Tablespace name *\/$/;"	m	struct:fil_space_t
name	include/fil0fil.h	/^	char*		name;$/;"	m	struct:fil_node_t
name	include/fsp0file.h	/^	const char*	name()	const$/;"	f	class:Datafile
name	include/fsp0space.h	/^	const char* name()	const$/;"	f	class:Tablespace
name	include/fts0fts.h	/^	char*		name;		\/*!< First entry is always NULL, the$/;"	m	struct:fts_savepoint_t
name	include/os0file.h	/^	char		name[OS_FILE_MAX_PATH];	\/*!< path to a file *\/$/;"	m	struct:os_file_stat_t
name	include/pars0pars.h	/^	const char*		name;	\/*!< function name *\/$/;"	m	struct:pars_user_func_t
name	include/pars0pars.h	/^	const char*	name;		\/*!< name *\/$/;"	m	struct:pars_bound_id_t
name	include/pars0pars.h	/^	const char*	name;		\/*!< name *\/$/;"	m	struct:pars_bound_lit_t
name	include/pars0sym.h	/^	const char*			name;		\/*!< name of an id *\/$/;"	m	struct:sym_node_t
name	include/row0merge.h	/^	const char*	name;		\/*!< index name *\/$/;"	m	struct:index_def_t
name	include/trx0roll.h	/^	char*		name;		\/*!< savepoint name *\/$/;"	m	struct:trx_named_savept_t
name	log/log0recv.cc	/^	std::string	name;$/;"	m	struct:file_name_t	file:
name	os/os0file.cc	/^	const char*		name;$/;"	m	struct:Slot	file:
name	trx/trx0sys.cc	/^	const char*	name;		\/*!< text representation of the$/;"	m	struct:file_format_t	file:
name_hash	fil/fil0fil.cc	/^	hash_table_t*	name_hash;	\/*!< hash table based on the space$/;"	m	struct:fil_system_t	file:
name_hash	include/dict0mem.h	/^	hash_node_t				name_hash;$/;"	m	struct:dict_table_t
name_hash	include/fil0fil.h	/^	hash_node_t	name_hash;\/*!< hash chain the name_hash table *\/$/;"	m	struct:fil_space_t
name_len	include/pars0sym.h	/^	ulint				name_len;	\/*!< id name length *\/$/;"	m	struct:sym_node_t
name_of_col_is	dict/dict0load.cc	/^name_of_col_is($/;"	f	file:
name_prefix	fts/fts0opt.cc	/^	char*		name_prefix;	\/*!< FTS table name prefix *\/$/;"	m	struct:fts_optimize_t	file:
named_spaces	fil/fil0fil.cc	/^	UT_LIST_BASE_NODE_T(fil_space_t) named_spaces;$/;"	m	struct:fil_system_t	file:
named_spaces	include/fil0fil.h	/^	UT_LIST_NODE_T(fil_space_t) named_spaces;$/;"	m	struct:fil_space_t
needExt	btr/btr0bulk.cc	/^PageBulk::needExt($/;"	f	class:PageBulk
need_page_lock	include/gis0type.h	/^	bool		need_page_lock;$/;"	m	struct:rtr_info
need_prdt_lock	include/gis0type.h	/^	bool		need_prdt_lock;$/;"	m	struct:rtr_info
need_rebuild	handler/handler0alter.cc	/^	bool need_rebuild () const { return(old_table != new_table); }$/;"	f	struct:ha_innobase_inplace_ctx
need_to_access_clustered	include/row0mysql.h	/^	unsigned	need_to_access_clustered:1; \/*!< if we are fetching$/;"	m	struct:row_prebuilt_t
needs_fix_up	include/trx0purge.h	/^		bool needs_fix_up(ulint	space_id) const$/;"	f	class:undo::Truncate
new_array	include/ut0new.h	/^	new_array($/;"	f	class:ut_allocator
new_ft_info	handler/ha_innodb.h	/^typedef struct new_ft_info$/;"	s
new_rec	include/gis0type.h	/^	rec_t*		new_rec;	\/*!< new record location *\/$/;"	m	struct:rtr_rec_move
new_rec_locks	include/row0mysql.h	/^	ulint		new_rec_locks;	\/*!< normally 0; if$/;"	m	struct:row_prebuilt_t
new_table	handler/handler0alter.cc	/^	dict_table_t*	new_table;$/;"	m	struct:ha_innobase_inplace_ctx	file:
new_table	include/row0ftsort.h	/^	dict_table_t*		new_table;	\/*!< source table *\/$/;"	m	struct:fts_psort_common_t
new_table_id	include/row0trunc.h	/^	table_id_t new_table_id() const$/;"	f	class:truncate_t
new_trx_id	include/row0undo.h	/^	trx_id_t	new_trx_id; \/*!< trx id to restore to clustered index$/;"	m	struct:undo_node_t
new_val	include/row0upd.h	/^	dfield_t	new_val;	\/*!< new value for the column *\/$/;"	m	struct:upd_field_t
newest_mod	handler/i_s.cc	/^	lsn_t		newest_mod;	\/*!< Log sequence number of$/;"	m	struct:buf_page_info_t	file:
newest_modification	include/buf0buf.h	/^	lsn_t		newest_modification;$/;"	m	class:buf_page_t
next	include/fts0ast.h	/^	fts_ast_node_t*	next;			\/*!< Link for expr list *\/$/;"	m	struct:fts_ast_node_t
next	include/ha0ha.h	/^	ha_node_t*	next;	\/*!< next chain node or NULL if none *\/$/;"	m	struct:ha_node_t
next	include/ha0storage.ic	/^	ha_storage_node_t*	next;	\/*!< next node in hash chain *\/$/;"	m	struct:ha_storage_node_t	file:
next	include/log0recv.h	/^	recv_data_t*	next;	\/*!< pointer to the next block or NULL *\/$/;"	m	struct:recv_data_t
next	include/trx0i_s.h	/^	i_s_hash_chain_t*	next;	\/*!< next item in the hash chain *\/$/;"	m	struct:i_s_hash_chain_t
next	include/ut0list.h	/^	ib_list_node_t*		next;		\/*!< next node *\/$/;"	m	struct:ib_list_node_t
next	include/ut0lst.h	/^	Type*		next;			\/*!< pointer to next node,$/;"	m	struct:ut_list_node
next	lock/lock0lock.cc	/^	ulint next()$/;"	f	class:TrxLockIterator
next	lock/lock0lock.cc	/^	void next()$/;"	f	class:TrxListIterator
next_alloc	include/fts0ast.h	/^	fts_ast_node_t*	next_alloc;		\/*!< For tracking allocations *\/$/;"	m	struct:fts_ast_node_t
next_char_pos	include/pars0sym.h	/^	int			next_char_pos;$/;"	m	struct:sym_tab_t
next_checkpoint_lsn	include/log0log.h	/^	lsn_t		next_checkpoint_lsn;$/;"	m	struct:log_t
next_checkpoint_no	include/log0log.h	/^	ib_uint64_t	next_checkpoint_no;$/;"	m	struct:log_t
next_doc_id	include/fts0types.h	/^	doc_id_t	next_doc_id;	\/*!< Next doc id *\/$/;"	m	struct:fts_cache_t
next_free_slot	sync/sync0arr.cc	/^	ulint           next_free_slot; \/*!< the next free cell in the array *\/$/;"	m	struct:sync_array_t	file:
next_stored	include/trx0purge.h	/^	ibool		next_stored;	\/*!< TRUE if the info of the next record$/;"	m	struct:trx_purge_t
nil	include/ut0rbt.h	/^	ib_rbt_node_t*	nil;			\/* Black colored node that is$/;"	m	struct:ib_rbt_t
no	include/trx0trx.h	/^	trx_id_t	no;		\/*!< transaction serialization number:$/;"	m	struct:trx_t
no_flush	include/buf0buf.h	/^	os_event_t	no_flush[BUF_FLUSH_N_TYPES];$/;"	m	struct:buf_pool_t
no_list	include/trx0trx.h	/^			no_list;	\/*!< Required during view creation$/;"	m	struct:trx_t
no_prefetch	include/row0sel.h	/^	ibool		no_prefetch;	\/*!< no prefetch for this table *\/$/;"	m	struct:plan_t
node	api/api0api.cc	/^	ib_qry_node_t	node;		\/*!< Query node*\/$/;"	m	struct:ib_qry_proc_t	file:
node	fts/fts0pars.cc	/^	fts_ast_node_t*		node;$/;"	m	union:YYSTYPE	file:
node	include/fts0pars.h	/^	fts_ast_node_t*		node;$/;"	m	union:YYSTYPE
node	include/hash0hash.h	/^	void*	node;	\/*!< hash chain node, NULL if none *\/$/;"	m	struct:hash_cell_t
node	include/pars0pars.h	/^	sym_node_t*	node;		\/*!< symbol node *\/$/;"	m	struct:pars_bound_lit_t
node	include/ut0lst.h	/^	node_ptr	node;			\/*!< Pointer to member field$/;"	m	struct:ut_list_base
node_ptr	include/ut0lst.h	/^	typedef NodePtr node_ptr;$/;"	t	struct:ut_list_base
node_seq_t	include/gis0type.h	/^typedef ib_uint32_t     node_seq_t;$/;"	t
node_t	include/read0types.h	/^	typedef UT_LIST_NODE_T(ReadView) node_t;$/;"	t	class:ReadView
node_type	include/ut0lst.h	/^	typedef ut_list_node<Type> node_type;$/;"	t	struct:GenericGetNode
node_type	include/ut0lst.h	/^	typedef ut_list_node<Type> node_type;$/;"	t	struct:ut_list_base
node_visit	include/gis0type.h	/^typedef	struct node_visit {$/;"	s
node_visit_t	include/gis0type.h	/^} node_visit_t;$/;"	t	typeref:struct:node_visit
nodes	include/fts0types.h	/^	ib_vector_t*	nodes;		\/*!< Nodes read from disk *\/$/;"	m	struct:fts_word_t
nodes	include/fts0types.h	/^	ib_vector_t*	nodes;		\/*!< Word node ilists, each element is$/;"	m	struct:fts_tokenizer_word_t
noredo_rseg_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	noredo_rseg_mutex_key;$/;"	v
normalize	fsp/fsp0sysspace.cc	/^SysTablespace::normalize()$/;"	f	class:SysTablespace
normalize_table_name	handler/ha_innodb.h	1023;"	d
normalize_table_name	handler/ha_innodb.h	1026;"	d
normalize_table_name_low	handler/ha_innodb.cc	/^create_table_info_t::normalize_table_name_low($/;"	f	class:create_table_info_t
not_young_making_delta	include/buf0buf.h	/^	ulint	not_young_making_delta;	\/*!< num of pages not make young since$/;"	m	struct:buf_pool_info_t
notify	lock/lock0lock.cc	/^DeadlockChecker::notify(const lock_t* lock) const$/;"	f	class:DeadlockChecker
notify_flush	buf/buf0flu.cc	/^FlushObserver::notify_flush($/;"	f	class:FlushObserver
notify_remove	buf/buf0flu.cc	/^FlushObserver::notify_remove($/;"	f	class:FlushObserver
notify_table_changed	handler/handler0alter.cc	/^ha_innopart::notify_table_changed()$/;"	f	class:ha_innopart
nth_field	include/dict0mem.h	/^	ulint		nth_field;$/;"	m	struct:dict_v_idx_t
nth_rec	include/btr0cur.h	/^	ulint	nth_rec;$/;"	m	struct:btr_path_t
null_bitmap_len	include/row0mysql.h	/^	unsigned	null_bitmap_len:10;\/*!< number of bytes in the SQL NULL$/;"	m	struct:row_prebuilt_t
nulls_equal	include/dict0mem.h	/^	unsigned	nulls_equal:1;$/;"	m	struct:dict_index_t
num_base	include/dict0mem.h	/^	ulint			num_base;$/;"	m	struct:dict_v_col_t
num_base	include/dict0mem.h	/^	ulint		num_base;$/;"	m	struct:dict_s_col_t
num_recs	handler/i_s.cc	/^	unsigned	num_recs:UNIV_PAGE_SIZE_SHIFT_MAX-2;$/;"	m	struct:buf_page_info_t	file:
num_to_add_fk	handler/handler0alter.cc	/^	const ulint	num_to_add_fk;$/;"	m	struct:ha_innobase_inplace_ctx	file:
num_to_add_index	handler/handler0alter.cc	/^	ulint		num_to_add_index;$/;"	m	struct:ha_innobase_inplace_ctx	file:
num_to_add_vcol	handler/handler0alter.cc	/^	ulint		num_to_add_vcol;$/;"	m	struct:ha_innobase_inplace_ctx	file:
num_to_drop_fk	handler/handler0alter.cc	/^	const ulint	num_to_drop_fk;$/;"	m	struct:ha_innobase_inplace_ctx	file:
num_to_drop_index	handler/handler0alter.cc	/^	const ulint	num_to_drop_index;$/;"	m	struct:ha_innobase_inplace_ctx	file:
num_to_drop_vcol	handler/handler0alter.cc	/^	ulint		num_to_drop_vcol;$/;"	m	struct:ha_innobase_inplace_ctx	file:
num_to_rename	handler/handler0alter.cc	/^	const ulint	num_to_rename;$/;"	m	struct:ha_innobase_inplace_ctx	file:
object	include/mtr0mtr.h	/^	void*		object;$/;"	m	struct:mtr_memo_slot_t
offset	include/row0merge.h	/^	ulint		offset;		\/*!< file offset (end of file) *\/$/;"	m	struct:merge_file_t
offset	include/trx0purge.h	/^	ulint		offset;		\/*!< Page offset for the next undo$/;"	m	struct:trx_purge_t
offset	os/os0file.cc	/^	os_offset_t		offset;$/;"	m	struct:Slot	file:
offset	row/row0log.cc	/^	ulonglong	offset;$/;"	m	class:row_log_table_blob_t	file:
offset	trx/trx0i_s.cc	/^	ulint	offset;		\/*!< offset, in number of rows *\/$/;"	m	struct:i_s_mem_chunk_t	file:
offsets	include/dict0mem.h	/^	ulint*		offsets;$/;"	m	class:rec_cache_t
offsets	include/page0cur.h	/^	ulint*		offsets;$/;"	m	struct:page_cur_t
offsets_cached	include/dict0mem.h	/^	bool		offsets_cached;$/;"	m	class:rec_cache_t
old_lru_len	include/buf0buf.h	/^	ulint	old_lru_len;		\/*!< buf_pool->LRU_old_len *\/$/;"	m	struct:buf_pool_info_t
old_n_fields	include/btr0pcur.h	/^	ulint		old_n_fields;$/;"	m	struct:btr_pcur_t
old_offset	row/row0log.cc	/^	ulonglong	old_offset;$/;"	m	class:row_log_table_blob_t	file:
old_rec	include/btr0pcur.h	/^	rec_t*		old_rec;$/;"	m	struct:btr_pcur_t
old_rec	include/gis0type.h	/^	rec_t*		old_rec;	\/*!< record being moved in old page *\/$/;"	m	struct:rtr_rec_move
old_rec_buf	include/btr0pcur.h	/^	byte*		old_rec_buf;$/;"	m	struct:btr_pcur_t
old_size	include/buf0buf.h	/^	ulint		old_size;	\/*!< previous pool size in pages *\/$/;"	m	struct:buf_pool_t
old_stat	include/buf0buf.h	/^	buf_pool_stat_t	old_stat;	\/*!< old statistics *\/$/;"	m	struct:buf_pool_t
old_stored	include/btr0pcur.h	/^	bool		old_stored;$/;"	m	struct:btr_pcur_t
old_table	handler/handler0alter.cc	/^	dict_table_t*	old_table;$/;"	m	struct:ha_innobase_inplace_ctx	file:
old_table_id	include/row0trunc.h	/^	table_id_t old_table_id() const$/;"	f	class:truncate_t
old_v_val	include/row0upd.h	/^	dfield_t*	old_v_val;	\/*!< old value for the virtual column *\/$/;"	m	struct:upd_field_t
old_vers_heap	include/row0mysql.h	/^	mem_heap_t*	old_vers_heap;	\/*!< memory heap where a previous$/;"	m	struct:row_prebuilt_t
old_vers_heap	include/row0sel.h	/^	mem_heap_t*	old_vers_heap;	\/*!< memory heap used in building an old$/;"	m	struct:plan_t
old_vrow	include/row0upd.h	/^	dtuple_t*	old_vrow;	\/*!< pointer to old row, used for$/;"	m	struct:upd_t
oldest_mod	handler/i_s.cc	/^	lsn_t		oldest_mod;	\/*!< Log sequence number of$/;"	m	struct:buf_page_info_t	file:
oldest_modification	include/buf0buf.h	/^	lsn_t		oldest_modification;$/;"	m	class:buf_page_t
online	handler/handler0alter.cc	/^	bool		online;$/;"	m	struct:ha_innobase_inplace_ctx	file:
online_index_status	include/dict0mem.h	/^enum online_index_status {$/;"	g
online_log	include/dict0mem.h	/^	row_log_t*	online_log;$/;"	m	struct:dict_index_t
online_retry_drop_indexes	handler/handler0alter.cc	/^online_retry_drop_indexes($/;"	f	file:
online_retry_drop_indexes_low	handler/handler0alter.cc	/^online_retry_drop_indexes_low($/;"	f	file:
online_retry_drop_indexes_with_trx	handler/handler0alter.cc	/^online_retry_drop_indexes_with_trx($/;"	f	file:
online_status	include/dict0mem.h	/^	unsigned	online_status:2;$/;"	m	struct:dict_index_t
only_create	handler/ha_innopart.cc	/^	only_create() const$/;"	f	class:Altered_partitions
op	include/lock0prdt.h	/^	uint16		op;		\/* Predicate operator *\/$/;"	m	struct:lock_prdt
op_info	include/trx0trx.h	/^	const char*	op_info;	\/*!< English text describing the$/;"	m	struct:trx_t
op_type	include/row0sel.h	/^			op_type;	\/*!< operation type: open or$/;"	m	struct:open_node_t	typeref:enum:open_node_t::open_node_op
open	handler/ha_innodb.cc	/^ha_innobase::open($/;"	f	class:ha_innobase
open	handler/ha_innopart.cc	/^ha_innopart::open($/;"	f	class:ha_innopart
open_dict_table	handler/ha_innodb.cc	/^ha_innobase::open_dict_table($/;"	f	class:ha_innobase
open_file	fsp/fsp0sysspace.cc	/^SysTablespace::open_file($/;"	f	class:SysTablespace
open_link_file	fsp/fsp0file.cc	/^RemoteDatafile::open_link_file()$/;"	f	class:RemoteDatafile
open_log_file	srv/srv0start.cc	/^open_log_file($/;"	f
open_node_op	include/row0sel.h	/^enum open_node_op {$/;"	g
open_node_t	include/row0sel.h	/^struct open_node_t{$/;"	s
open_one_table_part	handler/ha_innopart.cc	/^Ha_innopart_share::open_one_table_part($/;"	f	class:Ha_innopart_share
open_or_create	fsp/fsp0file.cc	/^Datafile::open_or_create(bool read_only_mode)$/;"	f	class:Datafile
open_or_create	fsp/fsp0space.cc	/^Tablespace::open_or_create(bool is_temp)$/;"	f	class:Tablespace
open_or_create	fsp/fsp0sysspace.cc	/^SysTablespace::open_or_create($/;"	f	class:SysTablespace
open_read_only	fsp/fsp0file.cc	/^Datafile::open_read_only(bool strict)$/;"	f	class:Datafile
open_read_only	fsp/fsp0file.cc	/^RemoteDatafile::open_read_only(bool strict)$/;"	f	class:RemoteDatafile
open_read_write	fsp/fsp0file.cc	/^Datafile::open_read_write(bool read_only_mode)$/;"	f	class:Datafile
open_read_write	fsp/fsp0file.cc	/^RemoteDatafile::open_read_write(bool read_only_mode)$/;"	f	class:RemoteDatafile
open_step	include/row0sel.ic	/^open_step($/;"	f
open_table_parts	handler/ha_innopart.cc	/^Ha_innopart_share::open_table_parts($/;"	f	class:Ha_innopart_share
oper	fts/fts0pars.cc	/^	int			oper;$/;"	m	union:YYSTYPE	file:
oper	fts/fts0que.cc	/^	fts_ast_oper_t	oper;		\/*!< Current boolean mode operator *\/$/;"	m	struct:fts_query_t	file:
oper	include/fts0ast.h	/^	fts_ast_oper_t	oper;			\/*!< Operator value *\/$/;"	m	struct:fts_ast_node_t
oper	include/fts0pars.h	/^	int			oper;$/;"	m	union:YYSTYPE
operator !=	include/mem0mem.h	/^bool operator!= (const mem_heap_allocator<T>& left,$/;"	f
operator !=	include/ut0new.h	/^operator!=($/;"	f
operator ()	buf/buf0buddy.cc	/^	void	operator()(const buf_buddy_free_t* elem) const$/;"	f	struct:CheckZipFree
operator ()	buf/buf0flu.cc	/^	void	operator()(const buf_page_t* elem)$/;"	f	struct:Check
operator ()	dict/dict0dict.cc	/^	void operator()(dict_foreign_t* foreign) {$/;"	f	struct:dict_foreign_remove_partial
operator ()	fil/fil0fil.cc	/^	void	operator()(const fil_node_t* elem)$/;"	f	struct:Check
operator ()	handler/ha_innodb.cc	/^	bool operator()(const st_handler_tablename lhs,$/;"	f	struct:tablename_compare
operator ()	include/buf0buf.h	/^	void	operator()(const buf_block_t* elem) const$/;"	f	struct:CheckUnzipLRUAndLRUList
operator ()	include/buf0buf.h	/^	void	operator()(const buf_page_t* elem) const$/;"	f	struct:CheckInFreeList
operator ()	include/buf0buf.h	/^	void	operator()(const buf_page_t* elem) const$/;"	f	struct:CheckInLRUList
operator ()	include/dict0mem.h	/^	bool operator()($/;"	f	struct:dict_foreign_compare
operator ()	include/dict0mem.h	/^	bool operator()(const dict_foreign_t*	foreign) const$/;"	f	struct:dict_foreign_different_tables
operator ()	include/dict0mem.h	/^	bool operator()(const dict_foreign_t*	foreign) const$/;"	f	struct:dict_foreign_matches_id
operator ()	include/dict0mem.h	/^	bool operator()(const dict_foreign_t*	foreign) const$/;"	f	struct:dict_foreign_with_index
operator ()	include/dict0mem.h	/^	bool operator()(dict_foreign_t* const & foreign) const {$/;"	f	struct:dict_foreign_not_exists
operator ()	include/dict0mem.h	/^	const char* operator()() const$/;"	f	class:id_name_t
operator ()	include/dict0mem.h	/^	void operator()(const dict_foreign_t* foreign) {$/;"	f	struct:dict_foreign_print
operator ()	include/dict0mem.h	/^	void operator()(dict_foreign_t*	foreign) const$/;"	f	struct:dict_foreign_add_to_referenced_table
operator ()	include/dyn0buf.h	/^	bool operator()(const mtr_buf_t::block_t* block)$/;"	f	struct:mtr_buf_copy_t
operator ()	include/fil0fil.h	/^	const char* operator()() const$/;"	f	class:Folder
operator ()	include/fil0fil.h	/^	const fil_space_t* operator()() const$/;"	f	class:FilSpace
operator ()	include/sync0types.h	/^	virtual bool operator()(const latch_level_t level)$/;"	f	struct:btrsea_sync_check
operator ()	include/sync0types.h	/^	virtual bool operator()(const latch_level_t level)$/;"	f	struct:dict_sync_check
operator ()	include/sync0types.h	/^	virtual bool operator()(const latch_level_t level)$/;"	f	struct:sync_allowed_latches
operator ()	include/trx0types.h	/^	bool operator() (const TrxTrack& lhs, const TrxTrack& rhs) const$/;"	f	struct:TrxTrackCmp
operator ()	include/trx0types.h	/^	bool operator() (const TrxTrack& lhs, const TrxTrack& rhs) const$/;"	f	struct:TrxTrackHashCmp
operator ()	include/trx0types.h	/^	bool operator()(const TrxUndoRsegs& lhs, const TrxUndoRsegs& rhs)$/;"	f	class:TrxUndoRsegs
operator ()	include/trx0types.h	/^	size_t operator()(const TrxTrack& key) const$/;"	f	struct:TrxTrackHash
operator ()	include/ut0lst.h	/^	node_type& operator() (Type& elem)$/;"	f	struct:GenericGetNode
operator ()	include/ut0lst.h	/^struct	NullValidate { void operator()(const void* elem) { } };$/;"	f	struct:NullValidate
operator ()	include/ut0ut.h	/^	bool operator()($/;"	f	struct:ut_strcmp_functor
operator ()	lock/lock0lock.cc	/^	ut_list_node<lock_t>& operator() (lock_t& elem)$/;"	f	struct:TableLockGetNode
operator ()	lock/lock0lock.cc	/^	void	operator()(const trx_t* trx)$/;"	f	struct:PrintNotStarted
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(const mtr_buf_t::block_t* block) const$/;"	f	struct:mtr_write_log_t
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(const mtr_memo_slot_t* slot) const$/;"	f	struct:DebugCheck
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(const mtr_memo_slot_t* slot) const$/;"	f	struct:FlaggedCheck
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(mtr_buf_t::block_t* block)$/;"	f	struct:Iterate
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(mtr_memo_slot_t* slot) const$/;"	f	struct:ReleaseAll
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(mtr_memo_slot_t* slot) const$/;"	f	struct:ReleaseBlocks
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(mtr_memo_slot_t* slot) const$/;"	f	struct:ReleaseLatches
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(mtr_memo_slot_t* slot)$/;"	f	struct:Find
operator ()	mtr/mtr0mtr.cc	/^	bool operator()(mtr_memo_slot_t* slot)$/;"	f	struct:FindPage
operator ()	read/read0read.cc	/^	void	operator()(const ReadView* view)$/;"	f	struct:ViewCheck
operator ()	row/row0mysql.cc	/^	void operator() (upd_node_t* node) {$/;"	f	class:ib_dec_counter
operator ()	row/row0trunc.cc	/^CreateIndex::operator()(mtr_t* mtr, btr_pcur_t* pcur) const$/;"	f	class:CreateIndex
operator ()	row/row0trunc.cc	/^DropIndex::operator()(mtr_t* mtr, btr_pcur_t* pcur) const$/;"	f	class:DropIndex
operator ()	row/row0trunc.cc	/^TableLocator::operator()(mtr_t* mtr, btr_pcur_t* pcur)$/;"	f	class:TableLocator
operator ()	row/row0trunc.cc	/^TruncateLogger::operator()(mtr_t* mtr, btr_pcur_t* pcur)$/;"	f	class:TruncateLogger
operator <	include/sync0types.h	/^	bool operator<(const LatchMeta& rhs) const$/;"	f	class:LatchMeta
operator <<	buf/buf0buf.cc	/^operator<<($/;"	f
operator <<	dict/dict0mem.cc	/^operator<< (std::ostream& out, const dict_foreign_set& fk_set)$/;"	f
operator <<	dict/dict0mem.cc	/^operator<< (std::ostream& out, const dict_foreign_t& foreign)$/;"	f
operator <<	dict/dict0mem.cc	/^operator<<($/;"	f
operator <<	include/data0data.h	/^operator<<(std::ostream& o, const dtuple_t& tuple)$/;"	f
operator <<	include/fsp0types.h	/^operator<<($/;"	f
operator <<	include/lock0priv.h	/^operator<<(std::ostream& out, const lock_rec_t& lock)$/;"	f
operator <<	include/lock0priv.h	/^operator<<(std::ostream& out, const lock_t& lock)$/;"	f
operator <<	include/lock0priv.h	/^operator<<(std::ostream& out, const lock_table_t& lock)$/;"	f
operator <<	include/page0size.h	/^operator<<($/;"	f
operator <<	include/ut0ut.h	/^	logger& operator<<(const T& rhs)$/;"	f	class:ib::logger
operator <<	include/ut0ut.h	/^operator<<($/;"	f	namespace:ib
operator <<	rem/rem0rec.cc	/^operator<<(std::ostream& o, const rec_index_print& r)$/;"	f
operator <<	rem/rem0rec.cc	/^operator<<(std::ostream& o, const rec_offsets_print& r)$/;"	f
operator =	fil/fil0fil.cc	/^Folder::operator=(const char* path)$/;"	f	class:Folder
operator =	include/dict0mem.h	/^	id_name_t& operator=($/;"	f	class:id_name_t
operator =	include/fil0fil.h	/^	class FilSpace& operator=($/;"	f	class:FilSpace
operator =	include/fsp0file.h	/^	Datafile& operator=(const Datafile& file)$/;"	f	class:Datafile
operator ==	fil/fil0fil.cc	/^bool Folder::operator==(const Folder& other) const$/;"	f	class:Folder
operator ==	include/mem0mem.h	/^bool operator== (const mem_heap_allocator<T>& left,$/;"	f
operator ==	include/os0file.h	/^	bool operator==(const IORequest& rhs) const$/;"	f	class:IORequest
operator ==	include/trx0trx.h	/^	bool operator==(const TrxVersion& rhs) const$/;"	f	struct:TrxVersion
operator ==	include/ut0new.h	/^operator==($/;"	f
operator ==	sync/sync0debug.cc	/^	bool operator==(const Latched& rhs) const$/;"	f	struct:Latched
operator >	fil/fil0fil.cc	/^bool Folder::operator>(const Folder& other) const$/;"	f	class:Folder
operator >=	fil/fil0fil.cc	/^bool Folder::operator>=(const Folder& other) const$/;"	f	class:Folder
operator const char*	include/dict0mem.h	/^	operator const char*() const$/;"	f	class:id_name_t
operator const char*	include/fil0fil.h	/^	operator const char*() const$/;"	f	class:Folder
operator const fil_space_t*	include/fil0fil.h	/^	operator const fil_space_t*() const$/;"	f	class:FilSpace
opt_calc_index_goodness	pars/pars0opt.cc	/^opt_calc_index_goodness($/;"	f	file:
opt_calc_n_fields_from_goodness	pars/pars0opt.cc	/^opt_calc_n_fields_from_goodness($/;"	f
opt_check_exp_determined_before	pars/pars0opt.cc	/^opt_check_exp_determined_before($/;"	f	file:
opt_check_order_by	pars/pars0opt.cc	/^opt_check_order_by($/;"	f	file:
opt_classify_cols	pars/pars0opt.cc	/^opt_classify_cols($/;"	f	file:
opt_classify_comparison	pars/pars0opt.cc	/^opt_classify_comparison($/;"	f	file:
opt_clust_access	pars/pars0opt.cc	/^opt_clust_access($/;"	f	file:
opt_determine_and_normalize_test_conds	pars/pars0opt.cc	/^opt_determine_and_normalize_test_conds($/;"	f	file:
opt_doc_id_size	include/row0ftsort.h	/^	ibool			opt_doc_id_size;\/*!< whether to use 4 bytes$/;"	m	struct:fts_psort_common_t
opt_doc_id_size	include/row0ftsort.h	/^	ibool		opt_doc_id_size;\/*!< Whether to use smaller (4 bytes)$/;"	m	struct:fts_psort_insert
opt_find_all_cols	pars/pars0opt.cc	/^opt_find_all_cols($/;"	f
opt_find_copy_cols	pars/pars0opt.cc	/^opt_find_copy_cols($/;"	f	file:
opt_find_test_conds	pars/pars0opt.cc	/^opt_find_test_conds($/;"	f	file:
opt_initialize	fsp/fsp0sysspace.cc	/^my_bool opt_initialize = 0;$/;"	v
opt_invert_cmp_op	pars/pars0opt.cc	/^opt_invert_cmp_op($/;"	f	file:
opt_is_arg	pars/pars0opt.cc	/^opt_is_arg($/;"	f	file:
opt_look_for_col_in_comparison_before	pars/pars0opt.cc	/^opt_look_for_col_in_comparison_before($/;"	f	file:
opt_look_for_col_in_cond_before	pars/pars0opt.cc	/^opt_look_for_col_in_cond_before($/;"	f	file:
opt_normalize_cmp_conds	pars/pars0opt.cc	/^opt_normalize_cmp_conds($/;"	f	file:
opt_op_to_search_mode	pars/pars0opt.cc	/^opt_op_to_search_mode($/;"	f
opt_print_query_plan	pars/pars0opt.cc	/^opt_print_query_plan($/;"	f
opt_search_plan	pars/pars0opt.cc	/^opt_search_plan($/;"	f
opt_search_plan_for_table	pars/pars0opt.cc	/^opt_search_plan_for_table($/;"	f	file:
optimize	handler/ha_innodb.cc	/^ha_innobase::optimize($/;"	f	class:ha_innobase
optimize	handler/ha_innopart.cc	/^ha_innopart::optimize($/;"	f	class:ha_innopart
optimize_lock	include/fts0types.h	/^	ib_mutex_t	optimize_lock;	\/*!< Lock for OPTIMIZE *\/$/;"	m	struct:fts_cache_t
ord_part	include/dict0mem.h	/^	unsigned	ord_part:1;	\/*!< nonzero if this column$/;"	m	struct:dict_col_t
order	include/fsp0file.h	/^	ulint	order()	const$/;"	f	class:Datafile
order_by	include/row0sel.h	/^	order_node_t*	order_by;	\/*!< order by column definition, or$/;"	m	struct:sel_node_t
order_node_t	include/pars0pars.h	/^struct order_node_t{$/;"	s
orig_len	include/row0upd.h	/^	unsigned	orig_len:16;	\/*!< original length of the locally$/;"	m	struct:upd_field_t
original_len	os/os0file.cc	/^	uint32			original_len;$/;"	m	struct:Slot	file:
os0atomic_h	include/os0atomic.h	33;"	d
os0event_h	include/os0event.h	26;"	d
os0file_h	include/os0file.h	36;"	d
os0once_h	include/os0once.h	28;"	d
os0proc_h	include/os0proc.h	28;"	d
os0thread_h	include/os0thread.h	28;"	d
os_aio	include/os0file.h	1223;"	d
os_aio	include/os0file.h	1631;"	d
os_aio_all_slots_free	os/os0file.cc	/^os_aio_all_slots_free()$/;"	f
os_aio_free	os/os0file.cc	/^os_aio_free()$/;"	f
os_aio_func	os/os0file.cc	/^os_aio_func($/;"	f
os_aio_handler	os/os0file.cc	/^os_aio_handler($/;"	f
os_aio_init	os/os0file.cc	/^os_aio_init($/;"	f
os_aio_linux_handler	os/os0file.cc	/^os_aio_linux_handler($/;"	f	file:
os_aio_n_segments	os/os0file.cc	/^static ulint		os_aio_n_segments = ULINT_UNDEFINED;$/;"	v	file:
os_aio_print	os/os0file.cc	/^os_aio_print(FILE*	file)$/;"	f
os_aio_print_pending_io	os/os0file.cc	/^os_aio_print_pending_io($/;"	f
os_aio_recommend_sleep_for_read_threads	os/os0file.cc	/^static bool		os_aio_recommend_sleep_for_read_threads = false;$/;"	v	file:
os_aio_refresh_stats	os/os0file.cc	/^os_aio_refresh_stats()$/;"	f
os_aio_segment_wait_events	os/os0file.cc	/^static os_event_t*	os_aio_segment_wait_events = NULL;$/;"	v	file:
os_aio_simulated_handler	os/os0file.cc	/^os_aio_simulated_handler($/;"	f	file:
os_aio_simulated_put_read_threads_to_sleep	os/os0file.cc	/^os_aio_simulated_put_read_threads_to_sleep()$/;"	f
os_aio_simulated_wake_handler_threads	os/os0file.cc	/^os_aio_simulated_wake_handler_threads()$/;"	f
os_aio_validate	os/os0file.cc	/^os_aio_validate()$/;"	f	file:
os_aio_validate_skip	os/os0file.cc	/^os_aio_validate_skip()$/;"	f
os_aio_wait_until_no_pending_writes	os/os0file.cc	/^os_aio_wait_until_no_pending_writes()$/;"	f
os_aio_wake_all_threads_at_shutdown	os/os0file.cc	/^os_aio_wake_all_threads_at_shutdown()$/;"	f
os_aio_windows_handler	os/os0file.cc	/^os_aio_windows_handler($/;"	f	file:
os_alloc_block	os/os0file.cc	/^os_alloc_block()$/;"	f	file:
os_atomic_dec_ulint	include/os0atomic.h	324;"	d
os_atomic_decrement	include/os0atomic.h	302;"	d
os_atomic_decrement	include/os0atomic.h	305;"	d
os_atomic_decrement_lint	include/os0atomic.h	183;"	d
os_atomic_decrement_lint	include/os0atomic.h	309;"	d
os_atomic_decrement_uint32	include/os0atomic.h	192;"	d
os_atomic_decrement_uint32	include/os0atomic.h	315;"	d
os_atomic_decrement_uint64	include/os0atomic.h	198;"	d
os_atomic_decrement_uint64	include/os0atomic.h	318;"	d
os_atomic_decrement_ulint	include/os0atomic.h	186;"	d
os_atomic_decrement_ulint	include/os0atomic.h	312;"	d
os_atomic_inc_ulint	include/os0atomic.h	323;"	d
os_atomic_increment	include/os0atomic.h	279;"	d
os_atomic_increment	include/os0atomic.h	282;"	d
os_atomic_increment_lint	include/os0atomic.h	158;"	d
os_atomic_increment_lint	include/os0atomic.h	286;"	d
os_atomic_increment_uint32	include/os0atomic.h	167;"	d
os_atomic_increment_uint32	include/os0atomic.h	292;"	d
os_atomic_increment_uint64	include/os0atomic.h	173;"	d
os_atomic_increment_uint64	include/os0atomic.h	295;"	d
os_atomic_increment_ulint	include/os0atomic.h	161;"	d
os_atomic_increment_ulint	include/os0atomic.h	289;"	d
os_atomic_test_and_set	include/os0atomic.ic	/^os_atomic_test_and_set($/;"	f
os_atomic_val_compare_and_swap	include/os0atomic.ic	/^os_atomic_val_compare_and_swap($/;"	f
os_bytes_read_since_printout	os/os0file.cc	/^ulint	os_bytes_read_since_printout = 0;$/;"	v
os_compare_and_swap	include/os0atomic.h	213;"	d
os_compare_and_swap_lint	include/os0atomic.h	/^os_compare_and_swap_lint(volatile lint* ptr, lint old_val, lint new_val)$/;"	f
os_compare_and_swap_lint	include/os0atomic.h	137;"	d
os_compare_and_swap_lint	include/os0atomic.h	219;"	d
os_compare_and_swap_thread_id	include/os0atomic.h	/^os_compare_and_swap_thread_id(volatile os_thread_id_t* ptr, os_thread_id_t old_val, os_thread_id_t new_val)$/;"	f
os_compare_and_swap_thread_id	include/os0atomic.h	147;"	d
os_compare_and_swap_thread_id	include/os0atomic.h	255;"	d
os_compare_and_swap_uint32	include/os0atomic.h	/^os_compare_and_swap_uint32(volatile ib_uint32_t* ptr, ib_uint32_t old_val, ib_uint32_t new_val)$/;"	f
os_compare_and_swap_uint32	include/os0atomic.h	143;"	d
os_compare_and_swap_uint32	include/os0atomic.h	222;"	d
os_compare_and_swap_ulint	include/os0atomic.h	/^os_compare_and_swap_ulint(volatile ulint* ptr, ulint old_val, ulint new_val)$/;"	f
os_compare_and_swap_ulint	include/os0atomic.h	140;"	d
os_compare_and_swap_ulint	include/os0atomic.h	216;"	d
os_cond_t	os/os0event.cc	/^typedef CONDITION_VARIABLE	os_cond_t;$/;"	t	file:
os_cond_t	os/os0event.cc	/^typedef pthread_cond_t		os_cond_t;$/;"	t	file:
os_event	os/os0event.cc	/^struct os_event {$/;"	s	file:
os_event_create	os/os0event.cc	/^os_event_create($/;"	f
os_event_destroy	os/os0event.cc	/^os_event_destroy($/;"	f
os_event_is_set	os/os0event.cc	/^os_event_is_set($/;"	f
os_event_list_t	os/os0event.cc	/^typedef std::list<os_event_t, ut_allocator<os_event_t> >	os_event_list_t;$/;"	t	file:
os_event_reset	os/os0event.cc	/^os_event_reset($/;"	f
os_event_set	os/os0event.cc	/^os_event_set($/;"	f
os_event_t	include/os0event.h	/^typedef struct os_event* os_event_t;$/;"	t	typeref:struct:os_event
os_event_wait	include/os0event.h	113;"	d
os_event_wait_low	os/os0event.cc	/^os_event_wait_low($/;"	f
os_event_wait_time	include/os0event.h	133;"	d
os_event_wait_time_low	os/os0event.cc	/^os_event_wait_time_low($/;"	f
os_file_close	include/os0file.h	1664;"	d
os_file_close	include/os0file.h	1666;"	d
os_file_close_func	os/os0file.cc	/^os_file_close_func($/;"	f
os_file_close_no_error_handling	os/os0file.cc	/^os_file_close_no_error_handling($/;"	f
os_file_close_pfs	include/os0file.h	1220;"	d
os_file_close_pfs	include/os0file.h	1629;"	d
os_file_closedir	os/os0file.cc	/^os_file_closedir($/;"	f
os_file_compress_page	os/os0file.cc	/^os_file_compress_page($/;"	f	file:
os_file_compressed_page_size	os/os0file.cc	/^os_file_compressed_page_size(const byte* buf)$/;"	f
os_file_create	include/os0file.h	1204;"	d
os_file_create	include/os0file.h	1614;"	d
os_file_create_directory	os/os0file.cc	/^os_file_create_directory($/;"	f
os_file_create_func	os/os0file.cc	/^os_file_create_func($/;"	f
os_file_create_simple	include/os0file.h	1209;"	d
os_file_create_simple	include/os0file.h	1619;"	d
os_file_create_simple_func	os/os0file.cc	/^os_file_create_simple_func($/;"	f
os_file_create_simple_no_error_handling	include/os0file.h	1214;"	d
os_file_create_simple_no_error_handling	include/os0file.h	1624;"	d
os_file_create_simple_no_error_handling_func	os/os0file.cc	/^os_file_create_simple_no_error_handling_func($/;"	f
os_file_create_subdirs_if_needed	os/os0file.cc	/^os_file_create_subdirs_if_needed($/;"	f
os_file_create_t	include/os0file.h	/^enum os_file_create_t {$/;"	g
os_file_create_tmpfile	os/os0file.cc	/^os_file_create_tmpfile($/;"	f
os_file_decompress_page	os/os0file.cc	/^os_file_decompress_page($/;"	f
os_file_delete	include/os0file.h	1255;"	d
os_file_delete	include/os0file.h	1656;"	d
os_file_delete_func	os/os0file.cc	/^os_file_delete_func($/;"	f
os_file_delete_if_exists	include/os0file.h	1258;"	d
os_file_delete_if_exists	include/os0file.h	1658;"	d
os_file_delete_if_exists_func	os/os0file.cc	/^os_file_delete_if_exists_func($/;"	f
os_file_dir_t	include/os0file.h	/^typedef DIR*	os_file_dir_t;	\/*!< directory stream *\/$/;"	t
os_file_dir_t	include/os0file.h	/^typedef HANDLE	os_file_dir_t;	\/*!< directory stream *\/$/;"	t
os_file_encrypt_page	os/os0file.cc	/^os_file_encrypt_page($/;"	f	file:
os_file_flush	include/os0file.h	1678;"	d
os_file_flush	include/os0file.h	1680;"	d
os_file_flush_func	os/os0file.cc	/^os_file_flush_func($/;"	f
os_file_flush_pfs	include/os0file.h	1249;"	d
os_file_flush_pfs	include/os0file.h	1651;"	d
os_file_fsync_posix	os/os0file.cc	/^os_file_fsync_posix($/;"	f	file:
os_file_get_last_error	os/os0file.cc	/^os_file_get_last_error($/;"	f
os_file_get_last_error_low	os/os0file.cc	/^os_file_get_last_error_low($/;"	f	file:
os_file_get_parent_dir	os/os0file.cc	/^os_file_get_parent_dir($/;"	f	file:
os_file_get_size	os/os0file.cc	/^os_file_get_size($/;"	f
os_file_get_status	os/os0file.cc	/^os_file_get_status($/;"	f
os_file_get_status_posix	os/os0file.cc	/^os_file_get_status_posix($/;"	f	file:
os_file_get_status_win32	os/os0file.cc	/^os_file_get_status_win32($/;"	f	file:
os_file_handle_error	os/os0file.cc	/^os_file_handle_error($/;"	f	file:
os_file_handle_error_cond_exit	os/os0file.cc	/^os_file_handle_error_cond_exit($/;"	f
os_file_handle_error_no_exit	os/os0file.cc	/^os_file_handle_error_no_exit($/;"	f	file:
os_file_io	os/os0file.cc	/^os_file_io($/;"	f
os_file_io_complete	os/os0file.cc	/^os_file_io_complete($/;"	f	file:
os_file_is_root	os/os0file.cc	/^os_file_is_root($/;"	f
os_file_lock	os/os0file.cc	/^os_file_lock($/;"	f	file:
os_file_make_data_dir_path	os/os0file.cc	/^os_file_make_data_dir_path($/;"	f
os_file_make_new_pathname	os/os0file.cc	/^os_file_make_new_pathname($/;"	f
os_file_opendir	os/os0file.cc	/^os_file_opendir($/;"	f
os_file_original_page_size	os/os0file.cc	/^os_file_original_page_size(const byte* buf)$/;"	f
os_file_pread	os/os0file.cc	/^os_file_pread($/;"	f
os_file_punch_hole	os/os0file.cc	/^os_file_punch_hole($/;"	f
os_file_punch_hole_posix	os/os0file.cc	/^os_file_punch_hole_posix($/;"	f	file:
os_file_punch_hole_win32	os/os0file.cc	/^os_file_punch_hole_win32($/;"	f	file:
os_file_pwrite	os/os0file.cc	/^os_file_pwrite($/;"	f
os_file_read	include/os0file.h	1670;"	d
os_file_read	include/os0file.h	1673;"	d
os_file_read_func	os/os0file.cc	/^os_file_read_func($/;"	f
os_file_read_no_error_handling	include/os0file.h	1692;"	d
os_file_read_no_error_handling	include/os0file.h	1695;"	d
os_file_read_no_error_handling_func	os/os0file.cc	/^os_file_read_no_error_handling_func($/;"	f
os_file_read_no_error_handling_int_fd	include/os0file.h	1236;"	d
os_file_read_no_error_handling_int_fd	include/os0file.h	1642;"	d
os_file_read_no_error_handling_pfs	include/os0file.h	1232;"	d
os_file_read_no_error_handling_pfs	include/os0file.h	1639;"	d
os_file_read_page	os/os0file.cc	/^os_file_read_page($/;"	f
os_file_read_pfs	include/os0file.h	1229;"	d
os_file_read_pfs	include/os0file.h	1636;"	d
os_file_read_string	os/os0file.cc	/^os_file_read_string($/;"	f
os_file_readdir_next_file	os/os0file.cc	/^os_file_readdir_next_file($/;"	f
os_file_rename	include/os0file.h	1252;"	d
os_file_rename	include/os0file.h	1653;"	d
os_file_rename_func	os/os0file.cc	/^os_file_rename_func($/;"	f
os_file_set_eof	os/os0file.cc	/^os_file_set_eof($/;"	f
os_file_set_nocache	os/os0file.cc	/^os_file_set_nocache($/;"	f
os_file_set_size	os/os0file.cc	/^os_file_set_size($/;"	f
os_file_set_umask	os/os0file.cc	/^os_file_set_umask(ulint umask)$/;"	f
os_file_size_t	include/os0file.h	/^struct os_file_size_t {$/;"	s
os_file_stat_t	include/os0file.h	/^struct os_file_stat_t {$/;"	s
os_file_status	os/os0file.cc	/^os_file_status($/;"	f
os_file_status_posix	os/os0file.cc	/^os_file_status_posix($/;"	f
os_file_status_win32	os/os0file.cc	/^os_file_status_win32($/;"	f
os_file_t	include/os0file.h	/^typedef int	os_file_t;$/;"	t
os_file_t	include/os0file.h	79;"	d
os_file_truncate	os/os0file.cc	/^os_file_truncate($/;"	f
os_file_truncate_posix	os/os0file.cc	/^os_file_truncate_posix($/;"	f	file:
os_file_truncate_win32	os/os0file.cc	/^os_file_truncate_win32($/;"	f	file:
os_file_type_t	include/os0file.h	/^enum os_file_type_t {$/;"	g
os_file_write	include/os0file.h	1684;"	d
os_file_write	include/os0file.h	1687;"	d
os_file_write_func	os/os0file.cc	/^os_file_write_func($/;"	f
os_file_write_int_fd	include/os0file.h	1245;"	d
os_file_write_int_fd	include/os0file.h	1648;"	d
os_file_write_page	os/os0file.cc	/^os_file_write_page($/;"	f
os_file_write_pfs	include/os0file.h	1241;"	d
os_file_write_pfs	include/os0file.h	1645;"	d
os_free_block	os/os0file.cc	/^os_free_block(Block* block)$/;"	f	file:
os_fusionio_get_sector_size	os/os0file.cc	/^os_fusionio_get_sector_size()$/;"	f
os_has_said_disk_full	os/os0file.cc	/^bool	os_has_said_disk_full	= false;$/;"	v
os_innodb_umask	os/os0file.cc	/^static ulint	os_innodb_umask	= 0;$/;"	v	file:
os_innodb_umask	os/os0file.cc	/^static ulint	os_innodb_umask = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP;$/;"	v	file:
os_io_ptr_align	os/os0file.cc	/^static ulint	os_io_ptr_align = UNIV_SECTOR_SIZE;$/;"	v	file:
os_is_sparse_file_supported	os/os0file.cc	/^os_is_sparse_file_supported(const char* path, pfs_os_file_t fh)$/;"	f
os_is_sparse_file_supported_win32	os/os0file.cc	/^os_is_sparse_file_supported_win32(const char* filename)$/;"	f	file:
os_large_page_size	os/os0proc.cc	/^uint	os_large_page_size;$/;"	v
os_last_printout	os/os0file.cc	/^time_t	os_last_printout;$/;"	v
os_log_pending_writes	include/srv0srv.h	/^	lint_ctr_1_t		os_log_pending_writes;$/;"	m	struct:srv_stats_t
os_log_written	include/srv0srv.h	/^	lsn_ctr_1_t		os_log_written;$/;"	m	struct:srv_stats_t
os_mem_alloc_large	os/os0proc.cc	/^os_mem_alloc_large($/;"	f
os_mem_free_large	os/os0proc.cc	/^os_mem_free_large($/;"	f
os_n_file_reads	os/os0file.cc	/^ulint	os_n_file_reads		= 0;$/;"	v
os_n_file_reads_old	os/os0file.cc	/^ulint	os_n_file_reads_old	= 0;$/;"	v
os_n_file_writes	os/os0file.cc	/^ulint	os_n_file_writes	= 0;$/;"	v
os_n_file_writes_old	os/os0file.cc	/^ulint	os_n_file_writes_old	= 0;$/;"	v
os_n_fsyncs	os/os0file.cc	/^ulint	os_n_fsyncs		= 0;$/;"	v
os_n_fsyncs_old	os/os0file.cc	/^ulint	os_n_fsyncs_old		= 0;$/;"	v
os_n_pending_reads	os/os0file.cc	/^ulint	os_n_pending_reads = 0;$/;"	v
os_n_pending_writes	os/os0file.cc	/^ulint	os_n_pending_writes = 0;$/;"	v
os_normalize_path	os/os0file.cc	/^os_normalize_path($/;"	f
os_offset_t	include/os0file.h	/^typedef ib_uint64_t os_offset_t;$/;"	t
os_once	include/os0once.h	/^class os_once {$/;"	c
os_posix_f_t	include/os0thread.h	/^typedef void* (*os_posix_f_t) (void*);$/;"	t
os_proc_get_number	os/os0proc.cc	/^os_proc_get_number(void)$/;"	f
os_process_id_t	include/os0proc.h	/^typedef unsigned long int	os_process_id_t;$/;"	t
os_process_t	include/os0proc.h	/^typedef void*			os_process_t;$/;"	t
os_rmb	include/os0atomic.h	332;"	d
os_rmb	include/os0atomic.h	339;"	d
os_rmb	include/os0atomic.h	346;"	d
os_rmb	include/os0atomic.h	354;"	d
os_rmb	include/os0atomic.h	360;"	d
os_thread_active	os/os0thread.cc	/^os_thread_active()$/;"	f
os_thread_count	os/os0thread.cc	/^ulint	os_thread_count;$/;"	v
os_thread_create	include/os0thread.h	58;"	d
os_thread_create	include/os0thread.h	70;"	d
os_thread_create_func	os/os0thread.cc	/^os_thread_create_func($/;"	f
os_thread_eq	os/os0thread.cc	/^os_thread_eq($/;"	f
os_thread_exit	os/os0thread.cc	/^os_thread_exit($/;"	f
os_thread_free	os/os0thread.cc	/^os_thread_free()$/;"	f
os_thread_func_t	include/os0thread.h	/^extern "C"  { typedef void*	(*os_thread_func_t)(void*); }$/;"	t
os_thread_func_t	include/os0thread.h	/^typedef LPTHREAD_START_ROUTINE	os_thread_func_t;$/;"	t
os_thread_get_curr_id	os/os0thread.cc	/^os_thread_get_curr_id(void)$/;"	f
os_thread_id_less	sync/sync0debug.cc	/^	struct os_thread_id_less$/;"	s	struct:LatchDebug	file:
os_thread_id_t	include/os0thread.h	/^typedef DWORD			os_thread_id_t;	\/*!< In Windows the thread id$/;"	t
os_thread_id_t	include/os0thread.h	/^typedef pthread_t		os_thread_id_t;	\/*!< In Unix we use the thread$/;"	t
os_thread_init	os/os0thread.cc	/^os_thread_init()$/;"	f
os_thread_join	os/os0thread.cc	/^os_thread_join($/;"	f
os_thread_pf	os/os0thread.cc	/^os_thread_pf($/;"	f
os_thread_ret_t	include/univ.i	/^typedef ulint os_thread_ret_t;$/;"	t	file:
os_thread_ret_t	include/univ.i	/^typedef void* os_thread_ret_t;$/;"	t	file:
os_thread_sleep	os/os0thread.cc	/^os_thread_sleep($/;"	f
os_thread_yield	os/os0thread.cc	/^os_thread_yield(void)$/;"	f
os_total_large_mem_allocated	os/os0proc.cc	/^ulint	os_total_large_mem_allocated = 0;$/;"	v
os_use_large_pages	os/os0proc.cc	/^my_bool	os_use_large_pages;$/;"	v
os_wmb	include/os0atomic.h	333;"	d
os_wmb	include/os0atomic.h	340;"	d
os_wmb	include/os0atomic.h	347;"	d
os_wmb	include/os0atomic.h	355;"	d
os_wmb	include/os0atomic.h	361;"	d
other	include/mem0mem.h	/^		typedef mem_heap_allocator<U> other;$/;"	t	struct:mem_heap_allocator::rebind
other	include/ut0new.h	/^		typedef ut_allocator<U>	other;$/;"	t	struct:ut_allocator::rebind
other_conds	include/row0sel.h	/^			other_conds;	\/*!< the rest of search conditions we can$/;"	m	struct:plan_t
pad	include/dict0mem.h	/^	ulint		pad;	\/*!< number of bytes used as pad *\/$/;"	m	struct:zip_pad_info_t
pad	include/ut0new.h	/^	size_t		pad;$/;"	m	struct:ut_new_pfx_t
pad	os/os0file.cc	/^	byte		pad[CACHE_LINE_SIZE - sizeof(ulint)];$/;"	m	struct:Block	file:
pad	srv/srv0conc.cc	/^	char		pad[64  - (sizeof(ulint) + sizeof(lint))];$/;"	m	struct:srv_conc_t	file:
pad1	include/lock0lock.h	/^	char		pad1[CACHE_LINE_SIZE];	\/*!< padding to prevent other$/;"	m	struct:lock_sys_t
pad1	include/log0log.h	/^	char		pad1[CACHE_LINE_SIZE];$/;"	m	struct:log_t
pad1	include/read0types.h	/^	byte		pad1[64 - sizeof(node_t)];$/;"	m	class:ReadView
pad1	include/trx0sys.h	/^	char		pad1[64];	\/*!< To avoid false sharing *\/$/;"	m	struct:trx_sys_t
pad2	include/lock0lock.h	/^	char		pad2[CACHE_LINE_SIZE];	\/*!< Padding *\/$/;"	m	struct:lock_sys_t
pad2	include/log0log.h	/^	char		pad2[CACHE_LINE_SIZE];\/*!< Padding *\/$/;"	m	struct:log_t
pad2	include/trx0sys.h	/^	char		pad2[64];	\/*!< To avoid false sharing *\/$/;"	m	struct:trx_sys_t
pad3	include/log0log.h	/^	char		pad3[CACHE_LINE_SIZE];\/*!< Padding *\/$/;"	m	struct:log_t
pad3	include/trx0sys.h	/^	char		pad3[64];	\/*!< To avoid false sharing *\/$/;"	m	struct:trx_sys_t
page	include/buf0buf.h	/^	buf_page_t	page;		\/*!< page information; this must$/;"	m	struct:buf_block_t
page	include/dict0mem.h	/^	unsigned	page:32;\/*!< index tree root page number *\/$/;"	m	struct:dict_index_t
page	include/fil0fil.h	/^	ulint	page;		\/*!< page number within a space *\/$/;"	m	struct:fil_addr_t
page0cur_h	include/page0cur.h	27;"	d
page0page_h	include/page0page.h	27;"	d
page0size_t	include/page0size.h	27;"	d
page0types_h	include/page0types.h	27;"	d
page0zip_h	include/page0zip.h	28;"	d
pageAbort	include/btr0bulk.h	/^	void	pageAbort(PageBulk* page_bulk)$/;"	f	class:BtrBulk
pageCommit	btr/btr0bulk.cc	/^BtrBulk::pageCommit($/;"	f	class:BtrBulk
pageSplit	btr/btr0bulk.cc	/^BtrBulk::pageSplit($/;"	f	class:BtrBulk
page_align	include/page0page.ic	/^page_align($/;"	f
page_bulk_vector	include/btr0bulk.h	/^	page_bulk_vector;$/;"	t
page_check_dir	page/page0page.cc	/^page_check_dir($/;"	f
page_cleaner	buf/buf0flu.cc	/^static page_cleaner_t*	page_cleaner = NULL;$/;"	v	file:
page_cleaner_flush_pages_recommendation	buf/buf0flu.cc	/^page_cleaner_flush_pages_recommendation($/;"	f	file:
page_cleaner_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	page_cleaner_mutex_key;$/;"	v
page_cleaner_slot_t	buf/buf0flu.cc	/^struct page_cleaner_slot_t {$/;"	s	file:
page_cleaner_state_t	buf/buf0flu.cc	/^enum page_cleaner_state_t {$/;"	g	file:
page_cleaner_t	buf/buf0flu.cc	/^struct page_cleaner_t {$/;"	s	file:
page_cleaner_thread_key	buf/buf0flu.cc	/^mysql_pfs_key_t page_cleaner_thread_key;$/;"	v
page_copy_rec_list_end	page/page0page.cc	/^page_copy_rec_list_end($/;"	f
page_copy_rec_list_end_no_locks	page/page0page.cc	/^page_copy_rec_list_end_no_locks($/;"	f
page_copy_rec_list_end_to_created_page	page/page0cur.cc	/^page_copy_rec_list_end_to_created_page($/;"	f
page_copy_rec_list_start	page/page0page.cc	/^page_copy_rec_list_start($/;"	f
page_copy_rec_list_to_created_page_write_log	page/page0cur.cc	/^page_copy_rec_list_to_created_page_write_log($/;"	f
page_create	page/page0page.cc	/^page_create($/;"	f
page_create_empty	page/page0page.cc	/^page_create_empty($/;"	f
page_create_low	page/page0page.cc	/^page_create_low($/;"	f	file:
page_create_write_log	page/page0page.cc	/^page_create_write_log($/;"	f
page_create_write_log	page/page0page.cc	293;"	d	file:
page_create_zip	page/page0page.cc	/^page_create_zip($/;"	f
page_cur	include/btr0cur.h	/^	page_cur_t	page_cur;	\/*!< page cursor *\/$/;"	m	struct:btr_cur_t
page_cur_delete_rec	page/page0cur.cc	/^page_cur_delete_rec($/;"	f
page_cur_delete_rec_write_log	page/page0cur.cc	/^page_cur_delete_rec_write_log($/;"	f
page_cur_delete_rec_write_log	page/page0cur.cc	2507;"	d	file:
page_cur_direct_insert_rec_low	page/page0cur.cc	/^page_cur_direct_insert_rec_low($/;"	f
page_cur_get_block	include/page0cur.h	76;"	d
page_cur_get_block	include/page0cur.ic	/^page_cur_get_block($/;"	f
page_cur_get_page	include/page0cur.h	75;"	d
page_cur_get_page	include/page0cur.ic	/^page_cur_get_page($/;"	f
page_cur_get_page_zip	include/page0cur.h	77;"	d
page_cur_get_page_zip	include/page0cur.ic	/^page_cur_get_page_zip($/;"	f
page_cur_get_rec	include/page0cur.h	78;"	d
page_cur_get_rec	include/page0cur.ic	/^page_cur_get_rec($/;"	f
page_cur_insert_rec_low	page/page0cur.cc	/^page_cur_insert_rec_low($/;"	f
page_cur_insert_rec_write_log	page/page0cur.cc	/^page_cur_insert_rec_write_log($/;"	f	file:
page_cur_insert_rec_write_log	page/page0cur.cc	1137;"	d	file:
page_cur_insert_rec_zip	page/page0cur.cc	/^page_cur_insert_rec_zip($/;"	f
page_cur_is_after_last	include/page0cur.ic	/^page_cur_is_after_last($/;"	f
page_cur_is_before_first	include/page0cur.ic	/^page_cur_is_before_first($/;"	f
page_cur_lcg_prng	page/page0cur.cc	/^page_cur_lcg_prng(void)$/;"	f	file:
page_cur_mode_t	include/page0types.h	/^enum page_cur_mode_t {$/;"	g
page_cur_move_to_next	include/page0cur.ic	/^page_cur_move_to_next($/;"	f
page_cur_move_to_prev	include/page0cur.ic	/^page_cur_move_to_prev($/;"	f
page_cur_open_on_rnd_user_rec	page/page0cur.cc	/^page_cur_open_on_rnd_user_rec($/;"	f
page_cur_parse_delete_rec	page/page0cur.cc	/^page_cur_parse_delete_rec($/;"	f
page_cur_parse_insert_rec	page/page0cur.cc	/^page_cur_parse_insert_rec($/;"	f
page_cur_position	include/page0cur.ic	/^page_cur_position($/;"	f
page_cur_rec_field_extends	page/page0cur.cc	/^page_cur_rec_field_extends($/;"	f	file:
page_cur_rec_insert	include/page0cur.ic	/^page_cur_rec_insert($/;"	f
page_cur_search	include/page0cur.ic	/^page_cur_search($/;"	f
page_cur_search_with_match	page/page0cur.cc	/^page_cur_search_with_match($/;"	f
page_cur_search_with_match_bytes	page/page0cur.cc	/^page_cur_search_with_match_bytes($/;"	f
page_cur_set_after_last	include/page0cur.ic	/^page_cur_set_after_last($/;"	f
page_cur_set_before_first	include/page0cur.ic	/^page_cur_set_before_first($/;"	f
page_cur_short_succ	page/page0cur.cc	/^static ulint	page_cur_short_succ	= 0;$/;"	v	file:
page_cur_t	include/page0cur.h	/^struct page_cur_t{$/;"	s
page_cur_try_search_shortcut	page/page0cur.cc	/^page_cur_try_search_shortcut($/;"	f
page_cur_try_search_shortcut_bytes	page/page0cur.cc	/^page_cur_try_search_shortcut_bytes($/;"	f
page_cur_tuple_direct_insert	include/page0cur.ic	/^page_cur_tuple_direct_insert($/;"	f
page_cur_tuple_insert	include/page0cur.ic	/^page_cur_tuple_insert($/;"	f
page_delete_rec	page/page0page.cc	/^page_delete_rec($/;"	f
page_delete_rec_list_end	page/page0page.cc	/^page_delete_rec_list_end($/;"	f
page_delete_rec_list_start	page/page0page.cc	/^page_delete_rec_list_start($/;"	f
page_delete_rec_list_write_log	page/page0page.cc	/^page_delete_rec_list_write_log($/;"	f
page_delete_rec_list_write_log	page/page0page.cc	927;"	d	file:
page_dir_add_slot	page/page0page.cc	/^page_dir_add_slot($/;"	f
page_dir_balance_slot	page/page0page.cc	/^page_dir_balance_slot($/;"	f
page_dir_calc_reserved_space	include/page0page.ic	/^page_dir_calc_reserved_space($/;"	f
page_dir_delete_slot	page/page0page.cc	/^page_dir_delete_slot($/;"	f
page_dir_find_owner_slot	page/page0page.cc	/^page_dir_find_owner_slot($/;"	f
page_dir_get_n_heap	include/page0page.ic	/^page_dir_get_n_heap($/;"	f
page_dir_get_n_slots	include/page0page.ic	/^page_dir_get_n_slots($/;"	f
page_dir_get_nth_slot	include/page0page.h	433;"	d
page_dir_get_nth_slot	include/page0page.ic	/^page_dir_get_nth_slot($/;"	f
page_dir_print	page/page0page.cc	/^page_dir_print($/;"	f
page_dir_set_n_heap	include/page0page.ic	/^page_dir_set_n_heap($/;"	f
page_dir_set_n_slots	include/page0page.ic	/^page_dir_set_n_slots($/;"	f
page_dir_slot_check	page/page0page.cc	/^page_dir_slot_check($/;"	f	file:
page_dir_slot_get_n_owned	include/page0page.ic	/^page_dir_slot_get_n_owned($/;"	f
page_dir_slot_get_rec	include/page0page.ic	/^page_dir_slot_get_rec($/;"	f
page_dir_slot_set_n_owned	include/page0page.ic	/^page_dir_slot_set_n_owned($/;"	f
page_dir_slot_set_rec	include/page0page.ic	/^page_dir_slot_set_rec($/;"	f
page_dir_slot_t	include/page0page.h	/^typedef	byte			page_dir_slot_t;$/;"	t
page_dir_split_slot	page/page0page.cc	/^page_dir_split_slot($/;"	f
page_dir_t	include/page0page.h	/^typedef page_dir_slot_t		page_dir_t;$/;"	t
page_find_rec_max_not_deleted	page/page0page.cc	/^page_find_rec_max_not_deleted($/;"	f
page_find_rec_with_heap_no	page/page0page.cc	/^page_find_rec_with_heap_no($/;"	f
page_get_data_size	include/page0page.ic	/^page_get_data_size($/;"	f
page_get_free_space_of_empty	include/page0page.ic	/^page_get_free_space_of_empty($/;"	f
page_get_infimum_offset	include/page0page.ic	/^page_get_infimum_offset($/;"	f
page_get_infimum_rec	include/page0page.h	311;"	d
page_get_max_insert_size	include/page0page.ic	/^page_get_max_insert_size($/;"	f
page_get_max_insert_size_after_reorganize	include/page0page.ic	/^page_get_max_insert_size_after_reorganize($/;"	f
page_get_max_trx_id	include/page0page.ic	/^page_get_max_trx_id($/;"	f
page_get_middle_rec	include/page0page.ic	/^page_get_middle_rec($/;"	f
page_get_n_recs	include/page0page.ic	/^page_get_n_recs($/;"	f
page_get_page_no	include/page0page.ic	/^page_get_page_no($/;"	f
page_get_space_id	include/page0page.ic	/^page_get_space_id($/;"	f
page_get_ssn_id	include/page0page.ic	/^page_get_ssn_id($/;"	f
page_get_supremum_offset	include/page0page.ic	/^page_get_supremum_offset($/;"	f
page_get_supremum_rec	include/page0page.h	312;"	d
page_has_garbage	include/page0page.ic	/^page_has_garbage($/;"	f
page_hash	include/buf0buf.h	/^	hash_table_t*	page_hash;	\/*!< hash table of buf_page_t or$/;"	m	struct:buf_pool_t
page_hash_old	include/buf0buf.h	/^	hash_table_t*	page_hash_old;	\/*!< old pointer to page_hash to be$/;"	m	struct:buf_pool_t
page_header_get_field	include/page0page.ic	/^page_header_get_field($/;"	f
page_header_get_offs	include/page0page.ic	/^page_header_get_offs($/;"	f
page_header_get_ptr	include/page0page.h	268;"	d
page_header_print	page/page0page.cc	/^page_header_print($/;"	f
page_header_reset_last_insert	include/page0page.ic	/^page_header_reset_last_insert($/;"	f
page_header_set_field	include/page0page.ic	/^page_header_set_field($/;"	f
page_header_set_ptr	include/page0page.ic	/^page_header_set_ptr($/;"	f
page_header_t	include/page0page.h	/^typedef	byte		page_header_t;$/;"	t
page_id_t	include/buf0buf.h	/^	page_id_t(ulint space, ulint page_no)$/;"	f	class:page_id_t
page_id_t	include/buf0buf.h	/^class page_id_t {$/;"	c
page_is_comp	include/page0page.ic	/^page_is_comp($/;"	f
page_is_empty	include/page0page.ic	/^page_is_empty($/;"	f
page_is_leaf	include/page0page.ic	/^page_is_leaf($/;"	f
page_is_root	include/page0page.ic	/^page_is_root($/;"	f
page_level	include/btr0cur.h	/^	ulint	page_level;$/;"	m	struct:btr_path_t
page_made_young_rate	include/buf0buf.h	/^	double	page_made_young_rate;	\/*!< page made young rate in pages$/;"	m	struct:buf_pool_info_t
page_mem_alloc_free	include/page0page.ic	/^page_mem_alloc_free($/;"	f
page_mem_alloc_heap	page/page0page.cc	/^page_mem_alloc_heap($/;"	f
page_mem_free	include/page0page.ic	/^page_mem_free($/;"	f
page_move_rec_list_end	page/page0page.cc	/^page_move_rec_list_end($/;"	f
page_move_rec_list_start	page/page0page.cc	/^page_move_rec_list_start($/;"	f
page_no	include/btr0cur.h	/^	ulint	page_no;$/;"	m	struct:btr_path_t
page_no	include/buf0buf.h	/^	inline ib_uint32_t page_no() const$/;"	f	class:page_id_t
page_no	include/dict0crea.h	/^	ulint		page_no;	\/* root page number of the index *\/$/;"	m	struct:ind_node_t
page_no	include/gis0type.h	/^	ulint		page_no;	\/*!< the page number *\/$/;"	m	struct:node_visit
page_no	include/lock0priv.h	/^	ib_uint32_t	page_no;	\/*!< page number *\/$/;"	m	struct:lock_rec_t
page_no	include/log0recv.h	/^	unsigned	page_no:32;\/*!< page number *\/$/;"	m	struct:recv_addr_t
page_no	include/trx0purge.h	/^	ulint		page_no;	\/*!< Page number for the next undo$/;"	m	struct:trx_purge_t
page_no	include/trx0rseg.h	/^	ulint				page_no;$/;"	m	struct:trx_rseg_t
page_no_map	row/row0log.cc	/^	page_no_map;$/;"	t	file:
page_not_made_young_rate	include/buf0buf.h	/^	double	page_not_made_young_rate;\/*!< page not made young rate$/;"	m	struct:buf_pool_info_t
page_num	handler/i_s.cc	/^	unsigned	page_num:32;	\/*!< Page number\/offset *\/$/;"	m	struct:buf_page_info_t	file:
page_number	include/lock0priv.h	/^	ulint page_number() const$/;"	f	struct:lock_t
page_offset	include/page0page.ic	/^page_offset($/;"	f
page_parse_copy_rec_list_to_created_page	page/page0cur.cc	/^page_parse_copy_rec_list_to_created_page($/;"	f
page_parse_create	page/page0page.cc	/^page_parse_create($/;"	f
page_parse_delete_rec_list	page/page0page.cc	/^page_parse_delete_rec_list($/;"	f
page_print	page/page0page.cc	/^page_print($/;"	f
page_print_list	page/page0page.cc	/^page_print_list($/;"	f
page_read_delta	include/buf0buf.h	/^	ulint	page_read_delta;	\/*!< num of pages read since last$/;"	m	struct:buf_pool_info_t
page_rec_check	include/page0page.ic	/^page_rec_check($/;"	f
page_rec_find_owner_rec	include/page0page.ic	/^page_rec_find_owner_rec($/;"	f
page_rec_get_base_extra_size	include/page0page.ic	/^page_rec_get_base_extra_size($/;"	f
page_rec_get_heap_no	include/page0page.ic	/^page_rec_get_heap_no($/;"	f
page_rec_get_n_recs_before	page/page0page.cc	/^page_rec_get_n_recs_before($/;"	f
page_rec_get_next	include/page0page.ic	/^page_rec_get_next($/;"	f
page_rec_get_next_const	include/page0page.ic	/^page_rec_get_next_const($/;"	f
page_rec_get_next_low	include/page0page.ic	/^page_rec_get_next_low($/;"	f
page_rec_get_next_non_del_marked	include/page0page.ic	/^page_rec_get_next_non_del_marked($/;"	f
page_rec_get_nth	include/page0page.ic	/^page_rec_get_nth($/;"	f
page_rec_get_nth_const	page/page0page.cc	/^page_rec_get_nth_const($/;"	f
page_rec_get_prev	include/page0page.ic	/^page_rec_get_prev($/;"	f
page_rec_get_prev_const	include/page0page.ic	/^page_rec_get_prev_const($/;"	f
page_rec_is_comp	include/page0page.ic	/^page_rec_is_comp($/;"	f
page_rec_is_first	include/page0page.ic	/^page_rec_is_first($/;"	f
page_rec_is_infimum	include/page0page.ic	/^page_rec_is_infimum($/;"	f
page_rec_is_infimum_low	include/page0page.ic	/^page_rec_is_infimum_low($/;"	f
page_rec_is_last	include/page0page.ic	/^page_rec_is_last($/;"	f
page_rec_is_second	include/page0page.ic	/^page_rec_is_second($/;"	f
page_rec_is_second_last	include/page0page.ic	/^page_rec_is_second_last($/;"	f
page_rec_is_supremum	include/page0page.ic	/^page_rec_is_supremum($/;"	f
page_rec_is_supremum_low	include/page0page.ic	/^page_rec_is_supremum_low($/;"	f
page_rec_is_user_rec	include/page0page.ic	/^page_rec_is_user_rec($/;"	f
page_rec_is_user_rec_low	include/page0page.ic	/^page_rec_is_user_rec_low($/;"	f
page_rec_print	page/page0page.cc	/^page_rec_print($/;"	f
page_rec_set_next	include/page0page.ic	/^page_rec_set_next($/;"	f
page_rec_validate	page/page0page.cc	/^page_rec_validate($/;"	f
page_rec_write_field	include/page0page.ic	/^page_rec_write_field($/;"	f
page_scan_method_t	dict/dict0stats.cc	/^enum page_scan_method_t {$/;"	g	file:
page_set_max_trx_id	page/page0page.cc	/^page_set_max_trx_id($/;"	f
page_set_ssn_id	include/page0page.ic	/^page_set_ssn_id($/;"	f
page_simple_validate_new	page/page0page.cc	/^page_simple_validate_new($/;"	f
page_simple_validate_old	page/page0page.cc	/^page_simple_validate_old($/;"	f
page_size	api/api0api.cc	/^	ulint		page_size;	\/*!< Page size *\/$/;"	m	struct:ib_table_def_t	file:
page_size	fil/fil0fil.cc	/^	ulint		page_size;		\/*!< Page size *\/$/;"	m	struct:fil_iterator_t	file:
page_size	fts/fts0que.cc	/^	const page_size_t	page_size;$/;"	m	struct:fts_phrase_t	file:
page_size	include/row0ext.h	/^	page_size_t	page_size;$/;"	m	struct:row_ext_t
page_size	include/trx0rseg.h	/^	page_size_t			page_size;$/;"	m	struct:trx_rseg_t
page_size	include/trx0undo.h	/^	page_size_t	page_size;$/;"	m	struct:trx_undo_t
page_size_t	include/page0size.h	/^	explicit page_size_t(ulint fsp_flags)$/;"	f	class:page_size_t
page_size_t	include/page0size.h	/^	page_size_t(ulint physical, ulint logical, bool is_compressed)$/;"	f	class:page_size_t
page_size_t	include/page0size.h	/^class page_size_t {$/;"	c
page_size_to_ssize	include/fsp0fsp.ic	/^page_size_to_ssize($/;"	f
page_state	handler/i_s.cc	/^	unsigned	page_state:BUF_PAGE_STATE_BITS; \/*!< Page state *\/$/;"	m	struct:buf_page_info_t	file:
page_t	include/page0types.h	/^typedef	byte		page_t;$/;"	t
page_t	include/page0types.h	37;"	d
page_type	handler/i_s.cc	/^	unsigned	page_type:I_S_PAGE_TYPE_BITS;	\/*!< Page type *\/$/;"	m	struct:buf_page_info_t	file:
page_update_max_trx_id	include/page0page.ic	/^page_update_max_trx_id($/;"	f
page_validate	page/page0page.cc	/^page_validate($/;"	f
page_warn_strict_checksum	page/page0page.cc	/^page_warn_strict_checksum($/;"	f
page_zip_apply_log	page/page0zip.cc	/^page_zip_apply_log($/;"	f	file:
page_zip_apply_log_ext	page/page0zip.cc	/^page_zip_apply_log_ext($/;"	f	file:
page_zip_available	include/page0zip.ic	/^page_zip_available($/;"	f
page_zip_calc_checksum	page/page0zip.cc	/^page_zip_calc_checksum($/;"	f
page_zip_clear_rec	page/page0zip.cc	/^page_zip_clear_rec($/;"	f	file:
page_zip_compress	page/page0zip.cc	/^page_zip_compress($/;"	f
page_zip_compress_clust	page/page0zip.cc	/^page_zip_compress_clust($/;"	f	file:
page_zip_compress_clust_ext	page/page0zip.cc	/^page_zip_compress_clust_ext($/;"	f	file:
page_zip_compress_dbg	page/page0zip.cc	/^ibool	page_zip_compress_dbg;$/;"	v
page_zip_compress_deflate	page/page0zip.cc	/^page_zip_compress_deflate($/;"	f	file:
page_zip_compress_log	page/page0zip.cc	/^unsigned	page_zip_compress_log;$/;"	v
page_zip_compress_node_ptrs	page/page0zip.cc	/^page_zip_compress_node_ptrs($/;"	f	file:
page_zip_compress_sec	page/page0zip.cc	/^page_zip_compress_sec($/;"	f	file:
page_zip_compress_write_log	page/page0zip.cc	/^page_zip_compress_write_log($/;"	f	file:
page_zip_compress_write_log_no_data	include/page0zip.ic	/^page_zip_compress_write_log_no_data($/;"	f
page_zip_copy_recs	page/page0zip.cc	/^page_zip_copy_recs($/;"	f
page_zip_decompress	page/page0zip.cc	/^page_zip_decompress($/;"	f
page_zip_decompress_clust	page/page0zip.cc	/^page_zip_decompress_clust($/;"	f	file:
page_zip_decompress_clust_ext	page/page0zip.cc	/^page_zip_decompress_clust_ext($/;"	f	file:
page_zip_decompress_heap_no	page/page0zip.cc	/^page_zip_decompress_heap_no($/;"	f	file:
page_zip_decompress_low	page/page0zip.cc	/^page_zip_decompress_low($/;"	f	file:
page_zip_decompress_node_ptrs	page/page0zip.cc	/^page_zip_decompress_node_ptrs($/;"	f	file:
page_zip_decompress_sec	page/page0zip.cc	/^page_zip_decompress_sec($/;"	f	file:
page_zip_des_init	include/page0zip.ic	/^page_zip_des_init($/;"	f
page_zip_des_t	include/page0types.h	/^struct page_zip_des_t$/;"	s
page_zip_dir_add_slot	page/page0zip.cc	/^page_zip_dir_add_slot($/;"	f
page_zip_dir_decode	page/page0zip.cc	/^page_zip_dir_decode($/;"	f
page_zip_dir_delete	page/page0zip.cc	/^page_zip_dir_delete($/;"	f
page_zip_dir_elems	page/page0zip.cc	/^page_zip_dir_elems($/;"	f
page_zip_dir_encode	page/page0zip.cc	/^page_zip_dir_encode($/;"	f	file:
page_zip_dir_find	page/page0zip.cc	/^page_zip_dir_find($/;"	f
page_zip_dir_find_free	page/page0zip.cc	/^page_zip_dir_find_free($/;"	f
page_zip_dir_find_low	page/page0zip.cc	/^page_zip_dir_find_low($/;"	f
page_zip_dir_get	page/page0zip.cc	/^page_zip_dir_get($/;"	f
page_zip_dir_insert	page/page0zip.cc	/^page_zip_dir_insert($/;"	f
page_zip_dir_size	page/page0zip.cc	/^page_zip_dir_size($/;"	f
page_zip_dir_start	page/page0zip.cc	287;"	d	file:
page_zip_dir_start_low	page/page0zip.cc	280;"	d	file:
page_zip_dir_start_offs	page/page0zip.cc	/^page_zip_dir_start_offs($/;"	f
page_zip_dir_user_size	page/page0zip.cc	/^page_zip_dir_user_size($/;"	f
page_zip_empty_size	page/page0zip.cc	/^page_zip_empty_size($/;"	f
page_zip_fail	page/page0zip.cc	150;"	d	file:
page_zip_fail	page/page0zip.cc	154;"	d	file:
page_zip_fail_func	page/page0zip.cc	/^page_zip_fail_func($/;"	f	file:
page_zip_fields_decode	page/page0zip.cc	/^page_zip_fields_decode($/;"	f	file:
page_zip_fields_encode	page/page0zip.cc	/^page_zip_fields_encode($/;"	f
page_zip_fields_free	page/page0zip.cc	/^page_zip_fields_free($/;"	f	file:
page_zip_fixed_field_encode	page/page0zip.cc	/^page_zip_fixed_field_encode($/;"	f	file:
page_zip_free	page/page0zip.cc	/^page_zip_free($/;"	f	file:
page_zip_get_n_prev_extern	page/page0zip.cc	/^page_zip_get_n_prev_extern($/;"	f	file:
page_zip_get_size	include/page0zip.ic	/^page_zip_get_size($/;"	f
page_zip_get_trailer_len	include/page0zip.ic	/^page_zip_get_trailer_len($/;"	f
page_zip_header_cmp	page/page0zip.cc	/^page_zip_header_cmp($/;"	f	file:
page_zip_hexdump	page/page0zip.cc	3316;"	d	file:
page_zip_hexdump_func	page/page0zip.cc	/^page_zip_hexdump_func($/;"	f	file:
page_zip_is_too_big	page/page0zip.cc	/^page_zip_is_too_big($/;"	f
page_zip_level	page/page0zip.cc	/^uint	page_zip_level = DEFAULT_COMPRESSION_LEVEL;$/;"	v
page_zip_log_pages	page/page0zip.cc	/^my_bool	page_zip_log_pages = true;$/;"	v
page_zip_max_ins_size	include/page0zip.ic	/^page_zip_max_ins_size($/;"	f
page_zip_parse_compress	page/page0zip.cc	/^page_zip_parse_compress($/;"	f
page_zip_parse_compress_no_data	include/page0zip.ic	/^page_zip_parse_compress_no_data($/;"	f
page_zip_parse_write_blob_ptr	page/page0zip.cc	/^page_zip_parse_write_blob_ptr($/;"	f
page_zip_parse_write_header	page/page0zip.cc	/^page_zip_parse_write_header($/;"	f
page_zip_parse_write_node_ptr	page/page0zip.cc	/^page_zip_parse_write_node_ptr($/;"	f
page_zip_rec_needs_ext	include/page0zip.ic	/^page_zip_rec_needs_ext($/;"	f
page_zip_rec_set_deleted	page/page0zip.cc	/^page_zip_rec_set_deleted($/;"	f
page_zip_rec_set_owned	page/page0zip.cc	/^page_zip_rec_set_owned($/;"	f
page_zip_reorganize	page/page0zip.cc	/^page_zip_reorganize($/;"	f
page_zip_reset_stat_per_index	include/page0zip.ic	/^page_zip_reset_stat_per_index()$/;"	f
page_zip_set_alloc	page/page0zip.cc	/^page_zip_set_alloc($/;"	f
page_zip_set_extra_bytes	page/page0zip.cc	/^page_zip_set_extra_bytes($/;"	f	file:
page_zip_set_size	include/page0zip.ic	/^page_zip_set_size($/;"	f
page_zip_simple_validate	include/page0zip.ic	/^page_zip_simple_validate($/;"	f
page_zip_stat	page/page0zip.cc	/^page_zip_stat_t		page_zip_stat[PAGE_ZIP_SSIZE_MAX];$/;"	v
page_zip_stat_per_index	page/page0zip.cc	/^page_zip_stat_per_index_t	page_zip_stat_per_index;$/;"	v
page_zip_stat_per_index_mutex	srv/srv0srv.cc	/^ib_mutex_t	page_zip_stat_per_index_mutex;$/;"	v
page_zip_stat_per_index_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t page_zip_stat_per_index_mutex_key;$/;"	v
page_zip_stat_per_index_t	include/page0types.h	/^	page_zip_stat_per_index_t;$/;"	t
page_zip_stat_t	include/page0types.h	/^	page_zip_stat_t() :$/;"	f	struct:page_zip_stat_t
page_zip_stat_t	include/page0types.h	/^struct page_zip_stat_t {$/;"	s
page_zip_t	include/page0types.h	/^typedef byte		page_zip_t;$/;"	t
page_zip_validate	page/page0zip.cc	/^page_zip_validate($/;"	f
page_zip_validate_header_only	page/page0zip.cc	/^ibool	page_zip_validate_header_only = FALSE;$/;"	v
page_zip_validate_low	page/page0zip.cc	/^page_zip_validate_low($/;"	f
page_zip_verify_checksum	page/page0zip.cc	/^page_zip_verify_checksum($/;"	f
page_zip_write_blob_ptr	page/page0zip.cc	/^page_zip_write_blob_ptr($/;"	f
page_zip_write_header	include/page0zip.ic	/^page_zip_write_header($/;"	f
page_zip_write_header_log	page/page0zip.cc	/^page_zip_write_header_log($/;"	f
page_zip_write_node_ptr	page/page0zip.cc	/^page_zip_write_node_ptr($/;"	f
page_zip_write_rec	page/page0zip.cc	/^page_zip_write_rec($/;"	f
page_zip_write_rec_ext	page/page0zip.cc	/^page_zip_write_rec_ext($/;"	f	file:
page_zip_write_trx_id_and_roll_ptr	page/page0zip.cc	/^page_zip_write_trx_id_and_roll_ptr($/;"	f
page_zip_zalloc	page/page0zip.cc	/^page_zip_zalloc($/;"	f	file:
pages	include/log0recv.h	/^	list	pages;$/;"	m	struct:recv_dblwr_t
pages_created_rate	include/buf0buf.h	/^	double	pages_created_rate;	\/*!< num of pages create per second *\/$/;"	m	struct:buf_pool_info_t
pages_evicted_rate	include/buf0buf.h	/^	double	pages_evicted_rate;	\/*!< rate of readahead page evicted$/;"	m	struct:buf_pool_info_t
pages_read_rate	include/buf0buf.h	/^	double	pages_read_rate;	\/*!< num of pages read per second *\/$/;"	m	struct:buf_pool_info_t
pages_readahead_rate	include/buf0buf.h	/^	double	pages_readahead_rate;	\/*!< readahead rate in pages per$/;"	m	struct:buf_pool_info_t
pages_readahead_rnd_rate	include/buf0buf.h	/^	double	pages_readahead_rnd_rate;\/*!< random readahead rate in pages per$/;"	m	struct:buf_pool_info_t
pages_undone	include/trx0trx.h	/^	ulint		pages_undone;	\/*!< number of undo log pages undone$/;"	m	struct:trx_t
pages_written_rate	include/buf0buf.h	/^	double	pages_written_rate;	\/*!< num of  pages written per second *\/$/;"	m	struct:buf_pool_info_t
param_list	include/pars0pars.h	/^	sym_node_t*	param_list;	\/*!< input and output parameters *\/$/;"	m	struct:proc_node_t
param_type	include/pars0sym.h	/^	ulint				param_type;	\/*!< PARS_INPUT,$/;"	m	struct:sym_node_t
parent	include/fts0fts.h	/^	const char*	parent;		\/*!< Parent table name, this is$/;"	m	struct:fts_table_t
parent	include/que0types.h	/^	que_node_t*	parent;	\/*!< back pointer to parent node, or NULL *\/$/;"	m	struct:que_common_t
parent	include/ut0rbt.h	/^	ib_rbt_node_t*	parent;			\/* points parent node *\/$/;"	m	struct:ib_rbt_node_t
parent_id	fts/fts0fts.cc	/^	table_id_t	parent_id;	\/*!< Parent table id *\/$/;"	m	struct:fts_aux_table_t	file:
parent_path	include/gis0type.h	/^	rtr_node_path_t*parent_path;$/;"	m	struct:rtr_info
pars0opt_h	include/pars0opt.h	27;"	d
pars0pars_h	include/pars0pars.h	27;"	d
pars0sym_h	include/pars0sym.h	27;"	d
pars0types_h	include/pars0types.h	27;"	d
pars_asc_token	pars/pars0pars.cc	/^pars_res_word_t	pars_asc_token = {PARS_ASC_TOKEN};$/;"	v
pars_assert_token	pars/pars0pars.cc	/^pars_res_word_t	pars_assert_token = {PARS_ASSERT_TOKEN};$/;"	v
pars_assignment_statement	pars/pars0pars.cc	/^pars_assignment_statement($/;"	f
pars_bigint_token	pars/pars0pars.cc	/^pars_res_word_t	pars_bigint_token = {PARS_BIGINT_TOKEN};$/;"	v
pars_binary_to_number_token	pars/pars0pars.cc	/^pars_res_word_t	pars_binary_to_number_token = {PARS_BINARY_TO_NUMBER_TOKEN};$/;"	v
pars_binary_token	pars/pars0pars.cc	/^pars_res_word_t	pars_binary_token = {PARS_BINARY_TOKEN};$/;"	v
pars_blob_token	pars/pars0pars.cc	/^pars_res_word_t	pars_blob_token = {PARS_BLOB_TOKEN};$/;"	v
pars_bound_id_t	include/pars0pars.h	/^struct pars_bound_id_t {$/;"	s
pars_bound_lit_t	include/pars0pars.h	/^struct pars_bound_lit_t {$/;"	s
pars_char_token	pars/pars0pars.cc	/^pars_res_word_t	pars_char_token = {PARS_CHAR_TOKEN};$/;"	v
pars_check_aggregate	pars/pars0pars.cc	/^pars_check_aggregate($/;"	f	file:
pars_close_token	pars/pars0pars.cc	/^pars_res_word_t	pars_close_token = {PARS_CLOSE_TOKEN};$/;"	v
pars_clustered_token	pars/pars0pars.cc	/^pars_res_word_t	pars_clustered_token = {PARS_CLUSTERED_TOKEN};$/;"	v
pars_column_assignment	pars/pars0pars.cc	/^pars_column_assignment($/;"	f
pars_column_def	pars/pars0pars.cc	/^pars_column_def($/;"	f
pars_commit_statement	pars/pars0pars.cc	/^pars_commit_statement(void)$/;"	f
pars_complete_graph_for_exec	pars/pars0pars.cc	/^pars_complete_graph_for_exec($/;"	f
pars_concat_token	pars/pars0pars.cc	/^pars_res_word_t	pars_concat_token = {PARS_CONCAT_TOKEN};$/;"	v
pars_count_token	pars/pars0pars.cc	/^pars_res_word_t	pars_count_token = {PARS_COUNT_TOKEN};$/;"	v
pars_create_index	pars/pars0pars.cc	/^pars_create_index($/;"	f
pars_create_table	pars/pars0pars.cc	/^pars_create_table($/;"	f
pars_cursor_declaration	pars/pars0pars.cc	/^pars_cursor_declaration($/;"	f
pars_desc_token	pars/pars0pars.cc	/^pars_res_word_t	pars_desc_token = {PARS_DESC_TOKEN};$/;"	v
pars_distinct_token	pars/pars0pars.cc	/^pars_res_word_t	pars_distinct_token = {PARS_DISTINCT_TOKEN};$/;"	v
pars_elsif_element	pars/pars0pars.cc	/^pars_elsif_element($/;"	f
pars_exit_statement	pars/pars0pars.cc	/^pars_exit_statement(void)$/;"	f
pars_fetch_statement	pars/pars0pars.cc	/^pars_fetch_statement($/;"	f
pars_float_token	pars/pars0pars.cc	/^pars_res_word_t	pars_float_token = {PARS_FLOAT_TOKEN};$/;"	v
pars_for_statement	pars/pars0pars.cc	/^pars_for_statement($/;"	f
pars_func	pars/pars0pars.cc	/^pars_func($/;"	f
pars_func_get_class	pars/pars0pars.cc	/^pars_func_get_class($/;"	f	file:
pars_func_low	pars/pars0pars.cc	/^pars_func_low($/;"	f	file:
pars_function_declaration	pars/pars0pars.cc	/^pars_function_declaration($/;"	f
pars_get_lex_chars	pars/pars0pars.cc	/^pars_get_lex_chars($/;"	f
pars_if_statement	pars/pars0pars.cc	/^pars_if_statement($/;"	f
pars_info_add_int4_literal	pars/pars0pars.cc	/^pars_info_add_int4_literal($/;"	f
pars_info_add_literal	pars/pars0pars.cc	/^pars_info_add_literal($/;"	f
pars_info_add_str_literal	pars/pars0pars.cc	/^pars_info_add_str_literal($/;"	f
pars_info_add_ull_literal	pars/pars0pars.cc	/^pars_info_add_ull_literal($/;"	f
pars_info_bind_function	pars/pars0pars.cc	/^pars_info_bind_function($/;"	f
pars_info_bind_id	pars/pars0pars.cc	/^pars_info_bind_id($/;"	f
pars_info_bind_int4_literal	pars/pars0pars.cc	/^pars_info_bind_int4_literal($/;"	f
pars_info_bind_int8_literal	pars/pars0pars.cc	/^pars_info_bind_int8_literal($/;"	f
pars_info_bind_literal	pars/pars0pars.cc	/^pars_info_bind_literal($/;"	f
pars_info_bind_ull_literal	pars/pars0pars.cc	/^pars_info_bind_ull_literal($/;"	f
pars_info_bind_varchar_literal	pars/pars0pars.cc	/^pars_info_bind_varchar_literal($/;"	f
pars_info_create	pars/pars0pars.cc	/^pars_info_create(void)$/;"	f
pars_info_free	pars/pars0pars.cc	/^pars_info_free($/;"	f
pars_info_get_bound_id	pars/pars0pars.cc	/^pars_info_get_bound_id($/;"	f
pars_info_get_bound_lit	pars/pars0pars.cc	/^pars_info_get_bound_lit($/;"	f
pars_info_lookup_bound_id	pars/pars0pars.cc	/^pars_info_lookup_bound_id($/;"	f
pars_info_lookup_bound_lit	pars/pars0pars.cc	/^pars_info_lookup_bound_lit($/;"	f
pars_info_lookup_user_func	pars/pars0pars.cc	/^pars_info_lookup_user_func($/;"	f
pars_info_t	include/pars0pars.h	/^struct pars_info_t {$/;"	s
pars_insert_statement	pars/pars0pars.cc	/^pars_insert_statement($/;"	f
pars_instr_token	pars/pars0pars.cc	/^pars_res_word_t	pars_instr_token = {PARS_INSTR_TOKEN};$/;"	v
pars_int_token	pars/pars0pars.cc	/^pars_res_word_t	pars_int_token = {PARS_INT_TOKEN};$/;"	v
pars_is_string_type	pars/pars0pars.cc	/^pars_is_string_type($/;"	f	file:
pars_length_token	pars/pars0pars.cc	/^pars_res_word_t	pars_length_token = {PARS_LENGTH_TOKEN};$/;"	v
pars_lexer_close	pars/lexyy.cc	/^pars_lexer_close(void)$/;"	f
pars_like_op	pars/pars0pars.cc	/^pars_like_op($/;"	f	file:
pars_like_rebind	pars/pars0pars.cc	/^pars_like_rebind($/;"	f
pars_op	pars/pars0pars.cc	/^pars_op($/;"	f
pars_open_statement	pars/pars0pars.cc	/^pars_open_statement($/;"	f
pars_open_token	pars/pars0pars.cc	/^pars_res_word_t	pars_open_token = {PARS_OPEN_TOKEN};$/;"	v
pars_order_by	pars/pars0pars.cc	/^pars_order_by($/;"	f
pars_parameter_declaration	pars/pars0pars.cc	/^pars_parameter_declaration($/;"	f
pars_printf_token	pars/pars0pars.cc	/^pars_res_word_t	pars_printf_token = {PARS_PRINTF_TOKEN};$/;"	v
pars_procedure_call	pars/pars0pars.cc	/^pars_procedure_call($/;"	f
pars_procedure_definition	pars/pars0pars.cc	/^pars_procedure_definition($/;"	f
pars_process_assign_list	pars/pars0pars.cc	/^pars_process_assign_list($/;"	f	file:
pars_replstr_token	pars/pars0pars.cc	/^pars_res_word_t	pars_replstr_token = {PARS_REPLSTR_TOKEN};$/;"	v
pars_res_word_t	include/pars0pars.h	/^struct pars_res_word_t{$/;"	s
pars_resolve_exp_columns	pars/pars0pars.cc	/^pars_resolve_exp_columns($/;"	f	file:
pars_resolve_exp_list_columns	pars/pars0pars.cc	/^pars_resolve_exp_list_columns($/;"	f	file:
pars_resolve_exp_list_variables_and_types	pars/pars0pars.cc	/^pars_resolve_exp_list_variables_and_types($/;"	f	file:
pars_resolve_exp_variables_and_types	pars/pars0pars.cc	/^pars_resolve_exp_variables_and_types($/;"	f	file:
pars_resolve_func_data_type	pars/pars0pars.cc	/^pars_resolve_func_data_type($/;"	f	file:
pars_retrieve_table_def	pars/pars0pars.cc	/^pars_retrieve_table_def($/;"	f	file:
pars_retrieve_table_list_defs	pars/pars0pars.cc	/^pars_retrieve_table_list_defs($/;"	f	file:
pars_return_statement	pars/pars0pars.cc	/^pars_return_statement(void)$/;"	f
pars_rnd_str_token	pars/pars0pars.cc	/^pars_res_word_t	pars_rnd_str_token = {PARS_RND_STR_TOKEN};$/;"	v
pars_rnd_token	pars/pars0pars.cc	/^pars_res_word_t	pars_rnd_token = {PARS_RND_TOKEN};$/;"	v
pars_rollback_statement	pars/pars0pars.cc	/^pars_rollback_statement(void)$/;"	f
pars_row_printf_statement	pars/pars0pars.cc	/^pars_row_printf_statement($/;"	f
pars_select_all_columns	pars/pars0pars.cc	/^pars_select_all_columns($/;"	f	file:
pars_select_list	pars/pars0pars.cc	/^pars_select_list($/;"	f
pars_select_statement	pars/pars0pars.cc	/^pars_select_statement($/;"	f
pars_set_dfield_type	pars/pars0pars.cc	/^pars_set_dfield_type($/;"	f	file:
pars_set_parent_in_list	pars/pars0pars.cc	/^pars_set_parent_in_list($/;"	f	file:
pars_share_token	pars/pars0pars.cc	/^pars_res_word_t	pars_share_token = {PARS_SHARE_TOKEN};$/;"	v
pars_sql	pars/pars0pars.cc	/^pars_sql($/;"	f
pars_star_denoter	pars/pars0pars.cc	/^ulint	pars_star_denoter	= 12345678;$/;"	v
pars_stored_procedure_call	pars/pars0pars.cc	/^pars_stored_procedure_call($/;"	f
pars_substr_token	pars/pars0pars.cc	/^pars_res_word_t	pars_substr_token = {PARS_SUBSTR_TOKEN};$/;"	v
pars_sum_token	pars/pars0pars.cc	/^pars_res_word_t	pars_sum_token = {PARS_SUM_TOKEN};$/;"	v
pars_sym_tab_global	pars/pars0pars.cc	/^sym_tab_t*	pars_sym_tab_global;$/;"	v
pars_sysdate_token	pars/pars0pars.cc	/^pars_res_word_t	pars_sysdate_token = {PARS_SYSDATE_TOKEN};$/;"	v
pars_to_binary_token	pars/pars0pars.cc	/^pars_res_word_t	pars_to_binary_token = {PARS_TO_BINARY_TOKEN};$/;"	v
pars_to_char_token	pars/pars0pars.cc	/^pars_res_word_t	pars_to_char_token = {PARS_TO_CHAR_TOKEN};$/;"	v
pars_to_number_token	pars/pars0pars.cc	/^pars_res_word_t	pars_to_number_token = {PARS_TO_NUMBER_TOKEN};$/;"	v
pars_unique_token	pars/pars0pars.cc	/^pars_res_word_t	pars_unique_token = {PARS_UNIQUE_TOKEN};$/;"	v
pars_update_statement	pars/pars0pars.cc	/^pars_update_statement($/;"	f
pars_update_statement_start	pars/pars0pars.cc	/^pars_update_statement_start($/;"	f
pars_update_token	pars/pars0pars.cc	/^pars_res_word_t	pars_update_token = {PARS_UPDATE_TOKEN};$/;"	v
pars_user_func_cb_t	include/pars0pars.h	/^typedef ibool	(*pars_user_func_cb_t)(void* arg, void* user_arg);$/;"	t
pars_user_func_t	include/pars0pars.h	/^struct pars_user_func_t {$/;"	s
pars_variable_declaration	pars/pars0pars.cc	/^pars_variable_declaration($/;"	f
pars_while_statement	pars/pars0pars.cc	/^pars_while_statement($/;"	f
parse	row/row0trunc.cc	/^TruncateLogParser::parse($/;"	f	class:TruncateLogParser
parse	row/row0trunc.cc	/^truncate_t::parse($/;"	f	class:truncate_t
parse_params	fsp/fsp0sysspace.cc	/^SysTablespace::parse_params($/;"	f	class:SysTablespace
parse_redo_entry	row/row0trunc.cc	/^truncate_t::parse_redo_entry($/;"	f	class:truncate_t
parse_start_lsn	include/log0recv.h	/^	lsn_t		parse_start_lsn;$/;"	m	struct:recv_sys_t
parse_table_name	handler/ha_innodb.cc	/^create_table_info_t::parse_table_name($/;"	f	class:create_table_info_t
parse_units	fsp/fsp0sysspace.cc	/^SysTablespace::parse_units($/;"	f	class:SysTablespace
parser	fts/fts0que.cc	/^	st_mysql_ftparser*	parser;	\/*!< fts plugin parser *\/$/;"	m	struct:fts_query_t	file:
parser	fts/fts0que.cc	/^	st_mysql_ftparser*	parser;$/;"	m	struct:fts_phrase_t	file:
parser	include/dict0mem.h	/^			parser;	\/*!< fulltext parser plugin *\/$/;"	m	struct:dict_index_t
parser	include/fts0types.h	/^	st_mysql_ftparser* parser;	\/*!< fts plugin parser *\/$/;"	m	struct:fts_doc_t
parser	include/row0merge.h	/^			parser;		\/*!< fulltext parser plugin *\/$/;"	m	struct:index_def_t
part	handler/ha_innopart.cc	/^	part($/;"	f	class:Altered_partitions
part_sep	handler/ha_innopart.cc	/^const char* part_sep = "#P#";$/;"	v
part_sep	handler/ha_innopart.cc	/^const char* part_sep = "#p#";$/;"	v
part_sep_nix	handler/ha_innopart.cc	/^const char* part_sep_nix = "#P#";$/;"	v
partial	include/trx0roll.h	/^	bool			partial;\/*!< TRUE if we want a partial$/;"	m	struct:roll_node_t
partition_name_casedn_str	handler/ha_innopart.cc	/^Ha_innopart_share::partition_name_casedn_str($/;"	f	class:Ha_innopart_share
pass	include/sync0rw.h	/^	ulint	pass;		\/*!< Pass value given in the lock operation *\/$/;"	m	struct:rw_lock_debug_t
path	include/fsp0space.h	/^	const char* path()	const$/;"	f	class:Tablespace
path	include/gis0type.h	/^	rtr_node_path_t*path;	\/*!< vector holding matching pages *\/$/;"	m	struct:rtr_info
path	row/row0log.cc	/^	const char*	path;	\/*!< where to create temporary file during$/;"	m	struct:row_log_t	file:
path_arr	include/btr0cur.h	/^	btr_path_t*	path_arr;	\/*!< in estimating the number of$/;"	m	struct:btr_cur_t
pc_flush_slot	buf/buf0flu.cc	/^pc_flush_slot(void)$/;"	f	file:
pc_request	buf/buf0flu.cc	/^pc_request($/;"	f	file:
pc_sleep_if_needed	buf/buf0flu.cc	/^pc_sleep_if_needed($/;"	f	file:
pc_wait_finished	buf/buf0flu.cc	/^pc_wait_finished($/;"	f	file:
pcur	include/row0mysql.h	/^	btr_pcur_t*	pcur;		\/*!< persistent cursor used in selects$/;"	m	struct:row_prebuilt_t
pcur	include/row0purge.h	/^	btr_pcur_t	pcur;	\/*!< persistent cursor used in searching the$/;"	m	struct:purge_node_t
pcur	include/row0sel.h	/^	btr_pcur_t	pcur;		\/*!< persistent cursor used to search$/;"	m	struct:plan_t
pcur	include/row0undo.h	/^	btr_pcur_t	pcur;	\/*!< persistent cursor used in searching the$/;"	m	struct:undo_node_t
pcur	include/row0upd.h	/^	btr_pcur_t*	pcur;	\/*!< persistent cursor placed on the clustered$/;"	m	struct:upd_node_t
pcur_is_open	include/row0sel.h	/^	ibool		pcur_is_open;	\/*!< TRUE if pcur has been positioned$/;"	m	struct:plan_t
pcur_pos_t	include/btr0pcur.h	/^enum pcur_pos_t {$/;"	g
pending_io_count	os/os0file.cc	/^AIO::pending_io_count() const$/;"	f	class:AIO
pending_purge_rseg_array	include/trx0sys.h	/^	trx_rseg_t*	const pending_purge_rseg_array[TRX_SYS_N_RSEGS];$/;"	m	struct:trx_sys_t
pfs_delete_thread	include/srv0srv.h	496;"	d
pfs_info	ut/ut0new.cc	/^static PSI_memory_info	pfs_info[] = {$/;"	v	file:
pfs_key_t	include/sync0types.h	/^	typedef	mysql_pfs_key_t	pfs_key_t;$/;"	t	class:LatchMeta
pfs_os_aio_func	include/os0file.ic	/^pfs_os_aio_func($/;"	f
pfs_os_file_close_func	include/os0file.ic	/^pfs_os_file_close_func($/;"	f
pfs_os_file_create_func	include/os0file.ic	/^pfs_os_file_create_func($/;"	f
pfs_os_file_create_simple_func	include/os0file.ic	/^pfs_os_file_create_simple_func($/;"	f
pfs_os_file_create_simple_no_error_handling_func	include/os0file.ic	/^pfs_os_file_create_simple_no_error_handling_func($/;"	f
pfs_os_file_delete_func	include/os0file.ic	/^pfs_os_file_delete_func($/;"	f
pfs_os_file_delete_if_exists_func	include/os0file.ic	/^pfs_os_file_delete_if_exists_func($/;"	f
pfs_os_file_flush_func	include/os0file.ic	/^pfs_os_file_flush_func($/;"	f
pfs_os_file_read_func	include/os0file.ic	/^pfs_os_file_read_func($/;"	f
pfs_os_file_read_no_error_handling_func	include/os0file.ic	/^pfs_os_file_read_no_error_handling_func($/;"	f
pfs_os_file_read_no_error_handling_int_fd_func	include/os0file.ic	/^pfs_os_file_read_no_error_handling_int_fd_func($/;"	f
pfs_os_file_rename_func	include/os0file.ic	/^pfs_os_file_rename_func($/;"	f
pfs_os_file_t	include/os0file.h	/^struct pfs_os_file_t$/;"	s
pfs_os_file_write_func	include/os0file.ic	/^pfs_os_file_write_func($/;"	f
pfs_os_file_write_int_fd_func	include/os0file.ic	/^pfs_os_file_write_int_fd_func($/;"	f
pfs_psi	include/sync0rw.h	/^	struct PSI_rwlock*	pfs_psi;$/;"	m	struct:rw_lock_t	typeref:struct:rw_lock_t::PSI_rwlock
pfs_register_buffer_block	buf/buf0buf.cc	/^pfs_register_buffer_block($/;"	f	file:
pfs_register_thread	include/srv0srv.h	488;"	d
pfs_rw_lock_create_func	include/sync0rw.ic	/^pfs_rw_lock_create_func($/;"	f
pfs_rw_lock_free_func	include/sync0rw.ic	/^pfs_rw_lock_free_func($/;"	f
pfs_rw_lock_s_lock_func	include/sync0rw.ic	/^pfs_rw_lock_s_lock_func($/;"	f
pfs_rw_lock_s_lock_low	include/sync0rw.ic	/^pfs_rw_lock_s_lock_low($/;"	f
pfs_rw_lock_s_unlock_func	include/sync0rw.ic	/^pfs_rw_lock_s_unlock_func($/;"	f
pfs_rw_lock_sx_lock_func	include/sync0rw.ic	/^pfs_rw_lock_sx_lock_func($/;"	f
pfs_rw_lock_sx_lock_low	include/sync0rw.ic	/^pfs_rw_lock_sx_lock_low($/;"	f
pfs_rw_lock_sx_unlock_func	include/sync0rw.ic	/^pfs_rw_lock_sx_unlock_func($/;"	f
pfs_rw_lock_x_lock_func	include/sync0rw.ic	/^pfs_rw_lock_x_lock_func($/;"	f
pfs_rw_lock_x_lock_func_nowait	include/sync0rw.ic	/^pfs_rw_lock_x_lock_func_nowait($/;"	f
pfs_rw_lock_x_unlock_func	include/sync0rw.ic	/^pfs_rw_lock_x_unlock_func($/;"	f
phrase	fts/fts0que.cc	/^	fts_phrase_t*	phrase;		\/*!< Match phrase instance *\/$/;"	m	struct:fts_phrase_param_t	file:
physical	include/page0size.h	/^	inline ulint physical() const$/;"	f	class:page_size_t
pick_next	gis/gis0geo.cc	/^pick_next($/;"	f	file:
pick_seeds	gis/gis0geo.cc	/^pick_seeds($/;"	f	file:
plan_reset_cursor	row/row0sel.cc	/^plan_reset_cursor($/;"	f
plan_t	include/row0sel.h	/^struct plan_t{$/;"	s
plans	include/row0sel.h	/^	plan_t*		plans;		\/*!< array of n_tables many plan nodes$/;"	m	struct:sel_node_t
please	handler/ha_innodb.h	/^	struct _ft_vft		*please;$/;"	m	struct:new_ft_info	typeref:struct:new_ft_info::_ft_vft
plugin_author	handler/i_s.h	/^const char plugin_author[] = "Oracle Corporation";$/;"	v
pointer	include/mem0mem.h	/^	typedef		T*		pointer;$/;"	t	class:mem_heap_allocator
pointer	include/ut0new.h	/^	typedef T*		pointer;$/;"	t	class:ut_allocator
poll	os/os0file.cc	/^LinuxAIOHandler::poll(fil_node_t** m1, void** m2, IORequest* request)$/;"	f	class:LinuxAIOHandler
pool_id	handler/i_s.cc	/^	unsigned	pool_id:MAX_BUFFER_POOLS_BITS;$/;"	m	struct:buf_page_info_t	file:
pool_size	include/buf0buf.h	/^	ulint	pool_size;		\/*!< Buffer Pool size in pages *\/$/;"	m	struct:buf_pool_info_t
pool_unique_id	include/buf0buf.h	/^	ulint	pool_unique_id;		\/*!< Buffer Pool ID *\/$/;"	m	struct:buf_pool_info_t
pop	lock/lock0lock.cc	/^	void pop(const lock_t*& lock, ulint& heap_no)$/;"	f	class:DeadlockChecker	file:
populate_log_file_name	trx/trx0purge.cc	/^	dberr_t populate_log_file_name($/;"	f	namespace:undo
populate_offsets	page/page0cur.cc	/^populate_offsets($/;"	f	file:
pos	fts/fts0opt.cc	/^	ulint		pos;		\/*!< Offset into blocks *\/$/;"	m	struct:fts_zip_t	file:
pos	include/fts0tokenize.h	/^        uchar* pos;     \/*!< word start pointer *\/$/;"	m	struct:st_ft_word
pos	os/os0file.cc	/^	uint16_t		pos;$/;"	m	struct:Slot	file:
pos_state	include/btr0pcur.h	/^	enum pcur_pos_t	pos_state;$/;"	m	struct:btr_pcur_t	typeref:enum:btr_pcur_t::pcur_pos_t
pos_vector_t	fts/fts0que.cc	/^typedef std::vector<ulint, ut_allocator<ulint> >       pos_vector_t;$/;"	t	file:
position	handler/ha_innodb.cc	/^ha_innobase::position($/;"	f	class:ha_innobase
position	handler/ha_innopart.h	/^	position($/;"	f	class:ha_innopart
position	include/row0ftsort.h	/^	ulint		position;	\/*!< token position in the document *\/$/;"	m	struct:row_fts_token_t
position_in_last_part	handler/ha_innopart.cc	/^ha_innopart::position_in_last_part($/;"	f	class:ha_innopart
positions	fts/fts0que.cc	/^	ib_vector_t*	positions;	\/*!< Offsets of a word in a$/;"	m	struct:fts_match_t	file:
positions	include/fts0types.h	/^	ib_vector_t*	positions;	\/*!< an array of the positions the$/;"	m	struct:fts_token_t
posix_fadvise	row/row0merge.cc	51;"	d	file:
post_io_processing	os/os0file.cc	/^AIOHandler::post_io_processing(Slot* slot)$/;"	f	class:AIOHandler
pq_mutex	include/trx0purge.h	/^	PQMutex		pq_mutex;	\/*!< Mutex protecting purge_queue *\/$/;"	m	struct:trx_purge_t
pqueue_t	include/ut0pool.h	/^		std::greater<Element*> >	pqueue_t;$/;"	t	struct:Pool
prdt_get_mbr_from_prdt	lock/lock0prdt.cc	/^prdt_get_mbr_from_prdt($/;"	f
prdt_hash	include/lock0lock.h	/^	hash_table_t*	prdt_hash;		\/*!< hash table of the predicate$/;"	m	struct:lock_sys_t
prdt_page_hash	include/lock0lock.h	/^	hash_table_t*	prdt_page_hash;		\/*!< hash table of the page$/;"	m	struct:lock_sys_t
prebuilt	api/api0api.cc	/^	row_prebuilt_t*	prebuilt;	\/*!< For reading rows *\/$/;"	m	struct:ib_cursor_t	file:
prebuilt	handler/handler0alter.cc	/^	row_prebuilt_t*&	prebuilt;$/;"	m	struct:ha_innobase_inplace_ctx	file:
prebuilt	include/que0que.h	/^	row_prebuilt_t*	prebuilt;	\/*!< prebuilt structure processed by$/;"	m	struct:que_thr_t
prebuilt_array	handler/handler0alter.cc	/^	row_prebuilt_t**		prebuilt_array;$/;"	m	class:ha_innopart_inplace_ctx	file:
prefetch_buf	include/pars0sym.h	/^	sel_buf_t*			prefetch_buf;	\/*!< NULL, or a buffer$/;"	m	struct:sym_node_t
prefix_len	api/api0api.cc	/^	ulint		prefix_len;	\/*!< Column index prefix len or 0 *\/$/;"	m	struct:ib_key_col_t	file:
prefix_len	include/dict0mem.h	/^	unsigned	prefix_len:12;	\/*!< 0 or the length of the column$/;"	m	struct:dict_field_t
prefix_len	include/row0merge.h	/^	ulint		prefix_len;	\/*!< column prefix length, or 0$/;"	m	struct:index_field_t
prepare	lock/lock0lock.cc	/^RecLock::prepare() const$/;"	f	class:RecLock
prepare	read/read0read.cc	/^ReadView::prepare(trx_id_t id)$/;"	f	class:ReadView
prepare_create_table	handler/ha_innodb.cc	/^create_table_info_t::prepare_create_table($/;"	f	class:create_table_info_t
prepare_for_new_partitions	handler/ha_innopart.cc	/^ha_innopart::prepare_for_new_partitions($/;"	f	class:ha_innopart
prepare_inplace_add_virtual	handler/handler0alter.cc	/^prepare_inplace_add_virtual($/;"	f	file:
prepare_inplace_alter_table	handler/handler0alter.cc	/^ha_innobase::prepare_inplace_alter_table($/;"	f	class:ha_innobase
prepare_inplace_alter_table	handler/handler0alter.cc	/^ha_innopart::prepare_inplace_alter_table($/;"	f	class:ha_innopart
prepare_inplace_alter_table_dict	handler/handler0alter.cc	/^prepare_inplace_alter_table_dict($/;"	f
prepare_inplace_drop_virtual	handler/handler0alter.cc	/^prepare_inplace_drop_virtual($/;"	f	file:
prepare_write	mtr/mtr0mtr.cc	/^mtr_t::Command::prepare_write()$/;"	f	class:mtr_t::Command
prev	include/ut0list.h	/^	ib_list_node_t*		prev;		\/*!< previous node *\/$/;"	m	struct:ib_list_node_t
prev	include/ut0lst.h	/^	Type*		prev;			\/*!< pointer to the previous$/;"	m	struct:ut_list_node
prev_node	include/que0que.h	/^	que_node_t*	prev_node;	\/*!< pointer to the node from which$/;"	m	struct:que_thr_t
primary_key_is_clustered	handler/ha_innodb.cc	/^ha_innobase::primary_key_is_clustered() const$/;"	f	class:ha_innobase
print	include/lock0priv.h	/^lock_t::print(std::ostream& out) const$/;"	f	class:lock_t
print	include/lock0priv.h	/^std::ostream& lock_rec_t::print(std::ostream& out) const$/;"	f	class:lock_rec_t
print	include/lock0priv.h	/^std::ostream& lock_table_t::print(std::ostream& out) const$/;"	f	class:lock_table_t
print	lock/lock0lock.cc	/^DeadlockChecker::print(const char* msg)$/;"	f	class:DeadlockChecker
print	lock/lock0lock.cc	/^DeadlockChecker::print(const lock_t* lock)$/;"	f	class:DeadlockChecker
print	lock/lock0lock.cc	/^DeadlockChecker::print(const trx_t* trx, ulint max_query_len)$/;"	f	class:DeadlockChecker
print	mtr/mtr0mtr.cc	/^mtr_t::print() const$/;"	f	class:mtr_t
print	os/os0file.cc	/^AIO::print(FILE* file)$/;"	f	class:AIO
print_all	os/os0file.cc	/^AIO::print_all(FILE* file)$/;"	f	class:AIO
print_error	handler/ha_innopart.cc	/^ha_innopart::print_error($/;"	f	class:ha_innopart
print_limits	include/read0types.h	/^	void print_limits(FILE* file) const$/;"	f	class:ReadView
print_segment_info	os/os0file.cc	/^AIO::print_segment_info($/;"	f	class:AIO
print_to_file	os/os0file.cc	/^AIO::print_to_file(FILE* file)$/;"	f	class:AIO
proc_eval_step	include/eval0proc.ic	/^proc_eval_step($/;"	f
proc_id	include/pars0pars.h	/^	sym_node_t*	proc_id;	\/*!< procedure name symbol in the symbol$/;"	m	struct:proc_node_t
proc_node_t	include/pars0pars.h	/^struct proc_node_t{$/;"	s
proc_step	include/eval0proc.ic	/^proc_step($/;"	f
processed_len	include/row0ftsort.h	/^	ulint			processed_len;  \/*!< processed string length *\/$/;"	m	struct:fts_tokenize_ctx
proximity_pos	fts/fts0que.cc	/^	fts_proximity_t*	proximity_pos;$/;"	m	struct:fts_phrase_t	file:
prtype	include/data0type.h	/^	unsigned	prtype:32;	\/*!< precise type; MySQL data$/;"	m	struct:dtype_t
prtype	include/dict0mem.h	/^	unsigned	prtype:32;	\/*!< precise type; MySQL data$/;"	m	struct:dict_col_t
prtype	include/pars0pars.h	/^	ulint		prtype;		\/*!< precise type, e.g. DATA_UNSIGNED *\/$/;"	m	struct:pars_bound_lit_t
prtype_mask	include/dict0dict.h	/^	ulint		prtype_mask;	\/* required column precise type mask;$/;"	m	struct:dict_col_meta_t
psort_common	include/row0ftsort.h	/^	fts_psort_common_t*	psort_common;	\/*!< ptr to all psort info *\/$/;"	m	struct:fts_psort_t
psort_id	include/row0ftsort.h	/^	ulint			psort_id;	\/*!< Parallel sort ID *\/$/;"	m	struct:fts_psort_t
ptr	api/api0api.cc	/^	dtuple_t*		ptr;	\/*!< The internal tuple$/;"	m	struct:ib_tuple_t	file:
ptr	fts/fts0opt.cc	/^	void*		ptr;		\/*!< The message contents *\/$/;"	m	struct:fts_msg_t	file:
ptr	include/fts0ast.h	/^	fts_ast_string_t*	ptr;		\/*!< Pointer to term string.*\/$/;"	m	struct:fts_ast_term_t
ptr	include/fts0ast.h	/^	fts_ast_string_t*	ptr;		\/*!< Pointer to text string.*\/$/;"	m	struct:fts_ast_text_t
ptr	os/os0file.cc	/^	byte*			ptr;$/;"	m	struct:Slot	file:
punch_hole	include/fil0fil.h	/^	bool		punch_hole;$/;"	m	struct:fil_node_t
purge_iter_t	include/trx0purge.h	/^	purge_iter_t()$/;"	f	struct:purge_iter_t
purge_iter_t	include/trx0purge.h	/^struct purge_iter_t {$/;"	s
purge_node	include/btr0cur.h	/^	purge_node_t*	purge_node;	\/*!< purge node, for BTR_DELETE *\/$/;"	m	struct:btr_cur_t
purge_node_t	include/row0purge.h	/^struct purge_node_t{$/;"	s
purge_pq_t	include/trx0types.h	/^	TrxUndoRsegs>	purge_pq_t;$/;"	t
purge_queue	include/trx0purge.h	/^	purge_pq_t*	purge_queue;	\/*!< Binary min-heap, ordered on$/;"	m	struct:trx_purge_t
purge_state_t	include/trx0purge.h	/^enum purge_state_t {$/;"	g
purge_sys	trx/trx0purge.cc	/^trx_purge_t*	purge_sys = NULL;$/;"	v
purge_sys_pq_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	purge_sys_pq_mutex_key;$/;"	v
purpose	include/fil0fil.h	/^	fil_type_t	purpose;\/*!< purpose *\/$/;"	m	struct:fil_space_t
push	include/dyn0buf.h	/^		Type push(ib_uint32_t size)$/;"	f	class:dyn_buf_t::block_t
push	include/dyn0buf.h	/^	Type push(ib_uint32_t size)$/;"	f	class:dyn_buf_t
push	include/dyn0buf.h	/^	void push(const byte* ptr, ib_uint32_t len)$/;"	f	class:dyn_buf_t
push	lock/lock0lock.cc	/^	bool push(const lock_t*	lock, ulint heap_no)$/;"	f	class:DeadlockChecker	file:
push_back	include/dyn0buf.h	/^	void push_back(block_t* block)$/;"	f	class:dyn_buf_t
push_back	include/trx0types.h	/^	void push_back(trx_rseg_t* rseg)$/;"	f	class:TrxUndoRsegs
push_back	read/read0read.cc	/^ReadView::ids_t::push_back(value_type value)$/;"	f	class:ReadView::ids_t
put	include/ut0pool.h	/^	void put(Element* elem)$/;"	f	struct:Pool
put_nth_field	trx/trx0i_s.cc	/^put_nth_field($/;"	f	file:
q_proc	api/api0api.cc	/^	ib_qry_proc_t	q_proc;		\/*!< Query processing info *\/$/;"	m	struct:ib_cursor_t	file:
que0que_h	include/que0que.h	27;"	d
que0types_h	include/que0types.h	27;"	d
que_close	que/que0que.cc	/^que_close(void)$/;"	f
que_common_t	include/que0types.h	/^struct que_common_t{$/;"	s
que_cur_t	include/que0que.h	/^enum que_cur_t {$/;"	g
que_eval_sql	que/que0que.cc	/^que_eval_sql($/;"	f
que_fork_create	que/que0que.cc	/^que_fork_create($/;"	f
que_fork_get_child	include/que0que.ic	/^que_fork_get_child($/;"	f
que_fork_get_first_thr	include/que0que.ic	/^que_fork_get_first_thr($/;"	f
que_fork_scheduler_round_robin	que/que0que.cc	/^que_fork_scheduler_round_robin($/;"	f
que_fork_start_command	que/que0que.cc	/^que_fork_start_command($/;"	f
que_fork_t	include/que0que.h	/^struct que_fork_t{$/;"	s
que_graph_free	que/que0que.cc	/^que_graph_free($/;"	f
que_graph_free_recursive	que/que0que.cc	/^que_graph_free_recursive($/;"	f
que_graph_free_stat_list	que/que0que.cc	/^que_graph_free_stat_list($/;"	f	file:
que_graph_is_select	include/que0que.ic	/^que_graph_is_select($/;"	f
que_init	que/que0que.cc	/^que_init(void)$/;"	f
que_node_get_containing_loop_node	que/que0que.cc	/^que_node_get_containing_loop_node($/;"	f
que_node_get_data_type	include/que0que.ic	/^que_node_get_data_type($/;"	f
que_node_get_like_node	eval/eval0eval.cc	/^que_node_get_like_node($/;"	f
que_node_get_next	include/que0que.ic	/^que_node_get_next($/;"	f
que_node_get_parent	include/que0que.ic	/^que_node_get_parent($/;"	f
que_node_get_type	include/que0que.ic	/^que_node_get_type($/;"	f
que_node_get_val	include/que0que.ic	/^que_node_get_val($/;"	f
que_node_get_val_buf_size	include/que0que.ic	/^que_node_get_val_buf_size($/;"	f
que_node_list_add_last	include/que0que.ic	/^que_node_list_add_last($/;"	f
que_node_list_get_last	include/que0que.ic	/^que_node_list_get_last($/;"	f
que_node_list_get_len	include/que0que.ic	/^que_node_list_get_len($/;"	f
que_node_set_parent	include/que0que.ic	/^que_node_set_parent($/;"	f
que_node_set_val_buf_size	include/que0que.ic	/^que_node_set_val_buf_size($/;"	f
que_node_t	include/que0types.h	/^typedef void	que_node_t;$/;"	t
que_node_type_string	que/que0que.cc	/^que_node_type_string($/;"	f
que_run_threads	que/que0que.cc	/^que_run_threads($/;"	f
que_run_threads_low	que/que0que.cc	/^que_run_threads_low($/;"	f	file:
que_state	include/trx0trx.h	/^	trx_que_t	que_state;	\/*!< valid when trx->state$/;"	m	struct:trx_lock_t
que_t	include/que0types.h	/^typedef	struct que_fork_t	que_t;$/;"	t	typeref:struct:que_fork_t
que_thr_create	que/que0que.cc	/^que_thr_create($/;"	f
que_thr_dec_refer_count	que/que0que.cc	/^que_thr_dec_refer_count($/;"	f	file:
que_thr_end_lock_wait	que/que0que.cc	/^que_thr_end_lock_wait($/;"	f
que_thr_init_command	que/que0que.cc	/^que_thr_init_command($/;"	f
que_thr_lock_t	include/que0que.h	/^enum que_thr_lock_t {$/;"	g
que_thr_move_to_run_state	que/que0que.cc	/^que_thr_move_to_run_state($/;"	f	file:
que_thr_move_to_run_state_for_mysql	que/que0que.cc	/^que_thr_move_to_run_state_for_mysql($/;"	f
que_thr_node_step	que/que0que.cc	/^que_thr_node_step($/;"	f	file:
que_thr_peek_stop	include/que0que.ic	/^que_thr_peek_stop($/;"	f
que_thr_state_t	include/que0que.h	/^enum que_thr_state_t {$/;"	g
que_thr_step	que/que0que.cc	/^que_thr_step($/;"	f
que_thr_stop	que/que0que.cc	/^que_thr_stop($/;"	f
que_thr_stop_for_mysql	que/que0que.cc	/^que_thr_stop_for_mysql($/;"	f
que_thr_stop_for_mysql_no_error	que/que0que.cc	/^que_thr_stop_for_mysql_no_error($/;"	f
que_thr_t	include/que0que.h	/^struct que_thr_t{$/;"	s
query	include/trx0purge.h	/^	que_t*		query;		\/*!< The query graph which will do the$/;"	m	struct:trx_purge_t
query_cache_inv_id	include/dict0mem.h	/^	trx_id_t				query_cache_inv_id;$/;"	m	struct:dict_table_t
query_graph	include/pars0sym.h	/^	que_t*			query_graph;$/;"	m	struct:sym_tab_t
query_heap	api/api0api.cc	/^	mem_heap_t*	query_heap;	\/*!< Heap to use for query graphs *\/$/;"	m	struct:ib_cursor_t	file:
queue	include/que0que.h	/^			queue;		\/*!< list of runnable thread nodes in$/;"	m	struct:que_thr_t
quiesce	include/dict0mem.h	/^	ib_quiesce_t				quiesce;$/;"	m	struct:dict_table_t
quoted	pars/lexyy.cc	1010;"	d	file:
r_rec	include/gis0type.h	/^		rec_t*	r_rec;		\/*!< matched record *\/$/;"	m	struct:rtr_rec
random_value	os/os0file.cc	/^void Encryption::random_value(byte* value)$/;"	f	class:Encryption
rank	include/fts0fts.h	/^	fts_rank_t	rank;		\/*!< Rank is between 0 .. 1 *\/$/;"	m	struct:fts_ranking_t
rankings_by_id	include/fts0fts.h	/^	ib_rbt_t*	rankings_by_id;	\/*!< RB tree of type fts_ranking_t$/;"	m	struct:fts_result_t
rankings_by_rank	include/fts0fts.h	/^	ib_rbt_t*	rankings_by_rank;\/*!< RB tree of type fts_ranking_t$/;"	m	struct:fts_result_t
rbt_add_node	ut/ut0rbt.cc	/^rbt_add_node($/;"	f
rbt_balance_left	ut/ut0rbt.cc	/^rbt_balance_left($/;"	f	file:
rbt_balance_right	ut/ut0rbt.cc	/^rbt_balance_right($/;"	f	file:
rbt_balance_tree	ut/ut0rbt.cc	/^rbt_balance_tree($/;"	f	file:
rbt_check_ordering	ut/ut0rbt.cc	/^rbt_check_ordering($/;"	f	file:
rbt_clear	ut/ut0rbt.cc	/^rbt_clear($/;"	f
rbt_compare	include/ut0rbt.h	110;"	d
rbt_count_black_nodes	ut/ut0rbt.cc	/^rbt_count_black_nodes($/;"	f	file:
rbt_create	ut/ut0rbt.cc	/^rbt_create($/;"	f
rbt_create_arg_cmp	ut/ut0rbt.cc	/^rbt_create_arg_cmp($/;"	f
rbt_delete	ut/ut0rbt.cc	/^rbt_delete($/;"	f
rbt_detach_node	ut/ut0rbt.cc	/^rbt_detach_node($/;"	f	file:
rbt_eject_node	ut/ut0rbt.cc	/^rbt_eject_node($/;"	f	file:
rbt_empty	include/ut0rbt.h	104;"	d
rbt_find_predecessor	ut/ut0rbt.cc	/^rbt_find_predecessor($/;"	f	file:
rbt_find_successor	ut/ut0rbt.cc	/^rbt_find_successor($/;"	f	file:
rbt_first	ut/ut0rbt.cc	/^rbt_first($/;"	f
rbt_free	ut/ut0rbt.cc	/^rbt_free($/;"	f
rbt_free_node	ut/ut0rbt.cc	/^rbt_free_node($/;"	f	file:
rbt_insert	ut/ut0rbt.cc	/^rbt_insert($/;"	f
rbt_last	ut/ut0rbt.cc	/^rbt_last($/;"	f
rbt_lookup	ut/ut0rbt.cc	/^rbt_lookup($/;"	f
rbt_lower_bound	ut/ut0rbt.cc	/^rbt_lower_bound($/;"	f
rbt_merge_uniq	ut/ut0rbt.cc	/^rbt_merge_uniq($/;"	f
rbt_merge_uniq_destructive	ut/ut0rbt.cc	/^rbt_merge_uniq_destructive($/;"	f
rbt_next	ut/ut0rbt.cc	/^rbt_next($/;"	f
rbt_prev	ut/ut0rbt.cc	/^rbt_prev($/;"	f
rbt_print	ut/ut0rbt.cc	/^rbt_print($/;"	f
rbt_print_subtree	ut/ut0rbt.cc	/^rbt_print_subtree($/;"	f	file:
rbt_remove_node	ut/ut0rbt.cc	/^rbt_remove_node($/;"	f
rbt_remove_node_and_rebalance	ut/ut0rbt.cc	/^rbt_remove_node_and_rebalance($/;"	f	file:
rbt_replace_node	ut/ut0rbt.cc	/^rbt_replace_node($/;"	f	file:
rbt_rotate_left	ut/ut0rbt.cc	/^rbt_rotate_left($/;"	f	file:
rbt_rotate_right	ut/ut0rbt.cc	/^rbt_rotate_right($/;"	f	file:
rbt_search	ut/ut0rbt.cc	/^rbt_search($/;"	f
rbt_search_cmp	ut/ut0rbt.cc	/^rbt_search_cmp($/;"	f
rbt_size	include/ut0rbt.h	101;"	d
rbt_tree_add_child	ut/ut0rbt.cc	/^rbt_tree_add_child($/;"	f	file:
rbt_tree_insert	ut/ut0rbt.cc	/^rbt_tree_insert($/;"	f	file:
rbt_upper_bound	ut/ut0rbt.cc	/^rbt_upper_bound($/;"	f
rbt_validate	ut/ut0rbt.cc	/^rbt_validate($/;"	f
rbt_value	include/ut0rbt.h	107;"	d
read	os/os0file.cc	/^	void read(Slot* slot)$/;"	f	class:SimulatedAIOHandler	file:
read0read_h	include/read0read.h	27;"	d
read0types_h	include/read0types.h	27;"	d
read_ahead_area	include/buf0buf.h	/^	ulint		read_ahead_area;\/*!< size in pages of the area which$/;"	m	struct:buf_pool_t
read_arg	include/fts0types.h	/^	void*		read_arg;	\/*!< Arg for the sql_callback *\/$/;"	m	struct:fts_fetch_t
read_first_page	fsp/fsp0file.cc	/^Datafile::read_first_page(bool read_only_mode)$/;"	f	class:Datafile
read_just_key	include/row0mysql.h	/^	unsigned	read_just_key:1;\/*!< set to 1 when MySQL calls$/;"	m	struct:row_prebuilt_t
read_link_file	fsp/fsp0file.cc	/^RemoteDatafile::read_link_file($/;"	f	class:RemoteDatafile
read_lsn_and_check_flags	fsp/fsp0sysspace.cc	/^SysTablespace::read_lsn_and_check_flags(lsn_t* flushed_lsn)$/;"	f	class:SysTablespace
read_nodes_graph	fts/fts0opt.cc	/^	que_t*		read_nodes_graph;$/;"	m	struct:fts_optimize_graph_t	file:
read_nodes_graph	fts/fts0que.cc	/^	que_t*		read_nodes_graph;$/;"	m	struct:fts_query_t	file:
read_only	include/trx0trx.h	/^	bool		read_only;	\/*!< true if transaction is flagged$/;"	m	struct:trx_t
read_range_first	handler/ha_innopart.h	/^	read_range_first($/;"	f	class:ha_innopart
read_range_first_in_part	handler/ha_innopart.cc	/^ha_innopart::read_range_first_in_part($/;"	f	class:ha_innopart
read_range_next	handler/ha_innopart.h	/^	read_range_next()$/;"	f	class:ha_innopart
read_range_next_in_part	handler/ha_innopart.cc	/^ha_innopart::read_range_next_in_part($/;"	f	class:ha_innopart
read_record	include/fts0types.h	/^			read_record;	\/*!< Callback for reading index$/;"	m	struct:fts_fetch_t
read_time	handler/ha_innodb.cc	/^ha_innobase::read_time($/;"	f	class:ha_innobase
read_ulint	include/mtr0mtr.ic	/^mtr_t::read_ulint(const byte* ptr, mlog_id_t type) const$/;"	f	class:mtr_t
read_view	include/row0sel.h	/^	ReadView*	read_view;	\/*!< if the query is a non-locking$/;"	m	struct:sel_node_t
read_view	include/trx0trx.h	/^	ReadView*	read_view;	\/*!< consistent read view used in the$/;"	m	struct:trx_t
read_write	include/trx0trx.h	/^	bool		read_write;	\/*!< if read and write operation *\/$/;"	m	struct:trx_t
realloc	include/fts0ast.h	36;"	d
realloc	pars/lexyy.cc	966;"	d	file:
reallocate	include/ut0new.h	/^	reallocate($/;"	f	class:ut_allocator
rebind	include/mem0mem.h	/^	struct rebind$/;"	s	class:mem_heap_allocator
rebind	include/ut0new.h	/^	struct rebind {$/;"	s	class:ut_allocator
rebuild	include/row0merge.h	/^	bool		rebuild;	\/*!< whether the table is rebuilt *\/$/;"	m	struct:index_def_t
rec	include/dict0mem.h	/^	rec_t*		rec;$/;"	m	class:last_ops_cur_t
rec	include/page0cur.h	/^	rec_t*		rec;	\/*!< pointer to a record on page *\/$/;"	m	struct:page_cur_t
rec_1_get_field_end_info	include/rem0rec.ic	/^rec_1_get_field_end_info($/;"	f
rec_1_get_field_start_offs	include/rem0rec.ic	/^rec_1_get_field_start_offs($/;"	f
rec_1_get_prev_field_end_info	include/rem0rec.ic	/^rec_1_get_prev_field_end_info($/;"	f
rec_1_set_field_end_info	include/rem0rec.ic	/^rec_1_set_field_end_info($/;"	f
rec_2_get_field_end_info	include/rem0rec.ic	/^rec_2_get_field_end_info($/;"	f
rec_2_get_field_start_offs	include/rem0rec.ic	/^rec_2_get_field_start_offs($/;"	f
rec_2_get_prev_field_end_info	include/rem0rec.ic	/^rec_2_get_prev_field_end_info($/;"	f
rec_2_is_field_extern	include/rem0rec.ic	/^rec_2_is_field_extern($/;"	f
rec_2_set_field_end_info	include/rem0rec.ic	/^rec_2_set_field_end_info($/;"	f
rec_buf	include/gis0type.h	/^	byte		rec_buf[UNIV_PAGE_SIZE_MAX * 2];$/;"	m	struct:matched_rec
rec_cache	include/dict0mem.h	/^	rec_cache_t	rec_cache;$/;"	m	struct:dict_index_t
rec_cache_t	include/dict0mem.h	/^	rec_cache_t()$/;"	f	class:rec_cache_t
rec_cache_t	include/dict0mem.h	/^class rec_cache_t$/;"	c
rec_cached	include/trx0trx.h	/^	ulint		rec_cached;	\/*!< Next free rec lock in pool *\/$/;"	m	struct:trx_lock_t
rec_convert_dtuple_to_rec	rem/rem0rec.cc	/^rec_convert_dtuple_to_rec($/;"	f
rec_convert_dtuple_to_rec_comp	rem/rem0rec.cc	/^rec_convert_dtuple_to_rec_comp($/;"	f
rec_convert_dtuple_to_rec_new	rem/rem0rec.cc	/^rec_convert_dtuple_to_rec_new($/;"	f	file:
rec_convert_dtuple_to_rec_old	rem/rem0rec.cc	/^rec_convert_dtuple_to_rec_old($/;"	f	file:
rec_convert_dtuple_to_temp	rem/rem0rec.cc	/^rec_convert_dtuple_to_temp($/;"	f
rec_copy	include/rem0rec.ic	/^rec_copy($/;"	f
rec_copy_prefix_to_buf	rem/rem0rec.cc	/^rec_copy_prefix_to_buf($/;"	f
rec_copy_prefix_to_buf_old	rem/rem0rec.cc	/^rec_copy_prefix_to_buf_old($/;"	f	file:
rec_copy_prefix_to_dtuple	rem/rem0rec.cc	/^rec_copy_prefix_to_dtuple($/;"	f
rec_dummy	rem/rem0rec.cc	/^ulint	rec_dummy;$/;"	v
rec_field_no	include/row0mysql.h	/^	ulint	rec_field_no;		\/*!< field number of the column in an$/;"	m	struct:mysql_row_templ_t
rec_fold	include/rem0rec.ic	/^rec_fold($/;"	f
rec_format_enum	include/rem0types.h	/^enum rec_format_enum {$/;"	g
rec_format_t	include/rem0types.h	/^typedef enum rec_format_enum rec_format_t;$/;"	t	typeref:enum:rec_format_enum
rec_get_1byte_offs_flag	include/rem0rec.ic	/^rec_get_1byte_offs_flag($/;"	f
rec_get_bit_field_1	include/rem0rec.ic	/^rec_get_bit_field_1($/;"	f
rec_get_bit_field_2	include/rem0rec.ic	/^rec_get_bit_field_2($/;"	f
rec_get_converted_extra_size	include/rem0rec.ic	/^rec_get_converted_extra_size($/;"	f
rec_get_converted_size	include/rem0rec.ic	/^rec_get_converted_size($/;"	f
rec_get_converted_size_comp	rem/rem0rec.cc	/^rec_get_converted_size_comp($/;"	f
rec_get_converted_size_comp_prefix	rem/rem0rec.cc	/^rec_get_converted_size_comp_prefix($/;"	f
rec_get_converted_size_comp_prefix_low	rem/rem0rec.cc	/^rec_get_converted_size_comp_prefix_low($/;"	f
rec_get_converted_size_temp	rem/rem0rec.cc	/^rec_get_converted_size_temp($/;"	f
rec_get_data_size_old	include/rem0rec.ic	/^rec_get_data_size_old($/;"	f
rec_get_deleted_flag	include/rem0rec.ic	/^rec_get_deleted_flag($/;"	f
rec_get_end	include/rem0rec.h	747;"	d
rec_get_end	include/rem0rec.ic	/^rec_get_end($/;"	f
rec_get_field_start_offs	include/rem0rec.ic	/^rec_get_field_start_offs($/;"	f
rec_get_heap_no_new	include/rem0rec.ic	/^rec_get_heap_no_new($/;"	f
rec_get_heap_no_old	include/rem0rec.ic	/^rec_get_heap_no_old($/;"	f
rec_get_info_and_status_bits	include/rem0rec.ic	/^rec_get_info_and_status_bits($/;"	f
rec_get_info_bits	include/rem0rec.ic	/^rec_get_info_bits($/;"	f
rec_get_n_extern_new	rem/rem0rec.cc	/^rec_get_n_extern_new($/;"	f
rec_get_n_fields	include/rem0rec.ic	/^rec_get_n_fields($/;"	f
rec_get_n_fields_old	include/rem0rec.ic	/^rec_get_n_fields_old($/;"	f
rec_get_n_owned_new	include/rem0rec.ic	/^rec_get_n_owned_new($/;"	f
rec_get_n_owned_old	include/rem0rec.ic	/^rec_get_n_owned_old($/;"	f
rec_get_next_offs	include/rem0rec.ic	/^rec_get_next_offs($/;"	f
rec_get_next_ptr	include/rem0rec.ic	/^rec_get_next_ptr($/;"	f
rec_get_next_ptr_const	include/rem0rec.ic	/^rec_get_next_ptr_const($/;"	f
rec_get_node_ptr_flag	include/rem0rec.ic	/^rec_get_node_ptr_flag($/;"	f
rec_get_nth_field	include/rem0rec.h	549;"	d
rec_get_nth_field_offs	include/rem0rec.ic	/^rec_get_nth_field_offs($/;"	f
rec_get_nth_field_offs_old	rem/rem0rec.cc	/^rec_get_nth_field_offs_old($/;"	f
rec_get_nth_field_old	include/rem0rec.h	523;"	d
rec_get_nth_field_size	include/rem0rec.ic	/^rec_get_nth_field_size($/;"	f
rec_get_offsets	include/rem0rec.h	462;"	d
rec_get_offsets	include/rem0rec.h	465;"	d
rec_get_offsets_func	rem/rem0rec.cc	/^rec_get_offsets_func($/;"	f
rec_get_offsets_reverse	rem/rem0rec.cc	/^rec_get_offsets_reverse($/;"	f
rec_get_start	include/rem0rec.h	746;"	d
rec_get_start	include/rem0rec.ic	/^rec_get_start($/;"	f
rec_get_status	include/rem0rec.ic	/^rec_get_status($/;"	f
rec_get_trx_id	rem/rem0rec.cc	/^rec_get_trx_id($/;"	f
rec_hash	include/lock0lock.h	/^	hash_table_t*	rec_hash;		\/*!< hash table of the record$/;"	m	struct:lock_sys_t
rec_index_print	include/rem0rec.h	/^	rec_index_print(const rec_t* rec, const dict_index_t* index) :$/;"	f	struct:rec_index_print
rec_index_print	include/rem0rec.h	/^struct rec_index_print$/;"	s
rec_info_bits_valid	include/rem0rec.ic	/^rec_info_bits_valid($/;"	f
rec_init_offsets	rem/rem0rec.cc	/^rec_init_offsets($/;"	f	file:
rec_init_offsets_comp_ordinary	rem/rem0rec.cc	/^rec_init_offsets_comp_ordinary($/;"	f
rec_init_offsets_temp	rem/rem0rec.cc	/^rec_init_offsets_temp($/;"	f
rec_len	include/dict0mem.h	/^	ulint			rec_len;$/;"	m	struct:dict_vcol_templ_t
rec_list	include/log0recv.h	/^			rec_list;\/*!< list of log records for this page *\/$/;"	m	struct:recv_addr_t
rec_list	include/log0recv.h	/^			rec_list;\/*!< list of log records for this page *\/$/;"	m	struct:recv_t
rec_lock	include/lock0priv.h	/^		lock_rec_t	rec_lock;\/*!< record lock *\/$/;"	m	union:lock_t::__anon7
rec_n_fields_is_sane	include/rem0rec.ic	/^rec_n_fields_is_sane($/;"	f
rec_offs_any_extern	include/rem0rec.ic	/^rec_offs_any_extern($/;"	f
rec_offs_any_null_extern	include/rem0rec.ic	/^rec_offs_any_null_extern($/;"	f
rec_offs_base	include/rem0rec.ic	930;"	d	file:
rec_offs_comp	include/rem0rec.ic	/^rec_offs_comp($/;"	f
rec_offs_data_size	include/rem0rec.ic	/^rec_offs_data_size($/;"	f
rec_offs_extra_size	include/rem0rec.ic	/^rec_offs_extra_size($/;"	f
rec_offs_get_n_alloc	include/rem0rec.ic	/^rec_offs_get_n_alloc($/;"	f
rec_offs_init	include/rem0rec.h	681;"	d
rec_offs_make_nth_extern	rem/rem0rec.cc	/^rec_offs_make_nth_extern($/;"	f
rec_offs_make_valid	include/rem0rec.h	509;"	d
rec_offs_make_valid	include/rem0rec.ic	/^rec_offs_make_valid($/;"	f
rec_offs_n_extern	include/rem0rec.ic	/^rec_offs_n_extern($/;"	f
rec_offs_n_fields	include/rem0rec.ic	/^rec_offs_n_fields($/;"	f
rec_offs_nth_extern	include/rem0rec.ic	/^rec_offs_nth_extern($/;"	f
rec_offs_nth_size	include/rem0rec.ic	/^rec_offs_nth_size($/;"	f
rec_offs_nth_sql_null	include/rem0rec.ic	/^rec_offs_nth_sql_null($/;"	f
rec_offs_set_n_alloc	include/rem0rec.ic	/^rec_offs_set_n_alloc($/;"	f
rec_offs_set_n_fields	include/rem0rec.ic	/^rec_offs_set_n_fields($/;"	f
rec_offs_size	include/rem0rec.ic	/^rec_offs_size($/;"	f
rec_offs_validate	include/rem0rec.ic	/^rec_offs_validate($/;"	f
rec_offsets_print	include/rem0rec.h	/^	rec_offsets_print(const rec_t* rec, const ulint* offsets) :$/;"	f	struct:rec_offsets_print
rec_offsets_print	include/rem0rec.h	/^struct rec_offsets_print$/;"	s
rec_pool	include/trx0trx.h	/^	lock_pool_t	rec_pool;	\/*!< Pre-allocated record locks *\/$/;"	m	struct:trx_lock_t
rec_print	rem/rem0rec.cc	/^rec_print($/;"	f
rec_print_comp	rem/rem0rec.cc	/^rec_print_comp($/;"	f
rec_print_mbr_old	rem/rem0rec.cc	/^rec_print_mbr_old($/;"	f
rec_print_mbr_rec	rem/rem0rec.cc	/^rec_print_mbr_rec($/;"	f
rec_print_new	rem/rem0rec.cc	/^rec_print_new($/;"	f
rec_print_old	rem/rem0rec.cc	/^rec_print_old($/;"	f
rec_printer	include/rem0rec.h	/^	rec_printer(const dfield_t* field, ulint n)$/;"	f	class:rec_printer
rec_printer	include/rem0rec.h	/^	rec_printer(const dtuple_t* tuple)$/;"	f	class:rec_printer
rec_printer	include/rem0rec.h	/^	rec_printer(const rec_t* rec, const ulint* offsets)$/;"	f	class:rec_printer
rec_printer	include/rem0rec.h	/^	rec_printer(const rec_t* rec, ulint info, const ulint* offsets)$/;"	f	class:rec_printer
rec_printer	include/rem0rec.h	/^class rec_printer : public std::ostringstream {$/;"	c
rec_set_1byte_offs_flag	include/rem0rec.ic	/^rec_set_1byte_offs_flag($/;"	f
rec_set_bit_field_1	include/rem0rec.ic	/^rec_set_bit_field_1($/;"	f
rec_set_bit_field_2	include/rem0rec.ic	/^rec_set_bit_field_2($/;"	f
rec_set_deleted_flag_new	include/rem0rec.ic	/^rec_set_deleted_flag_new($/;"	f
rec_set_deleted_flag_old	include/rem0rec.ic	/^rec_set_deleted_flag_old($/;"	f
rec_set_heap_no_new	include/rem0rec.ic	/^rec_set_heap_no_new($/;"	f
rec_set_heap_no_old	include/rem0rec.ic	/^rec_set_heap_no_old($/;"	f
rec_set_info_and_status_bits	include/rem0rec.ic	/^rec_set_info_and_status_bits($/;"	f
rec_set_info_bits_new	include/rem0rec.ic	/^rec_set_info_bits_new($/;"	f
rec_set_info_bits_old	include/rem0rec.ic	/^rec_set_info_bits_old($/;"	f
rec_set_n_fields_old	include/rem0rec.ic	/^rec_set_n_fields_old($/;"	f
rec_set_n_owned_new	include/rem0rec.ic	/^rec_set_n_owned_new($/;"	f
rec_set_n_owned_old	include/rem0rec.ic	/^rec_set_n_owned_old($/;"	f
rec_set_next_offs_new	include/rem0rec.ic	/^rec_set_next_offs_new($/;"	f
rec_set_next_offs_old	include/rem0rec.ic	/^rec_set_next_offs_old($/;"	f
rec_set_nth_field	include/rem0rec.ic	/^rec_set_nth_field($/;"	f
rec_set_nth_field_null_bit	rem/rem0rec.cc	/^rec_set_nth_field_null_bit($/;"	f
rec_set_nth_field_sql_null	rem/rem0rec.cc	/^rec_set_nth_field_sql_null($/;"	f
rec_set_status	include/rem0rec.ic	/^rec_set_status($/;"	f
rec_size	include/dict0mem.h	/^	ulint		rec_size;$/;"	m	class:rec_cache_t
rec_t	include/rem0types.h	/^typedef byte	rec_t;$/;"	t
rec_type	include/row0purge.h	/^	ulint		rec_type;\/*!< undo log record type: TRX_UNDO_INSERT_REC,$/;"	m	struct:purge_node_t
rec_type	include/row0undo.h	/^	ulint		rec_type;\/*!< undo log record type: TRX_UNDO_INSERT_REC,$/;"	m	struct:undo_node_t
rec_validate	rem/rem0rec.cc	/^rec_validate($/;"	f
rec_validate_old	rem/rem0rec.cc	/^rec_validate_old($/;"	f	file:
recalc_pool	dict/dict0stats_bg.cc	/^static recalc_pool_t*		recalc_pool;$/;"	v	file:
recalc_pool_allocator_t	dict/dict0stats_bg.cc	/^	recalc_pool_allocator_t;$/;"	t	file:
recalc_pool_iterator_t	dict/dict0stats_bg.cc	/^	recalc_pool_iterator_t;$/;"	t	file:
recalc_pool_mutex	dict/dict0stats_bg.cc	/^static ib_mutex_t		recalc_pool_mutex;$/;"	v	file:
recalc_pool_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	recalc_pool_mutex_key;$/;"	v
recalc_pool_t	dict/dict0stats_bg.cc	/^	recalc_pool_t;$/;"	t	file:
records	handler/ha_innodb.cc	/^ha_innobase::records($/;"	f	class:ha_innobase
records	handler/ha_innopart.cc	/^ha_innopart::records($/;"	f	class:ha_innopart
records_in_range	handler/ha_innodb.cc	/^ha_innobase::records_in_range($/;"	f	class:ha_innobase
records_in_range	handler/ha_innopart.cc	/^ha_innopart::records_in_range($/;"	f	class:ha_innopart
recovered_lsn	include/log0recv.h	/^	lsn_t		recovered_lsn;$/;"	m	struct:recv_sys_t
recovered_offset	include/log0recv.h	/^	ulint		recovered_offset;$/;"	m	struct:recv_sys_t
recursive	include/sync0rw.h	/^	volatile bool	recursive;$/;"	m	struct:rw_lock_t
recv_add_to_hash_table	log/log0recv.cc	/^recv_add_to_hash_table($/;"	f	file:
recv_addr_state	include/log0recv.h	/^enum recv_addr_state {$/;"	g
recv_addr_t	include/log0recv.h	/^struct recv_addr_t{$/;"	s
recv_apply_hashed_log_recs	log/log0recv.cc	/^recv_apply_hashed_log_recs($/;"	f
recv_apply_log_recs_for_backup	log/log0recv.cc	/^recv_apply_log_recs_for_backup(void)$/;"	f
recv_calc_lsn_on_data_add	log/log0recv.cc	/^recv_calc_lsn_on_data_add($/;"	f	file:
recv_check_log_header_checksum	log/log0recv.cc	/^recv_check_log_header_checksum($/;"	f	file:
recv_data_copy_to_buf	log/log0recv.cc	/^recv_data_copy_to_buf($/;"	f	file:
recv_data_t	include/log0recv.h	/^struct recv_data_t{$/;"	s
recv_dblwr_t	include/log0recv.h	/^struct recv_dblwr_t {$/;"	s
recv_encryption	include/log0recv.h	/^typedef	struct recv_encryption {$/;"	s
recv_encryption_t	include/log0recv.h	/^} recv_encryption_t;$/;"	t	typeref:struct:recv_encryption
recv_find_max_checkpoint	log/log0recv.cc	/^recv_find_max_checkpoint($/;"	f
recv_find_max_checkpoint_0	log/log0recv.cc	/^recv_find_max_checkpoint_0($/;"	f
recv_fold	log/log0recv.cc	/^recv_fold($/;"	f
recv_get_fil_addr_struct	log/log0recv.cc	/^recv_get_fil_addr_struct($/;"	f	file:
recv_group_scan_log_recs	log/log0recv.cc	/^recv_group_scan_log_recs($/;"	f	file:
recv_hash	log/log0recv.cc	/^recv_hash($/;"	f
recv_init_crash_recovery	log/log0recv.cc	/^recv_init_crash_recovery(void)$/;"	f	file:
recv_init_crash_recovery_spaces	log/log0recv.cc	/^recv_init_crash_recovery_spaces(void)$/;"	f
recv_init_missing_mlog	log/log0recv.cc	/^recv_init_missing_mlog($/;"	f	file:
recv_init_missing_space	log/log0recv.cc	/^recv_init_missing_space(dberr_t err, const recv_spaces_t::const_iterator& i)$/;"	f	file:
recv_is_from_backup	log/log0recv.cc	/^bool	recv_is_from_backup	= false;$/;"	v
recv_is_from_backup	log/log0recv.cc	117;"	d	file:
recv_is_making_a_backup	log/log0recv.cc	/^bool	recv_is_making_a_backup	= false;$/;"	v
recv_is_making_a_backup	log/log0recv.cc	115;"	d	file:
recv_log_format_0_recover	log/log0recv.cc	/^recv_log_format_0_recover(lsn_t lsn)$/;"	f	file:
recv_lsn_checks_on	log/log0recv.cc	/^bool	recv_lsn_checks_on;$/;"	v
recv_max_page_lsn	log/log0recv.cc	/^lsn_t	recv_max_page_lsn;$/;"	v
recv_n_pool_free_frames	log/log0recv.cc	/^ulint	recv_n_pool_free_frames;$/;"	v
recv_needed_recovery	log/log0recv.cc	/^bool	recv_needed_recovery;$/;"	v
recv_needed_recovery	log/log0recv.cc	89;"	d	file:
recv_no_ibuf_operations	log/log0recv.cc	/^bool	recv_no_ibuf_operations;$/;"	v
recv_no_log_write	log/log0recv.cc	/^bool	recv_no_log_write = false;$/;"	v
recv_parse_log_rec	log/log0recv.cc	/^recv_parse_log_rec($/;"	f	file:
recv_parse_log_recs	log/log0recv.cc	/^recv_parse_log_recs($/;"	f
recv_parse_or_apply_log_rec_body	log/log0recv.cc	/^recv_parse_or_apply_log_rec_body($/;"	f	file:
recv_previous_parsed_rec_is_multi	log/log0recv.cc	/^static ulint	recv_previous_parsed_rec_is_multi;$/;"	v	file:
recv_previous_parsed_rec_offset	log/log0recv.cc	/^static ulint	recv_previous_parsed_rec_offset;$/;"	v	file:
recv_previous_parsed_rec_type	log/log0recv.cc	/^static mlog_id_t	recv_previous_parsed_rec_type;$/;"	v	file:
recv_read_checkpoint_info_for_backup	log/log0recv.cc	/^recv_read_checkpoint_info_for_backup($/;"	f
recv_read_in_area	log/log0recv.cc	/^recv_read_in_area($/;"	f	file:
recv_recover_page	include/log0recv.h	105;"	d
recv_recover_page	include/log0recv.h	115;"	d
recv_recover_page_func	log/log0recv.cc	/^recv_recover_page_func($/;"	f
recv_recovery_from_checkpoint_finish	log/log0recv.cc	/^recv_recovery_from_checkpoint_finish(void)$/;"	f
recv_recovery_from_checkpoint_start	log/log0recv.cc	/^recv_recovery_from_checkpoint_start($/;"	f
recv_recovery_is_on	include/log0recv.ic	/^recv_recovery_is_on()$/;"	f
recv_recovery_on	log/log0recv.cc	/^volatile bool	recv_recovery_on;$/;"	v
recv_recovery_rollback_active	log/log0recv.cc	/^recv_recovery_rollback_active(void)$/;"	f
recv_replay_file_ops	log/log0recv.cc	/^bool	recv_replay_file_ops	= true;$/;"	v
recv_report_corrupt_log	log/log0recv.cc	/^recv_report_corrupt_log($/;"	f	file:
recv_reset_log_files_for_backup	log/log0recv.cc	/^recv_reset_log_files_for_backup($/;"	f
recv_reset_logs	log/log0recv.cc	/^recv_reset_logs($/;"	f
recv_scan_log_recs	log/log0recv.cc	/^recv_scan_log_recs($/;"	f	file:
recv_scan_log_seg_for_backup	log/log0recv.cc	/^recv_scan_log_seg_for_backup($/;"	f
recv_scan_print_counter	log/log0recv.cc	/^static ulint	recv_scan_print_counter;$/;"	v	file:
recv_spaces	log/log0recv.cc	/^static recv_spaces_t	recv_spaces;$/;"	v	file:
recv_spaces_t	log/log0recv.cc	/^	ut_allocator<std::pair<const ulint, file_name_t> > >	recv_spaces_t;$/;"	t	file:
recv_synchronize_groups	log/log0recv.cc	/^recv_synchronize_groups(void)$/;"	f	file:
recv_sys	log/log0recv.cc	/^recv_sys_t*	recv_sys = NULL;$/;"	v
recv_sys_add_to_parsing_buf	log/log0recv.cc	/^recv_sys_add_to_parsing_buf($/;"	f	file:
recv_sys_close	log/log0recv.cc	/^recv_sys_close(void)$/;"	f
recv_sys_create	log/log0recv.cc	/^recv_sys_create(void)$/;"	f
recv_sys_debug_free	log/log0recv.cc	/^recv_sys_debug_free(void)$/;"	f
recv_sys_empty_hash	log/log0recv.cc	/^recv_sys_empty_hash(void)$/;"	f	file:
recv_sys_init	log/log0recv.cc	/^recv_sys_init($/;"	f
recv_sys_justify_left_parsing_buf	log/log0recv.cc	/^recv_sys_justify_left_parsing_buf(void)$/;"	f	file:
recv_sys_mem_free	log/log0recv.cc	/^recv_sys_mem_free(void)$/;"	f
recv_sys_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	recv_sys_mutex_key;$/;"	v
recv_sys_t	include/log0recv.h	/^struct recv_sys_t{$/;"	s
recv_sys_var_init	log/log0recv.cc	/^recv_sys_var_init(void)$/;"	f
recv_t	include/log0recv.h	/^struct recv_t{$/;"	s
recv_writer_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	recv_writer_mutex_key;$/;"	v
recv_writer_thread	log/log0recv.cc	/^DECLARE_THREAD(recv_writer_thread)($/;"	f
recv_writer_thread_active	log/log0recv.cc	/^volatile bool	recv_writer_thread_active = false;$/;"	v
recv_writer_thread_key	log/log0recv.cc	/^mysql_pfs_key_t	recv_writer_thread_key;$/;"	v
redo_page_compress_t	include/page0types.h	/^struct redo_page_compress_t {$/;"	s
redo_rseg_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	redo_rseg_mutex_key;$/;"	v
redo_skipped_count	include/fil0fil.h	/^	ulint		redo_skipped_count;$/;"	m	struct:fil_space_t
reestimate	include/ut0stage.h	/^ut_stage_alter_t::reestimate()$/;"	f	class:ut_stage_alter_t
ref	include/row0purge.h	/^	dtuple_t*	ref;	\/*!< NULL, or row reference to the next row to$/;"	m	struct:purge_node_t
ref	include/row0undo.h	/^	dtuple_t*	ref;	\/*!< row reference to the next row to handle *\/$/;"	m	struct:undo_node_t
ref_count	include/btr0sea.h	/^	ulint	ref_count;	\/*!< Number of blocks in this index tree$/;"	m	struct:btr_search_t
reference	include/mem0mem.h	/^	typedef		T&		reference;$/;"	t	class:mem_heap_allocator
reference	include/ut0new.h	/^	typedef T&		reference;$/;"	t	class:ut_allocator
referenced_by_foreign_key	handler/ha_innodb.cc	/^ha_innobase::referenced_by_foreign_key(void)$/;"	f	class:ha_innobase
referenced_by_foreign_key	handler/ha_innopart.cc	/^ha_innopart::referenced_by_foreign_key()$/;"	f	class:ha_innopart
referenced_col_names	include/dict0mem.h	/^	const char**	referenced_col_names;\/*!< names of the referenced$/;"	m	struct:dict_foreign_t
referenced_index	include/dict0mem.h	/^	dict_index_t*	referenced_index;\/*!< referenced index *\/$/;"	m	struct:dict_foreign_t
referenced_list	include/dict0mem.h	/^	UT_LIST_BASE_NODE_T(dict_foreign_t)	referenced_list;$/;"	m	struct:dict_table_t
referenced_set	include/dict0mem.h	/^	dict_foreign_set			referenced_set;$/;"	m	struct:dict_table_t
referenced_table	include/dict0mem.h	/^	dict_table_t*	referenced_table;\/*!< table where the referenced key$/;"	m	struct:dict_foreign_t
referenced_table_name	include/dict0mem.h	/^	char*		referenced_table_name;\/*!< referenced table name *\/$/;"	m	struct:dict_foreign_t
referenced_table_name_lookup	include/dict0mem.h	/^	char*		referenced_table_name_lookup;$/;"	m	struct:dict_foreign_t
register_pfs_file_close_begin	include/os0file.h	1149;"	d
register_pfs_file_close_end	include/os0file.h	1160;"	d
register_pfs_file_io_begin	include/os0file.h	1168;"	d
register_pfs_file_io_end	include/os0file.h	1180;"	d
register_pfs_file_open_begin	include/os0file.h	1114;"	d
register_pfs_file_open_end	include/os0file.h	1125;"	d
register_pfs_file_rename_begin	include/os0file.h	1134;"	d
register_pfs_file_rename_end	include/os0file.h	1140;"	d
register_query_cache_table	handler/ha_innodb.cc	/^ha_innobase::register_query_cache_table($/;"	f	class:ha_innobase
register_query_cache_table	handler/ha_innopart.h	/^	register_query_cache_table($/;"	f	class:ha_innopart
register_table_handler	include/sess0sess.h	/^	void register_table_handler($/;"	f	class:innodb_session_t
rel_pos	include/btr0pcur.h	/^	enum btr_pcur_pos_t	rel_pos;$/;"	m	struct:btr_pcur_t	typeref:enum:btr_pcur_t::btr_pcur_pos_t
release	btr/btr0bulk.cc	/^BtrBulk::release()$/;"	f	class:BtrBulk
release	btr/btr0bulk.cc	/^PageBulk::release()$/;"	f	class:PageBulk
release	include/dict0dict.ic	/^dict_table_t::release()$/;"	f	class:dict_table_t
release	include/dict0mem.h	/^	void release()$/;"	f	class:last_ops_cur_t
release	os/os0file.cc	/^	void release() const$/;"	f	class:AIO
release	os/os0file.cc	/^AIO::release(Slot* slot)$/;"	f	class:AIO
release_all	mtr/mtr0mtr.cc	/^mtr_t::Command::release_all()$/;"	f	class:mtr_t::Command
release_auto_increment	handler/ha_innopart.h	/^	release_auto_increment()$/;"	f	class:ha_innopart
release_block_at_savepoint	include/mtr0mtr.ic	/^mtr_t::release_block_at_savepoint($/;"	f	class:mtr_t
release_blocks	mtr/mtr0mtr.cc	/^mtr_t::Command::release_blocks()$/;"	f	class:mtr_t::Command
release_free_extents	fil/fil0fil.cc	/^fil_space_t::release_free_extents(ulint	n_reserved)$/;"	f	class:fil_space_t
release_free_extents	mtr/mtr0mtr.cc	/^mtr_t::release_free_extents(ulint n_reserved)$/;"	f	class:mtr_t
release_latches	mtr/mtr0mtr.cc	/^mtr_t::Command::release_latches()$/;"	f	class:mtr_t::Command
release_page	mtr/mtr0mtr.cc	/^mtr_t::release_page(const void* ptr, mtr_memo_type_t type)$/;"	f	class:mtr_t
release_resources	mtr/mtr0mtr.cc	/^mtr_t::Command::release_resources()$/;"	f	class:mtr_t::Command
release_s_latch_at_savepoint	include/mtr0mtr.ic	/^mtr_t::release_s_latch_at_savepoint($/;"	f	class:mtr_t
release_with_mutex	os/os0file.cc	/^AIO::release_with_mutex(Slot* slot)$/;"	f	class:AIO
relocated	include/buf0buf.h	/^	ib_uint64_t	relocated;$/;"	m	struct:buf_buddy_stat_t
relocated_usec	include/buf0buf.h	/^	ib_uint64_t	relocated_usec;$/;"	m	struct:buf_buddy_stat_t
rem0cmp_h	include/rem0cmp.h	27;"	d
rem0rec_h	include/rem0rec.h	27;"	d
rem0types_h	include/rem0types.h	27;"	d
remove_gap_lock	include/lock0priv.h	/^	void remove_gap_lock()$/;"	f	struct:lock_t
rename	handler/handler0alter.cc	/^	dict_index_t**	rename;$/;"	m	struct:ha_innobase_inplace_ctx	file:
rename_index_in_cache	handler/handler0alter.cc	/^rename_index_in_cache($/;"	f	file:
rename_index_in_data_dictionary	handler/handler0alter.cc	/^rename_index_in_data_dictionary($/;"	f
rename_indexes_in_cache	handler/handler0alter.cc	/^rename_indexes_in_cache($/;"	f	file:
rename_indexes_in_data_dictionary	handler/handler0alter.cc	/^rename_indexes_in_data_dictionary($/;"	f
rename_table	handler/ha_innodb.cc	/^ha_innobase::rename_table($/;"	f	class:ha_innobase
repair	handler/ha_innopart.cc	/^ha_innopart::repair($/;"	f	class:ha_innopart
reposition	lock/lock0lock.cc	/^	const trx_t* reposition() const$/;"	f	class:TrxListIterator	file:
request_type	sync/sync0arr.cc	/^	ulint		request_type;	\/*!< lock type requested on the$/;"	m	struct:sync_cell_t	file:
requested	buf/buf0flu.cc	/^	bool			requested;	\/*!< true if requested pages$/;"	m	struct:page_cleaner_t	file:
requested_lock_row	include/trx0i_s.h	/^	const i_s_locks_row_t*	requested_lock_row;	\/*!< requested lock *\/$/;"	m	struct:i_s_lock_waits_row_t
requested_lock_row	include/trx0i_s.h	/^	const i_s_locks_row_t*	requested_lock_row;$/;"	m	struct:i_s_trx_row_t
res_count	sync/sync0arr.cc	/^	ulint		res_count;	\/*!< count of cell reservations$/;"	m	struct:sync_array_t	file:
reservation_time	os/os0file.cc	/^	time_t			reservation_time;$/;"	m	struct:Slot	file:
reservation_time	sync/sync0arr.cc	/^	time_t		reservation_time;\/*!< time when the thread reserved$/;"	m	struct:sync_cell_t	file:
reserve	read/read0read.cc	/^ReadView::ids_t::reserve(ulint n)$/;"	f	class:ReadView::ids_t
reserve_coords	include/gis0geo.h	/^reserve_coords(double	**d_buffer,	\/*!< in\/out: buffer. *\/$/;"	f
reserve_slot	os/os0file.cc	/^AIO::reserve_slot($/;"	f	class:AIO
reserved_file_per_table_space_name	handler/ha_innodb.cc	/^const char reserved_file_per_table_space_name[] = "innodb_file_per_table";$/;"	v
reserved_system_space_name	handler/ha_innodb.cc	/^const char reserved_system_space_name[] = "innodb_system";$/;"	v
reserved_temporary_space_name	handler/ha_innodb.cc	/^const char reserved_temporary_space_name[] = "innodb_temporary";$/;"	v
reset	handler/ha_innodb.cc	/^ha_innobase::reset()$/;"	f	class:ha_innobase
reset	handler/ha_innopart.cc	/^ha_innopart::reset()$/;"	f	class:ha_innopart
reset	include/buf0buf.h	/^	inline void reset(ulint space, ulint page_no)$/;"	f	class:page_id_t
reset	include/trx0purge.h	/^		void reset()$/;"	f	class:undo::Truncate
reset	include/ut0dbg.h	/^	reset()$/;"	f	class:ut_chrono_t
reset	sync/sync0sync.cc	/^MutexMonitor::reset()$/;"	f	class:MutexMonitor
reset_template	handler/ha_innodb.cc	/^ha_innobase::reset_template(void)$/;"	f	class:ha_innobase
resize	include/read0types.h	/^		void resize(ulint n)$/;"	f	class:ReadView::ids_t
resolved	include/pars0sym.h	/^	ibool				resolved;	\/*!< TRUE if the$/;"	m	struct:sym_node_t
resource	include/que0que.h	/^	ulint		resource;	\/*!< resource usage of the query thread$/;"	m	struct:que_thr_t
restore_from_doublewrite	fsp/fsp0file.cc	/^Datafile::restore_from_doublewrite($/;"	f	class:Datafile
resubmit	os/os0file.cc	/^LinuxAIOHandler::resubmit(Slot* slot)$/;"	f	class:LinuxAIOHandler
result	include/sync0types.h	/^	virtual bool result() const$/;"	f	struct:btrsea_sync_check
result	include/sync0types.h	/^	virtual bool result() const$/;"	f	struct:dict_sync_check
result	include/sync0types.h	/^	virtual bool result() const$/;"	f	struct:sync_allowed_latches
result	include/ut0rbt.h	/^	int		result;			\/* Result of comparing with$/;"	m	struct:ib_rbt_bound_t
result_doc	fts/fts0fts.cc	/^	fts_doc_t*	result_doc;	\/*!< Result doc for tokens *\/$/;"	m	struct:fts_tokenize_param_t	file:
ret	os/os0file.cc	/^	int			ret;$/;"	m	struct:Slot	file:
return_node_t	include/pars0pars.h	/^struct return_node_t{$/;"	s
return_step	eval/eval0proc.cc	/^return_step($/;"	f
reverse	include/ut0lst.h	/^	void reverse()$/;"	f	struct:ut_list_base
reverse	include/ut0lst.h	/^	void reverse()$/;"	f	struct:ut_list_node
rewind	lock/lock0lock.cc	/^	void rewind()$/;"	f	class:TrxLockIterator
right	include/ut0rbt.h	/^	ib_rbt_node_t*	right;			\/* points right child *\/$/;"	m	struct:ib_rbt_node_t
rnd_end	handler/ha_innodb.cc	/^ha_innobase::rnd_end(void)$/;"	f	class:ha_innobase
rnd_end	handler/ha_innopart.h	/^	rnd_end()$/;"	f	class:ha_innopart
rnd_end_in_part	handler/ha_innopart.cc	/^ha_innopart::rnd_end_in_part($/;"	f	class:ha_innopart
rnd_init	handler/ha_innodb.cc	/^ha_innobase::rnd_init($/;"	f	class:ha_innobase
rnd_init	handler/ha_innopart.h	/^	rnd_init($/;"	f	class:ha_innopart
rnd_init_in_part	handler/ha_innopart.cc	/^ha_innopart::rnd_init_in_part($/;"	f	class:ha_innopart
rnd_next	handler/ha_innodb.cc	/^ha_innobase::rnd_next($/;"	f	class:ha_innobase
rnd_next	handler/ha_innopart.h	/^	rnd_next($/;"	f	class:ha_innopart
rnd_next_in_part	handler/ha_innopart.cc	/^ha_innopart::rnd_next_in_part($/;"	f	class:ha_innopart
rnd_pos	handler/ha_innodb.cc	/^ha_innobase::rnd_pos($/;"	f	class:ha_innobase
rnd_pos	handler/ha_innopart.cc	/^ha_innopart::rnd_pos($/;"	f	class:ha_innopart
rnd_pos_by_record	handler/ha_innopart.cc	/^ha_innopart::rnd_pos_by_record(uchar*  record)$/;"	f	class:ha_innopart
roll_limit	include/trx0trx.h	/^	undo_no_t	roll_limit;	\/*!< least undo number to undo during$/;"	m	struct:trx_t
roll_node_create	trx/trx0roll.cc	/^roll_node_create($/;"	f
roll_node_state	include/trx0roll.h	/^enum roll_node_state {$/;"	g
roll_node_t	include/trx0roll.h	/^struct roll_node_t{$/;"	s
roll_ptr	include/row0purge.h	/^	roll_ptr_t	roll_ptr;\/* roll pointer to undo log record *\/$/;"	m	struct:purge_node_t
roll_ptr	include/row0undo.h	/^	roll_ptr_t	roll_ptr;\/*!< roll pointer to undo log record *\/$/;"	m	struct:undo_node_t
roll_ptr	include/trx0purge.h	/^	roll_ptr_t	roll_ptr;	\/*!< File pointr to UNDO record *\/$/;"	m	struct:trx_purge_rec_t
roll_ptr_t	include/trx0types.h	/^typedef ib_id_t	roll_ptr_t;$/;"	t
rollback_complete	include/lock0lock.h	/^	ibool		rollback_complete;$/;"	m	struct:lock_sys_t
rollback_inplace_alter_table	handler/handler0alter.cc	/^rollback_inplace_alter_table($/;"	f
rollback_print	lock/lock0lock.cc	/^DeadlockChecker::rollback_print(const trx_t*	trx, const lock_t* lock)$/;"	f	class:DeadlockChecker
root	fts/fts0que.cc	/^	fts_ast_node_t*	root;		\/*!< Abstract syntax tree *\/$/;"	m	struct:fts_query_t	file:
root	include/fts0ast.h	/^	fts_ast_node_t*	root;			\/*!< If all goes OK, then this$/;"	m	struct:fts_ast_state_t
root	include/ut0rbt.h	/^	ib_rbt_node_t*	root;			\/* Root of the tree, this is$/;"	m	struct:ib_rbt_t
root_guess	include/btr0sea.h	/^	buf_block_t* root_guess;\/*!< the root page frame when it was last time$/;"	m	struct:btr_search_t
row	include/row0ins.h	/^	dtuple_t*	row;	\/*!< row to insert *\/$/;"	m	struct:ins_node_t
row	include/row0purge.h	/^	dtuple_t*	row;	\/*!< NULL, or a copy (also fields copied to$/;"	m	struct:purge_node_t
row	include/row0undo.h	/^	dtuple_t*	row;	\/*!< a copy (also fields copied to heap) of the$/;"	m	struct:undo_node_t
row	include/row0upd.h	/^	dtuple_t*	row;	\/*!< NULL, or a copy (also fields copied to$/;"	m	struct:upd_node_t
row0ext_h	include/row0ext.h	27;"	d
row0ftsort_h	include/row0ftsort.h	27;"	d
row0import_h	include/row0import.h	27;"	d
row0ins_h	include/row0ins.h	27;"	d
row0log_h	include/row0log.h	27;"	d
row0merge_h	include/row0merge.h	27;"	d
row0mysql_h	include/row0mysql.h	28;"	d
row0purge_h	include/row0purge.h	27;"	d
row0quiesce_h	include/row0quiesce.h	28;"	d
row0row_h	include/row0row.h	27;"	d
row0sel_h	include/row0sel.h	27;"	d
row0trunc_h	include/row0trunc.h	27;"	d
row0types_h	include/row0types.h	27;"	d
row0uins_h	include/row0uins.h	27;"	d
row0umod_h	include/row0umod.h	27;"	d
row0undo_h	include/row0undo.h	27;"	d
row0upd_h	include/row0upd.h	27;"	d
row0vers_h	include/row0vers.h	27;"	d
row_add_table_to_background_drop_list	row/row0mysql.cc	/^row_add_table_to_background_drop_list($/;"	f	file:
row_build	row/row0row.cc	/^row_build($/;"	f
row_build_index_entry	include/row0row.ic	/^row_build_index_entry($/;"	f
row_build_index_entry_low	row/row0row.cc	/^row_build_index_entry_low($/;"	f
row_build_low	row/row0row.cc	/^row_build_low($/;"	f	file:
row_build_row_ref	row/row0row.cc	/^row_build_row_ref($/;"	f
row_build_row_ref_fast	include/row0row.ic	/^row_build_row_ref_fast($/;"	f
row_build_row_ref_in_tuple	row/row0row.cc	/^row_build_row_ref_in_tuple($/;"	f
row_build_w_add_vcol	row/row0row.cc	/^row_build_w_add_vcol($/;"	f
row_count_rtree_recs	row/row0sel.cc	/^row_count_rtree_recs($/;"	f
row_create_index_for_mysql	row/row0mysql.cc	/^row_create_index_for_mysql($/;"	f
row_create_prebuilt	row/row0mysql.cc	/^row_create_prebuilt($/;"	f
row_create_table_for_mysql	row/row0mysql.cc	/^row_create_table_for_mysql($/;"	f
row_create_update_node_for_mysql	row/row0mysql.cc	/^row_create_update_node_for_mysql($/;"	f
row_del_upd_for_mysql_using_cursor	row/row0mysql.cc	/^row_del_upd_for_mysql_using_cursor($/;"	f	file:
row_delete_all_rows	row/row0mysql.cc	/^row_delete_all_rows($/;"	f
row_delete_constraint	row/row0mysql.cc	/^row_delete_constraint($/;"	f
row_delete_constraint_low	row/row0mysql.cc	/^row_delete_constraint_low($/;"	f
row_delete_for_mysql_using_cursor	row/row0mysql.cc	/^row_delete_for_mysql_using_cursor($/;"	f	file:
row_discard_tablespace	row/row0mysql.cc	/^row_discard_tablespace($/;"	f	file:
row_discard_tablespace_begin	row/row0mysql.cc	/^row_discard_tablespace_begin($/;"	f	file:
row_discard_tablespace_end	row/row0mysql.cc	/^row_discard_tablespace_end($/;"	f	file:
row_discard_tablespace_for_mysql	row/row0mysql.cc	/^row_discard_tablespace_for_mysql($/;"	f
row_discard_tablespace_foreign_key_checks	row/row0mysql.cc	/^row_discard_tablespace_foreign_key_checks($/;"	f	file:
row_drop_ancillary_fts_tables	row/row0mysql.cc	/^row_drop_ancillary_fts_tables($/;"	f
row_drop_database_for_mysql	row/row0mysql.cc	/^row_drop_database_for_mysql($/;"	f
row_drop_list_mutex	row/row0mysql.cc	/^static ib_mutex_t row_drop_list_mutex;$/;"	v	file:
row_drop_list_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t row_drop_list_mutex_key;$/;"	v
row_drop_single_table_tablespace	row/row0mysql.cc	/^row_drop_single_table_tablespace($/;"	f
row_drop_table_for_mysql	row/row0mysql.cc	/^row_drop_table_for_mysql($/;"	f
row_drop_table_for_mysql_in_background	row/row0mysql.cc	/^row_drop_table_for_mysql_in_background($/;"	f	file:
row_drop_table_from_cache	row/row0mysql.cc	/^row_drop_table_from_cache($/;"	f
row_drop_tables_for_mysql_in_background	row/row0mysql.cc	/^row_drop_tables_for_mysql_in_background(void)$/;"	f
row_explicit_rollback	row/row0mysql.cc	/^row_explicit_rollback($/;"	f	file:
row_ext_cache_fill	row/row0ext.cc	/^row_ext_cache_fill($/;"	f	file:
row_ext_create	row/row0ext.cc	/^row_ext_create($/;"	f
row_ext_lookup	include/row0ext.ic	/^row_ext_lookup($/;"	f
row_ext_lookup_ith	include/row0ext.ic	/^row_ext_lookup_ith($/;"	f
row_ext_t	include/row0ext.h	/^struct row_ext_t{$/;"	s
row_fetch_print	row/row0sel.cc	/^row_fetch_print($/;"	f
row_fts_build_sel_tree	row/row0ftsort.cc	/^row_fts_build_sel_tree($/;"	f	file:
row_fts_build_sel_tree_level	row/row0ftsort.cc	/^row_fts_build_sel_tree_level($/;"	f	file:
row_fts_do_update	row/row0mysql.cc	/^row_fts_do_update($/;"	f	file:
row_fts_free_pll_merge_buf	row/row0ftsort.cc	/^row_fts_free_pll_merge_buf($/;"	f
row_fts_insert_tuple	row/row0ftsort.cc	/^row_fts_insert_tuple($/;"	f
row_fts_merge_insert	row/row0ftsort.cc	/^row_fts_merge_insert($/;"	f
row_fts_psort_info_destroy	row/row0ftsort.cc	/^row_fts_psort_info_destroy($/;"	f
row_fts_psort_info_init	row/row0ftsort.cc	/^row_fts_psort_info_init($/;"	f
row_fts_sel_tree_propagate	row/row0ftsort.cc	/^row_fts_sel_tree_propagate($/;"	f	file:
row_fts_sel_tree_update	row/row0ftsort.cc	/^row_fts_sel_tree_update($/;"	f	file:
row_fts_start_parallel_merge	row/row0ftsort.cc	/^row_fts_start_parallel_merge($/;"	f
row_fts_start_psort	row/row0ftsort.cc	/^row_fts_start_psort($/;"	f
row_fts_token_t	include/row0ftsort.h	/^struct row_fts_token_t {$/;"	s
row_fts_update_or_delete	row/row0mysql.cc	/^row_fts_update_or_delete($/;"	f	file:
row_geo_field_is_valid	row/row0merge.cc	/^row_geo_field_is_valid($/;"	f	file:
row_get_background_drop_list_len_low	row/row0mysql.cc	/^row_get_background_drop_list_len_low(void)$/;"	f
row_get_clust_rec	row/row0row.cc	/^row_get_clust_rec($/;"	f
row_get_prebuilt_insert_row	row/row0mysql.cc	/^row_get_prebuilt_insert_row($/;"	f	file:
row_get_prebuilt_update_vector	row/row0mysql.cc	/^row_get_prebuilt_update_vector($/;"	f
row_get_rec_roll_ptr	include/row0row.ic	/^row_get_rec_roll_ptr($/;"	f
row_get_rec_trx_id	include/row0row.ic	/^row_get_rec_trx_id($/;"	f
row_get_trx_id_offset	include/row0row.ic	/^row_get_trx_id_offset($/;"	f
row_id	include/dict0dict.h	/^	row_id_t	row_id;		\/*!< the next row id to assign;$/;"	m	struct:dict_sys_t
row_id	include/row0mysql.h	/^	byte		row_id[DATA_ROW_ID_LEN];$/;"	m	struct:row_prebuilt_t
row_id_buf	include/row0ins.h	/^	byte*		row_id_buf;\/* buffer for the row id sys field in row *\/$/;"	m	struct:ins_node_t
row_id_t	include/trx0types.h	/^typedef ib_id_t	row_id_t;$/;"	t
row_import	row/row0import.cc	/^struct row_import {$/;"	s	file:
row_import_adjust_root_pages_of_secondary_indexes	row/row0import.cc	/^row_import_adjust_root_pages_of_secondary_indexes($/;"	f
row_import_cfg_read_index_fields	row/row0import.cc	/^row_import_cfg_read_index_fields($/;"	f
row_import_cfg_read_string	row/row0import.cc	/^row_import_cfg_read_string($/;"	f	file:
row_import_cleanup	row/row0import.cc	/^row_import_cleanup($/;"	f
row_import_discard_changes	row/row0import.cc	/^row_import_discard_changes($/;"	f
row_import_error	row/row0import.cc	/^row_import_error($/;"	f
row_import_for_mysql	row/row0import.cc	/^row_import_for_mysql($/;"	f
row_import_read_cfg	row/row0import.cc	/^row_import_read_cfg($/;"	f
row_import_read_cfp	row/row0import.cc	/^row_import_read_cfp($/;"	f	file:
row_import_read_columns	row/row0import.cc	/^row_import_read_columns($/;"	f
row_import_read_encryption_data	row/row0import.cc	/^row_import_read_encryption_data($/;"	f	file:
row_import_read_index_data	row/row0import.cc	/^row_import_read_index_data($/;"	f
row_import_read_indexes	row/row0import.cc	/^row_import_read_indexes($/;"	f	file:
row_import_read_meta_data	row/row0import.cc	/^row_import_read_meta_data($/;"	f
row_import_read_v1	row/row0import.cc	/^row_import_read_v1($/;"	f
row_import_set_discarded	row/row0import.cc	/^row_import_set_discarded($/;"	f	file:
row_import_set_sys_max_row_id	row/row0import.cc	/^row_import_set_sys_max_row_id($/;"	f
row_import_update_discarded_flag	row/row0import.cc	/^row_import_update_discarded_flag($/;"	f
row_import_update_index_root	row/row0import.cc	/^row_import_update_index_root($/;"	f
row_index_t	row/row0import.cc	/^struct row_index_t {$/;"	s	file:
row_ins	row/row0ins.cc	/^row_ins($/;"	f
row_ins_alloc_row_id_step	row/row0ins.cc	/^row_ins_alloc_row_id_step($/;"	f
row_ins_alloc_sys_fields	row/row0ins.cc	/^row_ins_alloc_sys_fields($/;"	f	file:
row_ins_cascade_ancestor_updates_table	row/row0ins.cc	/^row_ins_cascade_ancestor_updates_table($/;"	f	file:
row_ins_cascade_calc_update_vec	row/row0ins.cc	/^row_ins_cascade_calc_update_vec($/;"	f
row_ins_cascade_n_ancestors	row/row0ins.cc	/^row_ins_cascade_n_ancestors($/;"	f
row_ins_check_foreign_constraint	row/row0ins.cc	/^row_ins_check_foreign_constraint($/;"	f
row_ins_check_foreign_constraints	row/row0ins.cc	/^row_ins_check_foreign_constraints($/;"	f
row_ins_clust_index_entry	row/row0ins.cc	/^row_ins_clust_index_entry($/;"	f
row_ins_clust_index_entry_by_modify	row/row0ins.cc	/^row_ins_clust_index_entry_by_modify($/;"	f
row_ins_clust_index_entry_low	row/row0ins.cc	/^row_ins_clust_index_entry_low($/;"	f
row_ins_dupl_error_with_rec	row/row0ins.cc	/^row_ins_dupl_error_with_rec($/;"	f	file:
row_ins_duplicate_error_in_clust	row/row0ins.cc	/^row_ins_duplicate_error_in_clust($/;"	f
row_ins_duplicate_error_in_clust_online	row/row0ins.cc	/^row_ins_duplicate_error_in_clust_online($/;"	f
row_ins_duplicate_online	row/row0ins.cc	/^row_ins_duplicate_online($/;"	f
row_ins_foreign_check_on_constraint	row/row0ins.cc	/^row_ins_foreign_check_on_constraint($/;"	f
row_ins_foreign_fill_virtual	row/row0ins.cc	/^row_ins_foreign_fill_virtual($/;"	f	file:
row_ins_foreign_report_add_err	row/row0ins.cc	/^row_ins_foreign_report_add_err($/;"	f	file:
row_ins_foreign_report_err	row/row0ins.cc	/^row_ins_foreign_report_err($/;"	f	file:
row_ins_foreign_trx_print	row/row0ins.cc	/^row_ins_foreign_trx_print($/;"	f	file:
row_ins_get_row_from_select	row/row0ins.cc	/^row_ins_get_row_from_select($/;"	f
row_ins_get_row_from_values	row/row0ins.cc	/^row_ins_get_row_from_values($/;"	f
row_ins_index_entry	row/row0ins.cc	/^row_ins_index_entry($/;"	f	file:
row_ins_index_entry_big_rec	include/row0ins.h	159;"	d
row_ins_index_entry_big_rec	include/row0ins.h	162;"	d
row_ins_index_entry_big_rec_func	row/row0ins.cc	/^row_ins_index_entry_big_rec_func($/;"	f
row_ins_index_entry_set_vals	row/row0ins.cc	/^row_ins_index_entry_set_vals($/;"	f
row_ins_index_entry_step	row/row0ins.cc	/^row_ins_index_entry_step($/;"	f
row_ins_invalidate_query_cache	row/row0ins.cc	/^row_ins_invalidate_query_cache($/;"	f	file:
row_ins_must_modify_rec	row/row0ins.cc	/^row_ins_must_modify_rec($/;"	f
row_ins_scan_sec_index_for_duplicate	row/row0ins.cc	/^row_ins_scan_sec_index_for_duplicate($/;"	f
row_ins_sec_index_entry	row/row0ins.cc	/^row_ins_sec_index_entry($/;"	f
row_ins_sec_index_entry_by_modify	row/row0ins.cc	/^row_ins_sec_index_entry_by_modify($/;"	f
row_ins_sec_index_entry_low	row/row0ins.cc	/^row_ins_sec_index_entry_low($/;"	f
row_ins_sec_mtr_start_and_check_if_aborted	row/row0ins.cc	/^row_ins_sec_mtr_start_and_check_if_aborted($/;"	f
row_ins_set_detailed	row/row0ins.cc	/^row_ins_set_detailed($/;"	f	file:
row_ins_set_exclusive_rec_lock	row/row0ins.cc	/^row_ins_set_exclusive_rec_lock($/;"	f	file:
row_ins_set_shared_rec_lock	row/row0ins.cc	/^row_ins_set_shared_rec_lock($/;"	f	file:
row_ins_sorted_clust_index_entry	row/row0ins.cc	/^row_ins_sorted_clust_index_entry($/;"	f	file:
row_ins_spatial_index_entry_set_mbr_field	row/row0ins.cc	/^row_ins_spatial_index_entry_set_mbr_field($/;"	f	file:
row_ins_step	row/row0ins.cc	/^row_ins_step($/;"	f
row_insert_for_mysql	row/row0mysql.cc	/^row_insert_for_mysql($/;"	f
row_insert_for_mysql_using_cursor	row/row0mysql.cc	/^row_insert_for_mysql_using_cursor($/;"	f	file:
row_insert_for_mysql_using_ins_graph	row/row0mysql.cc	/^row_insert_for_mysql_using_ins_graph($/;"	f	file:
row_is_mysql_tmp_table_name	row/row0mysql.cc	/^row_is_mysql_tmp_table_name($/;"	f
row_lock_mode	include/row0sel.h	/^	ulint		row_lock_mode;	\/*!< LOCK_X or LOCK_S *\/$/;"	m	struct:sel_node_t
row_lock_table_autoinc_for_mysql	row/row0mysql.cc	/^row_lock_table_autoinc_for_mysql($/;"	f
row_lock_table_for_mysql	row/row0mysql.cc	/^row_lock_table_for_mysql($/;"	f
row_log_abort_sec	include/row0log.ic	/^row_log_abort_sec($/;"	f
row_log_allocate	row/row0log.cc	/^row_log_allocate($/;"	f
row_log_apply	row/row0log.cc	/^row_log_apply($/;"	f
row_log_apply_op	row/row0log.cc	/^row_log_apply_op($/;"	f
row_log_apply_op_low	row/row0log.cc	/^row_log_apply_op_low($/;"	f
row_log_apply_ops	row/row0log.cc	/^row_log_apply_ops($/;"	f	file:
row_log_block_allocate	row/row0log.cc	/^row_log_block_allocate($/;"	f
row_log_block_free	row/row0log.cc	/^row_log_block_free($/;"	f	file:
row_log_buf_t	row/row0log.cc	/^struct row_log_buf_t {$/;"	s	file:
row_log_col_is_indexed	row/row0log.cc	/^row_log_col_is_indexed($/;"	f
row_log_estimate_work	row/row0log.cc	/^row_log_estimate_work($/;"	f
row_log_free	row/row0log.cc	/^row_log_free($/;"	f
row_log_get_max_trx	row/row0log.cc	/^row_log_get_max_trx($/;"	f
row_log_online_op	row/row0log.cc	/^row_log_online_op($/;"	f
row_log_online_op_try	include/row0log.ic	/^row_log_online_op_try($/;"	f
row_log_progress_inc_per_block	row/row0log.cc	/^row_log_progress_inc_per_block()$/;"	f
row_log_t	row/row0log.cc	/^struct row_log_t {$/;"	s	file:
row_log_table_apply	row/row0log.cc	/^row_log_table_apply($/;"	f
row_log_table_apply_convert_mrec	row/row0log.cc	/^row_log_table_apply_convert_mrec($/;"	f
row_log_table_apply_delete	row/row0log.cc	/^row_log_table_apply_delete($/;"	f
row_log_table_apply_delete_low	row/row0log.cc	/^row_log_table_apply_delete_low($/;"	f
row_log_table_apply_insert	row/row0log.cc	/^row_log_table_apply_insert($/;"	f
row_log_table_apply_insert_low	row/row0log.cc	/^row_log_table_apply_insert_low($/;"	f
row_log_table_apply_op	row/row0log.cc	/^row_log_table_apply_op($/;"	f
row_log_table_apply_ops	row/row0log.cc	/^row_log_table_apply_ops($/;"	f
row_log_table_apply_update	row/row0log.cc	/^row_log_table_apply_update($/;"	f
row_log_table_blob_alloc	row/row0log.cc	/^row_log_table_blob_alloc($/;"	f
row_log_table_blob_free	row/row0log.cc	/^row_log_table_blob_free($/;"	f
row_log_table_blob_t	row/row0log.cc	/^	row_log_table_blob_t(ulonglong offset_arg) :$/;"	f	class:row_log_table_blob_t
row_log_table_blob_t	row/row0log.cc	/^class row_log_table_blob_t {$/;"	c	file:
row_log_table_close	row/row0log.cc	528;"	d	file:
row_log_table_close	row/row0log.cc	531;"	d	file:
row_log_table_close_func	row/row0log.cc	/^row_log_table_close_func($/;"	f
row_log_table_delete	row/row0log.cc	/^row_log_table_delete($/;"	f
row_log_table_get_error	row/row0log.cc	/^row_log_table_get_error($/;"	f
row_log_table_get_pk	row/row0log.cc	/^row_log_table_get_pk($/;"	f
row_log_table_get_pk_col	row/row0log.cc	/^row_log_table_get_pk_col($/;"	f	file:
row_log_table_get_pk_old_col	row/row0log.cc	/^row_log_table_get_pk_old_col($/;"	f	file:
row_log_table_insert	row/row0log.cc	/^row_log_table_insert($/;"	f
row_log_table_low	row/row0log.cc	/^row_log_table_low($/;"	f	file:
row_log_table_low_redundant	row/row0log.cc	/^row_log_table_low_redundant($/;"	f	file:
row_log_table_open	row/row0log.cc	/^row_log_table_open($/;"	f
row_log_table_update	row/row0log.cc	/^row_log_table_update($/;"	f
row_log_tmpfile	row/row0log.cc	/^row_log_tmpfile($/;"	f
row_make_new_pathname	row/row0merge.cc	/^row_make_new_pathname($/;"	f
row_merge	row/row0merge.cc	/^row_merge($/;"	f	file:
row_merge_block_t	include/row0merge.h	/^typedef byte	row_merge_block_t;$/;"	t
row_merge_blocks	row/row0merge.cc	/^row_merge_blocks($/;"	f
row_merge_blocks_copy	row/row0merge.cc	/^row_merge_blocks_copy($/;"	f
row_merge_buf_add	row/row0merge.cc	/^row_merge_buf_add($/;"	f	file:
row_merge_buf_create	row/row0merge.cc	/^row_merge_buf_create($/;"	f
row_merge_buf_create_low	row/row0merge.cc	/^row_merge_buf_create_low($/;"	f
row_merge_buf_empty	row/row0merge.cc	/^row_merge_buf_empty($/;"	f
row_merge_buf_encode	row/row0merge.cc	/^row_merge_buf_encode($/;"	f	file:
row_merge_buf_free	row/row0merge.cc	/^row_merge_buf_free($/;"	f
row_merge_buf_redundant_convert	row/row0merge.cc	/^row_merge_buf_redundant_convert($/;"	f	file:
row_merge_buf_sort	row/row0merge.cc	/^row_merge_buf_sort($/;"	f
row_merge_buf_t	include/row0merge.h	/^struct row_merge_buf_t {$/;"	s
row_merge_buf_write	row/row0merge.cc	/^row_merge_buf_write($/;"	f
row_merge_build_indexes	row/row0merge.cc	/^row_merge_build_indexes($/;"	f
row_merge_copy_blobs	row/row0merge.cc	/^row_merge_copy_blobs($/;"	f	file:
row_merge_create_fts_sort_index	row/row0ftsort.cc	/^row_merge_create_fts_sort_index($/;"	f
row_merge_create_index	row/row0merge.cc	/^row_merge_create_index($/;"	f
row_merge_create_index_graph	row/row0merge.cc	/^row_merge_create_index_graph($/;"	f
row_merge_drop_index_dict	row/row0merge.cc	/^row_merge_drop_index_dict($/;"	f	file:
row_merge_drop_indexes	row/row0merge.cc	/^row_merge_drop_indexes($/;"	f
row_merge_drop_indexes_dict	row/row0merge.cc	/^row_merge_drop_indexes_dict($/;"	f
row_merge_drop_table	row/row0merge.cc	/^row_merge_drop_table($/;"	f
row_merge_drop_temp_indexes	row/row0merge.cc	/^row_merge_drop_temp_indexes(void)$/;"	f
row_merge_dup_report	row/row0merge.cc	/^row_merge_dup_report($/;"	f
row_merge_dup_t	include/row0merge.h	/^struct row_merge_dup_t {$/;"	s
row_merge_file_create	row/row0merge.cc	/^row_merge_file_create($/;"	f
row_merge_file_create_if_needed	row/row0merge.cc	/^row_merge_file_create_if_needed($/;"	f
row_merge_file_create_low	row/row0merge.cc	/^row_merge_file_create_low($/;"	f
row_merge_file_destroy	row/row0merge.cc	/^row_merge_file_destroy($/;"	f
row_merge_file_destroy_low	row/row0merge.cc	/^row_merge_file_destroy_low($/;"	f
row_merge_fts_doc_add_word_for_parser	row/row0ftsort.cc	/^row_merge_fts_doc_add_word_for_parser($/;"	f	file:
row_merge_fts_doc_tokenize	row/row0ftsort.cc	/^row_merge_fts_doc_tokenize($/;"	f	file:
row_merge_fts_doc_tokenize_by_parser	row/row0ftsort.cc	/^row_merge_fts_doc_tokenize_by_parser($/;"	f	file:
row_merge_fts_get_next_doc_item	row/row0ftsort.cc	/^row_merge_fts_get_next_doc_item($/;"	f
row_merge_heap_create	row/row0merge.cc	/^row_merge_heap_create($/;"	f	file:
row_merge_insert_index_tuples	row/row0merge.cc	/^row_merge_insert_index_tuples($/;"	f
row_merge_is_index_usable	row/row0merge.cc	/^row_merge_is_index_usable($/;"	f
row_merge_lock_table	row/row0merge.cc	/^row_merge_lock_table($/;"	f
row_merge_mtuple_to_dtuple	row/row0merge.cc	/^row_merge_mtuple_to_dtuple($/;"	f	file:
row_merge_read	row/row0merge.cc	/^row_merge_read($/;"	f
row_merge_read_clustered_index	row/row0merge.cc	/^row_merge_read_clustered_index($/;"	f
row_merge_read_rec	row/row0merge.cc	/^row_merge_read_rec($/;"	f
row_merge_rename_index_to_add	row/row0merge.cc	/^row_merge_rename_index_to_add($/;"	f
row_merge_rename_index_to_drop	row/row0merge.cc	/^row_merge_rename_index_to_drop($/;"	f
row_merge_rename_tables_dict	row/row0merge.cc	/^row_merge_rename_tables_dict($/;"	f
row_merge_sort	row/row0merge.cc	/^row_merge_sort($/;"	f
row_merge_spatial_rows	row/row0merge.cc	/^row_merge_spatial_rows($/;"	f	file:
row_merge_tmpfile_if_needed	row/row0merge.cc	/^row_merge_tmpfile_if_needed($/;"	f
row_merge_tuple_cmp	row/row0merge.cc	/^row_merge_tuple_cmp($/;"	f
row_merge_tuple_cmp_ctx	row/row0merge.cc	934;"	d	file:
row_merge_tuple_sort	row/row0merge.cc	/^row_merge_tuple_sort($/;"	f	file:
row_merge_tuple_sort_ctx	row/row0merge.cc	926;"	d	file:
row_merge_write	row/row0merge.cc	/^row_merge_write($/;"	f
row_merge_write_eof	row/row0merge.cc	/^row_merge_write_eof($/;"	f	file:
row_merge_write_fts_node	row/row0ftsort.cc	/^row_merge_write_fts_node($/;"	f	file:
row_merge_write_fts_word	row/row0ftsort.cc	/^row_merge_write_fts_word($/;"	f
row_merge_write_rec	row/row0merge.cc	/^row_merge_write_rec($/;"	f	file:
row_merge_write_rec_low	row/row0merge.cc	/^row_merge_write_rec_low($/;"	f	file:
row_merge_write_rec_low	row/row0merge.cc	1310;"	d	file:
row_merge_write_redo	row/row0merge.cc	/^row_merge_write_redo($/;"	f	file:
row_mtuple_cmp	row/row0merge.cc	/^row_mtuple_cmp($/;"	f	file:
row_mtuple_create	row/row0merge.cc	/^row_mtuple_create($/;"	f	file:
row_mysql_close	row/row0mysql.cc	/^row_mysql_close(void)$/;"	f
row_mysql_convert_row_to_innobase	row/row0mysql.cc	/^row_mysql_convert_row_to_innobase($/;"	f	file:
row_mysql_delay_if_needed	row/row0mysql.cc	/^row_mysql_delay_if_needed(void)$/;"	f	file:
row_mysql_drop_list	row/row0mysql.cc	/^	UT_LIST_NODE_T(row_mysql_drop_t)row_mysql_drop_list;$/;"	m	struct:row_mysql_drop_t	file:
row_mysql_drop_list_inited	row/row0mysql.cc	/^static ibool	row_mysql_drop_list_inited	= FALSE;$/;"	v	file:
row_mysql_drop_t	row/row0mysql.cc	/^struct row_mysql_drop_t{$/;"	s	file:
row_mysql_drop_temp_tables	row/row0mysql.cc	/^row_mysql_drop_temp_tables(void)$/;"	f
row_mysql_freeze_data_dictionary	include/row0mysql.h	376;"	d
row_mysql_freeze_data_dictionary_func	row/row0mysql.cc	/^row_mysql_freeze_data_dictionary_func($/;"	f
row_mysql_handle_errors	row/row0mysql.cc	/^row_mysql_handle_errors($/;"	f
row_mysql_init	row/row0mysql.cc	/^row_mysql_init(void)$/;"	f
row_mysql_is_system_table	row/row0mysql.cc	/^row_mysql_is_system_table($/;"	f	file:
row_mysql_lock_data_dictionary	include/row0mysql.h	359;"	d
row_mysql_lock_data_dictionary_func	row/row0mysql.cc	/^row_mysql_lock_data_dictionary_func($/;"	f
row_mysql_lock_table	row/row0mysql.cc	/^row_mysql_lock_table($/;"	f
row_mysql_pad_col	row/row0mysql.cc	/^row_mysql_pad_col($/;"	f
row_mysql_prebuilt_free_blob_heap	row/row0mysql.cc	/^row_mysql_prebuilt_free_blob_heap($/;"	f
row_mysql_read_blob_ref	row/row0mysql.cc	/^row_mysql_read_blob_ref($/;"	f
row_mysql_read_geometry	row/row0mysql.cc	/^row_mysql_read_geometry($/;"	f
row_mysql_read_true_varchar	row/row0mysql.cc	/^row_mysql_read_true_varchar($/;"	f
row_mysql_store_blob_ref	row/row0mysql.cc	/^row_mysql_store_blob_ref($/;"	f
row_mysql_store_col_in_innobase_format	row/row0mysql.cc	/^row_mysql_store_col_in_innobase_format($/;"	f
row_mysql_store_geometry	row/row0mysql.cc	/^row_mysql_store_geometry($/;"	f
row_mysql_store_true_var_len	row/row0mysql.cc	/^row_mysql_store_true_var_len($/;"	f
row_mysql_table_id_reassign	row/row0mysql.cc	/^row_mysql_table_id_reassign($/;"	f
row_mysql_to_innobase	row/row0mysql.cc	/^row_mysql_to_innobase($/;"	f	file:
row_mysql_unfreeze_data_dictionary	row/row0mysql.cc	/^row_mysql_unfreeze_data_dictionary($/;"	f
row_mysql_unlock_data_dictionary	row/row0mysql.cc	/^row_mysql_unlock_data_dictionary($/;"	f
row_op	row/row0log.cc	/^enum row_op {$/;"	g	file:
row_prebuild_sel_graph	row/row0mysql.cc	/^row_prebuild_sel_graph($/;"	f
row_prebuilt_free	row/row0mysql.cc	/^row_prebuilt_free($/;"	f
row_prebuilt_t	include/row0mysql.h	/^struct row_prebuilt_t {$/;"	s
row_printf_node_t	include/row0sel.h	/^struct row_printf_node_t{$/;"	s
row_printf_step	row/row0sel.cc	/^row_printf_step($/;"	f
row_purge	row/row0purge.cc	/^row_purge($/;"	f
row_purge_del_mark	row/row0purge.cc	/^row_purge_del_mark($/;"	f
row_purge_end	row/row0purge.cc	/^row_purge_end($/;"	f
row_purge_node_create	row/row0purge.cc	/^row_purge_node_create($/;"	f
row_purge_parse_undo_rec	row/row0purge.cc	/^row_purge_parse_undo_rec($/;"	f	file:
row_purge_poss_sec	row/row0purge.cc	/^row_purge_poss_sec($/;"	f
row_purge_record	row/row0purge.cc	1021;"	d	file:
row_purge_record	row/row0purge.cc	1024;"	d	file:
row_purge_record_func	row/row0purge.cc	/^row_purge_record_func($/;"	f
row_purge_remove_clust_if_poss	row/row0purge.cc	/^row_purge_remove_clust_if_poss($/;"	f
row_purge_remove_clust_if_poss_low	row/row0purge.cc	/^row_purge_remove_clust_if_poss_low($/;"	f
row_purge_remove_sec_if_poss	row/row0purge.cc	/^row_purge_remove_sec_if_poss($/;"	f
row_purge_remove_sec_if_poss_leaf	row/row0purge.cc	/^row_purge_remove_sec_if_poss_leaf($/;"	f
row_purge_remove_sec_if_poss_tree	row/row0purge.cc	/^row_purge_remove_sec_if_poss_tree($/;"	f
row_purge_reposition_pcur	row/row0purge.cc	/^row_purge_reposition_pcur($/;"	f	file:
row_purge_skip_uncommitted_virtual_index	row/row0purge.cc	/^row_purge_skip_uncommitted_virtual_index($/;"	f	file:
row_purge_step	row/row0purge.cc	/^row_purge_step($/;"	f
row_purge_upd_exist_or_extern	row/row0purge.cc	809;"	d	file:
row_purge_upd_exist_or_extern	row/row0purge.cc	812;"	d	file:
row_purge_upd_exist_or_extern_func	row/row0purge.cc	/^row_purge_upd_exist_or_extern_func($/;"	f	file:
row_quiesce_set_state	row/row0quiesce.cc	/^row_quiesce_set_state($/;"	f
row_quiesce_table_complete	row/row0quiesce.cc	/^row_quiesce_table_complete($/;"	f
row_quiesce_table_has_fts_index	row/row0quiesce.cc	/^row_quiesce_table_has_fts_index($/;"	f	file:
row_quiesce_table_start	row/row0quiesce.cc	/^row_quiesce_table_start($/;"	f
row_quiesce_write_cfg	row/row0quiesce.cc	/^row_quiesce_write_cfg($/;"	f
row_quiesce_write_cfp	row/row0quiesce.cc	/^row_quiesce_write_cfp($/;"	f
row_quiesce_write_header	row/row0quiesce.cc	/^row_quiesce_write_header($/;"	f
row_quiesce_write_index_fields	row/row0quiesce.cc	/^row_quiesce_write_index_fields($/;"	f
row_quiesce_write_indexes	row/row0quiesce.cc	/^row_quiesce_write_indexes($/;"	f
row_quiesce_write_table	row/row0quiesce.cc	/^row_quiesce_write_table($/;"	f
row_quiesce_write_transfer_key	row/row0quiesce.cc	/^row_quiesce_write_transfer_key($/;"	f
row_raw_format	row/row0row.cc	/^row_raw_format($/;"	f
row_raw_format_int	row/row0row.cc	/^row_raw_format_int($/;"	f	file:
row_raw_format_str	row/row0row.cc	/^row_raw_format_str($/;"	f	file:
row_read_type	include/row0mysql.h	/^	ulint		row_read_type;	\/*!< ROW_READ_WITH_LOCKS if row locks$/;"	m	struct:row_prebuilt_t
row_rec_to_index_entry	row/row0row.cc	/^row_rec_to_index_entry($/;"	f
row_rec_to_index_entry_low	row/row0row.cc	/^row_rec_to_index_entry_low($/;"	f
row_rename_partitions_for_mysql	row/row0mysql.cc	/^row_rename_partitions_for_mysql($/;"	f
row_rename_table_for_mysql	row/row0mysql.cc	/^row_rename_table_for_mysql($/;"	f
row_rollback_on_timeout	row/row0mysql.cc	/^ibool	row_rollback_on_timeout	= FALSE;$/;"	v
row_scan_index_for_mysql	row/row0mysql.cc	/^row_scan_index_for_mysql($/;"	f
row_search_autoinc_read_column	row/row0sel.cc	/^row_search_autoinc_read_column($/;"	f	file:
row_search_check_if_query_cache_permitted	row/row0sel.cc	/^row_search_check_if_query_cache_permitted($/;"	f
row_search_end_range_check	row/row0sel.cc	/^row_search_end_range_check($/;"	f	file:
row_search_for_mysql	include/row0sel.ic	/^row_search_for_mysql($/;"	f
row_search_get_max_rec	row/row0sel.cc	/^row_search_get_max_rec($/;"	f	file:
row_search_idx_cond_check	row/row0sel.cc	/^row_search_idx_cond_check($/;"	f	file:
row_search_index_entry	row/row0row.cc	/^row_search_index_entry($/;"	f
row_search_max_autoinc	row/row0sel.cc	/^row_search_max_autoinc($/;"	f
row_search_mvcc	row/row0sel.cc	/^row_search_mvcc($/;"	f
row_search_no_mvcc	row/row0sel.cc	/^row_search_no_mvcc($/;"	f
row_search_on_row_ref	row/row0row.cc	/^row_search_on_row_ref($/;"	f
row_search_result	include/row0row.h	/^enum row_search_result {$/;"	g
row_search_traverse	row/row0sel.cc	/^row_search_traverse($/;"	f	file:
row_sel	row/row0sel.cc	/^row_sel($/;"	f
row_sel_build_committed_vers_for_mysql	row/row0sel.cc	/^row_sel_build_committed_vers_for_mysql($/;"	f	file:
row_sel_build_prev_vers	row/row0sel.cc	/^row_sel_build_prev_vers($/;"	f
row_sel_build_prev_vers_for_mysql	row/row0sel.cc	/^row_sel_build_prev_vers_for_mysql($/;"	f
row_sel_convert_mysql_key_to_innobase	row/row0sel.cc	/^row_sel_convert_mysql_key_to_innobase($/;"	f
row_sel_copy_cached_field_for_mysql	row/row0sel.cc	/^row_sel_copy_cached_field_for_mysql($/;"	f	file:
row_sel_copy_cached_fields_for_mysql	row/row0sel.cc	/^row_sel_copy_cached_fields_for_mysql($/;"	f
row_sel_copy_input_variable_vals	row/row0sel.cc	/^row_sel_copy_input_variable_vals($/;"	f
row_sel_dequeue_cached_row_for_mysql	row/row0sel.cc	/^row_sel_dequeue_cached_row_for_mysql($/;"	f
row_sel_direction	include/row0sel.h	/^enum row_sel_direction {$/;"	g
row_sel_enqueue_cache_row_for_mysql	row/row0sel.cc	/^row_sel_enqueue_cache_row_for_mysql($/;"	f
row_sel_fetch_columns	row/row0sel.cc	/^row_sel_fetch_columns($/;"	f	file:
row_sel_fetch_last_buf	row/row0sel.cc	/^row_sel_fetch_last_buf($/;"	f
row_sel_field_store_in_mysql_format	include/row0sel.h	492;"	d
row_sel_field_store_in_mysql_format	include/row0sel.h	496;"	d
row_sel_field_store_in_mysql_format_func	row/row0sel.cc	/^row_sel_field_store_in_mysql_format_func($/;"	f
row_sel_fill_vrow	row/row0sel.cc	/^row_sel_fill_vrow($/;"	f	file:
row_sel_get_clust_rec	row/row0sel.cc	/^row_sel_get_clust_rec($/;"	f
row_sel_get_clust_rec_for_mysql	row/row0sel.cc	/^row_sel_get_clust_rec_for_mysql($/;"	f
row_sel_match_mode	include/row0sel.h	/^enum row_sel_match_mode {$/;"	g
row_sel_open_pcur	row/row0sel.cc	/^row_sel_open_pcur($/;"	f	file:
row_sel_prefetch_cache_init	row/row0sel.cc	/^row_sel_prefetch_cache_init($/;"	f
row_sel_restore_pcur_pos	row/row0sel.cc	/^row_sel_restore_pcur_pos($/;"	f	file:
row_sel_sec_rec_is_for_blob	row/row0sel.cc	/^row_sel_sec_rec_is_for_blob($/;"	f	file:
row_sel_sec_rec_is_for_clust_rec	row/row0sel.cc	/^row_sel_sec_rec_is_for_clust_rec($/;"	f	file:
row_sel_step	row/row0sel.cc	/^row_sel_step($/;"	f
row_sel_store_mysql_field	row/row0sel.cc	3055;"	d	file:
row_sel_store_mysql_field	row/row0sel.cc	3059;"	d	file:
row_sel_store_mysql_field_func	row/row0sel.cc	/^row_sel_store_mysql_field_func($/;"	f
row_sel_store_mysql_rec	row/row0sel.cc	/^row_sel_store_mysql_rec($/;"	f
row_sel_store_row_id_to_prebuilt	row/row0sel.cc	/^row_sel_store_row_id_to_prebuilt($/;"	f	file:
row_sel_test_end_conds	row/row0sel.cc	/^row_sel_test_end_conds($/;"	f
row_sel_test_other_conds	row/row0sel.cc	/^row_sel_test_other_conds($/;"	f
row_sel_try_search_shortcut	row/row0sel.cc	/^row_sel_try_search_shortcut($/;"	f	file:
row_sel_try_search_shortcut_for_mysql	row/row0sel.cc	/^row_sel_try_search_shortcut_for_mysql($/;"	f	file:
row_size	trx/trx0i_s.cc	/^	ulint		row_size;	\/*!< size of a single row *\/$/;"	m	struct:i_s_table_cache_t	file:
row_stats_t	row/row0import.cc	/^struct row_stats_t {$/;"	s	file:
row_tab_op	row/row0log.cc	/^enum row_tab_op {$/;"	g	file:
row_table_add_foreign_constraints	row/row0mysql.cc	/^row_table_add_foreign_constraints($/;"	f
row_table_got_default_clust_index	row/row0mysql.cc	/^row_table_got_default_clust_index($/;"	f
row_truncate_complete	row/row0trunc.cc	/^row_truncate_complete($/;"	f
row_truncate_foreign_key_checks	row/row0trunc.cc	/^row_truncate_foreign_key_checks($/;"	f
row_truncate_fts	row/row0trunc.cc	/^row_truncate_fts($/;"	f
row_truncate_get_trunc_table_id	row/row0trunc.cc	/^row_truncate_get_trunc_table_id($/;"	f
row_truncate_prepare	row/row0trunc.cc	/^row_truncate_prepare(dict_table_t* table, ulint* flags)$/;"	f
row_truncate_rollback	row/row0trunc.cc	/^row_truncate_rollback($/;"	f	file:
row_truncate_sanity_checks	row/row0trunc.cc	/^row_truncate_sanity_checks($/;"	f
row_truncate_table_for_mysql	row/row0trunc.cc	/^row_truncate_table_for_mysql($/;"	f
row_truncate_update_sys_tables_during_fix_up	row/row0trunc.cc	/^row_truncate_update_sys_tables_during_fix_up($/;"	f
row_truncate_update_system_tables	row/row0trunc.cc	/^row_truncate_update_system_tables($/;"	f
row_truncate_update_table_id	row/row0trunc.cc	/^row_truncate_update_table_id($/;"	f
row_undo	row/row0undo.cc	/^row_undo($/;"	f
row_undo_ins	row/row0uins.cc	/^row_undo_ins($/;"	f
row_undo_ins_parse_undo_rec	row/row0uins.cc	/^row_undo_ins_parse_undo_rec($/;"	f	file:
row_undo_ins_remove_clust_rec	row/row0uins.cc	/^row_undo_ins_remove_clust_rec($/;"	f
row_undo_ins_remove_sec	row/row0uins.cc	/^row_undo_ins_remove_sec($/;"	f
row_undo_ins_remove_sec_low	row/row0uins.cc	/^row_undo_ins_remove_sec_low($/;"	f
row_undo_ins_remove_sec_rec	row/row0uins.cc	/^row_undo_ins_remove_sec_rec($/;"	f
row_undo_mod	row/row0umod.cc	/^row_undo_mod($/;"	f
row_undo_mod_clust	row/row0umod.cc	/^row_undo_mod_clust($/;"	f
row_undo_mod_clust_low	row/row0umod.cc	/^row_undo_mod_clust_low($/;"	f
row_undo_mod_del_mark_or_remove_sec	row/row0umod.cc	/^row_undo_mod_del_mark_or_remove_sec($/;"	f
row_undo_mod_del_mark_or_remove_sec_low	row/row0umod.cc	/^row_undo_mod_del_mark_or_remove_sec_low($/;"	f
row_undo_mod_del_mark_sec	row/row0umod.cc	/^row_undo_mod_del_mark_sec($/;"	f
row_undo_mod_del_unmark_sec_and_undo_update	row/row0umod.cc	/^row_undo_mod_del_unmark_sec_and_undo_update($/;"	f
row_undo_mod_parse_undo_rec	row/row0umod.cc	/^row_undo_mod_parse_undo_rec($/;"	f
row_undo_mod_remove_clust_low	row/row0umod.cc	/^row_undo_mod_remove_clust_low($/;"	f
row_undo_mod_sec_flag_corrupted	row/row0umod.cc	/^row_undo_mod_sec_flag_corrupted($/;"	f
row_undo_mod_upd_del_sec	row/row0umod.cc	/^row_undo_mod_upd_del_sec($/;"	f
row_undo_mod_upd_exist_sec	row/row0umod.cc	/^row_undo_mod_upd_exist_sec($/;"	f
row_undo_node_create	row/row0undo.cc	/^row_undo_node_create($/;"	f
row_undo_search_clust_to_pcur	row/row0undo.cc	/^row_undo_search_clust_to_pcur($/;"	f
row_undo_step	row/row0undo.cc	/^row_undo_step($/;"	f
row_unlock_for_mysql	row/row0mysql.cc	/^row_unlock_for_mysql($/;"	f
row_upd	row/row0upd.cc	/^row_upd($/;"	f
row_upd_build_difference_binary	row/row0upd.cc	/^row_upd_build_difference_binary($/;"	f
row_upd_build_sec_rec_difference_binary	row/row0upd.cc	/^row_upd_build_sec_rec_difference_binary($/;"	f
row_upd_changes_disowned_external	row/row0upd.cc	/^row_upd_changes_disowned_external($/;"	f
row_upd_changes_doc_id	row/row0upd.cc	/^row_upd_changes_doc_id($/;"	f
row_upd_changes_field_size_or_external	row/row0upd.cc	/^row_upd_changes_field_size_or_external($/;"	f
row_upd_changes_first_fields_binary	row/row0upd.cc	/^row_upd_changes_first_fields_binary($/;"	f	file:
row_upd_changes_fts_column	row/row0upd.cc	/^row_upd_changes_fts_column($/;"	f
row_upd_changes_ord_field_binary	include/row0upd.h	341;"	d
row_upd_changes_ord_field_binary	include/row0upd.h	344;"	d
row_upd_changes_ord_field_binary_func	row/row0upd.cc	/^row_upd_changes_ord_field_binary_func($/;"	f
row_upd_changes_some_index_ord_field_binary	row/row0upd.cc	/^row_upd_changes_some_index_ord_field_binary($/;"	f
row_upd_check_references_constraints	row/row0upd.cc	/^row_upd_check_references_constraints($/;"	f
row_upd_clust_rec	row/row0upd.cc	/^row_upd_clust_rec($/;"	f
row_upd_clust_rec_by_insert	row/row0upd.cc	/^row_upd_clust_rec_by_insert($/;"	f
row_upd_clust_rec_by_insert_inherit	row/row0upd.cc	2367;"	d	file:
row_upd_clust_rec_by_insert_inherit	row/row0upd.cc	2370;"	d	file:
row_upd_clust_rec_by_insert_inherit_func	row/row0upd.cc	/^row_upd_clust_rec_by_insert_inherit_func($/;"	f	file:
row_upd_clust_step	row/row0upd.cc	/^row_upd_clust_step($/;"	f
row_upd_copy_columns	row/row0upd.cc	/^row_upd_copy_columns($/;"	f
row_upd_del_mark_clust_rec	row/row0upd.cc	/^row_upd_del_mark_clust_rec($/;"	f
row_upd_eval_new_vals	row/row0upd.cc	/^row_upd_eval_new_vals($/;"	f
row_upd_ext_fetch	row/row0upd.cc	/^row_upd_ext_fetch($/;"	f	file:
row_upd_index_entry_sys_field	row/row0upd.cc	/^row_upd_index_entry_sys_field($/;"	f
row_upd_index_is_referenced	row/row0upd.cc	/^row_upd_index_is_referenced($/;"	f	file:
row_upd_index_parse	row/row0upd.cc	/^row_upd_index_parse($/;"	f
row_upd_index_replace_new_col_val	row/row0upd.cc	/^row_upd_index_replace_new_col_val($/;"	f	file:
row_upd_index_replace_new_col_vals	row/row0upd.cc	/^row_upd_index_replace_new_col_vals($/;"	f
row_upd_index_replace_new_col_vals_index_pos	row/row0upd.cc	/^row_upd_index_replace_new_col_vals_index_pos($/;"	f
row_upd_index_write_log	row/row0upd.cc	/^row_upd_index_write_log($/;"	f
row_upd_parse_sys_vals	row/row0upd.cc	/^row_upd_parse_sys_vals($/;"	f
row_upd_rec_in_place	row/row0upd.cc	/^row_upd_rec_in_place($/;"	f
row_upd_rec_sys_fields	include/row0upd.ic	/^row_upd_rec_sys_fields($/;"	f
row_upd_rec_sys_fields_in_recovery	row/row0upd.cc	/^row_upd_rec_sys_fields_in_recovery($/;"	f
row_upd_replace	row/row0upd.cc	/^row_upd_replace($/;"	f
row_upd_replace_vcol	row/row0upd.cc	/^row_upd_replace_vcol($/;"	f
row_upd_sec_index_entry	row/row0upd.cc	/^row_upd_sec_index_entry($/;"	f
row_upd_sec_step	row/row0upd.cc	/^row_upd_sec_step($/;"	f
row_upd_set_vcol_data	row/row0upd.cc	/^row_upd_set_vcol_data($/;"	f	file:
row_upd_step	row/row0upd.cc	/^row_upd_step($/;"	f
row_upd_store_row	row/row0upd.cc	/^row_upd_store_row($/;"	f
row_upd_store_v_row	row/row0upd.cc	/^row_upd_store_v_row($/;"	f	file:
row_upd_write_sys_vals_to_log	row/row0upd.cc	/^row_upd_write_sys_vals_to_log($/;"	f
row_update_cascade_for_mysql	row/row0mysql.cc	/^row_update_cascade_for_mysql($/;"	f
row_update_for_mysql	row/row0mysql.cc	/^row_update_for_mysql($/;"	f
row_update_for_mysql_using_cursor	row/row0mysql.cc	/^row_update_for_mysql_using_cursor($/;"	f	file:
row_update_for_mysql_using_upd_graph	row/row0mysql.cc	/^row_update_for_mysql_using_upd_graph($/;"	f	file:
row_update_prebuilt_trx	row/row0mysql.cc	/^row_update_prebuilt_trx($/;"	f
row_update_statistics_if_needed	row/row0mysql.cc	/^row_update_statistics_if_needed($/;"	f
row_vers_build_clust_v_col	row/row0vers.cc	/^row_vers_build_clust_v_col($/;"	f	file:
row_vers_build_cur_vrow	row/row0vers.cc	/^row_vers_build_cur_vrow($/;"	f	file:
row_vers_build_cur_vrow_low	row/row0vers.cc	/^row_vers_build_cur_vrow_low($/;"	f	file:
row_vers_build_for_consistent_read	row/row0vers.cc	/^row_vers_build_for_consistent_read($/;"	f
row_vers_build_for_semi_consistent_read	row/row0vers.cc	/^row_vers_build_for_semi_consistent_read($/;"	f
row_vers_impl_x_locked	row/row0vers.cc	/^row_vers_impl_x_locked($/;"	f
row_vers_impl_x_locked_low	row/row0vers.cc	/^row_vers_impl_x_locked_low($/;"	f
row_vers_must_preserve_del_marked	row/row0vers.cc	/^row_vers_must_preserve_del_marked($/;"	f
row_vers_non_vc_match	row/row0vers.cc	/^row_vers_non_vc_match($/;"	f	file:
row_vers_old_has_index_entry	row/row0vers.cc	/^row_vers_old_has_index_entry($/;"	f
row_vers_vc_matches_cluster	row/row0vers.cc	/^row_vers_vc_matches_cluster($/;"	f	file:
row_wait_for_background_drop_list_empty	row/row0mysql.cc	/^row_wait_for_background_drop_list_empty()$/;"	f
rows	include/fts0fts.h	/^	ib_rbt_t*	rows;		\/*!< rows changed; indexed by doc-id,$/;"	m	struct:fts_trx_table_t
rows_added	include/row0ftsort.h	/^	ulint			rows_added[FTS_NUM_AUX_INDEX];$/;"	m	struct:fts_tokenize_ctx
rows_allocd	trx/trx0i_s.cc	/^	ulint		rows_allocd;	\/*!< number of allocated rows *\/$/;"	m	struct:i_s_table_cache_t	file:
rows_allocd	trx/trx0i_s.cc	/^	ulint	rows_allocd;	\/*!< the size of this chunk, in number$/;"	m	struct:i_s_mem_chunk_t	file:
rows_in_range_arbitrary_ret_val	btr/btr0cur.cc	/^static const int64_t	rows_in_range_arbitrary_ret_val = 10;$/;"	v	file:
rows_in_range_max_retries	btr/btr0cur.cc	/^static const unsigned	rows_in_range_max_retries = 4;$/;"	v	file:
rows_used	trx/trx0i_s.cc	/^	ulint		rows_used;	\/*!< number of used rows *\/$/;"	m	struct:i_s_table_cache_t	file:
rseg	include/trx0purge.h	/^	trx_rseg_t*	rseg;		\/*!< Rollback segment for the next undo$/;"	m	struct:trx_purge_t
rseg	include/trx0trx.h	/^	trx_rseg_t*	rseg;		\/*!< rollback segment assigned to the$/;"	m	struct:trx_undo_ptr_t
rseg	include/trx0undo.h	/^	trx_rseg_t*	rseg;		\/*!< rseg where the undo log belongs *\/$/;"	m	struct:trx_undo_t
rseg_array	include/trx0sys.h	/^	trx_rseg_t*	rseg_array[TRX_SYS_N_RSEGS];$/;"	m	struct:trx_sys_t
rseg_for_trunc_t	include/trx0purge.h	/^	typedef	std::vector<trx_rseg_t*>	rseg_for_trunc_t;$/;"	t	namespace:undo
rseg_hdr	trx/trx0undo.cc	/^	trx_rsegf_t*	rseg_hdr,\/*!< in: rollback segment header, page$/;"	v
rseg_history_len	include/trx0sys.h	/^	ulint		rseg_history_len;$/;"	m	struct:trx_sys_t
rseg_iter	include/trx0purge.h	/^			rseg_iter;	\/*!< Iterator to get the next rseg$/;"	m	struct:trx_purge_t
rsegs	include/trx0trx.h	/^	trx_rsegs_t	rsegs;		\/* rollback segments for undo logging *\/$/;"	m	struct:trx_t
rsegs_size	include/trx0purge.h	/^		ulint rsegs_size() const$/;"	f	class:undo::Truncate
rtr_active	include/gis0type.h	/^	rtr_info_active*	rtr_active;	\/*!< Active search info *\/$/;"	m	struct:rtr_info_track
rtr_active_mutex	include/gis0type.h	/^	ib_mutex_t		rtr_active_mutex;$/;"	m	struct:rtr_info_track
rtr_active_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t rtr_active_mutex_key;$/;"	v
rtr_adjust_parent_path	gis/gis0sea.cc	/^rtr_adjust_parent_path($/;"	f	file:
rtr_adjust_upper_level	gis/gis0rtree.cc	/^rtr_adjust_upper_level($/;"	f
rtr_check_discard_page	gis/gis0sea.cc	/^rtr_check_discard_page($/;"	f
rtr_check_same_block	gis/gis0rtree.cc	/^rtr_check_same_block($/;"	f
rtr_clean_rtr_info	gis/gis0sea.cc	/^rtr_clean_rtr_info($/;"	f
rtr_compare_cursor_rec	gis/gis0sea.cc	/^rtr_compare_cursor_rec($/;"	f	file:
rtr_copy_buf	gis/gis0sea.cc	/^rtr_copy_buf($/;"	f	file:
rtr_create_rtr_info	gis/gis0sea.cc	/^rtr_create_rtr_info($/;"	f
rtr_cur_restore_position	include/gis0rtree.h	156;"	d
rtr_cur_restore_position_func	gis/gis0sea.cc	/^rtr_cur_restore_position_func($/;"	f
rtr_cur_search_with_match	gis/gis0sea.cc	/^rtr_cur_search_with_match($/;"	f
rtr_estimate_n_rows_in_range	gis/gis0rtree.cc	/^rtr_estimate_n_rows_in_range($/;"	f
rtr_get_current_ssn_id	include/gis0rtree.ic	/^rtr_get_current_ssn_id($/;"	f
rtr_get_father_node	gis/gis0sea.cc	/^rtr_get_father_node($/;"	f
rtr_get_mbr_from_rec	gis/gis0sea.cc	/^rtr_get_mbr_from_rec($/;"	f
rtr_get_mbr_from_tuple	gis/gis0sea.cc	/^rtr_get_mbr_from_tuple($/;"	f
rtr_get_new_ssn_id	include/gis0rtree.ic	/^rtr_get_new_ssn_id($/;"	f
rtr_get_parent_cursor	include/gis0rtree.ic	/^rtr_get_parent_cursor($/;"	f
rtr_get_parent_node	include/gis0rtree.ic	/^rtr_get_parent_node($/;"	f
rtr_index_build_node_ptr	gis/gis0rtree.cc	/^rtr_index_build_node_ptr($/;"	f
rtr_info	include/btr0cur.h	/^	rtr_info_t*	rtr_info;	\/*!< rtree search info *\/$/;"	m	struct:btr_cur_t
rtr_info	include/gis0type.h	/^typedef	struct rtr_info{$/;"	s
rtr_info	include/row0mysql.h	/^	rtr_info_t*	rtr_info;	\/*!< R-tree Search Info *\/$/;"	m	struct:row_prebuilt_t
rtr_info_active	include/gis0type.h	/^typedef std::list<rtr_info_t*, ut_allocator<rtr_info_t*> >	rtr_info_active;$/;"	t
rtr_info_reinit_in_cursor	include/gis0rtree.ic	/^rtr_info_reinit_in_cursor($/;"	f
rtr_info_t	include/gis0type.h	/^} rtr_info_t;$/;"	t	typeref:struct:rtr_info
rtr_info_track	include/gis0type.h	/^typedef struct	rtr_info_track {$/;"	s
rtr_info_track_t	include/gis0type.h	/^} rtr_info_track_t;$/;"	t	typeref:struct:rtr_info_track
rtr_info_update_btr	gis/gis0sea.cc	/^rtr_info_update_btr($/;"	f
rtr_init_match	gis/gis0sea.cc	/^rtr_init_match($/;"	f	file:
rtr_init_rtr_info	gis/gis0sea.cc	/^rtr_init_rtr_info($/;"	f
rtr_ins_enlarge_mbr	gis/gis0rtree.cc	/^rtr_ins_enlarge_mbr($/;"	f
rtr_leaf_push_match_rec	gis/gis0sea.cc	/^rtr_leaf_push_match_rec($/;"	f	file:
rtr_match_mutex	include/gis0type.h	/^	ib_mutex_t	rtr_match_mutex;\/*!< mutex protect the match_recs$/;"	m	struct:matched_rec
rtr_match_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	rtr_match_mutex_key;$/;"	v
rtr_mbr	include/gis0type.h	/^typedef struct rtr_mbr {$/;"	s
rtr_mbr_t	include/gis0type.h	/^} rtr_mbr_t;$/;"	t	typeref:struct:rtr_mbr
rtr_merge_and_update_mbr	gis/gis0rtree.cc	/^rtr_merge_and_update_mbr($/;"	f
rtr_merge_mbr_changed	gis/gis0rtree.cc	/^rtr_merge_mbr_changed($/;"	f
rtr_node_path_t	include/gis0type.h	/^typedef std::vector<node_visit_t, ut_allocator<node_visit_t> >	rtr_node_path_t;$/;"	t
rtr_node_ptr_delete	gis/gis0rtree.cc	/^rtr_node_ptr_delete($/;"	f
rtr_non_leaf_insert_stack_push	gis/gis0sea.cc	/^rtr_non_leaf_insert_stack_push($/;"	f	file:
rtr_non_leaf_stack_push	include/gis0rtree.ic	/^rtr_non_leaf_stack_push($/;"	f
rtr_page_cal_mbr	include/gis0rtree.ic	/^rtr_page_cal_mbr($/;"	f
rtr_page_copy_rec_list_end_no_locks	gis/gis0rtree.cc	/^rtr_page_copy_rec_list_end_no_locks($/;"	f
rtr_page_copy_rec_list_start_no_locks	gis/gis0rtree.cc	/^rtr_page_copy_rec_list_start_no_locks($/;"	f
rtr_page_get_father	gis/gis0sea.cc	/^rtr_page_get_father($/;"	f
rtr_page_get_father_block	gis/gis0sea.cc	/^rtr_page_get_father_block($/;"	f
rtr_page_get_father_node_ptr	include/gis0rtree.h	320;"	d
rtr_page_get_father_node_ptr_func	gis/gis0sea.cc	/^rtr_page_get_father_node_ptr_func($/;"	f
rtr_page_split_and_insert	gis/gis0rtree.cc	/^rtr_page_split_and_insert($/;"	f
rtr_page_split_initialize_nodes	gis/gis0rtree.cc	/^rtr_page_split_initialize_nodes($/;"	f	file:
rtr_path_mutex	include/gis0type.h	/^	ib_mutex_t	rtr_path_mutex;$/;"	m	struct:rtr_info
rtr_path_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	rtr_path_mutex_key;$/;"	v
rtr_pcur_getnext_from_path	gis/gis0sea.cc	/^rtr_pcur_getnext_from_path($/;"	f	file:
rtr_pcur_move_to_next	gis/gis0sea.cc	/^rtr_pcur_move_to_next($/;"	f
rtr_pcur_open	include/gis0rtree.h	408;"	d
rtr_pcur_open_low	gis/gis0sea.cc	/^rtr_pcur_open_low($/;"	f
rtr_read_mbr	include/gis0rtree.ic	/^rtr_read_mbr($/;"	f
rtr_rebuild_path	gis/gis0sea.cc	/^rtr_rebuild_path($/;"	f	file:
rtr_rec	include/gis0type.h	/^typedef	struct rtr_rec {$/;"	s
rtr_rec_cal_increase	gis/gis0rtree.cc	/^rtr_rec_cal_increase($/;"	f
rtr_rec_move	include/gis0type.h	/^typedef struct rtr_rec_move {$/;"	s
rtr_rec_move_t	include/gis0type.h	/^} rtr_rec_move_t;$/;"	t	typeref:struct:rtr_rec_move
rtr_rec_t	include/gis0type.h	/^} rtr_rec_t;$/;"	t	typeref:struct:rtr_rec
rtr_rec_vector	include/gis0type.h	/^typedef std::vector<rtr_rec_t, ut_allocator<rtr_rec_t> >	rtr_rec_vector;$/;"	t
rtr_split_node_t	include/gis0geo.h	/^struct rtr_split_node_t$/;"	s
rtr_split_page_move_rec_list	gis/gis0rtree.cc	/^rtr_split_page_move_rec_list($/;"	f
rtr_ssn	include/dict0mem.h	/^	rtr_ssn_t	rtr_ssn;\/*!< Node sequence number for RTree *\/$/;"	m	struct:dict_index_t
rtr_ssn_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t rtr_ssn_mutex_key;$/;"	v
rtr_ssn_t	include/gis0type.h	/^} rtr_ssn_t;$/;"	t	typeref:struct:rtree_ssn
rtr_store_parent_path	gis/gis0sea.cc	/^rtr_store_parent_path($/;"	f
rtr_track	include/dict0mem.h	/^			rtr_track;\/*!< tracking all R-Tree search cursors *\/$/;"	m	struct:dict_index_t
rtr_update_mbr_field	gis/gis0rtree.cc	/^rtr_update_mbr_field($/;"	f
rtr_update_mbr_field_in_place	gis/gis0rtree.cc	/^rtr_update_mbr_field_in_place($/;"	f	file:
rtr_write_mbr	include/gis0rtree.ic	/^rtr_write_mbr($/;"	f
rtree_add_point_to_mbr	gis/gis0geo.cc	/^rtree_add_point_to_mbr($/;"	f	file:
rtree_area_increase	gis/gis0geo.cc	/^rtree_area_increase($/;"	f
rtree_area_overlapping	gis/gis0geo.cc	/^rtree_area_overlapping($/;"	f
rtree_get_geometry_mbr	gis/gis0geo.cc	/^rtree_get_geometry_mbr($/;"	f	file:
rtree_get_linestring_mbr	gis/gis0geo.cc	/^rtree_get_linestring_mbr($/;"	f	file:
rtree_get_point_mbr	gis/gis0geo.cc	/^rtree_get_point_mbr($/;"	f	file:
rtree_get_polygon_mbr	gis/gis0geo.cc	/^rtree_get_polygon_mbr($/;"	f	file:
rtree_key_cmp	gis/gis0geo.cc	/^rtree_key_cmp($/;"	f
rtree_mbr_from_wkb	gis/gis0geo.cc	/^rtree_mbr_from_wkb($/;"	f
rtree_ssn	include/gis0type.h	/^typedef struct rtree_ssn {$/;"	s
run_node	include/que0que.h	/^	que_node_t*	run_node;	\/*!< pointer to the node where the$/;"	m	struct:que_thr_t
running	include/trx0purge.h	/^	volatile bool	running;	\/*!< true, if purge is active,$/;"	m	struct:trx_purge_t
rw_lock	trx/trx0i_s.cc	/^	rw_lock_t*	rw_lock;	\/*!< read-write lock protecting$/;"	m	struct:trx_i_s_cache_t	file:
rw_lock_add_debug_info	sync/sync0rw.cc	/^rw_lock_add_debug_info($/;"	f
rw_lock_create	include/sync0rw.h	127;"	d
rw_lock_create	include/sync0rw.h	130;"	d
rw_lock_create	include/sync0rw.h	203;"	d
rw_lock_create	include/sync0rw.h	206;"	d
rw_lock_create_func	sync/sync0rw.cc	/^rw_lock_create_func($/;"	f
rw_lock_debug_create	sync/sync0rw.cc	/^rw_lock_debug_create(void)$/;"	f	file:
rw_lock_debug_event	sync/sync0debug.cc	/^static os_event_t		rw_lock_debug_event;$/;"	v	file:
rw_lock_debug_free	sync/sync0rw.cc	/^rw_lock_debug_free($/;"	f	file:
rw_lock_debug_mutex	sync/sync0debug.cc	/^static ib_mutex_t		rw_lock_debug_mutex;$/;"	v	file:
rw_lock_debug_mutex_enter	sync/sync0debug.cc	/^rw_lock_debug_mutex_enter()$/;"	f
rw_lock_debug_mutex_exit	sync/sync0debug.cc	/^rw_lock_debug_mutex_exit()$/;"	f
rw_lock_debug_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	rw_lock_debug_mutex_key;$/;"	v
rw_lock_debug_print	sync/sync0rw.cc	/^rw_lock_debug_print($/;"	f
rw_lock_debug_t	include/sync0rw.h	/^struct	rw_lock_debug_t {$/;"	s
rw_lock_debug_waiters	sync/sync0debug.cc	/^static bool			rw_lock_debug_waiters;$/;"	v	file:
rw_lock_flag_t	include/sync0types.h	/^enum rw_lock_flag_t {$/;"	g
rw_lock_flags_t	include/sync0types.h	/^typedef ulint rw_lock_flags_t;$/;"	t
rw_lock_free	include/sync0rw.h	197;"	d
rw_lock_free	include/sync0rw.h	273;"	d
rw_lock_free_func	sync/sync0rw.cc	/^rw_lock_free_func($/;"	f
rw_lock_get_debug_info	sync/sync0rw.cc	/^rw_lock_get_debug_info(const rw_lock_t* lock, Infos* infos)$/;"	f
rw_lock_get_mutex	include/sync0rw.ic	/^rw_lock_get_mutex($/;"	f
rw_lock_get_reader_count	include/sync0rw.ic	/^rw_lock_get_reader_count($/;"	f
rw_lock_get_sx_lock_count	include/sync0rw.ic	/^rw_lock_get_sx_lock_count($/;"	f
rw_lock_get_waiters	include/sync0rw.ic	/^rw_lock_get_waiters($/;"	f
rw_lock_get_writer	include/sync0rw.ic	/^rw_lock_get_writer($/;"	f
rw_lock_get_x_lock_count	include/sync0rw.ic	/^rw_lock_get_x_lock_count($/;"	f
rw_lock_is_locked	sync/sync0rw.cc	/^rw_lock_is_locked($/;"	f
rw_lock_list	sync/sync0rw.cc	/^rw_lock_list_t		rw_lock_list;$/;"	v
rw_lock_list_mutex	sync/sync0rw.cc	/^ib_mutex_t		rw_lock_list_mutex;$/;"	v
rw_lock_list_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	rw_lock_list_mutex_key;$/;"	v
rw_lock_list_print_info	sync/sync0rw.cc	/^rw_lock_list_print_info($/;"	f
rw_lock_list_t	include/sync0rw.h	/^typedef UT_LIST_BASE_NODE_T(rw_lock_t)	rw_lock_list_t;$/;"	t
rw_lock_lock_word_decr	include/sync0rw.ic	/^rw_lock_lock_word_decr($/;"	f
rw_lock_lock_word_incr	include/sync0rw.ic	/^rw_lock_lock_word_incr($/;"	f
rw_lock_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	rw_lock_mutex_key;$/;"	v
rw_lock_n_locked	sync/sync0rw.cc	/^rw_lock_n_locked(void)$/;"	f
rw_lock_own	sync/sync0rw.cc	/^rw_lock_own($/;"	f
rw_lock_own_flagged	sync/sync0rw.cc	/^rw_lock_own_flagged($/;"	f
rw_lock_print	sync/sync0rw.cc	/^rw_lock_print($/;"	f
rw_lock_remove_debug_info	sync/sync0rw.cc	/^rw_lock_remove_debug_info($/;"	f
rw_lock_reset_waiter_flag	include/sync0rw.ic	/^rw_lock_reset_waiter_flag($/;"	f
rw_lock_s_lock	include/sync0rw.h	138;"	d
rw_lock_s_lock	include/sync0rw.h	214;"	d
rw_lock_s_lock_func	include/sync0rw.ic	/^rw_lock_s_lock_func($/;"	f
rw_lock_s_lock_gen	include/sync0rw.h	144;"	d
rw_lock_s_lock_gen	include/sync0rw.h	220;"	d
rw_lock_s_lock_inline	include/sync0rw.h	141;"	d
rw_lock_s_lock_inline	include/sync0rw.h	217;"	d
rw_lock_s_lock_low	include/sync0rw.ic	/^rw_lock_s_lock_low($/;"	f
rw_lock_s_lock_nowait	include/sync0rw.h	147;"	d
rw_lock_s_lock_nowait	include/sync0rw.h	223;"	d
rw_lock_s_lock_spin	sync/sync0rw.cc	/^rw_lock_s_lock_spin($/;"	f
rw_lock_s_unlock	include/sync0rw.h	277;"	d
rw_lock_s_unlock_func	include/sync0rw.ic	/^rw_lock_s_unlock_func($/;"	f
rw_lock_s_unlock_gen	include/sync0rw.h	151;"	d
rw_lock_s_unlock_gen	include/sync0rw.h	153;"	d
rw_lock_s_unlock_gen	include/sync0rw.h	227;"	d
rw_lock_s_unlock_gen	include/sync0rw.h	229;"	d
rw_lock_set_waiter_flag	include/sync0rw.ic	/^rw_lock_set_waiter_flag($/;"	f
rw_lock_set_writer_id_and_recursion_flag	include/sync0rw.ic	/^rw_lock_set_writer_id_and_recursion_flag($/;"	f
rw_lock_stats	sync/sync0rw.cc	/^rw_lock_stats_t		rw_lock_stats;$/;"	v
rw_lock_stats_t	include/sync0rw.h	/^struct rw_lock_stats_t {$/;"	s
rw_lock_sx_lock	include/sync0rw.h	156;"	d
rw_lock_sx_lock	include/sync0rw.h	232;"	d
rw_lock_sx_lock_func	sync/sync0rw.cc	/^rw_lock_sx_lock_func($/;"	f
rw_lock_sx_lock_gen	include/sync0rw.h	162;"	d
rw_lock_sx_lock_gen	include/sync0rw.h	238;"	d
rw_lock_sx_lock_inline	include/sync0rw.h	159;"	d
rw_lock_sx_lock_inline	include/sync0rw.h	235;"	d
rw_lock_sx_lock_low	sync/sync0rw.cc	/^rw_lock_sx_lock_low($/;"	f
rw_lock_sx_lock_nowait	include/sync0rw.h	165;"	d
rw_lock_sx_lock_nowait	include/sync0rw.h	241;"	d
rw_lock_sx_unlock	include/sync0rw.h	169;"	d
rw_lock_sx_unlock	include/sync0rw.h	172;"	d
rw_lock_sx_unlock	include/sync0rw.h	245;"	d
rw_lock_sx_unlock	include/sync0rw.h	248;"	d
rw_lock_sx_unlock_func	include/sync0rw.ic	/^rw_lock_sx_unlock_func($/;"	f
rw_lock_sx_unlock_gen	include/sync0rw.h	170;"	d
rw_lock_sx_unlock_gen	include/sync0rw.h	173;"	d
rw_lock_sx_unlock_gen	include/sync0rw.h	246;"	d
rw_lock_sx_unlock_gen	include/sync0rw.h	249;"	d
rw_lock_t	include/sync0rw.h	/^	rw_lock_t()$/;"	f	struct:rw_lock_t
rw_lock_t	include/sync0rw.h	/^struct rw_lock_t$/;"	s
rw_lock_type_t	include/sync0rw.h	/^enum rw_lock_type_t {$/;"	g
rw_lock_validate	sync/sync0rw.cc	/^rw_lock_validate($/;"	f
rw_lock_x_lock	include/sync0rw.h	176;"	d
rw_lock_x_lock	include/sync0rw.h	252;"	d
rw_lock_x_lock_func	sync/sync0rw.cc	/^rw_lock_x_lock_func($/;"	f
rw_lock_x_lock_func_nowait	include/sync0rw.ic	/^rw_lock_x_lock_func_nowait($/;"	f
rw_lock_x_lock_func_nowait_inline	include/sync0rw.h	188;"	d
rw_lock_x_lock_func_nowait_inline	include/sync0rw.h	264;"	d
rw_lock_x_lock_gen	include/sync0rw.h	182;"	d
rw_lock_x_lock_gen	include/sync0rw.h	258;"	d
rw_lock_x_lock_inline	include/sync0rw.h	179;"	d
rw_lock_x_lock_inline	include/sync0rw.h	255;"	d
rw_lock_x_lock_low	sync/sync0rw.cc	/^rw_lock_x_lock_low($/;"	f
rw_lock_x_lock_move_ownership	sync/sync0rw.cc	/^rw_lock_x_lock_move_ownership($/;"	f
rw_lock_x_lock_nowait	include/sync0rw.h	185;"	d
rw_lock_x_lock_nowait	include/sync0rw.h	261;"	d
rw_lock_x_lock_wait	sync/sync0rw.cc	534;"	d	file:
rw_lock_x_lock_wait	sync/sync0rw.cc	537;"	d	file:
rw_lock_x_lock_wait_func	sync/sync0rw.cc	/^rw_lock_x_lock_wait_func($/;"	f
rw_lock_x_unlock	include/sync0rw.h	278;"	d
rw_lock_x_unlock_func	include/sync0rw.ic	/^rw_lock_x_unlock_func($/;"	f
rw_lock_x_unlock_gen	include/sync0rw.h	192;"	d
rw_lock_x_unlock_gen	include/sync0rw.h	194;"	d
rw_lock_x_unlock_gen	include/sync0rw.h	268;"	d
rw_lock_x_unlock_gen	include/sync0rw.h	270;"	d
rw_locks	include/hash0hash.h	/^		rw_lock_t*	rw_locks;\/* NULL, or an array of rw_lcoks$/;"	m	union:hash_table_t::__anon23
rw_max_trx_id	include/trx0sys.h	/^	trx_id_t	rw_max_trx_id;	\/*!< Max trx id of read-write$/;"	m	struct:trx_sys_t
rw_perm	include/os0file.h	/^	bool		rw_perm;		\/*!< true if can be opened$/;"	m	struct:os_file_stat_t
rw_s_os_wait_count	include/sync0rw.h	/^	int64_counter_t		rw_s_os_wait_count;$/;"	m	struct:rw_lock_stats_t
rw_s_spin_round_count	include/sync0rw.h	/^	int64_counter_t		rw_s_spin_round_count;$/;"	m	struct:rw_lock_stats_t
rw_s_spin_wait_count	include/sync0rw.h	/^	int64_counter_t		rw_s_spin_wait_count;$/;"	m	struct:rw_lock_stats_t
rw_sx_os_wait_count	include/sync0rw.h	/^	int64_counter_t		rw_sx_os_wait_count;$/;"	m	struct:rw_lock_stats_t
rw_sx_spin_round_count	include/sync0rw.h	/^	int64_counter_t		rw_sx_spin_round_count;$/;"	m	struct:rw_lock_stats_t
rw_sx_spin_wait_count	include/sync0rw.h	/^	int64_counter_t		rw_sx_spin_wait_count;$/;"	m	struct:rw_lock_stats_t
rw_trx_ids	include/trx0sys.h	/^	trx_ids_t	rw_trx_ids;	\/*!< Array of Read write transaction IDs$/;"	m	struct:trx_sys_t
rw_trx_list	include/trx0sys.h	/^	trx_ut_list_t	rw_trx_list;	\/*!< List of active and committed in$/;"	m	struct:trx_sys_t
rw_trx_set	include/trx0sys.h	/^	TrxIdSet	rw_trx_set;	\/*!< Mapping from transaction id$/;"	m	struct:trx_sys_t
rw_x_os_wait_count	include/sync0rw.h	/^	int64_counter_t		rw_x_os_wait_count;$/;"	m	struct:rw_lock_stats_t
rw_x_spin_round_count	include/sync0rw.h	/^	int64_counter_t		rw_x_spin_round_count;$/;"	m	struct:rw_lock_stats_t
rw_x_spin_wait_count	include/sync0rw.h	/^	int64_counter_t		rw_x_spin_wait_count;$/;"	m	struct:rw_lock_stats_t
s_cols	include/dict0mem.h	/^	dict_s_col_list*			s_cols;$/;"	m	struct:dict_table_t
s_count	include/os0thread.h	/^        static unsigned int     s_count;$/;"	m	struct:mysql_pfs_key_t
s_count	sync/sync0sync.cc	/^unsigned int mysql_pfs_key_t::s_count;$/;"	m	class:mysql_pfs_key_t	file:
s_event	include/buf0dblwr.h	/^	os_event_t	s_event;\/*!< event where threads wait for a$/;"	m	struct:buf_dblwr_t
s_fix_up_active	include/row0trunc.h	/^	static	bool		s_fix_up_active;$/;"	m	class:truncate_t
s_fix_up_active	row/row0trunc.cc	/^bool	truncate_t::s_fix_up_active = false;$/;"	m	class:truncate_t	file:
s_fix_up_spaces	include/trx0purge.h	/^		static undo_spaces_t	s_fix_up_spaces;$/;"	m	class:undo::Truncate
s_fix_up_spaces	srv/srv0start.cc	/^undo::undo_spaces_t	undo::Truncate::s_fix_up_spaces;$/;"	m	class:undo::Truncate	file:
s_ibuf	os/os0file.cc	/^	static AIO*		s_ibuf;$/;"	m	class:AIO	file:
s_ibuf	os/os0file.cc	/^AIO*	AIO::s_ibuf;$/;"	m	class:AIO	file:
s_initialized	sync/sync0debug.cc	/^	static bool		s_initialized;$/;"	m	struct:LatchDebug	file:
s_initialized	sync/sync0debug.cc	/^bool LatchDebug::s_initialized = false;$/;"	m	class:LatchDebug	file:
s_instance	sync/sync0debug.cc	/^	static LatchDebug*	s_instance;$/;"	m	struct:LatchDebug	file:
s_instance	sync/sync0debug.cc	/^LatchDebug* LatchDebug::s_instance = NULL;$/;"	m	class:LatchDebug	file:
s_lock	include/mtr0mtr.ic	/^mtr_t::s_lock(rw_lock_t* lock, const char* file, ulint line)$/;"	f	class:mtr_t
s_lock_mark_counter	lock/lock0lock.cc	/^	static ib_uint64_t	s_lock_mark_counter;$/;"	m	class:DeadlockChecker	file:
s_lock_mark_counter	lock/lock0lock.cc	/^ib_uint64_t	DeadlockChecker::s_lock_mark_counter = 0;$/;"	m	class:DeadlockChecker	file:
s_log	os/os0file.cc	/^	static AIO*		s_log;$/;"	m	class:AIO	file:
s_log	os/os0file.cc	/^AIO*	AIO::s_log;$/;"	m	class:AIO	file:
s_log_ext	include/trx0purge.h	/^	const char* const			s_log_ext = "trunc.log";$/;"	m	namespace:undo
s_log_ext	row/row0trunc.cc	/^	const static char*		s_log_ext;$/;"	m	class:TruncateLogger	file:
s_log_ext	row/row0trunc.cc	/^const char*		TruncateLogger::s_log_ext = "trunc.log";$/;"	m	class:TruncateLogger	file:
s_log_prefix	include/trx0purge.h	/^	const char* const			s_log_prefix = "undo_";$/;"	m	namespace:undo
s_log_prefix	row/row0trunc.cc	/^	const static char*		s_log_prefix;$/;"	m	class:TruncateLogger	file:
s_log_prefix	row/row0trunc.cc	/^const char*		TruncateLogger::s_log_prefix = "ib_";$/;"	m	class:TruncateLogger	file:
s_magic	include/trx0purge.h	/^	const ib_uint32_t			s_magic = 76845412;$/;"	m	namespace:undo
s_magic	row/row0trunc.cc	/^	const static ib_uint32_t	s_magic;$/;"	m	class:TruncateLogger	file:
s_magic	row/row0trunc.cc	/^const ib_uint32_t	TruncateLogger::s_magic = 32743712;$/;"	m	class:TruncateLogger	file:
s_pos	include/dict0mem.h	/^	ulint		s_pos;$/;"	m	struct:dict_s_col_t
s_reads	os/os0file.cc	/^	static AIO*		s_reads;$/;"	m	class:AIO	file:
s_reads	os/os0file.cc	/^AIO*	AIO::s_reads;$/;"	m	class:AIO	file:
s_reserved	include/buf0dblwr.h	/^	ulint		s_reserved;\/*!< number of slots currently$/;"	m	struct:buf_dblwr_t
s_spaces_to_truncate	include/trx0purge.h	/^		static undo_spaces_t	s_spaces_to_truncate;$/;"	m	class:undo::Truncate
s_spaces_to_truncate	trx/trx0purge.cc	/^undo::undo_spaces_t	undo::Truncate::s_spaces_to_truncate;$/;"	m	class:undo::Truncate	file:
s_states	lock/lock0lock.cc	/^	static state_t		s_states[MAX_STACK_SIZE];$/;"	m	class:DeadlockChecker	file:
s_states	lock/lock0lock.cc	/^DeadlockChecker::state_t	DeadlockChecker::s_states[MAX_STACK_SIZE];$/;"	m	class:DeadlockChecker	file:
s_sync	os/os0file.cc	/^	static AIO*		s_sync;$/;"	m	class:AIO	file:
s_sync	os/os0file.cc	/^AIO*	AIO::s_sync;$/;"	m	class:AIO	file:
s_tables	include/row0trunc.h	/^	static	tables_t	s_tables;$/;"	m	class:truncate_t
s_tables	row/row0trunc.cc	/^truncate_t::tables_t		truncate_t::s_tables;$/;"	m	class:truncate_t	file:
s_truncated_tables	include/row0trunc.h	/^	static truncated_tables_t	s_truncated_tables;$/;"	m	class:truncate_t
s_truncated_tables	row/row0trunc.cc	/^truncate_t::truncated_tables_t	truncate_t::s_truncated_tables;$/;"	m	class:truncate_t	file:
s_writes	os/os0file.cc	/^	static AIO*		s_writes;$/;"	m	class:AIO	file:
s_writes	os/os0file.cc	/^AIO*	AIO::s_writes;$/;"	m	class:AIO	file:
same_as	fsp/fsp0file.cc	/^Datafile::same_as($/;"	f	class:Datafile
same_filepath_as	fsp/fsp0file.cc	/^Datafile::same_filepath_as($/;"	f	class:Datafile
same_pk	row/row0log.cc	/^	bool		same_pk;\/*!< whether the definition of the PRIMARY KEY$/;"	m	struct:row_log_t	file:
save_auto_increment	handler/ha_innopart.cc	/^ha_innopart::save_auto_increment($/;"	f	class:ha_innopart
savepoints	include/btr0cur.h	/^	ulint		savepoints[3];$/;"	m	struct:btr_latch_leaves_t
savepoints	include/fts0fts.h	/^	ib_vector_t*	savepoints;	\/*!< Active savepoints, must have at$/;"	m	struct:fts_trx_t
savept	include/trx0roll.h	/^	trx_savept_t		savept;	\/*!< savepoint to which to$/;"	m	struct:roll_node_t
savept	include/trx0roll.h	/^	trx_savept_t	savept;		\/*!< the undo number corresponding to$/;"	m	struct:trx_named_savept_t
scan	row/row0trunc.cc	/^TruncateLogParser::scan($/;"	f	class:TruncateLogParser
scan_and_parse	row/row0trunc.cc	/^TruncateLogParser::scan_and_parse($/;"	f	class:TruncateLogParser
scan_time	handler/ha_innodb.cc	/^ha_innobase::scan_time()$/;"	f	class:ha_innobase
scan_time	handler/ha_innopart.cc	/^ha_innopart::scan_time()$/;"	f	class:ha_innopart
scanned_checkpoint_no	include/log0recv.h	/^	ulint		scanned_checkpoint_no;$/;"	m	struct:recv_sys_t
scanned_lsn	include/log0log.h	/^	lsn_t				scanned_lsn;$/;"	m	struct:log_group_t
scanned_lsn	include/log0recv.h	/^	lsn_t		scanned_lsn;$/;"	m	struct:recv_sys_t
scanner	fts/fts0pars.cc	/^	fts_scanner	scanner;$/;"	m	struct:fts_lexer_t	file:
schema	api/api0api.cc	/^	ib_table_def_t*	schema;		\/*!< Parent table schema that owns$/;"	m	struct:ib_index_def_t	file:
search	lock/lock0lock.cc	/^DeadlockChecker::search()$/;"	f	class:DeadlockChecker
search	row/row0trunc.cc	/^	dberr_t search(dtuple_t& key, bool noredo)$/;"	f	class:IndexIterator
search_cond	include/row0sel.h	/^	que_node_t*	search_cond;	\/*!< search condition *\/$/;"	m	struct:sel_node_t
search_info	include/dict0mem.h	/^	btr_search_t*	search_info;$/;"	m	struct:dict_index_t
search_innodb_locks	trx/trx0i_s.cc	/^search_innodb_locks($/;"	f	file:
search_mode	include/btr0pcur.h	/^	page_cur_mode_t	search_mode;$/;"	m	struct:btr_pcur_t
search_mode	include/gis0type.h	/^	page_cur_mode_t	search_mode;$/;"	m	struct:rtr_info
search_tuple	include/gis0type.h	/^	const dtuple_t*	search_tuple;$/;"	m	struct:rtr_info
search_tuple	include/row0mysql.h	/^	dtuple_t*	search_tuple;	\/*!< prebuilt dtuple used in selects *\/$/;"	m	struct:row_prebuilt_t
searched_update	include/row0upd.h	/^	ibool		searched_update;$/;"	m	struct:upd_node_t
sees	include/read0types.h	/^	bool sees(trx_id_t id) const$/;"	f	class:ReadView
seg_size	include/ibuf0ibuf.ic	/^	ulint		seg_size;	\/*!< allocated pages of the file$/;"	m	struct:ibuf_t	file:
sel	api/api0api.cc	/^	que_fork_t*	sel;		\/*!< dummy query graph used in$/;"	m	struct:ib_qry_grph_t	file:
sel	api/api0api.cc	/^	sel_node_t*	sel;		\/*!< Innobase SQL select node$/;"	m	struct:ib_qry_node_t	file:
sel_assign_into_var_values	row/row0sel.cc	/^sel_assign_into_var_values($/;"	f
sel_buf_t	include/row0sel.h	/^struct sel_buf_t{$/;"	s
sel_col_prefetch_buf_alloc	row/row0sel.cc	/^sel_col_prefetch_buf_alloc($/;"	f	file:
sel_col_prefetch_buf_free	row/row0sel.cc	/^sel_col_prefetch_buf_free($/;"	f
sel_dequeue_prefetched_row	row/row0sel.cc	/^sel_dequeue_prefetched_row($/;"	f	file:
sel_enqueue_prefetched_row	row/row0sel.cc	/^sel_enqueue_prefetched_row($/;"	f
sel_eval_select_list	row/row0sel.cc	/^sel_eval_select_list($/;"	f
sel_graph	include/fts0types.h	/^	que_t**		sel_graph;	\/*!< Select query graphs *\/$/;"	m	struct:fts_index_cache_t
sel_graph	include/row0mysql.h	/^	que_fork_t*	sel_graph;	\/*!< dummy query graph used in$/;"	m	struct:row_prebuilt_t
sel_node	include/row0sel.h	/^	sel_node_t*	sel_node;	\/*!< select *\/$/;"	m	struct:row_printf_node_t
sel_node_create	row/row0sel.cc	/^sel_node_create($/;"	f
sel_node_free_private	row/row0sel.cc	/^sel_node_free_private($/;"	f
sel_node_get_nth_plan	include/row0sel.ic	/^sel_node_get_nth_plan($/;"	f
sel_node_reset_cursor	include/row0sel.ic	/^sel_node_reset_cursor($/;"	f
sel_node_state	include/row0sel.h	/^enum sel_node_state {$/;"	g
sel_node_t	include/row0sel.h	/^struct sel_node_t{$/;"	s
sel_reset_aggregate_vals	row/row0sel.cc	/^sel_reset_aggregate_vals($/;"	f
sel_restore_position_for_mysql	row/row0sel.cc	/^sel_restore_position_for_mysql($/;"	f	file:
sel_set_rec_lock	row/row0sel.cc	/^sel_set_rec_lock($/;"	f
sel_set_rtr_rec_lock	row/row0sel.cc	/^sel_set_rtr_rec_lock($/;"	f
select	include/row0ins.h	/^	sel_node_t*	select;	\/*!< select in searched insert *\/$/;"	m	struct:ins_node_t
select	include/row0upd.h	/^	sel_node_t*	select;	\/*!< query graph subtree implementing a base$/;"	m	struct:upd_node_t
select	os/os0file.cc	/^	bool select()$/;"	f	class:SimulatedAIOHandler
select_if_older	os/os0file.cc	/^	void select_if_older(Slot* slot)$/;"	f	class:SimulatedAIOHandler	file:
select_list	include/row0sel.h	/^	que_node_t*	select_list;	\/*!< select list *\/$/;"	m	struct:sel_node_t
select_lock_type	include/row0mysql.h	/^	ulint		select_lock_type;\/*!< LOCK_NONE, LOCK_S, or LOCK_X *\/$/;"	m	struct:row_prebuilt_t
select_lowest_offset	os/os0file.cc	/^	bool select_lowest_offset()$/;"	f	class:SimulatedAIOHandler	file:
select_oldest	os/os0file.cc	/^	bool select_oldest()$/;"	f	class:SimulatedAIOHandler	file:
select_slot_array	os/os0file.cc	/^AIO::select_slot_array(IORequest& type, bool read_only, ulint mode)$/;"	f	class:AIO
select_victim	lock/lock0lock.cc	/^DeadlockChecker::select_victim() const$/;"	f	class:DeadlockChecker
self_heap	fts/fts0opt.cc	/^	ib_alloc_t*	self_heap;	\/*!< Heap to use for allocations *\/$/;"	m	struct:fts_optimize_t	file:
self_heap	include/fts0fts.h	/^	ib_alloc_t*	self_heap;	\/*!< Allocator used to create an$/;"	m	struct:fts_doc_ids_t
self_heap	include/fts0types.h	/^	ib_alloc_t*	self_heap;	\/*!< An instance of this type is$/;"	m	struct:fts_doc_t
self_heap	include/fts0types.h	/^	ib_alloc_t*	self_heap;	\/*!< This heap is the heap out of$/;"	m	struct:fts_cache_t
seq_no	include/gis0type.h	/^	node_seq_t	seq_no;		\/*!< the SSN (split sequence number *\/$/;"	m	struct:node_visit
seq_no	include/gis0type.h	/^        node_seq_t      seq_no;         \/*!< the SSN (node sequence number) *\/$/;"	m	struct:rtree_ssn
sequence	handler/handler0alter.cc	/^	ib_sequence_t	sequence;$/;"	m	struct:ha_innobase_inplace_ctx	file:
serialisation_list	include/trx0sys.h	/^	trx_ut_list_t	serialisation_list;$/;"	m	struct:trx_sys_t
server_get_hostname	handler/ha_innodb.cc	/^server_get_hostname()$/;"	f
sess	include/trx0purge.h	/^	sess_t*		sess;		\/*!< System session running the purge$/;"	m	struct:trx_purge_t
sess	include/trx0trx.h	/^	sess_t*		sess;		\/*!< session of the trx, NULL if none *\/$/;"	m	struct:trx_t
sess0sess_h	include/sess0sess.h	28;"	d
sess_close	usr/usr0sess.cc	/^sess_close($/;"	f
sess_open	usr/usr0sess.cc	/^sess_open(void)$/;"	f
sess_row_id	include/dict0mem.h	/^	ib_uint64_t				sess_row_id;$/;"	m	struct:dict_table_t
sess_t	include/usr0sess.h	/^struct sess_t{$/;"	s
sess_trx_id	include/dict0mem.h	/^	ib_uint64_t				sess_trx_id;$/;"	m	struct:dict_table_t
session	include/row0mysql.h	/^			session;	\/*!< InnoDB session handler. *\/$/;"	m	struct:row_prebuilt_t
set	buf/buf0buf.cc	/^HazardPointer::set(buf_page_t* bpage)$/;"	f	class:HazardPointer
set	row/row0trunc.cc	/^truncate_t::index_t::set($/;"	f	class:truncate_t::index_t
setNext	btr/btr0bulk.cc	/^PageBulk::setNext($/;"	f	class:PageBulk
setPrev	btr/btr0bulk.cc	/^PageBulk::setPrev($/;"	f	class:PageBulk
set_algorithm	handler/ha_innodb.cc	/^Encryption::set_algorithm($/;"	f	class:Encryption
set_bit	handler/ha_innopart.cc	/^set_bit($/;"	f	file:
set_committed	include/dict0mem.h	/^	void set_committed(bool committed)$/;"	f	struct:dict_index_t
set_create_info_dir	handler/ha_innopart.cc	/^set_create_info_dir($/;"	f	file:
set_eq_range	handler/ha_innopart.h	/^	set_eq_range(bool eq_range_arg)$/;"	f	class:ha_innopart
set_filename	include/fsp0file.h	/^	void set_filename()$/;"	f	class:Datafile
set_filepath	fsp/fsp0file.cc	/^Datafile::set_filepath(const char* filepath)$/;"	f	class:Datafile
set_flags	include/fsp0space.h	/^	void set_flags(ulint fsp_flags)$/;"	f	class:Tablespace
set_flush_observer	include/mtr0mtr.h	/^	void set_flush_observer(FlushObserver*	observer)$/;"	f	struct:mtr_t
set_from_prebuilt	handler/ha_innopart.cc	/^	set_from_prebuilt($/;"	f	class:Altered_partitions
set_ignore_read_only	include/fsp0space.h	/^	void set_ignore_read_only(bool read_only_status)$/;"	f	class:Tablespace
set_last_file_size	include/fsp0sysspace.h	/^	void set_last_file_size(ulint size)$/;"	f	class:SysTablespace
set_link_filepath	fsp/fsp0file.cc	/^RemoteDatafile::set_link_filepath(const char* path)$/;"	f	class:RemoteDatafile
set_log_mode	include/mtr0mtr.ic	/^mtr_t::set_log_mode(mtr_log_t mode)$/;"	f	class:mtr_t
set_modified	include/mtr0mtr.h	/^	void set_modified()$/;"	f	struct:mtr_t
set_name	fsp/fsp0file.cc	/^Datafile::set_name(const char*	name)$/;"	f	class:Datafile
set_name	include/fsp0space.h	/^	void set_name(const char* name)$/;"	f	class:Tablespace
set_named_space	include/mtr0mtr.h	/^	fil_space_t* set_named_space(ulint space_id)$/;"	f	struct:mtr_t
set_named_space	mtr/mtr0mtr.cc	/^mtr_t::set_named_space(fil_space_t* space)$/;"	f	class:mtr_t
set_next	trx/trx0purge.cc	/^TrxUndoRsegsIterator::set_next()$/;"	f	class:TrxUndoRsegsIterator
set_numa_interleave_t	buf/buf0buf.cc	/^	set_numa_interleave_t()$/;"	f	struct:set_numa_interleave_t
set_numa_interleave_t	buf/buf0buf.cc	/^struct set_numa_interleave_t$/;"	s	file:
set_oom_not_fatal	include/ut0new.h	/^	set_oom_not_fatal() {$/;"	f	class:ut_allocator
set_open_flags	include/fsp0file.h	/^	void set_open_flags(os_file_create_t	open_flags)$/;"	f	class:Datafile
set_page_no	include/buf0buf.h	/^	inline void set_page_no(ulint page_no)$/;"	f	class:page_id_t
set_part	handler/ha_innopart.cc	/^	set_part($/;"	f	class:Altered_partitions
set_part_info	handler/ha_innopart.h	/^	set_part_info($/;"	f	class:ha_innopart
set_partition	handler/ha_innopart.cc	/^ha_innopart::set_partition($/;"	f	class:ha_innopart
set_path	include/fsp0space.h	/^	void set_path(const char* path)$/;"	f	class:Tablespace
set_path	include/fsp0space.h	/^	void set_path(const char* path, size_t len)$/;"	f	class:Tablespace
set_punch_hole	include/os0file.h	/^	void set_punch_hole()$/;"	f	class:IORequest
set_range_key_part	handler/ha_innopart.h	/^	set_range_key_part(KEY_PART_INFO *key_part)$/;"	f	class:ha_innopart
set_remote_path_flags	handler/ha_innopart.cc	/^create_table_info_t::set_remote_path_flags()$/;"	f	class:create_table_info_t
set_sanity_check_status	include/fsp0sysspace.h	/^	void set_sanity_check_status(bool status)$/;"	f	class:SysTablespace
set_scan_start	include/trx0purge.h	/^		void set_scan_start(ulint	space_id)$/;"	f	class:undo::Truncate
set_size	fsp/fsp0sysspace.cc	/^SysTablespace::set_size($/;"	f	class:SysTablespace
set_space_id	include/fsp0space.h	/^	void set_space_id(ulint space_id)$/;"	f	class:Tablespace
set_spaces	include/mtr0mtr.h	/^	void set_spaces(const mtr_t& mtr)$/;"	f	struct:mtr_t
set_sync	include/mtr0mtr.h	/^	void set_sync()$/;"	f	struct:mtr_t
set_sys_modified	include/mtr0mtr.h	/^	fil_space_t* set_sys_modified()$/;"	f	struct:mtr_t
set_table_part	handler/ha_innopart.h	/^	set_table_part($/;"	f	class:Ha_innopart_share
set_tablespace_full_status	include/fsp0sysspace.h	/^	void set_tablespace_full_status(bool is_full)$/;"	f	class:SysTablespace
set_tablespace_type	handler/ha_innodb.cc	/^create_table_info_t::set_tablespace_type($/;"	f	class:create_table_info_t
set_v_templ	handler/ha_innopart.cc	/^Ha_innopart_share::set_v_templ($/;"	f	class:Ha_innopart_share
set_view_creator_trx_id	read/read0read.cc	/^MVCC::set_view_creator_trx_id(ReadView* view, trx_id_t id)$/;"	f	class:MVCC
set_wait_state	lock/lock0lock.cc	/^RecLock::set_wait_state(lock_t* lock)$/;"	f	class:RecLock
set_x_locks	include/row0sel.h	/^	ibool		set_x_locks;	\/*!< TRUE if the cursor is for update or$/;"	m	struct:sel_node_t
sg_count	sync/sync0arr.cc	/^static ulint			sg_count;$/;"	v	file:
share_name	include/dict0mem.h	/^	std::string		share_name;$/;"	m	struct:dict_vcol_templ_t
short	fts/fts0pars.cc	182;"	d	file:
short	pars/pars0grm.cc	335;"	d	file:
show	include/ut0dbg.h	/^	show()$/;"	f	class:ut_chrono_t
show_innodb_vars	handler/ha_innodb.cc	/^show_innodb_vars($/;"	f	file:
shutdown	fsp/fsp0file.cc	/^Datafile::shutdown()$/;"	f	class:Datafile
shutdown	fsp/fsp0file.cc	/^RemoteDatafile::shutdown()$/;"	f	class:RemoteDatafile
shutdown	fsp/fsp0space.cc	/^Tablespace::shutdown()$/;"	f	class:Tablespace
shutdown	fsp/fsp0sysspace.cc	/^SysTablespace::shutdown()$/;"	f	class:SysTablespace
shutdown	os/os0file.cc	/^AIO::shutdown()$/;"	f	class:AIO
signal	os/os0file.cc	/^	void signal()$/;"	f	class:AIO
signal_count	os/os0event.cc	/^	int64_t			signal_count;	\/*!< this is incremented$/;"	m	struct:os_event	file:
signal_count	sync/sync0arr.cc	/^	int64_t		signal_count;	\/*!< We capture the signal_count$/;"	m	struct:sync_cell_t	file:
simulated_put_read_threads_to_sleep	os/os0file.cc	/^AIO::simulated_put_read_threads_to_sleep()$/;"	f	class:AIO
single_indexer_t	include/ut0counter.h	/^struct single_indexer_t {$/;"	s
single_scan_itr	include/buf0buf.h	/^	LRUItr		single_scan_itr;$/;"	m	struct:buf_pool_t
size	fil/fil0fil.cc	/^	ulint	size;$/;"	m	struct:Check	file:
size	include/buf0buf.h	/^		ulint	size;	\/*!< size of the block *\/$/;"	m	union:buf_buddy_free_t::__anon4
size	include/buf0buf.h	/^	page_size_t	size;$/;"	m	class:buf_page_t
size	include/buf0buf.ic	/^	ulint		size;		\/*!< size of frames[] and blocks[] *\/$/;"	m	struct:buf_chunk_t	file:
size	include/dict0dict.h	/^	lint		size;		\/*!< varying space in bytes occupied$/;"	m	struct:dict_sys_t
size	include/fil0fil.h	/^	ulint		size;	\/*!< tablespace file size in pages;$/;"	m	struct:fil_space_t
size	include/fil0fil.h	/^	ulint		size;$/;"	m	struct:fil_node_t
size	include/ibuf0ibuf.ic	/^	ulint		size;		\/*!< current size of the ibuf index$/;"	m	struct:ibuf_t	file:
size	include/os0file.h	/^	os_offset_t	size;			\/*!< file size in bytes *\/$/;"	m	struct:os_file_stat_t
size	include/read0types.h	/^		ulint size() const { return(m_size); }$/;"	f	class:ReadView::ids_t
size	include/trx0types.h	/^	ulint size() const$/;"	f	class:TrxUndoRsegs
size	include/trx0undo.h	/^	ulint		size;		\/*!< current size in pages *\/$/;"	m	struct:trx_undo_t
size	read/read0read.cc	/^MVCC::size() const$/;"	f	class:MVCC
size_in_header	include/fil0fil.h	/^	ulint		size_in_header;$/;"	m	struct:fil_space_t
size_type	include/mem0mem.h	/^	typedef		size_t		size_type;$/;"	t	class:mem_heap_allocator
size_type	include/ut0new.h	/^	typedef size_t		size_type;$/;"	t	class:ut_allocator
sizeof_value	include/ut0rbt.h	/^	ulint		sizeof_value;		\/* Sizeof the item in bytes *\/$/;"	m	struct:ib_rbt_t
sizeof_value	include/ut0vec.h	/^	ulint		sizeof_value;$/;"	m	struct:ib_vector_t
skip_allocation	include/trx0rseg.h	/^	bool				skip_allocation;$/;"	m	struct:trx_rseg_t
skip_flush_check	include/buf0buf.h	/^	bool		skip_flush_check;$/;"	m	struct:buf_block_t
skip_lock_inheritance	include/trx0trx.h	/^	bool		skip_lock_inheritance;$/;"	m	struct:trx_t
skip_pk_sort	handler/handler0alter.cc	/^	bool		skip_pk_sort;$/;"	m	struct:ha_innobase_inplace_ctx	file:
skip_punch_hole	os/os0file.cc	/^	bool			skip_punch_hole;$/;"	m	struct:Slot	file:
slot	include/que0que.h	/^			slot;		\/* The thread slot in the wait$/;"	m	struct:que_thr_t	typeref:struct:que_thr_t::srv_slot_t
slots	buf/buf0flu.cc	/^	page_cleaner_slot_t*	slots;		\/*!< pointer to the slots *\/$/;"	m	struct:page_cleaner_t	file:
slots_t	os/os0file.cc	/^	typedef std::vector<Slot*> slots_t;$/;"	t	class:SimulatedAIOHandler	file:
sort_event	include/row0ftsort.h	/^	os_event_t		sort_event;	\/*!< sort event *\/$/;"	m	struct:fts_psort_common_t
sort_field	include/row0ftsort.h	/^	dfield_t		sort_field[FTS_NUM_FIELDS_SORT];$/;"	m	struct:fts_tokenize_ctx
space	include/buf0buf.h	/^	inline ib_uint32_t space() const$/;"	f	class:page_id_t
space	include/dict0mem.h	/^	uint32_t				space;$/;"	m	struct:dict_table_t
space	include/dict0mem.h	/^	unsigned	space:32;$/;"	m	struct:dict_index_t
space	include/fil0fil.h	/^	fil_space_t*	space;$/;"	m	struct:fil_node_t
space	include/lock0priv.h	/^	ib_uint32_t	space;		\/*!< space id *\/$/;"	m	struct:lock_rec_t
space	include/lock0priv.h	/^	ulint space() const$/;"	f	struct:lock_t
space	include/log0recv.h	/^	unsigned	space:32;\/*!< space id *\/$/;"	m	struct:recv_addr_t
space	include/trx0rseg.h	/^	ulint				space;$/;"	m	struct:trx_rseg_t
space	include/trx0undo.h	/^	ulint		space;		\/*!< space id where the undo log$/;"	m	struct:trx_undo_t
space	log/log0recv.cc	/^	fil_space_t*	space;$/;"	m	struct:file_name_t	file:
space_id	handler/i_s.cc	/^	unsigned	space_id:32;	\/*!< Tablespace ID *\/$/;"	m	struct:buf_page_info_t	file:
space_id	include/fsp0file.h	/^	ulint	space_id()	const$/;"	f	class:Datafile
space_id	include/fsp0space.h	/^	ulint space_id()	const$/;"	f	class:Tablespace
space_id	include/log0log.h	/^	ulint				space_id;$/;"	m	struct:log_group_t
space_id	include/log0recv.h	/^	ulint		space_id;	\/*!< the page number *\/$/;"	m	struct:recv_encryption
space_id_reuse_warned	fil/fil0fil.cc	/^	bool		space_id_reuse_warned;$/;"	m	struct:fil_system_t	file:
space_list	fil/fil0fil.cc	/^	UT_LIST_BASE_NODE_T(fil_space_t) space_list;$/;"	m	struct:fil_system_t	file:
space_list	include/fil0fil.h	/^	UT_LIST_NODE_T(fil_space_t) space_list;$/;"	m	struct:fil_space_t
space_name_list_t	include/fil0fil.h	/^typedef std::list<char*, ut_allocator<char*> >	space_name_list_t;$/;"	t
spaces	fil/fil0fil.cc	/^	hash_table_t*	spaces;		\/*!< The hash table of spaces in the$/;"	m	struct:fil_system_t	file:
spatial_status	include/data0data.h	/^	unsigned	spatial_status:2;$/;"	m	struct:dfield_t
spatial_status_t	include/dict0types.h	/^enum spatial_status_t {$/;"	g
split_rtree_node	gis/gis0geo.cc	/^split_rtree_node($/;"	f
sql_stat_start	include/row0mysql.h	/^	unsigned	sql_stat_start:1;\/*!< TRUE when we start processing of$/;"	m	struct:row_prebuilt_t
sql_string	include/pars0sym.h	/^	const char*		sql_string;$/;"	m	struct:sym_tab_t
square	include/gis0geo.h	/^	double	square;		\/* square of the mbr.*\/$/;"	m	struct:rtr_split_node_t
src_ilist_ptr	fts/fts0opt.cc	/^	byte*		src_ilist_ptr;	\/*!< Current ptr within src ilist *\/$/;"	m	struct:fts_encode_t	file:
src_last_doc_id	fts/fts0opt.cc	/^	doc_id_t	src_last_doc_id;\/*!< Last doc id read from src node *\/$/;"	m	struct:fts_encode_t	file:
srch_key_val1	include/row0mysql.h	/^	byte*		srch_key_val1;  \/*!< buffer used in converting$/;"	m	struct:row_prebuilt_t
srch_key_val2	include/row0mysql.h	/^	byte*		srch_key_val2;  \/*!< buffer used in converting$/;"	m	struct:row_prebuilt_t
srch_key_val_len	include/row0mysql.h	/^	uint		srch_key_val_len; \/*!< Size of search key *\/$/;"	m	struct:row_prebuilt_t
srv0mon_h	include/srv0mon.h	29;"	d
srv0srv_h	include/srv0srv.h	42;"	d
srv0start_h	include/srv0start.h	27;"	d
srv_LRU_scan_depth	srv/srv0srv.cc	/^ulong	srv_LRU_scan_depth	= 1024;$/;"	v
srv_active_wake_master_thread	include/srv0srv.h	677;"	d
srv_active_wake_master_thread_low	srv/srv0srv.cc	/^srv_active_wake_master_thread_low()$/;"	f
srv_adaptive_flushing	srv/srv0srv.cc	/^char	srv_adaptive_flushing	= TRUE;$/;"	v
srv_adaptive_flushing_lwm	srv/srv0srv.cc	/^ulong	srv_adaptive_flushing_lwm	= 10;$/;"	v
srv_adaptive_max_sleep_delay	srv/srv0conc.cc	/^ulong	srv_adaptive_max_sleep_delay = 150000;$/;"	v
srv_any_background_threads_are_active	srv/srv0srv.cc	/^srv_any_background_threads_are_active(void)$/;"	f
srv_available_undo_logs	srv/srv0srv.cc	/^ulint	srv_available_undo_logs         = 0;$/;"	v
srv_boot	srv/srv0srv.cc	/^srv_boot(void)$/;"	f
srv_buf_dump_event	srv/srv0srv.cc	/^os_event_t	srv_buf_dump_event;$/;"	v
srv_buf_dump_filename	srv/srv0srv.cc	/^char*	srv_buf_dump_filename;$/;"	v
srv_buf_dump_thread_active	srv/srv0srv.cc	/^ibool	srv_buf_dump_thread_active = FALSE;$/;"	v
srv_buf_pool_base_size	srv/srv0srv.cc	/^ulint	srv_buf_pool_base_size	= 0;$/;"	v
srv_buf_pool_chunk_unit	srv/srv0srv.cc	/^ulonglong	srv_buf_pool_chunk_unit;$/;"	v
srv_buf_pool_curr_size	srv/srv0srv.cc	/^ulint	srv_buf_pool_curr_size	= 0;$/;"	v
srv_buf_pool_def_size	srv/srv0srv.cc	/^const ulint	srv_buf_pool_def_size	= 128 * 1024 * 1024;$/;"	v
srv_buf_pool_dump_pct	srv/srv0srv.cc	/^ulong	srv_buf_pool_dump_pct;$/;"	v
srv_buf_pool_instances	srv/srv0srv.cc	/^ulong	srv_buf_pool_instances;$/;"	v
srv_buf_pool_instances_default	srv/srv0srv.cc	/^const ulong	srv_buf_pool_instances_default = 0;$/;"	v
srv_buf_pool_min_size	srv/srv0srv.cc	/^const ulint	srv_buf_pool_min_size	= 5 * 1024 * 1024;$/;"	v
srv_buf_pool_old_size	srv/srv0srv.cc	/^ulint	srv_buf_pool_old_size	= 0;$/;"	v
srv_buf_pool_size	srv/srv0srv.cc	/^ulint	srv_buf_pool_size	= ULINT_MAX;$/;"	v
srv_buf_resize_event	srv/srv0srv.cc	/^os_event_t	srv_buf_resize_event;$/;"	v
srv_buf_resize_thread_active	srv/srv0srv.cc	/^bool	srv_buf_resize_thread_active = false;$/;"	v
srv_buffer_pool_dump_at_shutdown	srv/srv0srv.cc	/^char	srv_buffer_pool_dump_at_shutdown = TRUE;$/;"	v
srv_buffer_pool_evict	handler/ha_innodb.cc	/^static char* srv_buffer_pool_evict;$/;"	v	file:
srv_buffer_pool_load_at_startup	srv/srv0srv.cc	/^char	srv_buffer_pool_load_at_startup = TRUE;$/;"	v
srv_change_buffer_max_size	srv/srv0srv.cc	/^uint	srv_change_buffer_max_size = CHANGE_BUFFER_DEFAULT_SIZE;$/;"	v
srv_check_activity	srv/srv0srv.cc	/^srv_check_activity($/;"	f
srv_check_undo_redo_logs_exists	srv/srv0start.cc	/^srv_check_undo_redo_logs_exists()$/;"	f	file:
srv_checksum_algorithm	buf/buf0checksum.cc	/^ulong	srv_checksum_algorithm = SRV_CHECKSUM_ALGORITHM_INNODB;$/;"	v
srv_checksum_algorithm_t	include/buf0types.h	/^enum srv_checksum_algorithm_t {$/;"	g
srv_cmp_per_index_enabled	srv/srv0srv.cc	/^my_bool	srv_cmp_per_index_enabled = FALSE;$/;"	v
srv_conc	srv/srv0conc.cc	/^static srv_conc_t	srv_conc;$/;"	v	file:
srv_conc_enter_innodb	srv/srv0conc.cc	/^srv_conc_enter_innodb($/;"	f
srv_conc_enter_innodb_with_atomics	srv/srv0conc.cc	/^srv_conc_enter_innodb_with_atomics($/;"	f	file:
srv_conc_exit_innodb_with_atomics	srv/srv0conc.cc	/^srv_conc_exit_innodb_with_atomics($/;"	f	file:
srv_conc_force_enter_innodb	srv/srv0conc.cc	/^srv_conc_force_enter_innodb($/;"	f
srv_conc_force_exit_innodb	srv/srv0conc.cc	/^srv_conc_force_exit_innodb($/;"	f
srv_conc_get_active_threads	srv/srv0conc.cc	/^srv_conc_get_active_threads(void)$/;"	f
srv_conc_get_waiting_threads	srv/srv0conc.cc	/^srv_conc_get_waiting_threads(void)$/;"	f
srv_conc_h	include/srv0conc.h	41;"	d
srv_conc_t	srv/srv0conc.cc	/^struct srv_conc_t {$/;"	s	file:
srv_data_home	srv/srv0srv.cc	/^char*	srv_data_home	= NULL;$/;"	v
srv_data_read	fil/fil0fil.cc	/^static ulint	srv_data_read;$/;"	v	file:
srv_data_written	fil/fil0fil.cc	/^static ulint	srv_data_written;$/;"	v	file:
srv_debug_compress	srv/srv0srv.cc	/^ulong	srv_debug_compress;$/;"	v
srv_debug_loop	handler/ha_innodb.cc	/^srv_debug_loop(void)$/;"	f
srv_dict_stats_thread_active	srv/srv0srv.cc	/^ibool	srv_dict_stats_thread_active = FALSE;$/;"	v
srv_dict_tmpfile	srv/srv0srv.cc	/^FILE*	srv_dict_tmpfile;$/;"	v
srv_dict_tmpfile_mutex	srv/srv0srv.cc	/^ib_mutex_t	srv_dict_tmpfile_mutex;$/;"	v
srv_dict_tmpfile_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	srv_dict_tmpfile_mutex_key;$/;"	v
srv_disable_sort_file_cache	row/row0merge.cc	/^char	srv_disable_sort_file_cache;$/;"	v
srv_dml_needed_delay	srv/srv0srv.cc	/^ulint	srv_dml_needed_delay = 0;$/;"	v
srv_do_purge	srv/srv0srv.cc	/^srv_do_purge($/;"	f	file:
srv_doublewrite_batch_size	srv/srv0srv.cc	/^ulong	srv_doublewrite_batch_size	= 120;$/;"	v
srv_enter_innodb_with_tickets	srv/srv0conc.cc	/^srv_enter_innodb_with_tickets($/;"	f	file:
srv_error_event	srv/srv0srv.cc	/^os_event_t	srv_error_event;$/;"	v
srv_error_monitor_active	srv/srv0srv.cc	/^ibool	srv_error_monitor_active = FALSE;$/;"	v
srv_error_monitor_thread	srv/srv0srv.cc	/^DECLARE_THREAD(srv_error_monitor_thread)($/;"	f
srv_error_monitor_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	srv_error_monitor_thread_key;$/;"	v
srv_export_innodb_status	srv/srv0srv.cc	/^srv_export_innodb_status(void)$/;"	f
srv_fast_shutdown	srv/srv0srv.cc	/^ulint	srv_fast_shutdown	= 0;$/;"	v
srv_fatal_error	srv/srv0srv.cc	/^srv_fatal_error()$/;"	f
srv_fatal_semaphore_wait_threshold	srv/srv0srv.cc	/^ulint	srv_fatal_semaphore_wait_threshold = 600;$/;"	v
srv_fil_make_page_dirty_debug	handler/ha_innodb.cc	/^ulong srv_fil_make_page_dirty_debug = 0;$/;"	v
srv_file_check_mode	srv/srv0start.cc	/^srv_file_check_mode($/;"	f	file:
srv_file_flush_method_str	srv/srv0srv.cc	/^char*	srv_file_flush_method_str = NULL;$/;"	v
srv_file_format	srv/srv0srv.cc	/^ulint	srv_file_format = 0;$/;"	v
srv_file_per_table	include/srv0srv.h	975;"	d
srv_file_per_table	srv/srv0srv.cc	/^my_bool	srv_file_per_table;$/;"	v
srv_flush_log_at_timeout	srv/srv0srv.cc	/^uint		srv_flush_log_at_timeout = 1;$/;"	v
srv_flush_log_at_trx_commit	srv/srv0srv.cc	/^ulong		srv_flush_log_at_trx_commit = 1;$/;"	v
srv_flush_neighbors	srv/srv0srv.cc	/^ulong	srv_flush_neighbors	= 1;$/;"	v
srv_flush_sync	srv/srv0srv.cc	/^my_bool	srv_flush_sync		= TRUE;$/;"	v
srv_flushing_avg_loops	srv/srv0srv.cc	/^ulong	srv_flushing_avg_loops		= 30;$/;"	v
srv_force_recovery	include/srv0srv.h	968;"	d
srv_force_recovery	srv/srv0srv.cc	/^ulong	srv_force_recovery;$/;"	v
srv_force_recovery_crash	srv/srv0srv.cc	/^ulong	srv_force_recovery_crash;$/;"	v
srv_free	srv/srv0srv.cc	/^srv_free(void)$/;"	f
srv_free_slot	srv/srv0srv.cc	/^srv_free_slot($/;"	f	file:
srv_general_init	srv/srv0srv.cc	/^srv_general_init(void)$/;"	f
srv_get_active_thread_type	srv/srv0srv.cc	/^srv_get_active_thread_type(void)$/;"	f
srv_get_activity_count	srv/srv0srv.cc	/^srv_get_activity_count(void)$/;"	f
srv_get_encryption_data_filename	srv/srv0start.cc	/^srv_get_encryption_data_filename($/;"	f
srv_get_meta_data_filename	srv/srv0start.cc	/^srv_get_meta_data_filename($/;"	f
srv_get_task_queue_length	srv/srv0srv.cc	/^srv_get_task_queue_length(void)$/;"	f
srv_ibuf_disable_background_merge	ibuf/ibuf0ibuf.cc	/^my_bool	srv_ibuf_disable_background_merge;$/;"	v
srv_inc_activity_count	srv/srv0srv.cc	/^srv_inc_activity_count(void)$/;"	f
srv_init	srv/srv0srv.cc	/^srv_init(void)$/;"	f
srv_init_abort	srv/srv0start.cc	1324;"	d	file:
srv_init_abort	srv/srv0start.cc	1327;"	d	file:
srv_init_abort_low	srv/srv0start.cc	/^srv_init_abort_low($/;"	f	file:
srv_innodb_monitor_mutex	srv/srv0srv.cc	/^ib_mutex_t	srv_innodb_monitor_mutex;$/;"	v
srv_innodb_monitor_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	srv_innodb_monitor_mutex_key;$/;"	v
srv_innodb_stats_method	srv/srv0srv.cc	/^ulong srv_innodb_stats_method = SRV_STATS_NULLS_EQUAL;$/;"	v
srv_innodb_status	srv/srv0srv.cc	/^ibool	srv_innodb_status	= FALSE;$/;"	v
srv_insert_buffer_batch_size	srv/srv0srv.cc	/^ulong	srv_insert_buffer_batch_size = 20;$/;"	v
srv_io_capacity	srv/srv0srv.cc	/^ulong	srv_io_capacity         = 200;$/;"	v
srv_io_thread_function	srv/srv0srv.cc	/^const char* srv_io_thread_function[SRV_MAX_N_IO_THREADS];$/;"	v
srv_io_thread_op_info	srv/srv0srv.cc	/^const char* srv_io_thread_op_info[SRV_MAX_N_IO_THREADS];$/;"	v
srv_is_being_started	include/srv0srv.h	971;"	d
srv_is_being_started	srv/srv0start.cc	/^bool	srv_is_being_started = false;$/;"	v
srv_is_tablespace_truncated	srv/srv0srv.cc	/^srv_is_tablespace_truncated(ulint space_id)$/;"	f
srv_is_undo_tablespace	srv/srv0srv.cc	/^srv_is_undo_tablespace($/;"	f
srv_last_log_flush_time	srv/srv0srv.cc	/^static time_t	srv_last_log_flush_time;$/;"	v	file:
srv_last_monitor_time	srv/srv0srv.cc	/^time_t	srv_last_monitor_time;$/;"	v
srv_load_corrupted	dict/dict0load.cc	/^my_bool     srv_load_corrupted = FALSE;$/;"	v
srv_lock_table_size	srv/srv0srv.cc	/^ulint	srv_lock_table_size	= ULINT_MAX;$/;"	v
srv_lock_timeout_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	srv_lock_timeout_thread_key;$/;"	v
srv_locks_unsafe_for_binlog	srv/srv0srv.cc	/^ibool	srv_locks_unsafe_for_binlog = FALSE;$/;"	v
srv_log_buffer_size	srv/srv0srv.cc	/^ulint		srv_log_buffer_size = ULINT_MAX;$/;"	v
srv_log_file_size	srv/srv0srv.cc	/^ib_uint64_t	srv_log_file_size;$/;"	v
srv_log_file_size_requested	srv/srv0srv.cc	/^ib_uint64_t	srv_log_file_size_requested;$/;"	v
srv_log_group_home_dir	srv/srv0srv.cc	/^char*	srv_log_group_home_dir	= NULL;$/;"	v
srv_log_write_ahead_size	srv/srv0srv.cc	/^ulong		srv_log_write_ahead_size = 0;$/;"	v
srv_log_writes_and_flush	srv/srv0srv.cc	/^static ulint		srv_log_writes_and_flush	= 0;$/;"	v	file:
srv_main_active_loops	srv/srv0srv.cc	/^static ulint		srv_main_active_loops		= 0;$/;"	v	file:
srv_main_idle_loops	srv/srv0srv.cc	/^static ulint		srv_main_idle_loops		= 0;$/;"	v	file:
srv_main_shutdown_loops	srv/srv0srv.cc	/^static ulint		srv_main_shutdown_loops		= 0;$/;"	v	file:
srv_main_thread_id	srv/srv0srv.cc	/^ulint	srv_main_thread_id		= 0;$/;"	v
srv_main_thread_op_info	srv/srv0srv.cc	/^const char*	srv_main_thread_op_info = "";$/;"	v
srv_main_thread_process_no	srv/srv0srv.cc	/^ulint	srv_main_thread_process_no	= 0;$/;"	v
srv_master_do_active_tasks	srv/srv0srv.cc	/^srv_master_do_active_tasks(void)$/;"	f	file:
srv_master_do_disabled_loop	srv/srv0srv.cc	/^srv_master_do_disabled_loop(void)$/;"	f	file:
srv_master_do_idle_tasks	srv/srv0srv.cc	/^srv_master_do_idle_tasks(void)$/;"	f	file:
srv_master_do_shutdown_tasks	srv/srv0srv.cc	/^srv_master_do_shutdown_tasks($/;"	f	file:
srv_master_evict_from_table_cache	srv/srv0srv.cc	/^srv_master_evict_from_table_cache($/;"	f	file:
srv_master_sleep	srv/srv0srv.cc	/^srv_master_sleep(void)$/;"	f	file:
srv_master_thread	srv/srv0srv.cc	/^DECLARE_THREAD(srv_master_thread)($/;"	f
srv_master_thread_disabled_debug	srv/srv0srv.cc	/^my_bool	srv_master_thread_disabled_debug;$/;"	v
srv_master_thread_disabled_debug_update	srv/srv0srv.cc	/^srv_master_thread_disabled_debug_update($/;"	f
srv_master_thread_disabled_event	srv/srv0srv.cc	/^static os_event_t	srv_master_thread_disabled_event;$/;"	v	file:
srv_master_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	srv_master_thread_key;$/;"	v
srv_max_buf_pool_modified_pct	srv/srv0srv.cc	/^double	srv_max_buf_pool_modified_pct	= 75.0;$/;"	v
srv_max_dirty_pages_pct_lwm	srv/srv0srv.cc	/^double	srv_max_dirty_pages_pct_lwm	= 0.0;$/;"	v
srv_max_file_format_at_startup	srv/srv0srv.cc	/^ulint	srv_max_file_format_at_startup = UNIV_FORMAT_MAX;$/;"	v
srv_max_io_capacity	srv/srv0srv.cc	/^ulong	srv_max_io_capacity     = 400;$/;"	v
srv_max_n_open_files	srv/srv0srv.cc	/^ulint	srv_max_n_open_files	  = 300;$/;"	v
srv_max_n_threads	srv/srv0conc.cc	/^ulint	srv_max_n_threads	= 0;$/;"	v
srv_max_purge_lag	trx/trx0purge.cc	/^ulong		srv_max_purge_lag = 0;$/;"	v
srv_max_purge_lag_delay	trx/trx0purge.cc	/^ulong		srv_max_purge_lag_delay = 0;$/;"	v
srv_max_undo_log_size	srv/srv0srv.cc	/^unsigned long long	srv_max_undo_log_size;$/;"	v
srv_mbr_debug	handler/ha_innodb.cc	/^srv_mbr_debug(const byte* data)$/;"	f
srv_mbr_print	row/row0upd.cc	/^srv_mbr_print(const byte* data)$/;"	f	file:
srv_misc_tmpfile	srv/srv0srv.cc	/^FILE*	srv_misc_tmpfile;$/;"	v
srv_misc_tmpfile_mutex	srv/srv0srv.cc	/^ib_mutex_t	srv_misc_tmpfile_mutex;$/;"	v
srv_misc_tmpfile_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	srv_misc_tmpfile_mutex_key;$/;"	v
srv_mon_calc_max_since_start	include/srv0mon.ic	/^srv_mon_calc_max_since_start($/;"	f
srv_mon_calc_min_since_start	include/srv0mon.ic	/^srv_mon_calc_min_since_start($/;"	f
srv_mon_default_on	srv/srv0mon.cc	/^srv_mon_default_on(void)$/;"	f
srv_mon_get_info	srv/srv0mon.cc	/^srv_mon_get_info($/;"	f
srv_mon_get_name	srv/srv0mon.cc	/^srv_mon_get_name($/;"	f
srv_mon_get_rseg_size	srv/srv0mon.cc	/^srv_mon_get_rseg_size(void)$/;"	f	file:
srv_mon_process_existing_counter	srv/srv0mon.cc	/^srv_mon_process_existing_counter($/;"	f
srv_mon_reset	srv/srv0mon.cc	/^srv_mon_reset($/;"	f
srv_mon_reset_all	include/srv0mon.ic	/^srv_mon_reset_all($/;"	f
srv_mon_set_module_control	srv/srv0mon.cc	/^srv_mon_set_module_control($/;"	f
srv_monitor_active	srv/srv0srv.cc	/^ibool	srv_monitor_active = FALSE;$/;"	v
srv_monitor_event	srv/srv0srv.cc	/^os_event_t	srv_monitor_event;$/;"	v
srv_monitor_file	srv/srv0srv.cc	/^FILE*	srv_monitor_file;$/;"	v
srv_monitor_file_mutex	srv/srv0srv.cc	/^ib_mutex_t	srv_monitor_file_mutex;$/;"	v
srv_monitor_file_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	srv_monitor_file_mutex_key;$/;"	v
srv_monitor_file_name	srv/srv0start.cc	/^static char*	srv_monitor_file_name;$/;"	v	file:
srv_monitor_thread	srv/srv0srv.cc	/^DECLARE_THREAD(srv_monitor_thread)($/;"	f
srv_monitor_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	srv_monitor_thread_key;$/;"	v
srv_mysql50_table_name_prefix	srv/srv0srv.cc	/^const char		srv_mysql50_table_name_prefix[10] = "#mysql50#";$/;"	v
srv_n_file_io_threads	srv/srv0start.cc	/^ulint	srv_n_file_io_threads = 0;$/;"	v
srv_n_free_tickets_to_enter	srv/srv0conc.cc	/^ulong	srv_n_free_tickets_to_enter = 500;$/;"	v
srv_n_log_files	srv/srv0srv.cc	/^ulong	srv_n_log_files		= SRV_N_LOG_FILES_MAX;$/;"	v
srv_n_page_cleaners	srv/srv0srv.cc	/^ulong	srv_n_page_cleaners = 4;$/;"	v
srv_n_page_hash_locks	srv/srv0srv.cc	/^ulong	srv_n_page_hash_locks = 16;$/;"	v
srv_n_purge_threads	srv/srv0srv.cc	/^ulong	srv_n_purge_threads = 4;$/;"	v
srv_n_read_io_threads	srv/srv0srv.cc	/^ulint	srv_n_read_io_threads	= ULINT_MAX;$/;"	v
srv_n_rows_deleted_old	srv/srv0srv.cc	/^static ulint		srv_n_rows_deleted_old		= 0;$/;"	v	file:
srv_n_rows_inserted_old	srv/srv0srv.cc	/^static ulint		srv_n_rows_inserted_old		= 0;$/;"	v	file:
srv_n_rows_read_old	srv/srv0srv.cc	/^static ulint		srv_n_rows_read_old		= 0;$/;"	v	file:
srv_n_rows_updated_old	srv/srv0srv.cc	/^static ulint		srv_n_rows_updated_old		= 0;$/;"	v	file:
srv_n_spin_wait_rounds	srv/srv0srv.cc	/^ulong	srv_n_spin_wait_rounds	= 30;$/;"	v
srv_n_write_io_threads	srv/srv0srv.cc	/^ulint	srv_n_write_io_threads	= ULINT_MAX;$/;"	v
srv_normalize_init_values	srv/srv0srv.cc	/^srv_normalize_init_values(void)$/;"	f	file:
srv_numa_interleave	buf/buf0buf.cc	/^my_bool  srv_numa_interleave = FALSE;$/;"	v
srv_numa_interleave	include/srv0srv.h	967;"	d
srv_online_max_size	srv/srv0srv.cc	/^unsigned long long	srv_online_max_size;$/;"	v
srv_open_tmp_tablespace	srv/srv0start.cc	/^srv_open_tmp_tablespace($/;"	f	file:
srv_page_size	srv/srv0srv.cc	/^ulong		srv_page_size = UNIV_PAGE_SIZE_DEF;$/;"	v
srv_page_size_shift	srv/srv0srv.cc	/^ulong		srv_page_size_shift = UNIV_PAGE_SIZE_SHIFT_DEF;$/;"	v
srv_prepare_to_delete_redo_log_files	srv/srv0start.cc	/^srv_prepare_to_delete_redo_log_files($/;"	f	file:
srv_print_all_deadlocks	srv/srv0srv.cc	/^my_bool	srv_print_all_deadlocks = FALSE;$/;"	v
srv_print_innodb_lock_monitor	srv/srv0srv.cc	/^my_bool	srv_print_innodb_lock_monitor	= FALSE;$/;"	v
srv_print_innodb_monitor	srv/srv0srv.cc	/^my_bool	srv_print_innodb_monitor	= FALSE;$/;"	v
srv_print_master_thread_info	srv/srv0srv.cc	/^srv_print_master_thread_info($/;"	f	file:
srv_print_verbose_log	srv/srv0srv.cc	/^ibool	srv_print_verbose_log		= TRUE;$/;"	v
srv_printf_innodb_monitor	srv/srv0srv.cc	/^srv_printf_innodb_monitor($/;"	f
srv_priority_boost	srv/srv0srv.cc	/^ibool	srv_priority_boost	= TRUE;$/;"	v
srv_purge_batch_size	srv/srv0srv.cc	/^ulong	srv_purge_batch_size = 20;$/;"	v
srv_purge_coordinator_suspend	srv/srv0srv.cc	/^srv_purge_coordinator_suspend($/;"	f	file:
srv_purge_coordinator_thread	srv/srv0srv.cc	/^DECLARE_THREAD(srv_purge_coordinator_thread)($/;"	f
srv_purge_rseg_truncate_frequency	srv/srv0srv.cc	/^ulong	srv_purge_rseg_truncate_frequency = 128;$/;"	v
srv_purge_should_exit	srv/srv0srv.cc	/^srv_purge_should_exit($/;"	f	file:
srv_purge_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	srv_purge_thread_key;$/;"	v
srv_purge_view_update_only_debug	trx/trx0purge.cc	/^my_bool		srv_purge_view_update_only_debug;$/;"	v
srv_purge_wakeup	srv/srv0srv.cc	/^srv_purge_wakeup(void)$/;"	f
srv_que_task_enqueue_low	srv/srv0srv.cc	/^srv_que_task_enqueue_low($/;"	f
srv_random_read_ahead	srv/srv0srv.cc	/^my_bool	srv_random_read_ahead	= FALSE;$/;"	v
srv_read_ahead_threshold	srv/srv0srv.cc	/^ulong	srv_read_ahead_threshold	= 56;$/;"	v
srv_read_only_mode	srv/srv0srv.cc	/^my_bool	srv_read_only_mode;$/;"	v
srv_refresh_innodb_monitor_stats	srv/srv0srv.cc	/^srv_refresh_innodb_monitor_stats(void)$/;"	f	file:
srv_release_threads	srv/srv0srv.cc	/^srv_release_threads($/;"	f
srv_replication_delay	srv/srv0srv.cc	/^ulong	srv_replication_delay		= 0;$/;"	v
srv_reserve_slot	srv/srv0srv.cc	/^srv_reserve_slot($/;"	f	file:
srv_reset_io_thread_op_info	include/srv0srv.h	970;"	d
srv_reset_io_thread_op_info	srv/srv0srv.cc	/^srv_reset_io_thread_op_info()$/;"	f
srv_rollback_segments	srv/srv0srv.cc	/^ulong	srv_rollback_segments = 1;$/;"	v
srv_saved_page_number_debug	handler/ha_innodb.cc	/^ulong srv_saved_page_number_debug = 0;$/;"	v
srv_set_io_thread_op_info	include/srv0srv.h	969;"	d
srv_set_io_thread_op_info	srv/srv0srv.cc	/^srv_set_io_thread_op_info($/;"	f
srv_shutdown_all_bg_threads	srv/srv0start.cc	/^srv_shutdown_all_bg_threads()$/;"	f
srv_shutdown_lsn	srv/srv0start.cc	/^lsn_t	srv_shutdown_lsn;$/;"	v
srv_shutdown_print_master_pending	srv/srv0srv.cc	/^srv_shutdown_print_master_pending($/;"	f	file:
srv_shutdown_state	srv/srv0start.cc	/^enum srv_shutdown_t	srv_shutdown_state = SRV_SHUTDOWN_NONE;$/;"	v	typeref:enum:srv_shutdown_t
srv_shutdown_t	include/srv0start.h	/^enum srv_shutdown_t {$/;"	g
srv_shutdown_table_bg_threads	srv/srv0start.cc	/^srv_shutdown_table_bg_threads(void)$/;"	f
srv_skip_temp_table_checks_debug	fsp/fsp0sysspace.cc	/^bool srv_skip_temp_table_checks_debug = true;$/;"	v
srv_slot_get_type	srv/srv0srv.cc	/^srv_slot_get_type($/;"	f	file:
srv_slot_t	include/srv0srv.h	/^struct srv_slot_t{$/;"	s
srv_sort_buf_size	srv/srv0srv.cc	/^ulong	srv_sort_buf_size = 1048576;$/;"	v
srv_spin_wait_delay	srv/srv0srv.cc	/^ulong	srv_spin_wait_delay	= 6;$/;"	v
srv_stage_alter_table_end	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_alter_table_end$/;"	v
srv_stage_alter_table_flush	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_alter_table_flush$/;"	v
srv_stage_alter_table_insert	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_alter_table_insert$/;"	v
srv_stage_alter_table_log_index	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_alter_table_log_index$/;"	v
srv_stage_alter_table_log_table	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_alter_table_log_table$/;"	v
srv_stage_alter_table_merge_sort	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_alter_table_merge_sort$/;"	v
srv_stage_alter_table_read_pk_internal_sort	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_alter_table_read_pk_internal_sort$/;"	v
srv_stage_buffer_pool_load	srv/srv0srv.cc	/^PSI_stage_info	srv_stage_buffer_pool_load$/;"	v
srv_stages	srv/srv0start.cc	/^static PSI_stage_info*	srv_stages[] =$/;"	v	file:
srv_start_has_been_called	srv/srv0start.cc	/^static ibool	srv_start_has_been_called = FALSE;$/;"	v	file:
srv_start_lsn	srv/srv0start.cc	/^lsn_t	srv_start_lsn;$/;"	v
srv_start_raw_disk_in_use	include/srv0srv.h	974;"	d
srv_start_raw_disk_in_use	srv/srv0start.cc	/^ibool	srv_start_raw_disk_in_use = FALSE;$/;"	v
srv_start_state	srv/srv0start.cc	/^static ulint	srv_start_state;$/;"	v	file:
srv_start_state_is_set	srv/srv0start.cc	/^srv_start_state_is_set($/;"	f
srv_start_state_set	srv/srv0start.cc	/^srv_start_state_set($/;"	f
srv_start_state_t	srv/srv0start.cc	/^enum srv_start_state_t {$/;"	g	file:
srv_start_wait_for_purge_to_start	srv/srv0start.cc	/^srv_start_wait_for_purge_to_start()$/;"	f	file:
srv_startup_is_before_trx_rollback_phase	srv/srv0start.cc	/^bool	srv_startup_is_before_trx_rollback_phase = false;$/;"	v
srv_stats	srv/srv0srv.cc	/^srv_stats_t	srv_stats;$/;"	v
srv_stats_auto_recalc	srv/srv0srv.cc	/^my_bool		srv_stats_auto_recalc = TRUE;$/;"	v
srv_stats_include_delete_marked	srv/srv0srv.cc	/^my_bool		srv_stats_include_delete_marked = FALSE;$/;"	v
srv_stats_method_name_enum	include/srv0srv.h	/^enum srv_stats_method_name_enum {$/;"	g
srv_stats_method_name_t	include/srv0srv.h	/^typedef enum srv_stats_method_name_enum		srv_stats_method_name_t;$/;"	t	typeref:enum:srv_stats_method_name_enum
srv_stats_persistent	srv/srv0srv.cc	/^my_bool		srv_stats_persistent = TRUE;$/;"	v
srv_stats_persistent_sample_pages	srv/srv0srv.cc	/^unsigned long long	srv_stats_persistent_sample_pages = 20;$/;"	v
srv_stats_t	include/srv0srv.h	/^struct srv_stats_t {$/;"	s
srv_stats_transient_sample_pages	srv/srv0srv.cc	/^unsigned long long	srv_stats_transient_sample_pages = 8;$/;"	v
srv_suspend_thread	srv/srv0srv.cc	/^srv_suspend_thread($/;"	f	file:
srv_suspend_thread_low	srv/srv0srv.cc	/^srv_suspend_thread_low($/;"	f	file:
srv_sync_array_size	sync/sync0arr.cc	/^ulong	srv_sync_array_size = 1;$/;"	v
srv_sync_debug	sync/sync0debug.cc	/^my_bool		srv_sync_debug;$/;"	v
srv_sync_log_buffer_in_background	srv/srv0srv.cc	/^srv_sync_log_buffer_in_background(void)$/;"	f	file:
srv_sys	srv/srv0srv.cc	/^static srv_sys_t*	srv_sys	= NULL;$/;"	v	file:
srv_sys_mutex_enter	srv/srv0srv.cc	480;"	d	file:
srv_sys_mutex_exit	srv/srv0srv.cc	489;"	d	file:
srv_sys_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	srv_sys_mutex_key;$/;"	v
srv_sys_mutex_own	srv/srv0srv.cc	485;"	d	file:
srv_sys_space	fsp/fsp0sysspace.cc	/^SysTablespace srv_sys_space;$/;"	v
srv_sys_t	srv/srv0srv.cc	/^struct srv_sys_t{$/;"	s	file:
srv_sys_tablespaces_open	srv/srv0start.cc	/^bool	srv_sys_tablespaces_open = false;$/;"	v
srv_task_execute	srv/srv0srv.cc	/^srv_task_execute(void)$/;"	f	file:
srv_thread_concurrency	srv/srv0conc.cc	/^ulong	srv_thread_concurrency	= 0;$/;"	v
srv_thread_sleep_delay	srv/srv0conc.cc	/^ulong	srv_thread_sleep_delay	= 10000;$/;"	v
srv_thread_type	include/srv0srv.h	/^enum srv_thread_type {$/;"	g
srv_thread_type_validate	srv/srv0srv.cc	/^srv_thread_type_validate($/;"	f	file:
srv_threads_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	srv_threads_mutex_key;$/;"	v
srv_tmp_space	fsp/fsp0sysspace.cc	/^SysTablespace srv_tmp_space;$/;"	v
srv_tmp_undo_logs	srv/srv0srv.cc	/^const ulong		srv_tmp_undo_logs = 32;$/;"	v
srv_truncated_status_writes	srv/srv0srv.cc	/^ulint	srv_truncated_status_writes	= 0;$/;"	v
srv_undo_dir	srv/srv0srv.cc	/^char*	srv_undo_dir = NULL;$/;"	v
srv_undo_log_truncate	srv/srv0srv.cc	/^my_bool	srv_undo_log_truncate = FALSE;$/;"	v
srv_undo_logs	srv/srv0srv.cc	/^ulong	srv_undo_logs = 0;$/;"	v
srv_undo_space_id_start	srv/srv0start.cc	/^ulint	srv_undo_space_id_start;$/;"	v
srv_undo_tablespace_create	srv/srv0start.cc	/^srv_undo_tablespace_create($/;"	f	file:
srv_undo_tablespace_open	srv/srv0start.cc	/^srv_undo_tablespace_open($/;"	f	file:
srv_undo_tablespaces	srv/srv0srv.cc	/^ulong	srv_undo_tablespaces = 0;$/;"	v
srv_undo_tablespaces_active	srv/srv0srv.cc	/^ulint	srv_undo_tablespaces_active = 0;$/;"	v
srv_undo_tablespaces_init	srv/srv0start.cc	/^srv_undo_tablespaces_init($/;"	f	file:
srv_undo_tablespaces_open	srv/srv0srv.cc	/^ulint	srv_undo_tablespaces_open = 0;$/;"	v
srv_unix_file_flush_method	include/srv0srv.h	973;"	d
srv_unix_file_flush_method	srv/srv0srv.cc	/^enum srv_unix_flush_t	srv_unix_file_flush_method = SRV_UNIX_FSYNC;$/;"	v	typeref:enum:srv_unix_flush_t
srv_unix_flush_t	include/srv0srv.h	/^enum srv_unix_flush_t {$/;"	g
srv_use_adaptive_hash_indexes	include/srv0srv.h	965;"	d
srv_use_doublewrite_buf	srv/srv0srv.cc	/^ibool	srv_use_doublewrite_buf	= TRUE;$/;"	v
srv_use_native_aio	include/srv0srv.h	966;"	d
srv_use_native_aio	srv/srv0srv.cc	/^my_bool	srv_use_native_aio = TRUE;$/;"	v
srv_wake_master_thread	srv/srv0srv.cc	/^srv_wake_master_thread(void)$/;"	f
srv_wake_purge_thread_if_not_active	srv/srv0srv.cc	/^srv_wake_purge_thread_if_not_active(void)$/;"	f
srv_was_started	srv/srv0start.cc	/^ibool	srv_was_started = FALSE;$/;"	v
srv_was_tablespace_truncated	srv/srv0srv.cc	/^srv_was_tablespace_truncated(const fil_space_t* space)$/;"	f
srv_win_file_flush_method	include/srv0srv.h	972;"	d
srv_win_file_flush_method	srv/srv0srv.cc	/^enum srv_win_flush_t	srv_win_file_flush_method = SRV_WIN_IO_UNBUFFERED;$/;"	v	typeref:enum:srv_win_flush_t
srv_win_flush_t	include/srv0srv.h	/^enum srv_win_flush_t {$/;"	g
srv_worker_thread	srv/srv0srv.cc	/^DECLARE_THREAD(srv_worker_thread)($/;"	f
srv_worker_thread_key	srv/srv0start.cc	/^mysql_pfs_key_t	srv_worker_thread_key;$/;"	v
ssize	include/page0types.h	/^	unsigned	ssize:PAGE_ZIP_SSIZE_BITS;$/;"	m	struct:page_zip_des_t
st_ft_word	include/fts0tokenize.h	/^typedef struct st_ft_word {$/;"	s
st_innobase_share	handler/ha_innodb.h	/^typedef struct st_innobase_share {$/;"	s
stamp	include/buf0buf.h	/^	} stamp;$/;"	m	struct:buf_buddy_free_t	typeref:union:buf_buddy_free_t::__anon4
start	buf/buf0buf.cc	/^LRUItr::start()$/;"	f	class:LRUItr
start	fil/fil0fil.cc	/^	os_offset_t	start;			\/*!< From where to start *\/$/;"	m	struct:fil_iterator_t	file:
start	fts/fts0que.cc	/^	ulint		start;		\/*!< Start the phrase match from$/;"	m	struct:fts_match_t	file:
start	include/mem0mem.h	/^	ulint	start;	\/*!< the value of the struct field 'free' at the$/;"	m	struct:mem_block_info_t
start	include/ut0lst.h	/^	elem_type*	start;			\/*!< pointer to list start,$/;"	m	struct:ut_list_base
start	mtr/mtr0mtr.cc	/^mtr_t::start(bool sync, bool read_only)$/;"	f	class:mtr_t
start	os/os0file.cc	/^AIO::start($/;"	f	class:AIO
start_file	include/trx0trx.h	/^	const char*	start_file;	\/*!< Filename where it was started *\/$/;"	m	struct:trx_t
start_line	include/trx0trx.h	/^	ulint		start_line;	\/*!< Track where it was started from *\/$/;"	m	struct:trx_t
start_logging	include/trx0purge.h	/^		dberr_t start_logging(ulint space_id)$/;"	f	class:undo::Truncate
start_lsn	include/log0recv.h	/^	lsn_t		start_lsn;\/*!< start lsn of the log segment written by$/;"	m	struct:recv_t
start_print	lock/lock0lock.cc	/^DeadlockChecker::start_print()$/;"	f	class:DeadlockChecker
start_stmt	handler/ha_innodb.cc	/^ha_innobase::start_stmt($/;"	f	class:ha_innobase
start_stmt	handler/ha_innopart.cc	/^ha_innopart::start_stmt($/;"	f	class:ha_innopart
start_stmt	include/trx0trx.h	/^	bool		start_stmt;$/;"	m	struct:trx_lock_t
start_time	include/fts0types.h	/^	ib_time_t	start_time;	\/*!< SYNC start time *\/$/;"	m	struct:fts_sync_t
start_time	include/trx0trx.h	/^	time_t		start_time;	\/*!< time the state last time became$/;"	m	struct:trx_t
stat	include/buf0buf.h	/^	buf_pool_stat_t	stat;		\/*!< current statistics *\/$/;"	m	struct:buf_pool_t
stat_clustered_index_size	include/dict0mem.h	/^	ulint					stat_clustered_index_size;$/;"	m	struct:dict_table_t
stat_index_size	include/dict0mem.h	/^	ulint		stat_index_size;$/;"	m	struct:dict_index_t
stat_initialized	include/dict0mem.h	/^	unsigned				stat_initialized:1;$/;"	m	struct:dict_table_t
stat_list	include/pars0pars.h	/^	que_node_t*	stat_list;	\/*!< statement list *\/$/;"	m	struct:elsif_node_t
stat_list	include/pars0pars.h	/^	que_node_t*	stat_list;	\/*!< statement list *\/$/;"	m	struct:for_node_t
stat_list	include/pars0pars.h	/^	que_node_t*	stat_list;	\/*!< statement list *\/$/;"	m	struct:if_node_t
stat_list	include/pars0pars.h	/^	que_node_t*	stat_list;	\/*!< statement list *\/$/;"	m	struct:proc_node_t
stat_list	include/pars0pars.h	/^	que_node_t*	stat_list;	\/*!< statement list *\/$/;"	m	struct:while_node_t
stat_modified_counter	include/dict0mem.h	/^	ib_uint64_t				stat_modified_counter;$/;"	m	struct:dict_table_t
stat_n_diff_key_vals	include/dict0mem.h	/^	ib_uint64_t*	stat_n_diff_key_vals;$/;"	m	struct:dict_index_t
stat_n_leaf_pages	include/dict0mem.h	/^	ulint		stat_n_leaf_pages;$/;"	m	struct:dict_index_t
stat_n_non_null_key_vals	include/dict0mem.h	/^	ib_uint64_t*	stat_n_non_null_key_vals;$/;"	m	struct:dict_index_t
stat_n_rows	include/dict0mem.h	/^	ib_uint64_t				stat_n_rows;$/;"	m	struct:dict_table_t
stat_n_sample_sizes	include/dict0mem.h	/^	ib_uint64_t*	stat_n_sample_sizes;$/;"	m	struct:dict_index_t
stat_persistent	include/dict0mem.h	/^	ib_uint32_t				stat_persistent;$/;"	m	struct:dict_table_t
stat_sum_of_other_index_sizes	include/dict0mem.h	/^	ulint					stat_sum_of_other_index_sizes;$/;"	m	struct:dict_table_t
state	buf/buf0flu.cc	/^	page_cleaner_state_t	state;	\/*!< state of the request.$/;"	m	struct:page_cleaner_slot_t	file:
state	fts/fts0opt.cc	/^	fts_state_t	state;		\/*!< State of this slot *\/$/;"	m	struct:fts_slot_t	file:
state	include/buf0buf.h	/^	buf_page_state	state;$/;"	m	class:buf_page_t
state	include/dict0crea.h	/^	ulint		state;		\/*!< node execution state *\/$/;"	m	struct:ind_node_t
state	include/dict0crea.h	/^	ulint		state;		\/*!< node execution state *\/$/;"	m	struct:tab_node_t
state	include/fts0fts.h	/^	fts_row_state	state;		\/*!< state of the row *\/$/;"	m	struct:fts_trx_row_t
state	include/log0log.h	/^	log_group_state_t		state;$/;"	m	struct:log_group_t
state	include/log0recv.h	/^	enum recv_addr_state state;$/;"	m	struct:recv_addr_t	typeref:enum:recv_addr_t::recv_addr_state
state	include/que0que.h	/^	que_thr_state_t	state;		\/*!< state of the query thread *\/$/;"	m	struct:que_thr_t
state	include/que0que.h	/^	ulint		state;		\/*!< state of the fork node *\/$/;"	m	struct:que_fork_t
state	include/row0ftsort.h	/^	ulint			state;		\/*!< parent thread state *\/$/;"	m	struct:fts_psort_t
state	include/row0ins.h	/^	ulint		state;	\/*!< node execution state *\/$/;"	m	struct:ins_node_t
state	include/row0sel.h	/^			state;	\/*!< node state *\/$/;"	m	struct:sel_node_t	typeref:enum:sel_node_t::sel_node_state
state	include/row0undo.h	/^	enum undo_exec	state;	\/*!< node execution state *\/$/;"	m	struct:undo_node_t	typeref:enum:undo_node_t::undo_exec
state	include/row0upd.h	/^	ulint		state;	\/*!< node execution state *\/$/;"	m	struct:upd_node_t
state	include/trx0purge.h	/^	volatile purge_state_t	state;	\/*!< Purge coordinator thread states,$/;"	m	struct:trx_purge_t
state	include/trx0roll.h	/^	enum roll_node_state	state;	\/*!< node execution state *\/$/;"	m	struct:roll_node_t	typeref:enum:roll_node_t::roll_node_state
state	include/trx0trx.h	/^			state;	\/*!< node execution state *\/$/;"	m	struct:commit_node_t	typeref:enum:commit_node_t::commit_node_state
state	include/trx0trx.h	/^	trx_state_t	state;$/;"	m	struct:trx_t
state	include/trx0undo.h	/^	ulint		state;		\/*!< state of the corresponding undo log$/;"	m	struct:trx_undo_t
state	include/usr0sess.h	/^	ulint		state;		\/*!< state of the session *\/$/;"	m	struct:sess_t
state	row/row0import.cc	/^	bool		state;			\/*!< New state of the flag *\/$/;"	m	struct:discard_t	file:
state_t	include/os0once.h	/^	typedef ib_uint32_t	state_t;$/;"	t	class:os_once
state_t	lock/lock0lock.cc	/^	struct state_t {$/;"	s	class:DeadlockChecker	file:
stats_auto_recalc	include/dict0mem.h	/^	ib_uint32_t				stats_auto_recalc;$/;"	m	struct:dict_table_t
stats_bg_flag	include/dict0mem.h	/^	byte					stats_bg_flag;$/;"	m	struct:dict_table_t
stats_last_recalc	include/dict0mem.h	/^	ib_time_t				stats_last_recalc;$/;"	m	struct:dict_table_t
stats_latch	include/dict0mem.h	/^	rw_lock_t*				stats_latch;$/;"	m	struct:dict_table_t
stats_latch_created	include/dict0mem.h	/^	volatile os_once::state_t		stats_latch_created;$/;"	m	struct:dict_table_t
stats_sample_pages	include/dict0mem.h	/^	ulint					stats_sample_pages;$/;"	m	struct:dict_table_t
stats_were_modified	dict/dict0stats.cc	/^	bool		stats_were_modified; \/*!< will be set to true if at$/;"	m	struct:index_fetch_t	file:
status	fts/fts0opt.cc	/^	lint		status;		\/*!< Status of (un)\/zip operation *\/$/;"	m	struct:fts_zip_t	file:
status	include/fts0types.h	/^	ulint		status;		\/*!< Status of the stopword tree *\/$/;"	m	struct:fts_stopword_t
status_severity	buf/buf0dump.cc	/^enum status_severity {$/;"	g	file:
stop_ios	include/fil0fil.h	/^	bool		stop_ios;\/*!< true if we want to rename the$/;"	m	struct:fil_space_t
stop_new_ops	include/fil0fil.h	/^	bool		stop_new_ops;$/;"	m	struct:fil_space_t
stopword_info	include/fts0types.h	/^	fts_stopword_t	stopword_info;	\/*!< Cached stopwords for the FTS *\/$/;"	m	struct:fts_cache_t
stopwords	include/fts0types.h	/^	ib_rbt_t*	stopwords;	\/*!< Stopwords *\/$/;"	m	struct:fts_doc_t
storage	trx/trx0i_s.cc	/^	ha_storage_t*	storage;	\/*!< storage for external volatile$/;"	m	struct:trx_i_s_cache_t	file:
storeExt	btr/btr0bulk.cc	/^PageBulk::storeExt($/;"	f	class:PageBulk
store_lock	handler/ha_innodb.cc	/^ha_innobase::store_lock($/;"	f	class:ha_innobase
store_lock	handler/ha_innopart.cc	/^ha_innopart::store_lock($/;"	f	class:ha_innopart
store_t	log/log0recv.cc	/^enum store_t {$/;"	g	file:
stored_cursor_rec_processed	include/row0sel.h	/^	ibool		stored_cursor_rec_processed;$/;"	m	struct:plan_t
stored_select_lock_type	include/row0mysql.h	/^	ulint		stored_select_lock_type;\/*!< this field is used to$/;"	m	struct:row_prebuilt_t
str	include/fts0ast.h	/^	byte*		str;$/;"	m	struct:fts_ast_string_t
string_append	pars/lexyy.cc	/^string_append($/;"	f	file:
string_len	include/pars0sym.h	/^	size_t			string_len;$/;"	m	struct:sym_tab_t
stringbuf	pars/lexyy.cc	/^static char*	stringbuf; \/* Start of buffer *\/$/;"	v	file:
stringbuf_len	pars/lexyy.cc	/^static ulint	stringbuf_len = 0; \/* Current length *\/$/;"	v	file:
stringbuf_len_alloc	pars/lexyy.cc	/^static ulint	stringbuf_len_alloc = 0; \/* Allocated length *\/$/;"	v	file:
sub_sep	handler/ha_innopart.cc	/^const char* sub_sep = "#SP#";$/;"	v
sub_sep	handler/ha_innopart.cc	/^const char* sub_sep = "#sp#";$/;"	v
sub_sep_nix	handler/ha_innopart.cc	/^const char* sub_sep_nix = "#SP#";$/;"	v
succeeded_list	buf/buf0flu.cc	/^	bool			succeeded_list;$/;"	m	struct:page_cleaner_slot_t	file:
success	include/dict0mem.h	/^	ulint		success;\/*!< successful compression ops during$/;"	m	struct:zip_pad_info_t
suffix	include/fts0fts.h	/^	const char*	suffix;		\/*!< The suffix of the fts auxiliary$/;"	m	struct:fts_table_t
suffix	include/fts0types.h	/^	const char*	suffix;		\/*!< FTS aux index suffix *\/$/;"	m	struct:fts_index_selector_t
supremum_extra_data	page/page0zip.cc	/^static const byte supremum_extra_data[] = {$/;"	v	file:
suspend_time	include/srv0srv.h	/^	ib_time_t	suspend_time;		\/*!< time when the thread was$/;"	m	struct:srv_slot_t
suspended	include/srv0srv.h	/^	ibool		suspended;		\/*!< TRUE if the thread is$/;"	m	struct:srv_slot_t
sx_latch_at_savepoint	include/mtr0mtr.ic	/^mtr_t::sx_latch_at_savepoint($/;"	f	class:mtr_t
sx_lock	include/mtr0mtr.ic	/^mtr_t::sx_lock(rw_lock_t* lock, const char* file, ulint line)$/;"	f	class:mtr_t
sx_recursive	include/sync0rw.h	/^	volatile ulint	sx_recursive;$/;"	m	struct:rw_lock_t
sym_list	include/pars0sym.h	/^	UT_LIST_NODE_T(sym_node_t)	sym_list;	\/*!< list of symbol$/;"	m	struct:sym_node_t
sym_list	include/pars0sym.h	/^	sym_node_list_t		sym_list;$/;"	m	struct:sym_tab_t
sym_node_list_t	include/pars0types.h	/^typedef UT_LIST_BASE_NODE_T(sym_node_t)	sym_node_list_t;$/;"	t
sym_node_t	include/pars0sym.h	/^struct sym_node_t{$/;"	s
sym_tab	include/pars0pars.h	/^	sym_tab_t*	sym_tab;	\/*!< symbol table of this procedure *\/$/;"	m	struct:proc_node_t
sym_tab	include/que0que.h	/^	sym_tab_t*	sym_tab;	\/*!< symbol table of the query,$/;"	m	struct:que_fork_t
sym_tab_add_bound_id	pars/pars0sym.cc	/^sym_tab_add_bound_id($/;"	f
sym_tab_add_bound_lit	pars/pars0sym.cc	/^sym_tab_add_bound_lit($/;"	f
sym_tab_add_id	pars/pars0sym.cc	/^sym_tab_add_id($/;"	f
sym_tab_add_int_lit	pars/pars0sym.cc	/^sym_tab_add_int_lit($/;"	f
sym_tab_add_null_lit	pars/pars0sym.cc	/^sym_tab_add_null_lit($/;"	f
sym_tab_add_str_lit	pars/pars0sym.cc	/^sym_tab_add_str_lit($/;"	f
sym_tab_create	pars/pars0sym.cc	/^sym_tab_create($/;"	f
sym_tab_entry	include/pars0sym.h	/^enum sym_tab_entry {$/;"	g
sym_tab_free_private	pars/pars0sym.cc	/^sym_tab_free_private($/;"	f
sym_tab_rebind_lit	pars/pars0sym.cc	/^sym_tab_rebind_lit($/;"	f
sym_tab_t	include/pars0sym.h	/^struct sym_tab_t{$/;"	s
sym_table	include/pars0sym.h	/^	sym_tab_t*			sym_table;	\/*!< back pointer to$/;"	m	struct:sym_node_t
sync	include/fts0types.h	/^	fts_sync_t*	sync;		\/*!< sync structure to sync data to$/;"	m	struct:fts_cache_t
sync0arr_h	include/sync0arr.h	27;"	d
sync0debug_h	include/sync0debug.h	33;"	d
sync0policy_h	include/sync0policy.h	27;"	d
sync0rw_h	include/sync0rw.h	34;"	d
sync0sync_h	include/sync0sync.h	35;"	d
sync0types_h	include/sync0types.h	27;"	d
sync_allowed_latches	include/sync0types.h	/^	sync_allowed_latches($/;"	f	struct:sync_allowed_latches
sync_allowed_latches	include/sync0types.h	/^struct sync_allowed_latches : public sync_check_functor_t {$/;"	s
sync_arr_cell_can_wake_up	sync/sync0arr.cc	/^sync_arr_cell_can_wake_up($/;"	f	file:
sync_arr_wake_threads_if_sema_free	sync/sync0arr.cc	/^sync_arr_wake_threads_if_sema_free(void)$/;"	f
sync_array_cell_print	sync/sync0arr.cc	/^sync_array_cell_print($/;"	f	file:
sync_array_close	sync/sync0arr.cc	/^sync_array_close(void)$/;"	f
sync_array_deadlock_step	sync/sync0arr.cc	/^sync_array_deadlock_step($/;"	f	file:
sync_array_detect_deadlock	sync/sync0arr.cc	/^sync_array_detect_deadlock($/;"	f	file:
sync_array_enter	sync/sync0arr.cc	174;"	d	file:
sync_array_exit	sync/sync0arr.cc	173;"	d	file:
sync_array_find_thread	sync/sync0arr.cc	/^sync_array_find_thread($/;"	f	file:
sync_array_free	sync/sync0arr.cc	/^sync_array_free($/;"	f	file:
sync_array_free_cell	sync/sync0arr.cc	/^sync_array_free_cell($/;"	f
sync_array_get	include/sync0arr.ic	/^sync_array_get()$/;"	f
sync_array_get_and_reserve_cell	include/sync0arr.ic	/^sync_array_get_and_reserve_cell($/;"	f
sync_array_get_nth_cell	sync/sync0arr.cc	/^sync_array_get_nth_cell($/;"	f	file:
sync_array_init	sync/sync0arr.cc	/^sync_array_init($/;"	f
sync_array_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	sync_array_mutex_key;$/;"	v
sync_array_object_signalled	sync/sync0arr.cc	/^sync_array_object_signalled()$/;"	f
sync_array_print	sync/sync0arr.cc	/^sync_array_print($/;"	f
sync_array_print_info	sync/sync0arr.cc	/^sync_array_print_info($/;"	f	file:
sync_array_print_info_low	sync/sync0arr.cc	/^sync_array_print_info_low($/;"	f	file:
sync_array_print_long_waits	sync/sync0arr.cc	/^sync_array_print_long_waits($/;"	f
sync_array_print_long_waits_low	sync/sync0arr.cc	/^sync_array_print_long_waits_low($/;"	f	file:
sync_array_report_error	sync/sync0arr.cc	/^sync_array_report_error($/;"	f
sync_array_reserve_cell	sync/sync0arr.cc	/^sync_array_reserve_cell($/;"	f
sync_array_size	sync/sync0arr.cc	/^ulint	sync_array_size;$/;"	v
sync_array_t	sync/sync0arr.cc	/^struct sync_array_t {$/;"	s	file:
sync_array_validate	sync/sync0arr.cc	/^sync_array_validate($/;"	f
sync_array_wait_event	sync/sync0arr.cc	/^sync_array_wait_event($/;"	f
sync_array_wake_threads_if_sema_free_low	sync/sync0arr.cc	/^sync_array_wake_threads_if_sema_free_low($/;"	f	file:
sync_basename	sync/sync0sync.cc	/^sync_basename(const char* filename)$/;"	f
sync_cell_get_event	sync/sync0arr.cc	/^sync_cell_get_event($/;"	f	file:
sync_cell_t	sync/sync0arr.cc	/^struct sync_cell_t {$/;"	s	file:
sync_check_close	sync/sync0debug.cc	/^sync_check_close()$/;"	f
sync_check_enable	sync/sync0debug.cc	/^sync_check_enable()$/;"	f
sync_check_find	sync/sync0debug.cc	/^sync_check_find(latch_level_t level)$/;"	f
sync_check_functor_t	include/sync0types.h	/^struct sync_check_functor_t {$/;"	s
sync_check_init	sync/sync0debug.cc	/^sync_check_init()$/;"	f
sync_check_iterate	sync/sync0debug.cc	/^sync_check_iterate(sync_check_functor_t& functor)$/;"	f
sync_check_lock	sync/sync0debug.cc	/^sync_check_lock($/;"	f
sync_check_lock_granted	sync/sync0debug.cc	/^sync_check_lock_granted(const latch_t* latch)$/;"	f
sync_check_lock_validate	sync/sync0debug.cc	/^sync_check_lock_validate(const latch_t* latch)$/;"	f
sync_check_relock	sync/sync0debug.cc	/^sync_check_relock(const latch_t* latch)$/;"	f
sync_check_unlock	sync/sync0debug.cc	/^sync_check_unlock(const latch_t* latch)$/;"	f
sync_event	include/fil0fil.h	/^	os_event_t	sync_event;$/;"	m	struct:fil_node_t
sync_file_created_deregister	sync/sync0debug.cc	/^sync_file_created_deregister(const void* ptr)$/;"	f
sync_file_created_get	sync/sync0debug.cc	/^sync_file_created_get(const void* ptr)$/;"	f
sync_file_created_register	sync/sync0debug.cc	/^sync_file_created_register($/;"	f
sync_heap	include/fts0types.h	/^	ib_alloc_t*	sync_heap;	\/*!< The heap allocator, for indexes$/;"	m	struct:fts_cache_t
sync_latch_get_counter	include/sync0types.h	/^sync_latch_get_counter(latch_id_t id)$/;"	f
sync_latch_get_id	sync/sync0debug.cc	/^sync_latch_get_id(const char* name)$/;"	f
sync_latch_get_level	include/sync0types.h	/^sync_latch_get_level(latch_id_t id)$/;"	f
sync_latch_get_meta	include/sync0types.h	/^sync_latch_get_meta(latch_id_t id)$/;"	f
sync_latch_get_name	include/sync0types.h	/^sync_latch_get_name(latch_id_t id)$/;"	f
sync_latch_get_name	sync/sync0debug.cc	/^sync_latch_get_name(latch_level_t level)$/;"	f
sync_latch_get_pfs_key	include/sync0types.h	/^sync_latch_get_pfs_key(latch_id_t id)$/;"	f
sync_latch_meta_destroy	sync/sync0debug.cc	/^sync_latch_meta_destroy()$/;"	f	file:
sync_mutex_to_string	sync/sync0sync.cc	/^sync_mutex_to_string($/;"	f
sync_obj	include/hash0hash.h	/^	} sync_obj;$/;"	m	struct:hash_table_t	typeref:union:hash_table_t::__anon23
sync_object_t	sync/sync0arr.cc	/^union sync_object_t {$/;"	u	file:
sync_print	sync/sync0sync.cc	/^sync_print(FILE* file)$/;"	f
sync_print_wait_info	sync/sync0sync.cc	/^sync_print_wait_info(FILE* file)$/;"	f	file:
sync_thread_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	sync_thread_mutex_key;$/;"	v
sync_wait_array	sync/sync0arr.cc	/^sync_array_t**	sync_wait_array;$/;"	v
synced	include/fts0types.h	/^	bool		synced;		\/*!< flag whether the node is synced *\/$/;"	m	struct:fts_node_t
synced_doc_id	include/fts0types.h	/^	doc_id_t	synced_doc_id;	\/*!< Doc ID sync-ed to CONFIG table *\/$/;"	m	struct:fts_cache_t
sys_columns	include/dict0dict.h	/^	dict_table_t*	sys_columns;	\/*!< SYS_COLUMNS table *\/$/;"	m	struct:dict_sys_t
sys_fields	include/dict0dict.h	/^	dict_table_t*	sys_fields;	\/*!< SYS_FIELDS table *\/$/;"	m	struct:dict_sys_t
sys_indexes	include/dict0dict.h	/^	dict_table_t*	sys_indexes;	\/*!< SYS_INDEXES table *\/$/;"	m	struct:dict_sys_t
sys_mutex_t	include/sync0types.h	/^typedef CRITICAL_SECTION	sys_mutex_t;$/;"	t
sys_mutex_t	include/sync0types.h	/^typedef pthread_mutex_t		sys_mutex_t;$/;"	t
sys_tables	include/dict0dict.h	/^	dict_table_t*	sys_tables;	\/*!< SYS_TABLES table *\/$/;"	m	struct:dict_sys_t
sys_tablespace_auto_extend_increment	fsp/fsp0sysspace.cc	/^ulong sys_tablespace_auto_extend_increment;$/;"	v
sys_threads	srv/srv0srv.cc	/^	srv_slot_t*	sys_threads;		\/*!< server thread table *\/$/;"	m	struct:srv_sys_t	file:
sys_virtual	include/dict0dict.h	/^	dict_table_t*	sys_virtual;	\/*!< SYS_VIRTUAL table *\/$/;"	m	struct:dict_sys_t
sz_of_offsets	include/dict0mem.h	/^	uint32_t	sz_of_offsets;$/;"	m	class:rec_cache_t
tab_create_graph_create	dict/dict0crea.cc	/^tab_create_graph_create($/;"	f
tab_def	include/dict0crea.h	/^	ins_node_t*	tab_def;	\/*!< child node which does the insert of$/;"	m	struct:tab_node_t
tab_lock	include/lock0priv.h	/^		lock_table_t	tab_lock;\/*!< table lock *\/$/;"	m	union:lock_t::__anon7
tab_node_t	include/dict0crea.h	/^struct tab_node_t{$/;"	s
table	api/api0api.cc	/^	dict_table_t*	table;		\/* Table read from or NULL *\/$/;"	m	struct:ib_table_def_t	file:
table	api/api0api.cc	/^	dict_table_t*	table;		\/*!< Parent InnoDB table *\/$/;"	m	struct:ib_index_def_t	file:
table	dict/dict0stats.cc	/^	dict_table_t*	table;	\/*!< table whose indexes are to be modified *\/$/;"	m	struct:index_fetch_t	file:
table	fts/fts0opt.cc	/^	dict_table_t*	table;		\/*!< Table that has to be queried *\/$/;"	m	struct:fts_optimize_t	file:
table	fts/fts0opt.cc	/^	dict_table_t*	table;		\/*!< Table to optimize *\/$/;"	m	struct:fts_slot_t	file:
table	fts/fts0opt.cc	/^	dict_table_t*	table;		\/*!< The table to remove *\/$/;"	m	struct:fts_msg_del_t	file:
table	handler/ha_innodb.cc	/^	const dict_table_t*	table;$/;"	m	struct:table_list_item	file:
table	include/dict0crea.h	/^	dict_table_t*	table;		\/*!< table to create, built as a$/;"	m	struct:tab_node_t
table	include/dict0crea.h	/^	dict_table_t*	table;		\/*!< table which owns the index *\/$/;"	m	struct:ind_node_t
table	include/dict0mem.h	/^	dict_table_t*	table;	\/*!< back pointer to table *\/$/;"	m	struct:dict_index_t
table	include/fts0fts.h	/^			table;		\/*!< Parent table *\/$/;"	m	struct:fts_table_t
table	include/fts0fts.h	/^	dict_table_t*	table;		\/*!< table *\/$/;"	m	struct:fts_trx_table_t
table	include/fts0types.h	/^	dict_table_t*	table;		\/*!< Table with FTS index(es) *\/$/;"	m	struct:fts_sync_t
table	include/lock0lock.h	/^	dict_table_t*	table;	\/*!< table to be locked *\/$/;"	m	struct:lock_op_t
table	include/lock0priv.h	/^	dict_table_t*	table;		\/*!< database table in dictionary$/;"	m	struct:lock_table_t
table	include/pars0sym.h	/^	dict_table_t*			table;		\/*!< table definition$/;"	m	struct:sym_node_t
table	include/row0ins.h	/^	dict_table_t*	table;	\/*!< table where to insert *\/$/;"	m	struct:ins_node_t
table	include/row0merge.h	/^	struct TABLE*		table;	\/*!< MySQL table object *\/$/;"	m	struct:row_merge_dup_t	typeref:struct:row_merge_dup_t::TABLE
table	include/row0mysql.h	/^	dict_table_t*	table;		\/*!< Innobase table handle *\/$/;"	m	struct:row_prebuilt_t
table	include/row0purge.h	/^	dict_table_t*	table;	\/*!< table where purge is done *\/$/;"	m	struct:purge_node_t
table	include/row0sel.h	/^	dict_table_t*	table;		\/*!< table struct in the dictionary$/;"	m	struct:plan_t
table	include/row0undo.h	/^	dict_table_t*	table;	\/*!< table where undo is done *\/$/;"	m	struct:undo_node_t
table	include/row0upd.h	/^	dict_table_t*	table;	\/*!< table where updated *\/$/;"	m	struct:upd_node_t
table	row/row0log.cc	/^	dict_table_t*	table;	\/*!< table that is being rebuilt,$/;"	m	struct:row_log_t	file:
table_LRU	include/dict0dict.h	/^			table_LRU;	\/*!< List of tables that can be evicted$/;"	m	struct:dict_sys_t
table_LRU	include/dict0mem.h	/^	UT_LIST_NODE_T(dict_table_t)		table_LRU;$/;"	m	struct:dict_table_t
table_cache_create_empty_row	trx/trx0i_s.cc	/^table_cache_create_empty_row($/;"	f	file:
table_cache_free	trx/trx0i_s.cc	/^table_cache_free($/;"	f	file:
table_cache_init	trx/trx0i_s.cc	/^table_cache_init($/;"	f	file:
table_cache_t	include/sess0sess.h	/^	table_cache_t;$/;"	t
table_cache_type	handler/ha_innodb.cc	/^ha_innobase::table_cache_type()$/;"	f	class:ha_innobase
table_cached	include/trx0trx.h	/^	ulint		table_cached;	\/*!< Next free table lock in pool *\/$/;"	m	struct:trx_lock_t
table_flags	handler/ha_innodb.cc	/^ha_innobase::table_flags() const$/;"	f	class:ha_innobase
table_flags	handler/ha_innopart.h	/^	table_flags() const$/;"	f	class:ha_innopart
table_hash	include/dict0dict.h	/^	hash_table_t*	table_hash;	\/*!< hash table of the tables, based$/;"	m	struct:dict_sys_t
table_id	fts/fts0opt.cc	/^	table_id_t	table_id;	\/*!< Table id *\/$/;"	m	struct:fts_slot_t	file:
table_id	include/fts0fts.h	/^	table_id_t	table_id;	\/*!< The table id *\/$/;"	m	struct:fts_table_t
table_id	include/trx0trx.h	/^	table_id_t	table_id;	\/*!< Table to drop iff dict_operation$/;"	m	struct:trx_t
table_id	include/trx0undo.h	/^	table_id_t	table_id;	\/*!< if a dict operation, then the table$/;"	m	struct:trx_undo_t
table_id	row/row0trunc.cc	/^	const table_id_t* table_id() const$/;"	f	class:Callback
table_id_hash	include/dict0dict.h	/^	hash_table_t*	table_id_hash;	\/*!< hash table of the tables, based$/;"	m	struct:dict_sys_t
table_id_set	trx/trx0trx.cc	/^	ut_allocator<table_id_t> >	table_id_set;$/;"	t	file:
table_id_t	include/dict0types.h	/^typedef ib_id_t		table_id_t;$/;"	t
table_list	include/row0sel.h	/^	sym_node_t*	table_list;	\/*!< table list *\/$/;"	m	struct:sel_node_t
table_list_item	handler/ha_innodb.cc	/^struct table_list_item {$/;"	s	file:
table_lock_list_t	include/dict0mem.h	/^	table_lock_list_t;$/;"	t
table_locks	include/trx0trx.h	/^	lock_pool_t	table_locks;	\/*!< All table locks requested by this$/;"	m	struct:trx_lock_t
table_name	handler/ha_innodb.h	/^	const char*	table_name;	\/*!< InnoDB table name *\/$/;"	m	struct:st_innobase_share
table_name	handler/ha_innodb.h	/^	const char* table_name() const$/;"	f	class:create_table_info_t
table_name	include/dict0dict.h	/^	const char*		table_name;	\/* the name of the table whose$/;"	m	struct:dict_table_schema_t
table_name	include/dict0mem.h	/^	const char*	table_name;\/*!< table name *\/$/;"	m	struct:dict_index_t
table_name	row/row0mysql.cc	/^	char*				table_name;	\/*!< table name *\/$/;"	m	struct:row_mysql_drop_t	file:
table_name_hash	handler/ha_innodb.h	/^	void*		table_name_hash;$/;"	m	struct:st_innobase_share
table_name_t	include/dict0mem.h	/^struct table_name_t$/;"	s
table_non_LRU	include/dict0dict.h	/^			table_non_LRU;	\/*!< List of tables that can't be$/;"	m	struct:dict_sys_t
table_pool	include/trx0trx.h	/^	lock_pool_t	table_pool;	\/*!< Pre-allocated table locks *\/$/;"	m	struct:trx_lock_t
table_sym	include/row0upd.h	/^	sym_node_t*	table_sym;\/* table node in symbol table *\/$/;"	m	struct:upd_node_t
table_type	handler/ha_innodb.cc	/^ha_innobase::table_type() const$/;"	f	class:ha_innobase
tablename_compare	handler/ha_innodb.cc	/^struct tablename_compare {$/;"	s	file:
tables	include/fts0fts.h	/^	ib_rbt_t*	tables;		\/*!< Modified FTS tables *\/$/;"	m	struct:fts_savepoint_t
tables_t	include/row0trunc.h	/^		tables_t;$/;"	t	class:truncate_t
tablespace	include/dict0mem.h	/^	id_name_t				tablespace;$/;"	m	struct:dict_table_t
tablespace_is_file_per_table	handler/ha_innodb.h	/^tablespace_is_file_per_table($/;"	f
tablespace_is_general_space	handler/ha_innodb.h	/^tablespace_is_general_space($/;"	f
tablespace_is_shared_space	handler/ha_innodb.h	/^tablespace_is_shared_space($/;"	f
tail	include/fts0ast.h	/^	fts_ast_node_t*	tail;			\/*!< Children list tail *\/$/;"	m	struct:fts_ast_list_t
tail	row/row0log.cc	/^	row_log_buf_t	tail;	\/*!< writer context;$/;"	m	struct:row_log_t	file:
tasks	srv/srv0srv.cc	/^			tasks;			\/*!< task queue *\/$/;"	m	struct:srv_sys_t	file:
tasks_mutex	srv/srv0srv.cc	/^	ib_mutex_t	tasks_mutex;		\/*!< variable protecting the$/;"	m	struct:srv_sys_t	file:
tb_name	include/dict0mem.h	/^	std::string		tb_name;$/;"	m	struct:dict_vcol_templ_t
temp_table_info_cache_t	handler/i_s.cc	/^	temp_table_info_cache_t;$/;"	t	file:
temp_table_info_t	handler/i_s.cc	/^struct temp_table_info_t{$/;"	s	file:
templ_contains_blob	include/row0mysql.h	/^	unsigned	templ_contains_blob:1;\/*!< TRUE if the template contains$/;"	m	struct:row_prebuilt_t
templ_contains_fixed_point	include/row0mysql.h	/^	unsigned	templ_contains_fixed_point:1;\/*!< TRUE if the$/;"	m	struct:row_prebuilt_t
template_type	include/row0mysql.h	/^	unsigned	template_type:2;\/*!< ROW_MYSQL_WHOLE_ROW,$/;"	m	struct:row_prebuilt_t
term	include/fts0ast.h	/^	fts_ast_term_t	term;			\/*!< Term node *\/$/;"	m	struct:fts_ast_node_t
test_cmp_data_data	rem/rem0cmp.cc	/^test_cmp_data_data(ulint len)$/;"	f
test_dict_stats_all	dict/dict0stats.cc	/^test_dict_stats_all()$/;"	f
test_dict_stats_fetch_from_ps	dict/dict0stats.cc	/^test_dict_stats_fetch_from_ps()$/;"	f
test_dict_stats_save	dict/dict0stats.cc	/^test_dict_stats_save()$/;"	f
test_dict_table_schema_check	dict/dict0stats.cc	/^test_dict_table_schema_check()$/;"	f
test_ha_storage	ha/ha0storage.cc	/^test_ha_storage()$/;"	f
test_make_filepath	fil/fil0fil.cc	/^test_make_filepath()$/;"	f
test_normalize_table_name_low	handler/ha_innodb.cc	/^test_normalize_table_name_low()$/;"	f	file:
test_os_file_get_parent_dir	os/os0file.cc	/^test_os_file_get_parent_dir($/;"	f
test_page_cur_lcg_prng	page/page0cur.cc	/^test_page_cur_lcg_prng($/;"	f
test_row_raw_format_int	row/row0row.cc	/^test_row_raw_format_int()$/;"	f
test_ut_format_name	handler/ha_innodb.cc	/^test_ut_format_name()$/;"	f	file:
text	include/fts0ast.h	/^	fts_ast_text_t	text;			\/*!< Text node *\/$/;"	m	struct:fts_ast_node_t
text	include/fts0types.h	/^	fts_string_t	text;		\/*!< Token text. *\/$/;"	m	struct:fts_tokenizer_word_t
text	include/fts0types.h	/^	fts_string_t	text;		\/*!< Word value in UTF-8 *\/$/;"	m	struct:fts_word_t
text	include/fts0types.h	/^	fts_string_t	text;		\/*!< document text *\/$/;"	m	struct:fts_doc_t
text	include/fts0types.h	/^	fts_string_t	text;		\/*!< token text *\/$/;"	m	struct:fts_token_t
text	include/row0ftsort.h	/^	fts_string_t*	text;		\/*!< token *\/$/;"	m	struct:row_fts_token_t
thd	handler/ha_innodb.h	/^	THD* thd() const$/;"	f	class:create_table_info_t
thd_has_edited_nontrans_tables	handler/ha_innodb.cc	/^thd_has_edited_nontrans_tables($/;"	f
thd_innodb_tmpdir	handler/ha_innodb.cc	/^thd_innodb_tmpdir($/;"	f
thd_is_ins_sel_stmt	handler/ha_innodb.cc	/^thd_is_ins_sel_stmt(THD* user_thd)$/;"	f	file:
thd_is_replication_slave_thread	handler/ha_innodb.cc	/^thd_is_replication_slave_thread($/;"	f
thd_is_select	handler/ha_innodb.cc	/^thd_is_select($/;"	f
thd_lock_wait_timeout	handler/ha_innodb.cc	/^thd_lock_wait_timeout($/;"	f
thd_requested_durability	handler/ha_innodb.cc	/^thd_requested_durability($/;"	f
thd_set_lock_wait_time	handler/ha_innodb.cc	/^thd_set_lock_wait_time($/;"	f
thd_start_time_in_secs	handler/ha_innodb.cc	/^thd_start_time_in_secs($/;"	f
thd_to_innodb_session	handler/ha_innodb.cc	/^thd_to_innodb_session($/;"	f	file:
thd_to_trx	handler/ha_innodb.cc	/^thd_to_trx($/;"	f
thd_trx_arbitrate	handler/ha_innodb.cc	/^thd_trx_arbitrate(THD* requestor, THD* holder)$/;"	f
thd_trx_is_auto_commit	handler/ha_innodb.cc	/^thd_trx_is_auto_commit($/;"	f
thd_trx_is_dd_trx	handler/ha_innodb.cc	/^thd_trx_is_dd_trx(THD* thd)$/;"	f
thd_trx_is_read_only	handler/ha_innodb.cc	/^thd_trx_is_read_only($/;"	f
thd_trx_priority	handler/ha_innodb.cc	/^thd_trx_priority(THD* thd)$/;"	f
thr	handler/handler0alter.cc	/^	que_thr_t*	thr;$/;"	m	struct:ha_innobase_inplace_ctx	file:
thr	include/btr0cur.h	/^	que_thr_t*	thr;		\/*!< this field is only used$/;"	m	struct:btr_cur_t
thr	include/gis0type.h	/^	que_thr_t*      thr;	\/*!< the search thread *\/$/;"	m	struct:rtr_info
thr	include/srv0srv.h	/^	que_thr_t*	thr;			\/*!< suspended query thread$/;"	m	struct:srv_slot_t
thr_get_trx	include/que0que.ic	/^thr_get_trx($/;"	f
thr_is_recv	include/que0que.ic	/^thr_is_recv($/;"	f
thread_hdl	include/row0ftsort.h	/^	os_thread_id_t		thread_hdl;	\/*!< thread handle *\/$/;"	m	struct:fts_psort_t
thread_id	include/sync0rw.h	/^	os_thread_id_t thread_id;  \/*!< The thread id of the thread which$/;"	m	struct:rw_lock_debug_t
thread_id	sync/sync0arr.cc	/^	os_thread_id_t	thread_id;	\/*!< thread id of this waiting$/;"	m	struct:sync_cell_t	file:
thread_ids	srv/srv0start.cc	/^static os_thread_id_t	thread_ids[SRV_MAX_N_IO_THREADS + 6 + 32];$/;"	v	file:
thread_mutex	os/os0thread.cc	/^SysMutex	thread_mutex;$/;"	v
thread_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	thread_mutex_key;$/;"	v
thrs	include/que0que.h	/^			thrs;		\/*!< list of query threads *\/$/;"	m	struct:que_fork_t
thrs	include/que0que.h	/^			thrs;		\/*!< list of thread nodes of the fork$/;"	m	struct:que_thr_t
time_fn	ut/ut0ut.cc	/^typedef VOID(WINAPI *time_fn)(LPFILETIME);$/;"	t	file:
timed_wait	os/os0event.cc	/^os_event::timed_wait($/;"	f	class:os_event
timeout_event	include/lock0lock.h	/^	os_event_t	timeout_event;		\/*!< Set to the event that is$/;"	m	struct:lock_sys_t
timeout_thread_active	include/lock0lock.h	/^	bool		timeout_thread_active;	\/*!< True if the timeout thread$/;"	m	struct:lock_sys_t
timersub	include/ut0dbg.h	127;"	d
tmp_name	handler/handler0alter.cc	/^	const char*	tmp_name;$/;"	m	struct:ha_innobase_inplace_ctx	file:
tmp_tuples	include/row0merge.h	/^	mtuple_t*	tmp_tuples;	\/*!< temporary copy of tuples,$/;"	m	struct:row_merge_buf_t
to_be_dropped	include/dict0mem.h	/^	unsigned				to_be_dropped:1;$/;"	m	struct:dict_table_t
to_be_dropped	include/dict0mem.h	/^	unsigned	to_be_dropped:1;$/;"	m	struct:dict_index_t
to_delete	fts/fts0opt.cc	/^	fts_doc_ids_t*	to_delete;	\/*!< doc ids to delete, we check against$/;"	m	struct:fts_optimize_t	file:
to_file	os/os0file.cc	/^AIO::to_file(FILE* file) const$/;"	f	class:AIO
to_stream	fsp/fsp0fsp.cc	/^fseg_header::to_stream(std::ostream&	out) const$/;"	f	class:fseg_header
to_string	include/sync0policy.h	/^	std::string to_string() const { return(""); };$/;"	f	struct:NoPolicy
to_string	include/sync0policy.ic	/^std::string BlockMutexPolicy<Mutex>::to_string() const$/;"	f	class:BlockMutexPolicy
to_string	include/sync0policy.ic	/^std::string GenericPolicy<Mutex>::to_string() const$/;"	f	class:GenericPolicy
to_string	os/os0file.cc	/^Compression::to_string(Type type)$/;"	f	class:Compression
to_string	os/os0file.cc	/^Encryption::to_string(Type type)$/;"	f	class:Encryption
to_string	os/os0file.cc	/^std::string Compression::to_string(const Compression::meta_t& meta)$/;"	f	class:Compression
to_string	sync/sync0rw.cc	/^rw_lock_t::to_string() const$/;"	f	class:rw_lock_t
token	fts/fts0pars.cc	/^	fts_ast_string_t*	token;$/;"	m	union:YYSTYPE	file:
token	include/fts0pars.h	/^	fts_ast_string_t*	token;$/;"	m	union:YYSTYPE
token_index	fts/fts0que.cc	/^	ulint		token_index;	\/*!< Index of token to match next *\/$/;"	m	struct:fts_phrase_param_t	file:
token_list	include/row0ftsort.h	/^			token_list;	\/*!< next token link *\/$/;"	m	struct:row_fts_token_t
token_type	include/pars0sym.h	/^	enum sym_tab_entry		token_type;	\/*!< type of the$/;"	m	struct:sym_node_t	typeref:enum:sym_node_t::sym_tab_entry
tokens	fts/fts0que.cc	/^	const ib_vector_t*	tokens;$/;"	m	struct:fts_phrase_t	file:
tokens	include/fts0types.h	/^	ib_rbt_t*	tokens;		\/*!< This is filled when the document$/;"	m	struct:fts_doc_t
top_offset	include/trx0undo.h	/^	ulint		top_offset;	\/*!< offset of the latest undo record,$/;"	m	struct:trx_undo_t
top_page_no	include/trx0undo.h	/^	ulint		top_page_no;	\/*!< page number where the latest undo$/;"	m	struct:trx_undo_t
top_undo_no	include/trx0undo.h	/^	undo_no_t	top_undo_no;	\/*!< undo number of the latest record *\/$/;"	m	struct:trx_undo_t
total	include/ut0vec.h	/^	ulint		total;		\/* number of elements allocated *\/$/;"	m	struct:ib_vector_t
total	row/row0log.cc	/^	ulonglong	total;	\/*!< logical position, in bytes from$/;"	m	struct:row_log_buf_t	file:
total_docs	fts/fts0que.cc	/^	ib_uint64_t	total_docs;	\/*!< The total number of documents *\/$/;"	m	struct:fts_query_t	file:
total_memory	include/fts0types.h	/^	ulint		total_memory;	\/*!< Total memory used *\/$/;"	m	struct:fts_fetch_t
total_pending_io_count	os/os0file.cc	/^AIO::total_pending_io_count()$/;"	f	class:AIO
total_size	fts/fts0que.cc	/^	ulint		total_size;	\/*!< total memory size used by query *\/$/;"	m	struct:fts_query_t	file:
total_size	include/fts0types.h	/^	ulint		total_size;	\/*!< total size consumed by the ilist$/;"	m	struct:fts_cache_t
total_size	include/mem0mem.h	/^	ulint	total_size; \/*!< physical length in bytes of all blocks$/;"	m	struct:mem_block_info_t
total_size	include/row0merge.h	/^	ulint		total_size;	\/*!< total amount of data bytes *\/$/;"	m	struct:row_merge_buf_t
total_words	fts/fts0que.cc	/^	ulint		total_words;	\/*!< The total number of words *\/$/;"	m	struct:fts_query_t	file:
tree_blocks	include/gis0type.h	/^	buf_block_t*	tree_blocks[RTR_MAX_LEVELS + RTR_LEAF_LATCH_NUM];$/;"	m	struct:rtr_info
tree_height	include/btr0cur.h	/^	ulint		tree_height;	\/*!< Tree height if the search is done$/;"	m	struct:btr_cur_t
tree_savepoints	include/gis0type.h	/^        ulint		tree_savepoints[RTR_MAX_LEVELS + RTR_LEAF_LATCH_NUM];$/;"	m	struct:rtr_info
trigger_corruption	row/row0import.cc	892;"	d	file:
true_word_char	handler/ha_innodb.cc	6540;"	d	file:
true_word_char	include/fts0tokenize.h	32;"	d
trunc_log_files_t	include/row0trunc.h	/^		trunc_log_files_t;$/;"	t	class:TruncateLogParser
truncate	fil/fil0fil.cc	/^truncate_t::truncate($/;"	f	class:truncate_t
truncate	handler/ha_innodb.cc	/^ha_innobase::truncate()$/;"	f	class:ha_innobase
truncate	handler/ha_innopart.cc	/^ha_innopart::truncate()$/;"	f	class:ha_innopart
truncate_partition_low	handler/ha_innopart.cc	/^ha_innopart::truncate_partition_low()$/;"	f	class:ha_innopart
truncate_t	include/row0trunc.h	/^class truncate_t {$/;"	c
truncate_t	row/row0trunc.cc	/^truncate_t::truncate_t($/;"	f	class:truncate_t
truncated_tables_t	include/row0trunc.h	/^	typedef std::map<ulint, lsn_t>	truncated_tables_t;$/;"	t	class:truncate_t
trx	fts/fts0opt.cc	/^	trx_t*		trx;		\/*!< The transaction used for all SQL *\/$/;"	m	struct:fts_optimize_t	file:
trx	fts/fts0que.cc	/^	trx_t*		trx;		\/*!< The query transaction *\/$/;"	m	struct:fts_query_t	file:
trx	handler/ha_innodb.h	/^	trx_t* trx() const$/;"	f	class:create_table_info_t
trx	handler/handler0alter.cc	/^	trx_t*		trx;$/;"	m	struct:ha_innobase_inplace_ctx	file:
trx	include/fts0ast.h	/^	trx_t*		trx;$/;"	m	struct:fts_ast_node_t
trx	include/fts0fts.h	/^	trx_t*		trx;		\/*!< InnoDB transaction *\/$/;"	m	struct:fts_trx_t
trx	include/fts0types.h	/^	trx_t*		trx;		\/*!< The transaction used for SYNCing$/;"	m	struct:fts_sync_t
trx	include/lock0priv.h	/^	trx_t*		trx;		\/*!< transaction owning the$/;"	m	struct:lock_t
trx	include/que0que.h	/^	trx_t*		trx;		\/*!< transaction: this is set only in$/;"	m	struct:que_fork_t
trx	include/row0ftsort.h	/^	trx_t*			trx;		\/*!< transaction *\/$/;"	m	struct:fts_psort_common_t
trx	include/row0mysql.h	/^	trx_t*		trx;		\/*!< current transaction handle *\/$/;"	m	struct:row_prebuilt_t
trx	include/row0undo.h	/^	trx_t*		trx;	\/*!< trx for which undo is done *\/$/;"	m	struct:undo_node_t
trx	include/trx0purge.h	/^	trx_t*		trx;		\/*!< System transaction running the$/;"	m	struct:trx_purge_t
trx	include/usr0sess.h	/^	trx_t*		trx;		\/*!< transaction object permanently$/;"	m	struct:sess_t
trx0i_s_h	include/trx0i_s.h	29;"	d
trx0purge_h	include/trx0purge.h	27;"	d
trx0rec_h	include/trx0rec.h	27;"	d
trx0roll_h	include/trx0roll.h	27;"	d
trx0rseg_h	include/trx0rseg.h	27;"	d
trx0sys_h	include/trx0sys.h	27;"	d
trx0trx_h	include/trx0trx.h	27;"	d
trx0types_h	include/trx0types.h	27;"	d
trx0undo_h	include/trx0undo.h	27;"	d
trx_allocate_for_background	trx/trx0trx.cc	/^trx_allocate_for_background(void)$/;"	f
trx_allocate_for_mysql	trx/trx0trx.cc	/^trx_allocate_for_mysql(void)$/;"	f
trx_arbitrate	include/trx0trx.ic	/^trx_arbitrate(const trx_t* requestor, const trx_t* holder)$/;"	f
trx_assert_recovered	include/trx0sys.ic	/^trx_assert_recovered($/;"	f
trx_assert_started	trx/trx0trx.cc	/^trx_assert_started($/;"	f
trx_assign_read_view	trx/trx0trx.cc	/^trx_assign_read_view($/;"	f
trx_assign_rseg	trx/trx0trx.cc	/^trx_assign_rseg($/;"	f
trx_assign_rseg_low	trx/trx0trx.cc	/^trx_assign_rseg_low($/;"	f	file:
trx_cleanup_at_db_startup	trx/trx0trx.cc	/^trx_cleanup_at_db_startup($/;"	f
trx_commit	trx/trx0trx.cc	/^trx_commit($/;"	f
trx_commit_complete_for_mysql	trx/trx0trx.cc	/^trx_commit_complete_for_mysql($/;"	f
trx_commit_disallowed	trx/trx0purge.cc	/^bool		trx_commit_disallowed = false;$/;"	v
trx_commit_for_mysql	trx/trx0trx.cc	/^trx_commit_for_mysql($/;"	f
trx_commit_in_memory	trx/trx0trx.cc	/^trx_commit_in_memory($/;"	f	file:
trx_commit_low	trx/trx0trx.cc	/^trx_commit_low($/;"	f
trx_commit_node_create	trx/trx0trx.cc	/^trx_commit_node_create($/;"	f
trx_commit_or_rollback_prepare	trx/trx0trx.cc	/^trx_commit_or_rollback_prepare($/;"	f
trx_commit_step	trx/trx0trx.cc	/^trx_commit_step($/;"	f
trx_concurrency_tickets	include/trx0i_s.h	/^	ulint		trx_concurrency_tickets;$/;"	m	struct:i_s_trx_row_t
trx_create_low	trx/trx0trx.cc	/^trx_create_low()$/;"	f	file:
trx_deregister_from_2pc	handler/ha_innodb.cc	/^trx_deregister_from_2pc($/;"	f	file:
trx_dict_op_t	include/trx0types.h	/^enum trx_dict_op_t {$/;"	g
trx_disconnect_from_mysql	trx/trx0trx.cc	/^trx_disconnect_from_mysql($/;"	f
trx_disconnect_plain	trx/trx0trx.cc	/^trx_disconnect_plain(trx_t*	trx)$/;"	f
trx_disconnect_prepared	trx/trx0trx.cc	/^trx_disconnect_prepared(trx_t*	trx)$/;"	f
trx_dummy_sess	trx/trx0trx.cc	/^sess_t*	trx_dummy_sess = NULL;$/;"	v
trx_erase_lists	trx/trx0trx.cc	/^trx_erase_lists($/;"	f	file:
trx_finalize_for_fts	trx/trx0trx.cc	/^trx_finalize_for_fts($/;"	f	file:
trx_finalize_for_fts_table	trx/trx0trx.cc	/^trx_finalize_for_fts_table($/;"	f	file:
trx_flush_log_if_needed	trx/trx0trx.cc	/^trx_flush_log_if_needed($/;"	f	file:
trx_flush_log_if_needed_low	trx/trx0trx.cc	/^trx_flush_log_if_needed_low($/;"	f	file:
trx_foreign_key_checks	include/trx0i_s.h	/^	ibool		trx_foreign_key_checks;$/;"	m	struct:i_s_trx_row_t
trx_foreign_key_error	include/trx0i_s.h	/^	const char*	trx_foreign_key_error;$/;"	m	struct:i_s_trx_row_t
trx_free	trx/trx0trx.cc	/^trx_free(trx_t*& trx)$/;"	f	file:
trx_free_for_background	trx/trx0trx.cc	/^trx_free_for_background(trx_t* trx)$/;"	f
trx_free_for_mysql	trx/trx0trx.cc	/^trx_free_for_mysql(trx_t*	trx)$/;"	f
trx_free_prepared	trx/trx0trx.cc	/^trx_free_prepared($/;"	f
trx_free_resurrected	trx/trx0trx.cc	/^trx_free_resurrected(trx_t* trx)$/;"	f
trx_get_dict_operation	include/trx0trx.ic	/^trx_get_dict_operation($/;"	f
trx_get_error_info	include/trx0trx.ic	/^trx_get_error_info($/;"	f
trx_get_id_for_print	include/trx0trx.ic	/^trx_get_id_for_print($/;"	f
trx_get_que_state_str	include/trx0trx.ic	/^trx_get_que_state_str($/;"	f
trx_get_read_view	include/trx0trx.ic	/^trx_get_read_view($/;"	f
trx_get_rw_trx_by_id	include/trx0sys.ic	/^trx_get_rw_trx_by_id($/;"	f
trx_get_trx_by_xid	trx/trx0trx.cc	/^trx_get_trx_by_xid($/;"	f
trx_get_trx_by_xid_low	trx/trx0trx.cc	/^trx_get_trx_by_xid_low($/;"	f
trx_has_search_latch	include/trx0i_s.h	/^	ibool		trx_has_search_latch;$/;"	m	struct:i_s_trx_row_t
trx_i_s_cache	trx/trx0i_s.cc	/^trx_i_s_cache_t*	trx_i_s_cache = &trx_i_s_cache_static;$/;"	v
trx_i_s_cache_clear	trx/trx0i_s.cc	/^trx_i_s_cache_clear($/;"	f	file:
trx_i_s_cache_end_read	trx/trx0i_s.cc	/^trx_i_s_cache_end_read($/;"	f
trx_i_s_cache_end_write	trx/trx0i_s.cc	/^trx_i_s_cache_end_write($/;"	f
trx_i_s_cache_free	trx/trx0i_s.cc	/^trx_i_s_cache_free($/;"	f
trx_i_s_cache_get_nth_row	trx/trx0i_s.cc	/^trx_i_s_cache_get_nth_row($/;"	f
trx_i_s_cache_get_rows_used	trx/trx0i_s.cc	/^trx_i_s_cache_get_rows_used($/;"	f
trx_i_s_cache_init	trx/trx0i_s.cc	/^trx_i_s_cache_init($/;"	f
trx_i_s_cache_is_truncated	trx/trx0i_s.cc	/^trx_i_s_cache_is_truncated($/;"	f
trx_i_s_cache_lock_key	sync/sync0sync.cc	/^mysql_pfs_key_t trx_i_s_cache_lock_key;$/;"	v
trx_i_s_cache_start_read	trx/trx0i_s.cc	/^trx_i_s_cache_start_read($/;"	f
trx_i_s_cache_start_write	trx/trx0i_s.cc	/^trx_i_s_cache_start_write($/;"	f
trx_i_s_cache_static	trx/trx0i_s.cc	/^static trx_i_s_cache_t	trx_i_s_cache_static;$/;"	v	file:
trx_i_s_cache_t	trx/trx0i_s.cc	/^struct trx_i_s_cache_t {$/;"	s	file:
trx_i_s_common_fill_table	handler/i_s.cc	/^trx_i_s_common_fill_table($/;"	f	file:
trx_i_s_create_lock_id	trx/trx0i_s.cc	/^trx_i_s_create_lock_id($/;"	f
trx_i_s_possibly_fetch_data_into_cache	trx/trx0i_s.cc	/^trx_i_s_possibly_fetch_data_into_cache($/;"	f
trx_id	include/dict0mem.h	/^	trx_id_t	trx_id; \/*!< id of the transaction that created this$/;"	m	struct:dict_index_t
trx_id	include/row0ins.h	/^	trx_id_t	trx_id;	\/*!< trx id or the last trx which executed the$/;"	m	struct:ins_node_t
trx_id	include/row0mysql.h	/^	trx_id_t	trx_id;		\/*!< The table->def_trx_id when$/;"	m	struct:row_prebuilt_t
trx_id	include/row0purge.h	/^	trx_id_t	trx_id;	\/*!< trx id for this purging record *\/$/;"	m	struct:purge_node_t
trx_id	include/trx0i_s.h	/^	trx_id_t		trx_id;		\/*!< transaction identifier *\/$/;"	m	struct:i_s_trx_row_t
trx_id	include/trx0undo.h	/^	trx_id_t	trx_id;		\/*!< id of the trx assigned to the undo$/;"	m	struct:trx_undo_t
trx_id_buf	include/row0ins.h	/^	byte*		trx_id_buf;\/* buffer for the trx id sys field in row *\/$/;"	m	struct:ins_node_t
trx_id_offset	include/dict0mem.h	/^	unsigned	trx_id_offset:MAX_KEY_LENGTH_BITS;$/;"	m	struct:dict_index_t
trx_id_pos	include/btr0types.h	/^	ulint			trx_id_pos;$/;"	m	struct:btr_create_t
trx_id_pos	include/page0types.h	/^	ulint		trx_id_pos;	\/*!< position of trx-id column. *\/$/;"	m	struct:redo_page_compress_t
trx_id_t	include/trx0types.h	/^typedef ib_id_t	trx_id_t;$/;"	t
trx_ids_t	include/trx0types.h	/^typedef std::vector<trx_id_t, ut_allocator<trx_id_t> >	trx_ids_t;$/;"	t
trx_if_known	include/btr0pcur.h	/^	trx_t*		trx_if_known;$/;"	m	struct:btr_pcur_t
trx_in_rw_trx_list	trx/trx0sys.cc	/^trx_in_rw_trx_list($/;"	f
trx_init	trx/trx0trx.cc	/^trx_init($/;"	f	file:
trx_is_ac_nl_ro	include/trx0trx.h	615;"	d
trx_is_autocommit_non_locking	include/trx0i_s.h	/^	ulint		trx_is_autocommit_non_locking;$/;"	m	struct:i_s_trx_row_t
trx_is_autocommit_non_locking	include/trx0trx.h	607;"	d
trx_is_high_priority	include/trx0trx.ic	/^trx_is_high_priority(const trx_t* trx)$/;"	f
trx_is_interrupted	handler/ha_innodb.cc	/^trx_is_interrupted($/;"	f
trx_is_interrupted	include/trx0trx.h	464;"	d
trx_is_noredo_rseg_updated	include/trx0trx.ic	/^trx_is_noredo_rseg_updated($/;"	f
trx_is_read_only	include/trx0i_s.h	/^	ulint		trx_is_read_only;$/;"	m	struct:i_s_trx_row_t
trx_is_recv	trx/trx0roll.cc	/^trx_is_recv($/;"	f
trx_is_redo_rseg_updated	include/trx0trx.ic	/^trx_is_redo_rseg_updated($/;"	f
trx_is_referenced	include/trx0trx.h	558;"	d
trx_is_registered_for_2pc	handler/ha_innodb.cc	/^trx_is_registered_for_2pc($/;"	f	file:
trx_is_rseg_assigned	include/trx0trx.ic	/^trx_is_rseg_assigned($/;"	f
trx_is_rseg_updated	include/trx0trx.ic	/^trx_is_rseg_updated($/;"	f
trx_is_started	include/trx0trx.h	/^trx_is_started($/;"	f
trx_is_strict	handler/ha_innodb.cc	/^trx_is_strict($/;"	f
trx_isolation_level	include/trx0i_s.h	/^	const char*	trx_isolation_level;$/;"	m	struct:i_s_trx_row_t
trx_kill_blocking	trx/trx0trx.cc	/^trx_kill_blocking(trx_t* trx)$/;"	f
trx_list	include/trx0trx.h	/^			trx_list;	\/*!< list of transactions;$/;"	m	struct:trx_t
trx_lists_init_at_db_start	trx/trx0trx.cc	/^trx_lists_init_at_db_start(void)$/;"	f
trx_lock_list_t	include/lock0types.h	/^typedef UT_LIST_BASE_NODE_T(lock_t) trx_lock_list_t;$/;"	t
trx_lock_memory_bytes	include/trx0i_s.h	/^	ulint		trx_lock_memory_bytes;$/;"	m	struct:i_s_trx_row_t
trx_lock_structs	include/trx0i_s.h	/^	ulint		trx_lock_structs;\/*!< list len of trx_locks in$/;"	m	struct:i_s_trx_row_t
trx_lock_t	include/trx0trx.h	/^struct trx_lock_t {$/;"	s
trx_lock_wait_timeout_get	include/trx0trx.h	597;"	d
trx_locks	include/lock0priv.h	/^			trx_locks;	\/*!< list of the locks of the$/;"	m	struct:lock_t
trx_locks	include/trx0trx.h	/^	trx_lock_list_t trx_locks;	\/*!< locks requested by the transaction;$/;"	m	struct:trx_lock_t
trx_mark_sql_stat_end	trx/trx0trx.cc	/^trx_mark_sql_stat_end($/;"	f
trx_mod_tables_t	include/trx0trx.h	/^	ut_allocator<dict_table_t*> >	trx_mod_tables_t;$/;"	t
trx_mutex_enter	include/trx0trx.h	1349;"	d
trx_mutex_exit	include/trx0trx.h	1354;"	d
trx_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	trx_mutex_key;$/;"	v
trx_mutex_own	include/trx0trx.h	1346;"	d
trx_mysql_thread_id	include/trx0i_s.h	/^	ulint		trx_mysql_thread_id; \/*!< thd_get_thread_id() *\/$/;"	m	struct:i_s_trx_row_t
trx_named_savept_t	include/trx0roll.h	/^struct trx_named_savept_t{$/;"	s
trx_no	include/trx0purge.h	/^	trx_id_t	trx_no;		\/*!< Purge has advanced past all$/;"	m	struct:purge_iter_t
trx_operation_state	include/trx0i_s.h	/^	const char*	trx_operation_state; \/*!< trx_t::op_info *\/$/;"	m	struct:i_s_trx_row_t
trx_pool_close	trx/trx0trx.cc	/^trx_pool_close()$/;"	f
trx_pool_init	trx/trx0trx.cc	/^trx_pool_init()$/;"	f
trx_pool_manager_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	trx_pool_manager_mutex_key;$/;"	v
trx_pool_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	trx_pool_mutex_key;$/;"	v
trx_pool_t	trx/trx0trx.cc	/^typedef Pool<trx_t, TrxFactory, TrxPoolLock> trx_pool_t;$/;"	t	file:
trx_pools	trx/trx0trx.cc	/^static trx_pools_t* trx_pools;$/;"	v	file:
trx_pools_t	trx/trx0trx.cc	/^typedef PoolManager<trx_pool_t, TrxPoolManagerLock > trx_pools_t;$/;"	t	file:
trx_prepare	trx/trx0trx.cc	/^trx_prepare($/;"	f	file:
trx_prepare_for_mysql	trx/trx0trx.cc	/^trx_prepare_for_mysql(trx_t* trx)$/;"	f
trx_prepare_low	trx/trx0trx.cc	/^trx_prepare_low($/;"	f	file:
trx_print	trx/trx0trx.cc	/^trx_print($/;"	f
trx_print_latched	trx/trx0trx.cc	/^trx_print_latched($/;"	f
trx_print_low	trx/trx0trx.cc	/^trx_print_low($/;"	f
trx_purge	trx/trx0purge.cc	/^trx_purge($/;"	f
trx_purge_add_update_undo_to_history	trx/trx0purge.cc	/^trx_purge_add_update_undo_to_history($/;"	f
trx_purge_attach_undo_recs	trx/trx0purge.cc	/^trx_purge_attach_undo_recs($/;"	f	file:
trx_purge_check_limit	include/trx0purge.ic	/^trx_purge_check_limit(void)$/;"	f
trx_purge_choose_next_log	trx/trx0purge.cc	/^trx_purge_choose_next_log(void)$/;"	f	file:
trx_purge_cleanse_purge_queue	trx/trx0purge.cc	/^trx_purge_cleanse_purge_queue($/;"	f	file:
trx_purge_dml_delay	trx/trx0purge.cc	/^trx_purge_dml_delay(void)$/;"	f	file:
trx_purge_dummy_rec	trx/trx0purge.cc	/^trx_undo_rec_t	trx_purge_dummy_rec;$/;"	v
trx_purge_fetch_next_rec	trx/trx0purge.cc	/^trx_purge_fetch_next_rec($/;"	f
trx_purge_free_segment	trx/trx0purge.cc	/^trx_purge_free_segment($/;"	f	file:
trx_purge_get_log_from_hist	include/trx0purge.ic	/^trx_purge_get_log_from_hist($/;"	f
trx_purge_get_next_rec	trx/trx0purge.cc	/^trx_purge_get_next_rec($/;"	f	file:
trx_purge_graph_build	trx/trx0purge.cc	/^trx_purge_graph_build($/;"	f	file:
trx_purge_initiate_truncate	trx/trx0purge.cc	/^trx_purge_initiate_truncate($/;"	f	file:
trx_purge_latch_key	sync/sync0sync.cc	/^mysql_pfs_key_t	trx_purge_latch_key;$/;"	v
trx_purge_mark_undo_for_truncate	trx/trx0purge.cc	/^trx_purge_mark_undo_for_truncate($/;"	f	file:
trx_purge_read_undo_rec	trx/trx0purge.cc	/^trx_purge_read_undo_rec($/;"	f	file:
trx_purge_rec_t	include/trx0purge.h	/^struct trx_purge_rec_t {$/;"	s
trx_purge_remove_log_hdr	trx/trx0purge.cc	/^trx_purge_remove_log_hdr($/;"	f	file:
trx_purge_rseg_get_next_history_log	trx/trx0purge.cc	/^trx_purge_rseg_get_next_history_log($/;"	f	file:
trx_purge_run	trx/trx0purge.cc	/^trx_purge_run(void)$/;"	f
trx_purge_state	trx/trx0purge.cc	/^trx_purge_state(void)$/;"	f
trx_purge_stop	trx/trx0purge.cc	/^trx_purge_stop(void)$/;"	f
trx_purge_sys_close	trx/trx0purge.cc	/^trx_purge_sys_close(void)$/;"	f
trx_purge_sys_create	trx/trx0purge.cc	/^trx_purge_sys_create($/;"	f
trx_purge_t	include/trx0purge.h	/^struct trx_purge_t{$/;"	s
trx_purge_truncate	trx/trx0purge.cc	/^trx_purge_truncate(void)$/;"	f	file:
trx_purge_truncate_history	trx/trx0purge.cc	/^trx_purge_truncate_history($/;"	f	file:
trx_purge_truncate_rseg_history	trx/trx0purge.cc	/^trx_purge_truncate_rseg_history($/;"	f	file:
trx_purge_wait_for_workers_to_complete	trx/trx0purge.cc	/^trx_purge_wait_for_workers_to_complete($/;"	f	file:
trx_que_t	include/trx0types.h	/^enum trx_que_t {$/;"	g
trx_query	include/trx0i_s.h	/^	const char*	trx_query;	\/*!< MySQL statement being$/;"	m	struct:i_s_trx_row_t
trx_query_cs	include/trx0i_s.h	/^	CHARSET_INFO*	trx_query_cs;	\/*!< the charset of trx_query *\/$/;"	m	struct:i_s_trx_row_t
trx_read_roll_ptr	include/trx0undo.ic	/^trx_read_roll_ptr($/;"	f
trx_read_trx_id	include/trx0sys.ic	/^trx_read_trx_id($/;"	f
trx_recover_for_mysql	trx/trx0trx.cc	/^trx_recover_for_mysql($/;"	f
trx_ref_count	include/trx0rseg.h	/^	ulint				trx_ref_count;$/;"	m	struct:trx_rseg_t
trx_reference	include/trx0trx.ic	/^trx_reference($/;"	f
trx_register_for_2pc	handler/ha_innodb.cc	/^trx_register_for_2pc($/;"	f	file:
trx_release_reference	include/trx0trx.ic	/^trx_release_reference($/;"	f
trx_release_savepoint_for_mysql	trx/trx0roll.cc	/^trx_release_savepoint_for_mysql($/;"	f
trx_resurrect_insert	trx/trx0trx.cc	/^trx_resurrect_insert($/;"	f	file:
trx_resurrect_table_locks	trx/trx0trx.cc	/^trx_resurrect_table_locks($/;"	f	file:
trx_resurrect_update	trx/trx0trx.cc	/^trx_resurrect_update($/;"	f	file:
trx_resurrect_update_in_prepared_state	trx/trx0trx.cc	/^trx_resurrect_update_in_prepared_state($/;"	f	file:
trx_roll_check_undo_rec_ordering	include/trx0roll.ic	/^trx_roll_check_undo_rec_ordering($/;"	f
trx_roll_crash_recv_trx	trx/trx0roll.cc	/^static const trx_t*	trx_roll_crash_recv_trx	= NULL;$/;"	v	file:
trx_roll_graph_build	trx/trx0roll.cc	/^trx_roll_graph_build($/;"	f	file:
trx_roll_max_undo_no	trx/trx0roll.cc	/^static undo_no_t	trx_roll_max_undo_no;$/;"	v	file:
trx_roll_pop_top_rec	trx/trx0roll.cc	/^trx_roll_pop_top_rec($/;"	f	file:
trx_roll_pop_top_rec_of_trx	trx/trx0roll.cc	/^trx_roll_pop_top_rec_of_trx($/;"	f
trx_roll_pop_top_rec_of_trx_low	trx/trx0roll.cc	/^trx_roll_pop_top_rec_of_trx_low($/;"	f
trx_roll_progress_printed_pct	trx/trx0roll.cc	/^static ulint		trx_roll_progress_printed_pct;$/;"	v	file:
trx_roll_savepoint_free	trx/trx0roll.cc	/^trx_roll_savepoint_free($/;"	f	file:
trx_roll_savepoints_free	trx/trx0roll.cc	/^trx_roll_savepoints_free($/;"	f
trx_roll_try_truncate	trx/trx0roll.cc	/^trx_roll_try_truncate($/;"	f	file:
trx_rollback	lock/lock0lock.cc	/^DeadlockChecker::trx_rollback()$/;"	f	class:DeadlockChecker
trx_rollback_active	trx/trx0roll.cc	/^trx_rollback_active($/;"	f	file:
trx_rollback_clean_thread_key	log/log0recv.cc	/^mysql_pfs_key_t	trx_rollback_clean_thread_key;$/;"	v
trx_rollback_finish	trx/trx0roll.cc	/^trx_rollback_finish($/;"	f	file:
trx_rollback_for_mysql	trx/trx0roll.cc	/^trx_rollback_for_mysql($/;"	f
trx_rollback_for_mysql_low	trx/trx0roll.cc	/^trx_rollback_for_mysql_low($/;"	f	file:
trx_rollback_last_sql_stat_for_mysql	trx/trx0roll.cc	/^trx_rollback_last_sql_stat_for_mysql($/;"	f
trx_rollback_low	trx/trx0roll.cc	/^trx_rollback_low($/;"	f	file:
trx_rollback_or_clean_all_recovered	trx/trx0roll.cc	/^DECLARE_THREAD(trx_rollback_or_clean_all_recovered)($/;"	f
trx_rollback_or_clean_is_active	trx/trx0roll.cc	/^bool			trx_rollback_or_clean_is_active;$/;"	v
trx_rollback_or_clean_recovered	trx/trx0roll.cc	/^trx_rollback_or_clean_recovered($/;"	f
trx_rollback_resurrected	trx/trx0roll.cc	/^trx_rollback_resurrected($/;"	f	file:
trx_rollback_start	trx/trx0roll.cc	/^trx_rollback_start($/;"	f	file:
trx_rollback_step	trx/trx0roll.cc	/^trx_rollback_step($/;"	f
trx_rollback_to_savepoint	trx/trx0roll.cc	/^trx_rollback_to_savepoint($/;"	f
trx_rollback_to_savepoint_for_mysql	trx/trx0roll.cc	/^trx_rollback_to_savepoint_for_mysql($/;"	f
trx_rollback_to_savepoint_for_mysql_low	trx/trx0roll.cc	/^trx_rollback_to_savepoint_for_mysql_low($/;"	f
trx_rollback_to_savepoint_low	trx/trx0roll.cc	/^trx_rollback_to_savepoint_low($/;"	f	file:
trx_rows_locked	include/trx0i_s.h	/^	ulint		trx_rows_locked;\/*!< lock_number_of_rows_locked() *\/$/;"	m	struct:i_s_trx_row_t
trx_rows_modified	include/trx0i_s.h	/^	uintmax_t	trx_rows_modified;\/*!< trx_t::undo_no *\/$/;"	m	struct:i_s_trx_row_t
trx_rseg_array_init	trx/trx0rseg.cc	/^trx_rseg_array_init($/;"	f
trx_rseg_create	trx/trx0rseg.cc	/^trx_rseg_create($/;"	f
trx_rseg_create_instance	trx/trx0rseg.cc	/^trx_rseg_create_instance($/;"	f	file:
trx_rseg_get_n_undo_tablespaces	trx/trx0rseg.cc	/^trx_rseg_get_n_undo_tablespaces($/;"	f
trx_rseg_get_on_id	include/trx0rseg.ic	/^trx_rseg_get_on_id($/;"	f
trx_rseg_header_create	trx/trx0rseg.cc	/^trx_rseg_header_create($/;"	f
trx_rseg_mem_create	trx/trx0rseg.cc	/^trx_rseg_mem_create($/;"	f	file:
trx_rseg_mem_free	trx/trx0rseg.cc	/^trx_rseg_mem_free($/;"	f
trx_rseg_n_slots_debug	trx/trx0sys.cc	/^uint	trx_rseg_n_slots_debug = 0;$/;"	v
trx_rseg_schedule_pending_purge	trx/trx0rseg.cc	/^trx_rseg_schedule_pending_purge($/;"	f	file:
trx_rseg_t	include/trx0rseg.h	/^struct trx_rseg_t {$/;"	s
trx_rseg_type_t	include/trx0trx.h	/^enum trx_rseg_type_t {$/;"	g
trx_rsegf_get	include/trx0rseg.ic	/^trx_rsegf_get($/;"	f
trx_rsegf_get_new	include/trx0rseg.ic	/^trx_rsegf_get_new($/;"	f
trx_rsegf_get_nth_undo	include/trx0rseg.ic	/^trx_rsegf_get_nth_undo($/;"	f
trx_rsegf_set_nth_undo	include/trx0rseg.ic	/^trx_rsegf_set_nth_undo($/;"	f
trx_rsegf_t	include/trx0types.h	/^typedef byte	trx_rsegf_t;$/;"	t
trx_rsegf_undo_find_free	include/trx0rseg.ic	/^trx_rsegf_undo_find_free($/;"	f
trx_rsegs_t	include/trx0trx.h	/^struct trx_rsegs_t {$/;"	s
trx_rsegs_t	include/trx0types.h	/^		trx_rsegs_t;$/;"	t	class:TrxUndoRsegs
trx_rw_is_active	include/trx0sys.ic	/^trx_rw_is_active($/;"	f
trx_rw_is_active_low	include/trx0sys.ic	/^trx_rw_is_active_low($/;"	f
trx_rw_min_trx_id	include/trx0sys.ic	/^trx_rw_min_trx_id(void)$/;"	f
trx_rw_min_trx_id_low	include/trx0sys.ic	/^trx_rw_min_trx_id_low(void)$/;"	f
trx_savepoint_find	trx/trx0roll.cc	/^trx_savepoint_find($/;"	f	file:
trx_savepoint_for_mysql	trx/trx0roll.cc	/^trx_savepoint_for_mysql($/;"	f
trx_savepoints	include/trx0roll.h	/^			trx_savepoints;	\/*!< the list of savepoints of a$/;"	m	struct:trx_named_savept_t
trx_savepoints	include/trx0trx.h	/^			trx_savepoints;	\/*!< savepoints set with SAVEPOINT ...,$/;"	m	struct:trx_t
trx_savept_t	include/trx0types.h	/^struct trx_savept_t{$/;"	s
trx_savept_take	trx/trx0roll.cc	/^trx_savept_take($/;"	f
trx_search_latch_release_if_reserved	include/trx0trx.ic	/^trx_search_latch_release_if_reserved(trx_t* trx)$/;"	f
trx_serialisation_number_get	trx/trx0trx.cc	/^trx_serialisation_number_get($/;"	f	file:
trx_set_detailed_error	trx/trx0trx.cc	/^trx_set_detailed_error($/;"	f
trx_set_detailed_error_from_file	trx/trx0trx.cc	/^trx_set_detailed_error_from_file($/;"	f
trx_set_dict_operation	include/trx0trx.ic	/^trx_set_dict_operation($/;"	f
trx_set_flush_observer	trx/trx0trx.cc	/^trx_set_flush_observer($/;"	f
trx_set_rw_mode	trx/trx0trx.cc	/^trx_set_rw_mode($/;"	f
trx_start_for_ddl	include/trx0trx.h	233;"	d
trx_start_for_ddl	include/trx0trx.h	241;"	d
trx_start_for_ddl_low	trx/trx0trx.cc	/^trx_start_for_ddl_low($/;"	f
trx_start_if_not_started	include/trx0trx.h	190;"	d
trx_start_if_not_started	include/trx0trx.h	211;"	d
trx_start_if_not_started_low	trx/trx0trx.cc	/^trx_start_if_not_started_low($/;"	f
trx_start_if_not_started_xa	include/trx0trx.h	183;"	d
trx_start_if_not_started_xa	include/trx0trx.h	220;"	d
trx_start_if_not_started_xa_low	trx/trx0trx.cc	/^trx_start_if_not_started_xa_low($/;"	f
trx_start_internal	include/trx0trx.h	197;"	d
trx_start_internal	include/trx0trx.h	214;"	d
trx_start_internal_low	trx/trx0trx.cc	/^trx_start_internal_low($/;"	f
trx_start_internal_read_only	include/trx0trx.h	204;"	d
trx_start_internal_read_only	include/trx0trx.h	217;"	d
trx_start_internal_read_only_low	trx/trx0trx.cc	/^trx_start_internal_read_only_low($/;"	f
trx_start_low	trx/trx0trx.cc	/^trx_start_low($/;"	f	file:
trx_started	include/trx0i_s.h	/^	ib_time_t		trx_started;	\/*!< trx_t::start_time *\/$/;"	m	struct:i_s_trx_row_t
trx_state	include/trx0i_s.h	/^	const char*		trx_state;	\/*!< transaction state from$/;"	m	struct:i_s_trx_row_t
trx_state_eq	include/trx0trx.ic	/^trx_state_eq($/;"	f
trx_state_t	include/trx0types.h	/^enum trx_state_t {$/;"	g
trx_sys	trx/trx0sys.cc	/^trx_sys_t*		trx_sys		= NULL;$/;"	v
trx_sys_any_active_transactions	trx/trx0sys.cc	/^trx_sys_any_active_transactions(void)$/;"	f
trx_sys_close	trx/trx0sys.cc	/^trx_sys_close(void)$/;"	f
trx_sys_create	trx/trx0sys.cc	/^trx_sys_create(void)$/;"	f
trx_sys_create_noredo_rsegs	trx/trx0sys.cc	/^trx_sys_create_noredo_rsegs($/;"	f	file:
trx_sys_create_rsegs	trx/trx0sys.cc	/^trx_sys_create_rsegs($/;"	f
trx_sys_create_sys_pages	trx/trx0sys.cc	/^trx_sys_create_sys_pages(void)$/;"	f
trx_sys_file_format_close	trx/trx0sys.cc	/^trx_sys_file_format_close(void)$/;"	f
trx_sys_file_format_id_to_name	trx/trx0sys.cc	/^trx_sys_file_format_id_to_name($/;"	f
trx_sys_file_format_init	trx/trx0sys.cc	/^trx_sys_file_format_init(void)$/;"	f
trx_sys_file_format_max_check	trx/trx0sys.cc	/^trx_sys_file_format_max_check($/;"	f
trx_sys_file_format_max_get	trx/trx0sys.cc	/^trx_sys_file_format_max_get(void)$/;"	f
trx_sys_file_format_max_read	trx/trx0sys.cc	/^trx_sys_file_format_max_read(void)$/;"	f	file:
trx_sys_file_format_max_set	trx/trx0sys.cc	/^trx_sys_file_format_max_set($/;"	f
trx_sys_file_format_max_upgrade	trx/trx0sys.cc	/^trx_sys_file_format_max_upgrade($/;"	f
trx_sys_file_format_max_write	trx/trx0sys.cc	/^trx_sys_file_format_max_write($/;"	f	file:
trx_sys_file_format_tag_init	trx/trx0sys.cc	/^trx_sys_file_format_tag_init(void)$/;"	f
trx_sys_flush_max_trx_id	trx/trx0sys.cc	/^trx_sys_flush_max_trx_id(void)$/;"	f
trx_sys_get_max_trx_id	include/trx0sys.ic	/^trx_sys_get_max_trx_id(void)$/;"	f
trx_sys_get_n_rw_trx	include/trx0sys.ic	/^trx_sys_get_n_rw_trx(void)$/;"	f
trx_sys_get_new_trx_id	include/trx0sys.ic	/^trx_sys_get_new_trx_id()$/;"	f
trx_sys_get_nth_rseg	include/trx0sys.ic	/^trx_sys_get_nth_rseg($/;"	f
trx_sys_hdr_page	include/trx0sys.ic	/^trx_sys_hdr_page($/;"	f
trx_sys_init_at_db_start	trx/trx0sys.cc	/^trx_sys_init_at_db_start(void)$/;"	f
trx_sys_is_noredo_rseg_slot	include/trx0sys.ic	/^trx_sys_is_noredo_rseg_slot($/;"	f
trx_sys_mutex_enter	include/trx0sys.h	656;"	d
trx_sys_mutex_exit	include/trx0sys.h	661;"	d
trx_sys_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	trx_sys_mutex_key;$/;"	v
trx_sys_mutex_own	include/trx0sys.h	653;"	d
trx_sys_print_mysql_binlog_offset	trx/trx0sys.cc	/^trx_sys_print_mysql_binlog_offset(void)$/;"	f
trx_sys_print_mysql_binlog_offset_from_page	trx/trx0sys.cc	/^trx_sys_print_mysql_binlog_offset_from_page($/;"	f
trx_sys_read_file_format_id	trx/trx0sys.cc	/^trx_sys_read_file_format_id($/;"	f
trx_sys_read_pertable_file_format_id	trx/trx0sys.cc	/^trx_sys_read_pertable_file_format_id($/;"	f
trx_sys_rw_trx_add	include/trx0sys.ic	/^trx_sys_rw_trx_add(trx_t* trx)$/;"	f
trx_sys_t	include/trx0sys.h	/^struct trx_sys_t {$/;"	s
trx_sys_update_mysql_binlog_offset	trx/trx0sys.cc	/^trx_sys_update_mysql_binlog_offset($/;"	f
trx_sys_validate_trx_list	trx/trx0sys.cc	/^trx_sys_validate_trx_list()$/;"	f
trx_sys_validate_trx_list_low	trx/trx0sys.cc	/^trx_sys_validate_trx_list_low($/;"	f	file:
trx_sysf_create	trx/trx0sys.cc	/^trx_sysf_create($/;"	f	file:
trx_sysf_get	include/trx0sys.ic	/^trx_sysf_get($/;"	f
trx_sysf_rseg_find_free	trx/trx0sys.cc	/^trx_sysf_rseg_find_free($/;"	f
trx_sysf_rseg_get_page_no	include/trx0sys.ic	/^trx_sysf_rseg_get_page_no($/;"	f
trx_sysf_rseg_get_space	include/trx0sys.ic	/^trx_sysf_rseg_get_space($/;"	f
trx_sysf_rseg_set_page_no	include/trx0sys.ic	/^trx_sysf_rseg_set_page_no($/;"	f
trx_sysf_rseg_set_space	include/trx0sys.ic	/^trx_sysf_rseg_set_space($/;"	f
trx_sysf_rseg_t	include/trx0sys.ic	/^typedef byte	trx_sysf_rseg_t;$/;"	t	file:
trx_sysf_t	include/trx0types.h	/^typedef byte	trx_sysf_t;$/;"	t
trx_sysf_used_slots_for_redo_rseg	trx/trx0sys.cc	/^trx_sysf_used_slots_for_redo_rseg($/;"	f	file:
trx_t	include/trx0trx.h	/^struct trx_t {$/;"	s
trx_tables_in_use	include/trx0i_s.h	/^	ulint		trx_tables_in_use;\/*!< n_mysql_tables_in_use in$/;"	m	struct:i_s_trx_row_t
trx_tables_locked	include/trx0i_s.h	/^	ulint		trx_tables_locked;$/;"	m	struct:i_s_trx_row_t
trx_thrs	include/que0que.h	/^			trx_thrs;	\/*!< lists of threads in wait list of$/;"	m	struct:que_thr_t
trx_ulogf_t	include/trx0types.h	/^typedef byte	trx_ulogf_t;$/;"	t
trx_undo_add_page	trx/trx0undo.cc	/^trx_undo_add_page($/;"	f
trx_undo_assign_undo	trx/trx0undo.cc	/^trx_undo_assign_undo($/;"	f
trx_undo_build_roll_ptr	include/trx0undo.ic	/^trx_undo_build_roll_ptr($/;"	f
trx_undo_create	trx/trx0undo.cc	/^trx_undo_create($/;"	f
trx_undo_decode_roll_ptr	include/trx0undo.ic	/^trx_undo_decode_roll_ptr($/;"	f
trx_undo_discard_latest_log	trx/trx0undo.cc	/^trx_undo_discard_latest_log($/;"	f
trx_undo_discard_latest_log	trx/trx0undo.cc	836;"	d	file:
trx_undo_discard_latest_update_undo	trx/trx0undo.cc	/^trx_undo_discard_latest_update_undo($/;"	f	file:
trx_undo_empty_header_page	trx/trx0undo.cc	/^trx_undo_empty_header_page($/;"	f	file:
trx_undo_erase_page_end	trx/trx0rec.cc	/^trx_undo_erase_page_end($/;"	f
trx_undo_fake_prepared	trx/trx0sys.cc	/^trx_undo_fake_prepared($/;"	f	file:
trx_undo_free_last_page	include/trx0undo.h	238;"	d
trx_undo_free_last_page	include/trx0undo.h	241;"	d
trx_undo_free_last_page_func	trx/trx0undo.cc	/^trx_undo_free_last_page_func($/;"	f
trx_undo_free_page	trx/trx0undo.cc	/^trx_undo_free_page($/;"	f	file:
trx_undo_free_prepared	trx/trx0undo.cc	/^trx_undo_free_prepared($/;"	f
trx_undo_get_first_rec	trx/trx0undo.cc	/^trx_undo_get_first_rec($/;"	f
trx_undo_get_mbr_from_ext	trx/trx0rec.cc	/^trx_undo_get_mbr_from_ext($/;"	f	file:
trx_undo_get_next_rec	trx/trx0undo.cc	/^trx_undo_get_next_rec($/;"	f
trx_undo_get_next_rec_from_next_page	trx/trx0undo.cc	/^trx_undo_get_next_rec_from_next_page($/;"	f	file:
trx_undo_get_prev_rec	trx/trx0undo.cc	/^trx_undo_get_prev_rec($/;"	f
trx_undo_get_prev_rec_from_prev_page	trx/trx0undo.cc	/^trx_undo_get_prev_rec_from_prev_page($/;"	f	file:
trx_undo_get_undo_rec	trx/trx0rec.cc	/^trx_undo_get_undo_rec($/;"	f
trx_undo_get_undo_rec_low	trx/trx0rec.cc	/^trx_undo_get_undo_rec_low($/;"	f
trx_undo_header_add_space_for_xid	trx/trx0undo.cc	/^trx_undo_header_add_space_for_xid($/;"	f	file:
trx_undo_header_create	trx/trx0undo.cc	/^trx_undo_header_create($/;"	f	file:
trx_undo_header_create_log	trx/trx0undo.cc	/^trx_undo_header_create_log($/;"	f
trx_undo_header_create_log	trx/trx0undo.cc	547;"	d	file:
trx_undo_insert_cleanup	trx/trx0undo.cc	/^trx_undo_insert_cleanup($/;"	f
trx_undo_insert_header_reuse	trx/trx0undo.cc	/^trx_undo_insert_header_reuse($/;"	f	file:
trx_undo_insert_header_reuse_log	trx/trx0undo.cc	/^trx_undo_insert_header_reuse_log($/;"	f
trx_undo_insert_header_reuse_log	trx/trx0undo.cc	726;"	d	file:
trx_undo_left	trx/trx0rec.cc	/^trx_undo_left($/;"	f
trx_undo_lists_init	trx/trx0undo.cc	/^trx_undo_lists_init($/;"	f
trx_undo_log_v_idx	trx/trx0rec.cc	/^trx_undo_log_v_idx($/;"	f	file:
trx_undo_mark_as_dict_operation	trx/trx0undo.cc	/^trx_undo_mark_as_dict_operation($/;"	f	file:
trx_undo_mem_create	trx/trx0undo.cc	/^trx_undo_mem_create($/;"	f	file:
trx_undo_mem_create_at_db_start	trx/trx0undo.cc	/^trx_undo_mem_create_at_db_start($/;"	f	file:
trx_undo_mem_free	trx/trx0undo.cc	/^trx_undo_mem_free($/;"	f
trx_undo_mem_init_for_reuse	trx/trx0undo.cc	/^trx_undo_mem_init_for_reuse($/;"	f	file:
trx_undo_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t	trx_undo_mutex_key;$/;"	v
trx_undo_page_fetch_ext	trx/trx0rec.cc	/^trx_undo_page_fetch_ext($/;"	f	file:
trx_undo_page_get	include/trx0undo.ic	/^trx_undo_page_get($/;"	f
trx_undo_page_get_end	include/trx0undo.ic	/^trx_undo_page_get_end($/;"	f
trx_undo_page_get_first_rec	include/trx0undo.ic	/^trx_undo_page_get_first_rec($/;"	f
trx_undo_page_get_last_rec	include/trx0undo.ic	/^trx_undo_page_get_last_rec($/;"	f
trx_undo_page_get_next_rec	include/trx0undo.ic	/^trx_undo_page_get_next_rec($/;"	f
trx_undo_page_get_prev_rec	include/trx0undo.ic	/^trx_undo_page_get_prev_rec($/;"	f
trx_undo_page_get_s_latched	include/trx0undo.ic	/^trx_undo_page_get_s_latched($/;"	f
trx_undo_page_get_start	include/trx0undo.ic	/^trx_undo_page_get_start($/;"	f
trx_undo_page_init	trx/trx0undo.cc	/^trx_undo_page_init($/;"	f	file:
trx_undo_page_init_log	trx/trx0undo.cc	/^trx_undo_page_init_log($/;"	f
trx_undo_page_init_log	trx/trx0undo.cc	378;"	d	file:
trx_undo_page_report_insert	trx/trx0rec.cc	/^trx_undo_page_report_insert($/;"	f	file:
trx_undo_page_report_modify	trx/trx0rec.cc	/^trx_undo_page_report_modify($/;"	f	file:
trx_undo_page_report_modify_ext	trx/trx0rec.cc	/^trx_undo_page_report_modify_ext($/;"	f	file:
trx_undo_page_set_next_prev_and_add	trx/trx0rec.cc	/^trx_undo_page_set_next_prev_and_add($/;"	f	file:
trx_undo_parse_add_undo_rec	trx/trx0rec.cc	/^trx_undo_parse_add_undo_rec($/;"	f
trx_undo_parse_discard_latest	trx/trx0undo.cc	/^trx_undo_parse_discard_latest($/;"	f
trx_undo_parse_erase_page_end	trx/trx0rec.cc	/^trx_undo_parse_erase_page_end($/;"	f
trx_undo_parse_page_header	trx/trx0undo.cc	/^trx_undo_parse_page_header($/;"	f
trx_undo_parse_page_init	trx/trx0undo.cc	/^trx_undo_parse_page_init($/;"	f
trx_undo_prev_version_build	trx/trx0rec.cc	/^trx_undo_prev_version_build($/;"	f
trx_undo_ptr_t	include/trx0trx.h	/^struct trx_undo_ptr_t {$/;"	s
trx_undo_read_v_cols	trx/trx0rec.cc	/^trx_undo_read_v_cols($/;"	f
trx_undo_read_v_idx	trx/trx0rec.cc	/^trx_undo_read_v_idx($/;"	f
trx_undo_read_v_idx_low	trx/trx0rec.cc	/^trx_undo_read_v_idx_low($/;"	f	file:
trx_undo_read_xid	trx/trx0undo.cc	/^trx_undo_read_xid($/;"	f	file:
trx_undo_rec_copy	include/trx0rec.ic	/^trx_undo_rec_copy($/;"	f
trx_undo_rec_get_cmpl_info	include/trx0rec.ic	/^trx_undo_rec_get_cmpl_info($/;"	f
trx_undo_rec_get_col_val	trx/trx0rec.cc	/^trx_undo_rec_get_col_val($/;"	f
trx_undo_rec_get_extern_storage	include/trx0rec.ic	/^trx_undo_rec_get_extern_storage($/;"	f
trx_undo_rec_get_pars	trx/trx0rec.cc	/^trx_undo_rec_get_pars($/;"	f
trx_undo_rec_get_partial_row	trx/trx0rec.cc	/^trx_undo_rec_get_partial_row($/;"	f
trx_undo_rec_get_ptr	include/trx0rec.h	86;"	d
trx_undo_rec_get_row_ref	trx/trx0rec.cc	/^trx_undo_rec_get_row_ref($/;"	f
trx_undo_rec_get_type	include/trx0rec.ic	/^trx_undo_rec_get_type($/;"	f
trx_undo_rec_get_undo_no	include/trx0rec.ic	/^trx_undo_rec_get_undo_no($/;"	f
trx_undo_rec_skip_row_ref	trx/trx0rec.cc	/^trx_undo_rec_skip_row_ref($/;"	f
trx_undo_rec_t	include/trx0types.h	/^typedef	byte	trx_undo_rec_t;$/;"	t
trx_undo_report_insert_virtual	trx/trx0rec.cc	/^trx_undo_report_insert_virtual($/;"	f	file:
trx_undo_report_row_operation	trx/trx0rec.cc	/^trx_undo_report_row_operation($/;"	f
trx_undo_reuse_cached	trx/trx0undo.cc	/^trx_undo_reuse_cached($/;"	f	file:
trx_undo_roll_ptr_is_insert	include/trx0undo.ic	/^trx_undo_roll_ptr_is_insert($/;"	f
trx_undo_seg_free	trx/trx0undo.cc	/^trx_undo_seg_free($/;"	f	file:
trx_undo_set_state_at_finish	trx/trx0undo.cc	/^trx_undo_set_state_at_finish($/;"	f
trx_undo_set_state_at_prepare	trx/trx0undo.cc	/^trx_undo_set_state_at_prepare($/;"	f
trx_undo_t	include/trx0undo.h	/^struct trx_undo_t {$/;"	s
trx_undo_truncate_end	include/trx0undo.h	258;"	d
trx_undo_truncate_end	include/trx0undo.h	261;"	d
trx_undo_truncate_end_func	trx/trx0undo.cc	/^trx_undo_truncate_end_func($/;"	f
trx_undo_truncate_start	trx/trx0undo.cc	/^trx_undo_truncate_start($/;"	f
trx_undo_truncate_tablespace	trx/trx0undo.cc	/^trx_undo_truncate_tablespace($/;"	f
trx_undo_trx_id_is_insert	include/trx0undo.ic	/^trx_undo_trx_id_is_insert($/;"	f
trx_undo_update_cleanup	trx/trx0undo.cc	/^trx_undo_update_cleanup($/;"	f
trx_undo_update_rec_get_sys_cols	trx/trx0rec.cc	/^trx_undo_update_rec_get_sys_cols($/;"	f
trx_undo_update_rec_get_update	trx/trx0rec.cc	/^trx_undo_update_rec_get_update($/;"	f
trx_undo_write_xid	trx/trx0undo.cc	/^trx_undo_write_xid($/;"	f	file:
trx_undof_page_add_undo_rec_log	trx/trx0rec.cc	/^trx_undof_page_add_undo_rec_log($/;"	f
trx_unique_checks	include/trx0i_s.h	/^	ibool		trx_unique_checks;$/;"	m	struct:i_s_trx_row_t
trx_upagef_t	include/trx0types.h	/^typedef byte	trx_upagef_t;$/;"	t
trx_update_mod_tables_timestamp	trx/trx0trx.cc	/^trx_update_mod_tables_timestamp($/;"	f	file:
trx_usegf_t	include/trx0types.h	/^typedef byte	trx_usegf_t;$/;"	t
trx_ut_list_t	include/trx0sys.h	/^typedef UT_LIST_BASE_NODE_T(trx_t) trx_ut_list_t;$/;"	t
trx_validate_state_before_free	trx/trx0trx.cc	/^trx_validate_state_before_free(trx_t* trx)$/;"	f	file:
trx_wait_started	include/trx0i_s.h	/^	ib_time_t	trx_wait_started; \/*!< trx_t::wait_started *\/$/;"	m	struct:i_s_trx_row_t
trx_weight	include/trx0i_s.h	/^	uintmax_t	trx_weight;	\/*!< TRX_WEIGHT() *\/$/;"	m	struct:i_s_trx_row_t
trx_weight_ge	trx/trx0trx.cc	/^trx_weight_ge($/;"	f
trx_write_roll_ptr	include/trx0undo.ic	/^trx_write_roll_ptr($/;"	f
trx_write_serialisation_history	trx/trx0trx.cc	/^trx_write_serialisation_history($/;"	f
trx_write_trx_id	include/trx0sys.ic	/^trx_write_trx_id($/;"	f
try_LRU_scan	include/buf0buf.h	/^	ibool		try_LRU_scan;	\/*!< Set to FALSE when an LRU$/;"	m	struct:buf_pool_t
try_semi_consistent_read	handler/ha_innodb.cc	/^ha_innobase::try_semi_consistent_read(bool yes)$/;"	f	class:ha_innobase
try_semi_consistent_read	handler/ha_innopart.cc	/^ha_innopart::try_semi_consistent_read($/;"	f	class:ha_innopart
tuple	include/row0ftsort.h	/^	dtuple_t*	tuple;		\/*!< Tuple to insert *\/$/;"	m	struct:fts_psort_insert
tuple	include/row0sel.h	/^	dtuple_t*	tuple;		\/*!< search tuple *\/$/;"	m	struct:plan_t
tuple_exps	include/row0sel.h	/^	que_node_t**	tuple_exps;	\/*!< array of expressions$/;"	m	struct:plan_t
tuple_list	include/data0data.h	/^	UT_LIST_NODE_T(dtuple_t) tuple_list;$/;"	m	struct:dtuple_t
tuples	include/row0merge.h	/^	mtuple_t*	tuples;		\/*!< array of data tuples *\/$/;"	m	struct:row_merge_buf_t
type	api/api0api.cc	/^	ib_tuple_type_t		type;	\/*!< Tuple discriminitor. *\/$/;"	m	struct:ib_tuple_t	file:
type	fts/fts0opt.cc	/^	fts_msg_type_t	type;		\/*!< Message type *\/$/;"	m	struct:fts_msg_t	file:
type	include/api0api.h	/^	ib_col_type_t	type;		\/*!< Type of the column *\/$/;"	m	struct:__anon21
type	include/data0data.h	/^	dtype_t		type;	\/*!< type of data *\/$/;"	m	struct:dfield_t
type	include/dict0mem.h	/^	unsigned	type:6;		\/*!< 0 or DICT_FOREIGN_ON_DELETE_CASCADE$/;"	m	struct:dict_foreign_t
type	include/dict0mem.h	/^	unsigned	type:DICT_IT_BITS;$/;"	m	struct:dict_index_t
type	include/fts0ast.h	/^	fts_ast_type_t	type;			\/*!< The type of node *\/$/;"	m	struct:fts_ast_node_t
type	include/fts0fts.h	/^			type;		\/*!< The auxiliary table type *\/$/;"	m	struct:fts_table_t
type	include/hash0hash.h	/^	enum hash_table_sync_t	type;	\/*<! type of hash_table. *\/$/;"	m	struct:hash_table_t	typeref:enum:hash_table_t::hash_table_sync_t
type	include/lock0priv.h	/^	ulint type() const {$/;"	f	struct:lock_t
type	include/log0recv.h	/^	mlog_id_t	type;	\/*!< log record type *\/$/;"	m	struct:recv_t
type	include/mem0mem.h	/^	ulint	type;	\/*!< type of heap: MEM_HEAP_DYNAMIC, or$/;"	m	struct:mem_block_info_t
type	include/mtr0mtr.h	/^	ulint		type;$/;"	m	struct:mtr_memo_slot_t
type	include/os0file.h	/^	os_file_type_t	type;			\/*!< file type *\/$/;"	m	struct:os_file_stat_t
type	include/page0types.h	/^	ulint		type;		\/*!< index type *\/$/;"	m	struct:redo_page_compress_t
type	include/pars0pars.h	/^	ulint		type;		\/*!< type, e.g. DATA_FIXBINARY *\/$/;"	m	struct:pars_bound_lit_t
type	include/que0types.h	/^	ulint		type;	\/*!< query node type *\/$/;"	m	struct:que_common_t
type	include/row0mysql.h	/^	ulint	type;			\/*!< column type in Innobase mtype$/;"	m	struct:mysql_row_templ_t
type	include/srv0srv.h	/^	srv_thread_type type;			\/*!< thread type: user,$/;"	m	struct:srv_slot_t
type	include/trx0undo.h	/^	ulint		type;		\/*!< TRX_UNDO_INSERT or$/;"	m	struct:trx_undo_t
type	os/os0file.cc	/^	IORequest		type;$/;"	m	struct:Slot	file:
type	trx/trx0undo.cc	/^	ulint		type,	\/*!< in: type of the segment: TRX_UNDO_INSERT or$/;"	v
type_len	include/api0api.h	/^	ib_u32_t	type_len;	\/*!< Length of type *\/$/;"	m	struct:__anon21
type_mode	include/lock0priv.h	/^	ib_uint32_t	type_mode;	\/*!< lock type, mode, LOCK_GAP or$/;"	m	struct:lock_t
type_mode_string	include/lock0priv.h	/^lock_t::type_mode_string() const$/;"	f	class:lock_t
type_str	handler/i_s.cc	/^	const char*	type_str;	\/*!< String explain the page$/;"	m	struct:buf_page_desc_t	file:
type_string	include/lock0priv.h	/^	const char* type_string() const$/;"	f	struct:lock_t
type_value	handler/i_s.cc	/^	ulint		type_value;	\/*!< Page type or page state *\/$/;"	m	struct:buf_page_desc_t	file:
ulint	include/univ.i	/^typedef unsigned __int64	ulint;$/;"	t	file:
ulint	include/univ.i	/^typedef unsigned long int	ulint;$/;"	t	file:
ulint	include/ut0rbt.h	39;"	d
ulint_ctr_1_t	include/srv0srv.h	/^	typedef ib_counter_t<ulint, 1, single_indexer_t> ulint_ctr_1_t;$/;"	t	struct:srv_stats_t
ulint_ctr_64_t	include/srv0srv.h	/^	typedef ib_counter_t<ulint, 64> ulint_ctr_64_t;$/;"	t	struct:srv_stats_t
un_member	include/lock0priv.h	/^	} un_member;			\/*!< lock details *\/$/;"	m	struct:lock_t	typeref:union:lock_t::__anon7
uncommitted	include/dict0mem.h	/^	unsigned	uncommitted:1;$/;"	m	struct:dict_index_t
undo	include/trx0purge.h	/^namespace undo {$/;"	n
undo	include/trx0undo.h	/^namespace undo {$/;"	n
undo	trx/trx0purge.cc	/^namespace undo {$/;"	n	file:
undo_exec	include/row0undo.h	/^enum undo_exec {$/;"	g
undo_ext	include/row0undo.h	/^	row_ext_t*	undo_ext;\/*!< NULL, or prefixes of the externally$/;"	m	struct:undo_node_t
undo_list	include/trx0undo.h	/^	UT_LIST_NODE_T(trx_undo_t) undo_list;$/;"	m	struct:trx_undo_t
undo_mutex	include/trx0trx.h	/^	UndoMutex	undo_mutex;	\/*!< mutex protecting the fields in this$/;"	m	struct:trx_t
undo_no	include/row0purge.h	/^	undo_no_t	undo_no;\/*!< undo number of the record *\/$/;"	m	struct:purge_node_t
undo_no	include/row0undo.h	/^	undo_no_t	undo_no;\/*!< undo number of the record *\/$/;"	m	struct:undo_node_t
undo_no	include/trx0purge.h	/^	undo_no_t	undo_no;	\/*!< Purge has advanced past all records$/;"	m	struct:purge_iter_t
undo_no	include/trx0trx.h	/^	undo_no_t	undo_no;	\/*!< next undo log record number to$/;"	m	struct:trx_t
undo_no_t	include/trx0types.h	/^typedef ib_id_t	undo_no_t;$/;"	t
undo_node_t	include/row0undo.h	/^struct undo_node_t{$/;"	s
undo_page	trx/trx0undo.cc	/^	page_t**	undo_page,$/;"	v
undo_rec	include/row0undo.h	/^	trx_undo_rec_t*	undo_rec;\/*!< undo log record *\/$/;"	m	struct:undo_node_t
undo_rec	include/trx0purge.h	/^	trx_undo_rec_t*	undo_rec;	\/*!< Record to purge *\/$/;"	m	struct:trx_purge_rec_t
undo_recs	include/row0purge.h	/^	ib_vector_t*    undo_recs;\/*!< Undo recs to purge *\/$/;"	m	struct:purge_node_t
undo_row	include/row0undo.h	/^	dtuple_t*	undo_row;\/*!< NULL, or the row after undo *\/$/;"	m	struct:undo_node_t
undo_rseg_space	include/trx0purge.h	/^	ulint		undo_rseg_space;$/;"	m	struct:purge_iter_t
undo_rseg_space	include/trx0trx.h	/^	ulint		undo_rseg_space;$/;"	m	struct:trx_t
undo_spaces_t	include/trx0purge.h	/^	typedef std::vector<ulint>		undo_spaces_t;$/;"	t	namespace:undo
undo_thr	include/trx0roll.h	/^	que_thr_t*		undo_thr;\/*!< undo query graph *\/$/;"	m	struct:roll_node_t
undo_trunc	include/trx0purge.h	/^	undo::Truncate	undo_trunc;	\/*!< Track UNDO tablespace marked$/;"	m	struct:trx_purge_t
unflushed_spaces	fil/fil0fil.cc	/^	UT_LIST_BASE_NODE_T(fil_space_t) unflushed_spaces;$/;"	m	struct:fil_system_t	file:
unflushed_spaces	include/fil0fil.h	/^	UT_LIST_NODE_T(fil_space_t) unflushed_spaces;$/;"	m	struct:fil_space_t
unique	api/api0api.cc	/^	ibool		unique;		\/*!< True if unique index *\/$/;"	m	struct:ib_index_def_t	file:
unique_search	include/row0sel.h	/^	ibool		unique_search;	\/*!< TRUE if we are searching an$/;"	m	struct:plan_t
unit_test_os_file_get_parent_dir	os/os0file.cc	/^unit_test_os_file_get_parent_dir()$/;"	f
univ_i	include/univ.i	34;"	d	file:
unlock_cache	include/fts0types.h	/^	bool		unlock_cache;	\/*!< flag whether unlock cache when$/;"	m	struct:fts_sync_t
unlock_row	handler/ha_innodb.cc	/^ha_innobase::unlock_row(void)$/;"	f	class:ha_innobase
unlock_row	handler/ha_innopart.cc	/^ha_innopart::unlock_row()$/;"	f	class:ha_innopart
unput	fts/fts0blex.cc	203;"	d	file:
unput	fts/fts0tlex.cc	203;"	d	file:
unput	pars/lexyy.cc	195;"	d	file:
unregister_table_handler	include/sess0sess.h	/^	void unregister_table_handler($/;"	f	class:innodb_session_t
unzip	include/buf0lru.h	/^	ulint	unzip;	\/**< Counter of page_zip_decompress operations. *\/$/;"	m	struct:buf_LRU_stat_t
unzip_LRU	include/buf0buf.h	/^	UT_LIST_BASE_NODE_T(buf_block_t) unzip_LRU;$/;"	m	struct:buf_pool_t
unzip_LRU	include/buf0buf.h	/^	UT_LIST_NODE_T(buf_block_t) unzip_LRU;$/;"	m	struct:buf_block_t
unzip_LRU_bytes	include/buf0buf.h	/^	ulint	unzip_LRU_bytes;	\/*!< unzip_LRU size in bytes *\/$/;"	m	struct:buf_pools_list_size_t
unzip_cur	include/buf0buf.h	/^	ulint	unzip_cur;		\/*!< buf_LRU_stat_cur.unzip, num$/;"	m	struct:buf_pool_info_t
unzip_lru_len	include/buf0buf.h	/^	ulint	unzip_lru_len;		\/*!< length of buf_pool->unzip_LRU$/;"	m	struct:buf_pool_info_t
unzip_sum	include/buf0buf.h	/^	ulint	unzip_sum;		\/*!< buf_LRU_stat_sum.unzip *\/$/;"	m	struct:buf_pool_info_t
up_bytes	include/btr0cur.h	/^	ulint		up_bytes;	\/*!< number of matched bytes to the$/;"	m	struct:btr_cur_t
up_limit_id	include/read0types.h	/^	trx_id_t up_limit_id() const$/;"	f	class:ReadView
up_match	include/btr0cur.h	/^	ulint		up_match;	\/*!< If the search mode was PAGE_CUR_LE,$/;"	m	struct:btr_cur_t
up_node	include/fts0ast.h	/^	fts_ast_node_t* up_node;		\/*!< Direct up node *\/$/;"	m	struct:fts_ast_node_t
upd	api/api0api.cc	/^	que_fork_t*	upd;		\/*!< Innobase SQL query graph used$/;"	m	struct:ib_qry_grph_t	file:
upd	api/api0api.cc	/^	upd_node_t*	upd;		\/*!< Innobase SQL update node$/;"	m	struct:ib_qry_node_t	file:
upd_create	include/row0upd.ic	/^upd_create($/;"	f
upd_ext	include/row0upd.h	/^	row_ext_t*	upd_ext;\/* NULL, or prefixes of the externally$/;"	m	struct:upd_node_t
upd_field_set_field_no	include/row0upd.ic	/^upd_field_set_field_no($/;"	f
upd_field_set_v_field_no	include/row0upd.ic	/^upd_field_set_v_field_no($/;"	f
upd_field_t	include/row0upd.h	/^struct upd_field_t{$/;"	s
upd_fld_is_virtual_col	include/row0upd.h	456;"	d
upd_fld_set_virtual_col	include/row0upd.h	460;"	d
upd_get_field_by_field_no	include/row0upd.ic	/^upd_get_field_by_field_no($/;"	f
upd_get_n_fields	include/row0upd.ic	/^upd_get_n_fields($/;"	f
upd_get_nth_field	include/row0upd.h	72;"	d
upd_get_nth_field	include/row0upd.ic	/^upd_get_nth_field($/;"	f
upd_graph	include/row0mysql.h	/^	que_fork_t*	upd_graph;	\/*!< Innobase SQL query graph used$/;"	m	struct:row_prebuilt_t
upd_node	include/row0mysql.h	/^	upd_node_t*	upd_node;	\/*!< Innobase SQL update node used$/;"	m	struct:row_prebuilt_t
upd_node_create	row/row0upd.cc	/^upd_node_create($/;"	f
upd_node_t	include/row0upd.h	/^struct upd_node_t{$/;"	s
upd_row	include/row0upd.h	/^	dtuple_t*	upd_row;\/* NULL, or a copy of the updated row *\/$/;"	m	struct:upd_node_t
upd_t	include/row0upd.h	/^struct upd_t{$/;"	s
update	include/row0purge.h	/^	upd_t*		update;	\/*!< update vector for a clustered index$/;"	m	struct:purge_node_t
update	include/row0undo.h	/^	upd_t*		update;	\/*!< update vector for a clustered index$/;"	m	struct:undo_node_t
update	include/row0upd.h	/^	upd_t*		update;	\/*!< update vector for the row *\/$/;"	m	struct:upd_node_t
update_create_info	handler/ha_innodb.cc	/^ha_innobase::update_create_info($/;"	f	class:ha_innobase
update_create_info	handler/ha_innopart.cc	/^ha_innopart::update_create_info($/;"	f	class:ha_innopart
update_n_fields	include/row0upd.h	/^	ulint		update_n_fields;$/;"	m	struct:upd_node_t
update_part_elem	handler/ha_innopart.cc	/^ha_innopart::update_part_elem($/;"	f	class:ha_innopart
update_partition	handler/ha_innopart.cc	/^ha_innopart::update_partition($/;"	f	class:ha_innopart
update_root_page_no	row/row0trunc.cc	/^truncate_t::update_root_page_no($/;"	f	class:truncate_t
update_row	handler/ha_innodb.cc	/^ha_innobase::update_row($/;"	f	class:ha_innobase
update_row	handler/ha_innopart.h	/^	update_row($/;"	f	class:ha_innopart
update_row_in_part	handler/ha_innopart.cc	/^ha_innopart::update_row_in_part($/;"	f	class:ha_innopart
update_table_stats	handler/ha_innopart.cc	/^update_table_stats($/;"	f	file:
update_thd	handler/ha_innodb.cc	/^ha_innobase::update_thd($/;"	f	class:ha_innobase
update_thd	handler/ha_innodb.cc	/^ha_innobase::update_thd()$/;"	f	class:ha_innobase
update_time	include/dict0mem.h	/^	time_t					update_time;$/;"	m	struct:dict_table_t
update_undo	include/trx0trx.h	/^	trx_undo_t*	update_undo;	\/*!< pointer to the update undo log, or$/;"	m	struct:trx_undo_ptr_t
update_undo_cached	include/trx0rseg.h	/^	UT_LIST_BASE_NODE_T(trx_undo_t)	update_undo_cached;$/;"	m	struct:trx_rseg_t
update_undo_list	include/trx0rseg.h	/^	UT_LIST_BASE_NODE_T(trx_undo_t)	update_undo_list;$/;"	m	struct:trx_rseg_t
upper_doc_id	fts/fts0que.cc	/^	doc_id_t	upper_doc_id;	\/*!< Highest doc id in doc_ids *\/$/;"	m	struct:fts_query_t	file:
upper_index	include/fts0types.h	/^	ulint		upper_index;	\/*!< max index of the doc id vector to$/;"	m	struct:fts_sync_t
use_count	handler/ha_innodb.h	/^	uint		use_count;	\/*!< reference count,$/;"	m	struct:st_innobase_share
used	include/buf0buf.h	/^	ulint		used;$/;"	m	struct:buf_buddy_stat_t
used	include/gis0type.h	/^	ulint		used;		\/*!< memory used *\/$/;"	m	struct:matched_rec
used	include/ut0vec.h	/^	ulint		used;		\/* number of elements currently used *\/$/;"	m	struct:ib_vector_t
used_in_HANDLER	include/row0mysql.h	/^	unsigned	used_in_HANDLER:1;\/*!< TRUE if we have been using this$/;"	m	struct:row_prebuilt_t
usr0sess_h	include/usr0sess.h	27;"	d
usr0types_h	include/usr0types.h	27;"	d
usr_trx	api/api0api.cc	/^	trx_t*		usr_trx;	\/*!< User transacton covering the$/;"	m	struct:ib_index_def_t	file:
ut0byte_h	include/ut0byte.h	27;"	d
ut0counter_h	include/ut0counter.h	28;"	d
ut0crc32_h	include/ut0crc32.h	27;"	d
ut0dbg_h	include/ut0dbg.h	27;"	d
ut0lst_h	include/ut0lst.h	28;"	d
ut0mem_h	include/ut0mem.h	27;"	d
ut0mutex_h	include/ut0mutex.h	29;"	d
ut0new_h	include/ut0new.h	120;"	d
ut0pool_h	include/ut0pool.h	27;"	d
ut0rnd_h	include/ut0rnd.h	27;"	d
ut0sort_h	include/ut0sort.h	27;"	d
ut0stage_h	include/ut0stage.h	27;"	d
ut0ut_h	include/ut0ut.h	27;"	d
ut_2_exp	include/ut0ut.ic	/^ut_2_exp($/;"	f
ut_2_log	include/ut0ut.ic	/^ut_2_log($/;"	f
ut_2_power_up	ut/ut0ut.cc	/^ut_2_power_up($/;"	f
ut_2pow_remainder	include/ut0ut.h	155;"	d
ut_2pow_round	include/ut0ut.h	162;"	d
ut_a	include/ut0dbg.h	30;"	d
ut_a	include/ut0dbg.h	51;"	d
ut_a	include/ut0rbt.h	40;"	d
ut_ad	include/ut0dbg.h	31;"	d
ut_ad	include/ut0dbg.h	64;"	d
ut_ad	include/ut0dbg.h	69;"	d
ut_align	include/ut0byte.ic	/^ut_align($/;"	f
ut_align_down	include/ut0byte.ic	/^ut_align_down($/;"	f
ut_align_offset	include/ut0byte.ic	/^ut_align_offset($/;"	f
ut_allocator	include/ut0new.h	/^	ut_allocator($/;"	f	class:ut_allocator
ut_allocator	include/ut0new.h	/^class ut_allocator {$/;"	c
ut_basename_noext	ut/ut0ut.cc	/^ut_basename_noext($/;"	f
ut_bit_get_nth	include/ut0byte.ic	/^ut_bit_get_nth($/;"	f
ut_bit_set_nth	include/ut0byte.ic	/^ut_bit_set_nth($/;"	f
ut_calc_align	include/ut0ut.h	174;"	d
ut_calc_align_down	include/ut0ut.h	167;"	d
ut_chrono_t	include/ut0dbg.h	/^	ut_chrono_t($/;"	f	class:ut_chrono_t
ut_chrono_t	include/ut0dbg.h	/^class ut_chrono_t {$/;"	c
ut_copy_file	ut/ut0ut.cc	/^ut_copy_file($/;"	f
ut_cpuid	ut/ut0crc32.cc	/^ut_cpuid($/;"	f	file:
ut_crc32	ut/ut0crc32.cc	/^ut_crc32_func_t	ut_crc32;$/;"	v
ut_crc32_64_hw	ut/ut0crc32.cc	/^ut_crc32_64_hw($/;"	f
ut_crc32_64_legacy_big_endian_hw	ut/ut0crc32.cc	/^ut_crc32_64_legacy_big_endian_hw($/;"	f
ut_crc32_64_legacy_big_endian_sw	ut/ut0crc32.cc	/^ut_crc32_64_legacy_big_endian_sw($/;"	f
ut_crc32_64_low_hw	ut/ut0crc32.cc	/^ut_crc32_64_low_hw($/;"	f
ut_crc32_64_low_sw	ut/ut0crc32.cc	/^ut_crc32_64_low_sw($/;"	f
ut_crc32_64_sw	ut/ut0crc32.cc	/^ut_crc32_64_sw($/;"	f
ut_crc32_8_hw	ut/ut0crc32.cc	/^ut_crc32_8_hw($/;"	f
ut_crc32_8_sw	ut/ut0crc32.cc	/^ut_crc32_8_sw($/;"	f
ut_crc32_byte_by_byte	ut/ut0crc32.cc	/^ut_crc32_func_t	ut_crc32_byte_by_byte;$/;"	v
ut_crc32_byte_by_byte_hw	ut/ut0crc32.cc	/^ut_crc32_byte_by_byte_hw($/;"	f
ut_crc32_byte_by_byte_sw	ut/ut0crc32.cc	/^ut_crc32_byte_by_byte_sw($/;"	f
ut_crc32_func_t	include/ut0crc32.h	/^typedef uint32_t	(*ut_crc32_func_t)(const byte* ptr, ulint len);$/;"	t
ut_crc32_hw	ut/ut0crc32.cc	/^ut_crc32_hw($/;"	f
ut_crc32_init	ut/ut0crc32.cc	/^ut_crc32_init()$/;"	f
ut_crc32_legacy_big_endian	ut/ut0crc32.cc	/^ut_crc32_func_t	ut_crc32_legacy_big_endian;$/;"	v
ut_crc32_legacy_big_endian_hw	ut/ut0crc32.cc	/^ut_crc32_legacy_big_endian_hw($/;"	f
ut_crc32_legacy_big_endian_sw	ut/ut0crc32.cc	/^ut_crc32_legacy_big_endian_sw($/;"	f
ut_crc32_slice8_table	ut/ut0crc32.cc	/^static uint32_t	ut_crc32_slice8_table[8][256];$/;"	v	file:
ut_crc32_slice8_table_init	ut/ut0crc32.cc	/^ut_crc32_slice8_table_init()$/;"	f	file:
ut_crc32_slice8_table_initialized	ut/ut0crc32.cc	/^static bool	ut_crc32_slice8_table_initialized = false;$/;"	v	file:
ut_crc32_sse2_enabled	ut/ut0crc32.cc	/^bool	ut_crc32_sse2_enabled = false;$/;"	v
ut_crc32_sw	ut/ut0crc32.cc	/^ut_crc32_sw($/;"	f
ut_crc32_swap_byteorder	ut/ut0crc32.cc	/^ut_crc32_swap_byteorder($/;"	f
ut_d	include/ut0dbg.h	66;"	d
ut_d	include/ut0dbg.h	71;"	d
ut_dbg_assertion_failed	ut/ut0dbg.cc	/^ut_dbg_assertion_failed($/;"	f
ut_delay	ut/ut0ut.cc	/^ut_delay($/;"	f
ut_delete	include/ut0new.h	/^ut_delete($/;"	f
ut_delete_array	include/ut0new.h	/^ut_delete_array($/;"	f
ut_difftime	ut/ut0ut.cc	/^ut_difftime($/;"	f
ut_error	include/ut0dbg.h	32;"	d
ut_error	include/ut0dbg.h	59;"	d
ut_error	include/ut0rbt.h	41;"	d
ut_find_prime	ut/ut0rnd.cc	/^ut_find_prime($/;"	f
ut_fold_binary	include/ut0rnd.ic	/^ut_fold_binary($/;"	f
ut_fold_string	include/ut0rnd.ic	/^ut_fold_string($/;"	f
ut_fold_ulint_pair	include/ut0rnd.ic	/^ut_fold_ulint_pair($/;"	f
ut_fold_ull	include/ut0rnd.ic	/^ut_fold_ull($/;"	f
ut_format_name	ut/ut0ut.cc	/^ut_format_name($/;"	f
ut_free	include/ut0new.h	892;"	d
ut_free	include/ut0new.h	923;"	d
ut_free	include/ut0rbt.h	38;"	d
ut_get_name	ut/ut0ut.cc	/^ut_get_name($/;"	f
ut_get_system_time_as_file_time	ut/ut0ut.cc	/^static time_fn ut_get_system_time_as_file_time = GetSystemTimeAsFileTime;$/;"	v	file:
ut_get_year_month_day	ut/ut0ut.cc	/^ut_get_year_month_day($/;"	f
ut_gettimeofday	ut/ut0ut.cc	/^ut_gettimeofday($/;"	f	file:
ut_gettimeofday	ut/ut0ut.cc	125;"	d	file:
ut_hash_ulint	include/ut0rnd.ic	/^ut_hash_ulint($/;"	f
ut_is_2pow	include/ut0ut.h	278;"	d
ut_list_append	include/ut0lst.h	/^ut_list_append($/;"	f
ut_list_base	include/ut0lst.h	/^struct ut_list_base {$/;"	s
ut_list_exists	include/ut0lst.h	/^ut_list_exists($/;"	f
ut_list_insert	include/ut0lst.h	/^ut_list_insert($/;"	f
ut_list_map	include/ut0lst.h	/^ut_list_map($/;"	f
ut_list_move_to_front	include/ut0lst.h	/^ut_list_move_to_front($/;"	f
ut_list_node	include/ut0lst.h	/^struct ut_list_node {$/;"	s
ut_list_prepend	include/ut0lst.h	/^ut_list_prepend($/;"	f
ut_list_remove	include/ut0lst.h	/^ut_list_remove($/;"	f
ut_list_reverse	include/ut0lst.h	/^ut_list_reverse(List& list)$/;"	f
ut_list_validate	include/ut0lst.h	/^ut_list_validate($/;"	f
ut_malloc	include/ut0new.h	867;"	d
ut_malloc	include/ut0new.h	911;"	d
ut_malloc	include/ut0rbt.h	37;"	d
ut_malloc_nokey	include/ut0new.h	875;"	d
ut_malloc_nokey	include/ut0new.h	915;"	d
ut_max	include/ut0ut.h	104;"	d
ut_memcmp	include/ut0mem.ic	/^ut_memcmp(const void* str1, const void* str2, ulint n)$/;"	f
ut_memcpy	include/ut0mem.ic	/^ut_memcpy(void* dest, const void* src, ulint n)$/;"	f
ut_memmove	include/ut0mem.ic	/^ut_memmove(void* dest, const void* src, ulint n)$/;"	f
ut_min	include/ut0ut.h	105;"	d
ut_new_boot	ut/ut0new.cc	/^ut_new_boot()$/;"	f
ut_new_get_key_by_file	ut/ut0new.cc	/^ut_new_get_key_by_file($/;"	f
ut_new_pfx_t	include/ut0new.h	/^struct ut_new_pfx_t {$/;"	s
ut_pair_cmp	include/ut0ut.ic	/^ut_pair_cmp($/;"	f
ut_pair_min	include/ut0ut.ic	/^ut_pair_min($/;"	f
ut_print_buf	ut/ut0ut.cc	/^ut_print_buf($/;"	f
ut_print_buf_hex	ut/ut0ut.cc	/^ut_print_buf_hex($/;"	f
ut_print_name	ut/ut0ut.cc	/^ut_print_name($/;"	f
ut_print_timestamp	ut/ut0ut.cc	/^ut_print_timestamp($/;"	f
ut_raw_to_hex	include/ut0mem.ic	/^ut_raw_to_hex($/;"	f
ut_realloc	include/ut0new.h	888;"	d
ut_realloc	include/ut0new.h	921;"	d
ut_rnd_gen_ibool	gis/gis0geo.cc	/^ut_rnd_gen_ibool(void)$/;"	f	file:
ut_rnd_gen_next_ulint	include/ut0rnd.ic	/^ut_rnd_gen_next_ulint($/;"	f
ut_rnd_gen_ulint	include/ut0rnd.ic	/^ut_rnd_gen_ulint(void)$/;"	f
ut_rnd_interval	include/ut0rnd.ic	/^ut_rnd_interval($/;"	f
ut_rnd_set_seed	include/ut0rnd.ic	/^ut_rnd_set_seed($/;"	f
ut_rnd_ulint_counter	ut/ut0rnd.cc	/^ulint	ut_rnd_ulint_counter = 65654363;$/;"	v
ut_snprintf	include/ut0ut.h	456;"	d
ut_snprintf	ut/ut0ut.cc	/^ut_snprintf($/;"	f
ut_sprintf_timestamp	ut/ut0ut.cc	/^ut_sprintf_timestamp($/;"	f
ut_sprintf_timestamp_without_extra_chars	ut/ut0ut.cc	/^ut_sprintf_timestamp_without_extra_chars($/;"	f
ut_stage_alter_t	include/ut0stage.h	/^	ut_stage_alter_t($/;"	f	class:ut_stage_alter_t
ut_stage_alter_t	include/ut0stage.h	/^class ut_stage_alter_t {$/;"	c
ut_str3cat	ut/ut0mem.cc	/^ut_str3cat($/;"	f
ut_str_sql_format	include/ut0mem.ic	/^ut_str_sql_format($/;"	f
ut_strcmp	include/ut0mem.ic	/^ut_strcmp(const char* str1, const char* str2)$/;"	f
ut_strcmp_functor	include/ut0ut.h	/^struct ut_strcmp_functor$/;"	s
ut_strcount	ut/ut0mem.cc	/^ut_strcount($/;"	f
ut_strcpy	include/ut0mem.ic	/^ut_strcpy(char* dest, const char* src)$/;"	f
ut_strerr	ut/ut0ut.cc	/^ut_strerr($/;"	f
ut_strlcpy	ut/ut0mem.cc	/^ut_strlcpy($/;"	f
ut_strlcpy_rev	ut/ut0mem.cc	/^ut_strlcpy_rev($/;"	f
ut_strlen	include/ut0mem.ic	/^ut_strlen(const char* str)$/;"	f
ut_strreplace	ut/ut0mem.cc	/^ut_strreplace($/;"	f
ut_time	ut/ut0ut.cc	/^ut_time(void)$/;"	f
ut_time_ms	ut/ut0ut.cc	/^ut_time_ms(void)$/;"	f
ut_time_us	ut/ut0ut.cc	/^ut_time_us($/;"	f
ut_uint64_align_down	include/ut0byte.ic	/^ut_uint64_align_down($/;"	f
ut_uint64_align_up	include/ut0byte.ic	/^ut_uint64_align_up($/;"	f
ut_ulint_cmp	include/ut0ut.ic	/^ut_ulint_cmp($/;"	f
ut_ull_create	include/ut0byte.ic	/^ut_ull_create($/;"	f
ut_usectime	ut/ut0ut.cc	/^ut_usectime($/;"	f
ut_vsnprintf	include/ut0ut.h	451;"	d
ut_vsnprintf	ut/ut0ut.cc	/^ut_vsnprintf($/;"	f
ut_win_init_time	ut/ut0ut.cc	/^ut_win_init_time()$/;"	f
ut_zalloc	include/ut0new.h	871;"	d
ut_zalloc	include/ut0new.h	913;"	d
ut_zalloc_nokey	include/ut0new.h	879;"	d
ut_zalloc_nokey	include/ut0new.h	917;"	d
ut_zalloc_nokey_nofatal	include/ut0new.h	883;"	d
ut_zalloc_nokey_nofatal	include/ut0new.h	919;"	d
uuid	include/os0file.h	/^	static char		uuid[ENCRYPTION_SERVER_UUID_LEN + 1];$/;"	m	struct:Encryption
uuid	os/os0file.cc	/^char	Encryption::uuid[ENCRYPTION_SERVER_UUID_LEN + 1] = {0};$/;"	m	class:Encryption	file:
v_col	include/dict0mem.h	/^	const dict_v_col_t*	v_col;$/;"	m	struct:dict_add_v_col_t
v_col_def	include/dict0crea.h	/^	ins_node_t*	v_col_def;	\/*!< child node which does the inserts$/;"	m	struct:tab_node_t
v_col_name	include/dict0mem.h	/^	const char**		v_col_name;$/;"	m	struct:dict_add_v_col_t
v_col_names	include/dict0mem.h	/^	const char*				v_col_names;$/;"	m	struct:dict_table_t
v_cols	include/dict0mem.h	/^	dict_v_col_t*				v_cols;$/;"	m	struct:dict_table_t
v_cols	include/dict0mem.h	/^	dict_vcol_set*	v_cols;		\/*!< set of virtual columns affected$/;"	m	struct:dict_foreign_t
v_fields	include/data0data.h	/^	dfield_t*	v_fields;	\/*!< fields on virtual column *\/$/;"	m	struct:dtuple_t
v_indexes	include/dict0mem.h	/^	dict_v_idx_list*	v_indexes;$/;"	m	struct:dict_v_col_t
v_pos	include/dict0mem.h	/^	ulint			v_pos;$/;"	m	struct:dict_v_col_t
val	include/pars0pars.h	/^	que_node_t*	val;		\/*!< value to assign *\/$/;"	m	struct:assign_node_t
val	include/pars0pars.h	/^	que_node_t*	val;		\/*!< value to assign *\/$/;"	m	struct:col_assign_node_t
val	include/que0types.h	/^	dfield_t	val;	\/*!< evaluated value for an expression *\/$/;"	m	struct:que_common_t
val_buf_size	include/que0types.h	/^	ulint		val_buf_size;$/;"	m	struct:que_common_t
val_buf_size	include/row0sel.h	/^	ulint		val_buf_size;$/;"	m	struct:sel_buf_t
valid	include/gis0type.h	/^	bool		valid;		\/*!< whether result in matched_recs$/;"	m	struct:matched_rec
valid_trx	api/api0api.cc	/^	bool		valid_trx;	\/*!< Valid transaction attached *\/$/;"	m	struct:ib_cursor_t	file:
validate	fil/fil0fil.cc	/^	static ulint validate(const fil_space_t* space)$/;"	f	struct:Check
validate	handler/ha_innodb.cc	/^Compression::validate(const char* algorithm)$/;"	f	class:Compression
validate	handler/ha_innodb.cc	/^Encryption::validate(const char* option)$/;"	f	class:Encryption
validate	include/buf0buf.h	/^	static void validate(const buf_pool_t* buf_pool)$/;"	f	struct:CheckInFreeList
validate	include/buf0buf.h	/^	static void validate(const buf_pool_t* buf_pool)$/;"	f	struct:CheckInLRUList
validate	include/buf0buf.h	/^	static void validate(const buf_pool_t* buf_pool)$/;"	f	struct:CheckUnzipLRUAndLRUList
validate	include/row0upd.h	/^        bool validate() const$/;"	f	struct:upd_t
validate	read/read0read.cc	/^MVCC::validate() const$/;"	f	class:MVCC
validate_create_tablespace_info	handler/ha_innodb.cc	/^validate_create_tablespace_info($/;"	f	file:
validate_first_page	fsp/fsp0file.cc	/^Datafile::validate_first_page(lsn_t*	flush_lsn,$/;"	f	class:Datafile
validate_for_recovery	fsp/fsp0file.cc	/^Datafile::validate_for_recovery()$/;"	f	class:Datafile
validate_pcur	row/row0purge.cc	/^purge_node_t::validate_pcur()$/;"	f	class:purge_node_t
validate_tablespace_name	handler/ha_innodb.cc	/^validate_tablespace_name($/;"	f	file:
validate_to_dd	fsp/fsp0file.cc	/^Datafile::validate_to_dd($/;"	f	class:Datafile
value	include/fts0types.h	/^	ulint		value;		\/*!< Character value at which$/;"	m	struct:fts_index_selector_t
value	include/trx0i_s.h	/^	i_s_locks_row_t*	value;	\/*!< row of$/;"	m	struct:i_s_hash_chain_t
value	include/ut0rbt.h	/^	char		value[1];		\/* Data value *\/$/;"	m	struct:ib_rbt_node_t
value_type	include/mem0mem.h	/^	typedef		T		value_type;$/;"	t	class:mem_heap_allocator
value_type	include/read0types.h	/^		typedef trx_ids_t::value_type value_type;$/;"	t	class:ReadView::ids_t
value_type	include/ut0new.h	/^	typedef T		value_type;$/;"	t	class:ut_allocator
value_type	include/ut0pool.h	/^	typedef Type value_type;$/;"	t	struct:Pool
value_type	include/ut0pool.h	/^	typedef typename PoolType::value_type value_type;$/;"	t	struct:PoolManager
values_list	include/row0ins.h	/^	que_node_t*	values_list;\/* list of expressions to evaluate and$/;"	m	struct:ins_node_t
var	include/pars0pars.h	/^	sym_node_t*	var;		\/*!< variable to set *\/$/;"	m	struct:assign_node_t
vc_templ	include/dict0mem.h	/^	dict_vcol_templ_t*			vc_templ;$/;"	m	struct:dict_table_t
version	include/trx0trx.h	/^	ulint		version;$/;"	m	struct:trx_t
view	include/trx0purge.h	/^	ReadView	view;		\/*!< The purge will not remove undo logs$/;"	m	struct:trx_purge_t
view_active	include/trx0purge.h	/^	bool		view_active;	\/*!< true if view is active *\/$/;"	m	struct:trx_purge_t
view_close	read/read0read.cc	/^MVCC::view_close(ReadView*& view, bool own_mutex)$/;"	f	class:MVCC
view_list_t	include/read0read.h	/^	typedef UT_LIST_BASE_NODE_T(ReadView) view_list_t;$/;"	t	class:MVCC
view_open	read/read0read.cc	/^MVCC::view_open(ReadView*& view, trx_t* trx)$/;"	f	class:MVCC
view_release	read/read0read.cc	/^MVCC::view_release(ReadView*& view)$/;"	f	class:MVCC
visited	include/fts0ast.h	/^	bool		visited;		\/*!< whether this node is$/;"	m	struct:fts_ast_node_t
vtempl	include/dict0mem.h	/^	mysql_row_templ_t**	vtempl;$/;"	m	struct:dict_vcol_templ_t
wait	include/trx0trx.h	/^	static void wait(trx_t* trx)$/;"	f	class:TrxInInnoDB
wait_ex_event	include/sync0rw.h	/^	os_event_t	wait_ex_event;$/;"	m	struct:rw_lock_t
wait_lock	include/trx0trx.h	/^	lock_t*		wait_lock;	\/*!< if trx execution state is$/;"	m	struct:trx_lock_t
wait_lock_get_heap_no	trx/trx0i_s.cc	/^wait_lock_get_heap_no($/;"	f	file:
wait_mutex	include/lock0lock.h	/^	LockMutex	wait_mutex;		\/*!< Mutex protecting the$/;"	m	struct:lock_sys_t
wait_started	include/trx0trx.h	/^	time_t		wait_started;	\/*!< lock wait started at this time,$/;"	m	struct:trx_lock_t
wait_thr	include/trx0trx.h	/^	que_thr_t*	wait_thr;	\/*!< query thread belonging to this$/;"	m	struct:trx_lock_t
wait_timeout	include/srv0srv.h	/^	ulong		wait_timeout;		\/*!< wait time that if exceeded$/;"	m	struct:srv_slot_t
wait_until_no_pending_writes	os/os0file.cc	/^	static void wait_until_no_pending_writes()$/;"	f	class:AIO
waiters	include/sync0rw.h	/^	volatile ulint	waiters;$/;"	m	struct:rw_lock_t
waiting	sync/sync0arr.cc	/^	bool		waiting;	\/*!< TRUE if the thread has already$/;"	m	struct:sync_cell_t	file:
waiting_threads	include/lock0lock.h	/^	srv_slot_t*	waiting_threads;	\/*!< Array  of user threads$/;"	m	struct:lock_sys_t
wake_at_shutdown	os/os0file.cc	/^	static void wake_at_shutdown()$/;"	f	class:AIO
wake_simulated_handler_thread	os/os0file.cc	/^AIO::wake_simulated_handler_thread(ulint global_segment)$/;"	f	class:AIO
wake_simulated_handler_thread	os/os0file.cc	/^AIO::wake_simulated_handler_thread(ulint global_segment, ulint segment)$/;"	f	class:AIO
warn	include/ut0ut.h	/^class warn : public logger {$/;"	c	namespace:ib
was_chosen_as_deadlock_victim	include/trx0trx.h	/^	bool		was_chosen_as_deadlock_victim;$/;"	m	struct:trx_lock_t
was_semi_consistent_read	handler/ha_innodb.cc	/^ha_innobase::was_semi_consistent_read(void)$/;"	f	class:ha_innobase
was_semi_consistent_read	handler/ha_innopart.cc	/^ha_innopart::was_semi_consistent_read()$/;"	f	class:ha_innopart
was_tablespace_truncated	include/trx0purge.h	/^		static bool was_tablespace_truncated(ulint space_id)$/;"	f	class:undo::Truncate
was_tablespace_truncated	row/row0trunc.cc	/^truncate_t::was_tablespace_truncated(ulint space_id)$/;"	f	class:truncate_t
watch	include/buf0buf.h	/^	buf_page_t*			watch;$/;"	m	struct:buf_pool_t
weight	include/fts0tokenize.h	/^        double weight;  \/*!< word weight, unused in innodb *\/$/;"	m	struct:st_ft_word
while_node_t	include/pars0pars.h	/^struct while_node_t{$/;"	s
while_step	eval/eval0proc.cc	/^while_step($/;"	f
wildcard	include/fts0ast.h	/^	ibool			wildcard;	\/*!< TRUE if wild card set.*\/$/;"	m	struct:fts_ast_term_t
wildcard_words	fts/fts0que.cc	/^	ib_rbt_t*	wildcard_words;	\/*!< words with wildcard *\/$/;"	m	struct:fts_query_t	file:
will_lock	include/trx0trx.h	/^	ib_uint32_t	will_lock;	\/*!< Will acquire some locks. Increment$/;"	m	struct:trx_t
win_cmp_and_xchg_dword	include/os0atomic.ic	/^win_cmp_and_xchg_dword($/;"	f
win_cmp_and_xchg_lint	include/os0atomic.ic	/^win_cmp_and_xchg_lint($/;"	f
win_cmp_and_xchg_ulint	include/os0atomic.ic	/^win_cmp_and_xchg_ulint($/;"	f
win_thread_map	os/os0thread.cc	/^static WinThreadMap	win_thread_map;$/;"	v	file:
win_xchg_and_add	include/os0atomic.ic	/^win_xchg_and_add($/;"	f
withdraw	include/buf0buf.h	/^	UT_LIST_BASE_NODE_T(buf_page_t) withdraw;$/;"	m	struct:buf_pool_t
withdraw_clock	include/btr0pcur.h	/^	ulint		withdraw_clock;$/;"	m	struct:btr_pcur_t
withdraw_clock	include/btr0sea.h	/^	ulint	withdraw_clock;	\/*!< the withdraw clock value of the buffer$/;"	m	struct:btr_search_t
withdraw_clock	include/trx0undo.h	/^	ulint		withdraw_clock;	\/*!< the withdraw clock value of the$/;"	m	struct:trx_undo_t
withdraw_target	include/buf0buf.h	/^	ulint		withdraw_target;\/*!< target length of withdraw$/;"	m	struct:buf_pool_t
wkbByteOrder	include/gis0geo.h	/^enum wkbByteOrder$/;"	g
wkbGeometryCollection	include/gis0geo.h	/^  wkbGeometryCollection = 7$/;"	e	enum:wkbType
wkbLineString	include/gis0geo.h	/^  wkbLineString = 2,$/;"	e	enum:wkbType
wkbMultiLineString	include/gis0geo.h	/^  wkbMultiLineString = 5,$/;"	e	enum:wkbType
wkbMultiPoint	include/gis0geo.h	/^  wkbMultiPoint = 4,$/;"	e	enum:wkbType
wkbMultiPolygon	include/gis0geo.h	/^  wkbMultiPolygon = 6,$/;"	e	enum:wkbType
wkbNDR	include/gis0geo.h	/^  wkbNDR = 1     \/* Little Endian *\/$/;"	e	enum:wkbByteOrder
wkbPoint	include/gis0geo.h	/^  wkbPoint = 1,$/;"	e	enum:wkbType
wkbPolygon	include/gis0geo.h	/^  wkbPolygon = 3,$/;"	e	enum:wkbType
wkbType	include/gis0geo.h	/^enum wkbType$/;"	g
wkbXDR	include/gis0geo.h	/^  wkbXDR = 0,    \/* Big Endian    *\/$/;"	e	enum:wkbByteOrder
word	fts/fts0opt.cc	/^	fts_string_t	word;		\/*!< UTF-8 string *\/$/;"	m	struct:fts_zip_t	file:
word	fts/fts0que.cc	/^	fts_string_t	word;		\/*!< Word for which we need the freq,$/;"	m	struct:fts_word_freq_t	file:
word_count	include/fts0types.h	/^	ulint		word_count;	\/*!< Total words in the document *\/$/;"	m	struct:fts_doc_stats_t
word_freq	fts/fts0que.cc	/^			word_freq;	\/*!< Word frequency instance of the$/;"	m	struct:fts_select_t	file:
word_freqs	fts/fts0que.cc	/^	ib_rbt_t*	word_freqs;	\/*!< RB tree of word frequencies per$/;"	m	struct:fts_query_t	file:
word_map	fts/fts0que.cc	/^	ib_rbt_t*	word_map;	\/*!< Matched word map for$/;"	m	struct:fts_query_t	file:
word_vector	fts/fts0que.cc	/^	word_vector_t*	word_vector;	\/*!< Matched word vector for$/;"	m	struct:fts_query_t	file:
word_vector_t	fts/fts0que.cc	/^typedef std::vector<fts_string_t, ut_allocator<fts_string_t> >	word_vector_t;$/;"	t	file:
words	fts/fts0opt.cc	/^	ib_vector_t*	words;		\/*!< Word + Nodes read from FTS_INDEX,$/;"	m	struct:fts_optimize_t	file:
words	include/fts0fts.h	/^	byte*		words;		\/*!< this contains the words$/;"	m	struct:fts_ranking_t
words	include/fts0types.h	/^	ib_rbt_t*	words;		\/*!< Nodes; indexed by fts_string_t*,$/;"	m	struct:fts_index_cache_t
words_len	include/fts0fts.h	/^	ulint		words_len;	\/*!< words len *\/$/;"	m	struct:fts_ranking_t
write	include/ut0ut.h	/^	write($/;"	f	class:ib::logger
write	os/os0file.cc	/^	void write(Slot* slot)$/;"	f	class:SimulatedAIOHandler	file:
write	row/row0trunc.cc	/^truncate_t::write($/;"	f	class:truncate_t
write_buf	include/buf0dblwr.h	/^	byte*		write_buf;\/*!< write buffer used in writing to the$/;"	m	struct:buf_dblwr_t
write_buf_unaligned	include/buf0dblwr.h	/^	byte*		write_buf_unaligned;\/*!< pointer to write_buf,$/;"	m	struct:buf_dblwr_t
write_lsn	include/log0log.h	/^	lsn_t		write_lsn;	\/*!< last written lsn *\/$/;"	m	struct:log_t
write_mutex	include/log0log.h	/^	LogSysMutex	write_mutex;	\/*!< mutex protecting writing to log$/;"	m	struct:log_t
write_nodes_graph	fts/fts0opt.cc	/^	que_t*		write_nodes_graph;$/;"	m	struct:fts_optimize_graph_t	file:
write_row	handler/ha_innodb.cc	/^ha_innobase::write_row($/;"	f	class:ha_innobase
write_row	handler/ha_innopart.h	/^	write_row($/;"	f	class:ha_innopart
write_row_in_new_part	handler/ha_innopart.cc	/^ha_innopart::write_row_in_new_part($/;"	f	class:ha_innopart
write_row_in_part	handler/ha_innopart.cc	/^ha_innopart::write_row_in_part($/;"	f	class:ha_innopart
writer_is_wait_ex	include/sync0rw.h	/^	bool		writer_is_wait_ex;$/;"	m	struct:rw_lock_t
writer_mutex	include/log0recv.h	/^	ib_mutex_t		writer_mutex;\/*!< mutex coordinating$/;"	m	struct:recv_sys_t
writer_thread	include/sync0rw.h	/^	volatile os_thread_id_t	writer_thread;$/;"	m	struct:rw_lock_t
x_latch_at_savepoint	include/mtr0mtr.ic	/^mtr_t::x_latch_at_savepoint($/;"	f	class:mtr_t
x_lock	include/mtr0mtr.ic	/^mtr_t::x_lock(rw_lock_t* lock, const char* file, ulint line)$/;"	f	class:mtr_t
x_lock_space	mtr/mtr0mtr.cc	/^mtr_t::x_lock_space(ulint space_id, const char* file, ulint line)$/;"	f	class:mtr_t
xdes_arr_size	include/fsp0fsp.ic	/^xdes_arr_size($/;"	f
xdes_calc_descriptor_index	include/fsp0fsp.ic	/^xdes_calc_descriptor_index($/;"	f
xdes_calc_descriptor_page	include/fsp0fsp.ic	/^xdes_calc_descriptor_page($/;"	f
xdes_find_bit	fsp/fsp0fsp.cc	/^xdes_find_bit($/;"	f
xdes_get_bit	include/fsp0fsp.ic	/^xdes_get_bit($/;"	f
xdes_get_descriptor	fsp/fsp0fsp.cc	/^xdes_get_descriptor($/;"	f
xdes_get_descriptor_with_space_hdr	fsp/fsp0fsp.cc	/^xdes_get_descriptor_with_space_hdr($/;"	f
xdes_get_n_used	fsp/fsp0fsp.cc	/^xdes_get_n_used($/;"	f
xdes_get_offset	fsp/fsp0fsp.cc	/^xdes_get_offset($/;"	f
xdes_get_state	fsp/fsp0fsp.cc	/^xdes_get_state($/;"	f
xdes_init	fsp/fsp0fsp.cc	/^xdes_init($/;"	f
xdes_is_free	fsp/fsp0fsp.cc	/^xdes_is_free($/;"	f
xdes_is_full	fsp/fsp0fsp.cc	/^xdes_is_full($/;"	f
xdes_lst_get_descriptor	fsp/fsp0fsp.cc	/^xdes_lst_get_descriptor($/;"	f
xdes_mtr_get_bit	fsp/fsp0fsp.cc	/^xdes_mtr_get_bit($/;"	f
xdes_set_bit	fsp/fsp0fsp.cc	/^xdes_set_bit($/;"	f
xdes_set_state	fsp/fsp0fsp.cc	/^xdes_set_state($/;"	f
xdes_t	include/fsp0fsp.h	/^typedef	byte	xdes_t;$/;"	t
xid	include/trx0trx.h	/^	XID*		xid;		\/*!< X\/Open XA transaction$/;"	m	struct:trx_t
xid	include/trx0undo.h	/^	XID		xid;		\/*!< X\/Open XA transaction$/;"	m	struct:trx_undo_t
xmax	include/gis0type.h	/^	double	xmax;			\/*!< maximum on x *\/$/;"	m	struct:rtr_mbr
xmin	include/gis0type.h	/^	double	xmin;			\/*!< minimum on x *\/$/;"	m	struct:rtr_mbr
ymax	include/gis0type.h	/^	double	ymax;			\/*!< maximum on y *\/$/;"	m	struct:rtr_mbr
ymin	include/gis0type.h	/^	double	ymin;			\/*!< minimum on y *\/$/;"	m	struct:rtr_mbr
young_making_delta	include/buf0buf.h	/^	ulint	young_making_delta;	\/*!< num of pages made young since$/;"	m	struct:buf_pool_info_t
yy_accept	fts/fts0blex.cc	/^static yyconst flex_int16_t yy_accept[19] =$/;"	v	file:
yy_accept	fts/fts0tlex.cc	/^static yyconst flex_int16_t yy_accept[17] =$/;"	v	file:
yy_accept	pars/lexyy.cc	/^static yyconst flex_int16_t yy_accept[425] =$/;"	v	file:
yy_at_bol	fts/fts0blex.cc	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_at_bol	fts/fts0tlex.cc	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_at_bol	include/fts0blex.h	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state
yy_at_bol	include/fts0tlex.h	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state
yy_at_bol	pars/lexyy.cc	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	fts/fts0blex.cc	/^static yyconst flex_int16_t yy_base[22] =$/;"	v	file:
yy_base	fts/fts0tlex.cc	/^static yyconst flex_int16_t yy_base[20] =$/;"	v	file:
yy_base	pars/lexyy.cc	/^static yyconst flex_int16_t yy_base[438] =$/;"	v	file:
yy_bs_column	fts/fts0blex.cc	/^	int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_column	fts/fts0tlex.cc	/^	int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_column	include/fts0blex.h	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state
yy_bs_column	include/fts0tlex.h	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state
yy_bs_column	pars/lexyy.cc	/^	int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	fts/fts0blex.cc	/^	int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	fts/fts0tlex.cc	/^	int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	include/fts0blex.h	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state
yy_bs_lineno	include/fts0tlex.h	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state
yy_bs_lineno	pars/lexyy.cc	/^	int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	fts/fts0blex.cc	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	fts/fts0tlex.cc	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	include/fts0blex.h	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state
yy_buf_pos	include/fts0tlex.h	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state
yy_buf_pos	pars/lexyy.cc	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	fts/fts0blex.cc	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	fts/fts0tlex.cc	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	include/fts0blex.h	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state
yy_buf_size	include/fts0tlex.h	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state
yy_buf_size	pars/lexyy.cc	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	fts/fts0blex.cc	/^	YY_BUFFER_STATE * yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack	fts/fts0tlex.cc	/^	YY_BUFFER_STATE * yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack	pars/lexyy.cc	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	fts/fts0blex.cc	/^	size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_max	fts/fts0tlex.cc	/^	size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_max	pars/lexyy.cc	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	fts/fts0blex.cc	/^	size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_top	fts/fts0tlex.cc	/^	size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	struct:yyguts_t	file:
yy_buffer_stack_top	pars/lexyy.cc	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	fts/fts0blex.cc	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state	fts/fts0tlex.cc	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state	include/fts0blex.h	/^struct yy_buffer_state$/;"	s
yy_buffer_state	include/fts0tlex.h	/^struct yy_buffer_state$/;"	s
yy_buffer_state	pars/lexyy.cc	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	fts/fts0blex.cc	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_status	fts/fts0tlex.cc	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_status	include/fts0blex.h	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state
yy_buffer_status	include/fts0tlex.h	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state
yy_buffer_status	pars/lexyy.cc	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	fts/fts0blex.cc	/^	char *yy_c_buf_p;$/;"	m	struct:yyguts_t	file:
yy_c_buf_p	fts/fts0tlex.cc	/^	char *yy_c_buf_p;$/;"	m	struct:yyguts_t	file:
yy_c_buf_p	pars/lexyy.cc	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	fts/fts0blex.cc	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_ch_buf	fts/fts0tlex.cc	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_ch_buf	include/fts0blex.h	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state
yy_ch_buf	include/fts0tlex.h	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state
yy_ch_buf	pars/lexyy.cc	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	fts/fts0blex.cc	/^static yyconst flex_int16_t yy_chk[32] =$/;"	v	file:
yy_chk	fts/fts0tlex.cc	/^static yyconst flex_int16_t yy_chk[29] =$/;"	v	file:
yy_chk	pars/lexyy.cc	/^static yyconst flex_int16_t yy_chk[1414] =$/;"	v	file:
yy_create_buffer	pars/lexyy.cc	/^static YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f	file:
yy_def	fts/fts0blex.cc	/^static yyconst flex_int16_t yy_def[22] =$/;"	v	file:
yy_def	fts/fts0tlex.cc	/^static yyconst flex_int16_t yy_def[20] =$/;"	v	file:
yy_def	pars/lexyy.cc	/^static yyconst flex_int16_t yy_def[438] =$/;"	v	file:
yy_delete_buffer	pars/lexyy.cc	/^void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	fts/fts0blex.cc	/^	int yy_did_buffer_switch_on_eof;$/;"	m	struct:yyguts_t	file:
yy_did_buffer_switch_on_eof	fts/fts0tlex.cc	/^	int yy_did_buffer_switch_on_eof;$/;"	m	struct:yyguts_t	file:
yy_did_buffer_switch_on_eof	pars/lexyy.cc	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	fts/fts0blex.cc	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_ec	fts/fts0tlex.cc	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_ec	pars/lexyy.cc	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	fts/fts0blex.cc	/^static void yy_fatal_error (yyconst char* msg ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f	file:
yy_fatal_error	fts/fts0tlex.cc	/^static void yy_fatal_error (yyconst char* msg ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f	file:
yy_fatal_error	pars/lexyy.cc	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	fts/fts0blex.cc	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_fill_buffer	fts/fts0tlex.cc	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_fill_buffer	include/fts0blex.h	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state
yy_fill_buffer	include/fts0tlex.h	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state
yy_fill_buffer	pars/lexyy.cc	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	fts/fts0blex.cc	138;"	d	file:
yy_flex_debug	fts/fts0tlex.cc	138;"	d	file:
yy_flex_debug	include/fts0blex.h	131;"	d
yy_flex_debug	include/fts0tlex.h	131;"	d
yy_flex_debug	pars/lexyy.cc	/^int yy_flex_debug = 0;$/;"	v
yy_flex_debug_r	fts/fts0blex.cc	/^	int yy_flex_debug_r;$/;"	m	struct:yyguts_t	file:
yy_flex_debug_r	fts/fts0tlex.cc	/^	int yy_flex_debug_r;$/;"	m	struct:yyguts_t	file:
yy_flex_strlen	fts/fts0blex.cc	/^static int yy_flex_strlen (yyconst char * s ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f	file:
yy_flex_strlen	fts/fts0tlex.cc	/^static int yy_flex_strlen (yyconst char * s ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f	file:
yy_flex_strlen	pars/lexyy.cc	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	fts/fts0blex.cc	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f	file:
yy_flex_strncpy	fts/fts0tlex.cc	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n ,            yyscan_t yyscanner MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)) MY_ATTRIBUTE((unused)))$/;"	f	file:
yy_flex_strncpy	pars/lexyy.cc	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	pars/lexyy.cc	/^void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	fts/fts0blex.cc	/^static int yy_get_next_buffer (yyscan_t yyscanner)$/;"	f	file:
yy_get_next_buffer	fts/fts0tlex.cc	/^static int yy_get_next_buffer (yyscan_t yyscanner)$/;"	f	file:
yy_get_next_buffer	pars/lexyy.cc	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	fts/fts0blex.cc	/^static yy_state_type yy_get_previous_state (yyscan_t yyscanner)$/;"	f	file:
yy_get_previous_state	fts/fts0tlex.cc	/^static yy_state_type yy_get_previous_state (yyscan_t yyscanner)$/;"	f	file:
yy_get_previous_state	pars/lexyy.cc	/^yy_state_type yy_get_previous_state (void)$/;"	f
yy_hold_char	fts/fts0blex.cc	/^	char yy_hold_char;$/;"	m	struct:yyguts_t	file:
yy_hold_char	fts/fts0tlex.cc	/^	char yy_hold_char;$/;"	m	struct:yyguts_t	file:
yy_hold_char	pars/lexyy.cc	/^static char yy_hold_char;$/;"	v	file:
yy_init	fts/fts0blex.cc	/^	int yy_init;$/;"	m	struct:yyguts_t	file:
yy_init	fts/fts0tlex.cc	/^	int yy_init;$/;"	m	struct:yyguts_t	file:
yy_init	pars/lexyy.cc	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	pars/lexyy.cc	/^static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	fts/fts0blex.cc	/^static int yy_init_globals (yyscan_t yyscanner)$/;"	f	file:
yy_init_globals	fts/fts0tlex.cc	/^static int yy_init_globals (yyscan_t yyscanner)$/;"	f	file:
yy_init_globals	pars/lexyy.cc	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	fts/fts0blex.cc	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_input_file	fts/fts0tlex.cc	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_input_file	include/fts0blex.h	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state
yy_input_file	include/fts0tlex.h	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state
yy_input_file	pars/lexyy.cc	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	fts/fts0blex.cc	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	fts/fts0tlex.cc	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	include/fts0blex.h	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state
yy_is_interactive	include/fts0tlex.h	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state
yy_is_interactive	pars/lexyy.cc	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	fts/fts0blex.cc	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	fts/fts0tlex.cc	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	include/fts0blex.h	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state
yy_is_our_buffer	include/fts0tlex.h	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state
yy_is_our_buffer	pars/lexyy.cc	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	fts/fts0blex.cc	/^	char* yy_last_accepting_cpos;$/;"	m	struct:yyguts_t	file:
yy_last_accepting_cpos	fts/fts0tlex.cc	/^	char* yy_last_accepting_cpos;$/;"	m	struct:yyguts_t	file:
yy_last_accepting_cpos	pars/lexyy.cc	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	fts/fts0blex.cc	/^	yy_state_type yy_last_accepting_state;$/;"	m	struct:yyguts_t	file:
yy_last_accepting_state	fts/fts0tlex.cc	/^	yy_state_type yy_last_accepting_state;$/;"	m	struct:yyguts_t	file:
yy_last_accepting_state	pars/lexyy.cc	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	pars/lexyy.cc	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	fts/fts0blex.cc	/^static yyconst flex_int32_t yy_meta[9] =$/;"	v	file:
yy_meta	fts/fts0tlex.cc	/^static yyconst flex_int32_t yy_meta[8] =$/;"	v	file:
yy_meta	pars/lexyy.cc	/^static yyconst flex_int32_t yy_meta[57] =$/;"	v	file:
yy_more_flag	fts/fts0blex.cc	/^	int yy_more_flag;$/;"	m	struct:yyguts_t	file:
yy_more_flag	fts/fts0tlex.cc	/^	int yy_more_flag;$/;"	m	struct:yyguts_t	file:
yy_more_len	fts/fts0blex.cc	/^	int yy_more_len;$/;"	m	struct:yyguts_t	file:
yy_more_len	fts/fts0tlex.cc	/^	int yy_more_len;$/;"	m	struct:yyguts_t	file:
yy_n_chars	fts/fts0blex.cc	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	fts/fts0blex.cc	/^	int yy_n_chars;$/;"	m	struct:yyguts_t	file:
yy_n_chars	fts/fts0tlex.cc	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	fts/fts0tlex.cc	/^	int yy_n_chars;$/;"	m	struct:yyguts_t	file:
yy_n_chars	include/fts0blex.h	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state
yy_n_chars	include/fts0tlex.h	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state
yy_n_chars	pars/lexyy.cc	/^	yy_size_t yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	pars/lexyy.cc	/^static yy_size_t yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	fts/fts0blex.cc	312;"	d	file:
yy_new_buffer	fts/fts0tlex.cc	312;"	d	file:
yy_new_buffer	include/fts0blex.h	335;"	d
yy_new_buffer	include/fts0tlex.h	335;"	d
yy_new_buffer	pars/lexyy.cc	319;"	d	file:
yy_nxt	fts/fts0blex.cc	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	fts/fts0blex.cc	/^static yyconst flex_int16_t yy_nxt[32] =$/;"	v	file:
yy_nxt	fts/fts0tlex.cc	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	fts/fts0tlex.cc	/^static yyconst flex_int16_t yy_nxt[29] =$/;"	v	file:
yy_nxt	pars/lexyy.cc	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	pars/lexyy.cc	/^static yyconst flex_int16_t yy_nxt[1414] =$/;"	v	file:
yy_reduce_print	fts/fts0pars.cc	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_reduce_print	pars/pars0grm.cc	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_set_bol	fts/fts0blex.cc	324;"	d	file:
yy_set_bol	fts/fts0tlex.cc	324;"	d	file:
yy_set_bol	include/fts0blex.h	334;"	d
yy_set_bol	include/fts0tlex.h	334;"	d
yy_set_bol	pars/lexyy.cc	331;"	d	file:
yy_set_interactive	fts/fts0blex.cc	314;"	d	file:
yy_set_interactive	fts/fts0tlex.cc	314;"	d	file:
yy_set_interactive	include/fts0blex.h	336;"	d
yy_set_interactive	include/fts0tlex.h	336;"	d
yy_set_interactive	pars/lexyy.cc	321;"	d	file:
yy_size_t	fts/fts0blex.cc	/^typedef size_t yy_size_t;$/;"	t	file:
yy_size_t	fts/fts0tlex.cc	/^typedef size_t yy_size_t;$/;"	t	file:
yy_size_t	include/fts0blex.h	/^typedef size_t yy_size_t;$/;"	t
yy_size_t	include/fts0tlex.h	/^typedef size_t yy_size_t;$/;"	t
yy_size_t	pars/lexyy.cc	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	fts/fts0pars.cc	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_stack_print	pars/pars0grm.cc	/^yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)$/;"	f	file:
yy_start	fts/fts0blex.cc	/^	int yy_start;$/;"	m	struct:yyguts_t	file:
yy_start	fts/fts0tlex.cc	/^	int yy_start;$/;"	m	struct:yyguts_t	file:
yy_start	pars/lexyy.cc	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_start_stack	fts/fts0blex.cc	/^	int *yy_start_stack;$/;"	m	struct:yyguts_t	file:
yy_start_stack	fts/fts0tlex.cc	/^	int *yy_start_stack;$/;"	m	struct:yyguts_t	file:
yy_start_stack_depth	fts/fts0blex.cc	/^	int yy_start_stack_depth;$/;"	m	struct:yyguts_t	file:
yy_start_stack_depth	fts/fts0tlex.cc	/^	int yy_start_stack_depth;$/;"	m	struct:yyguts_t	file:
yy_start_stack_ptr	fts/fts0blex.cc	/^	int yy_start_stack_ptr;$/;"	m	struct:yyguts_t	file:
yy_start_stack_ptr	fts/fts0tlex.cc	/^	int yy_start_stack_ptr;$/;"	m	struct:yyguts_t	file:
yy_state_type	fts/fts0blex.cc	/^typedef int yy_state_type;$/;"	t	file:
yy_state_type	fts/fts0tlex.cc	/^typedef int yy_state_type;$/;"	t	file:
yy_state_type	pars/lexyy.cc	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	pars/lexyy.cc	/^MY_ATTRIBUTE((unused)) static void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	file:
yy_symbol_print	fts/fts0pars.cc	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_print	pars/pars0grm.cc	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	fts/fts0pars.cc	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	pars/pars0grm.cc	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	fts/fts0blex.cc	/^struct yy_trans_info$/;"	s	file:
yy_trans_info	fts/fts0tlex.cc	/^struct yy_trans_info$/;"	s	file:
yy_trans_info	pars/lexyy.cc	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	fts/fts0blex.cc	/^static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)$/;"	f	file:
yy_try_NUL_trans	fts/fts0tlex.cc	/^static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)$/;"	f	file:
yy_try_NUL_trans	pars/lexyy.cc	/^static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	fts/fts0blex.cc	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yy_verify	fts/fts0tlex.cc	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yy_verify	pars/lexyy.cc	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	fts/fts0pars.cc	/^union yyalloc$/;"	u	file:
yyalloc	pars/lexyy.cc	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	pars/pars0grm.cc	/^union yyalloc$/;"	u	file:
yychar	fts/fts0pars.cc	69;"	d	file:
yychar	pars/pars0grm.cc	/^int yychar;$/;"	v
yycheck	fts/fts0pars.cc	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yycheck	pars/pars0grm.cc	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yyclearin	fts/fts0pars.cc	590;"	d	file:
yyclearin	pars/pars0grm.cc	1182;"	d	file:
yycolumn	fts/fts0blex.cc	137;"	d	file:
yycolumn	fts/fts0tlex.cc	137;"	d	file:
yycolumn	include/fts0blex.h	130;"	d
yycolumn	include/fts0tlex.h	130;"	d
yyconst	fts/fts0blex.cc	108;"	d	file:
yyconst	fts/fts0blex.cc	110;"	d	file:
yyconst	fts/fts0tlex.cc	108;"	d	file:
yyconst	fts/fts0tlex.cc	110;"	d	file:
yyconst	include/fts0blex.h	111;"	d
yyconst	include/fts0blex.h	113;"	d
yyconst	include/fts0tlex.h	111;"	d
yyconst	include/fts0tlex.h	113;"	d
yyconst	pars/lexyy.cc	108;"	d	file:
yyconst	pars/lexyy.cc	110;"	d	file:
yydebug	fts/fts0pars.cc	/^int yydebug;$/;"	v
yydebug	fts/fts0pars.cc	70;"	d	file:
yydebug	pars/pars0grm.cc	/^int yydebug;$/;"	v
yydefact	fts/fts0pars.cc	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefact	pars/pars0grm.cc	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	fts/fts0pars.cc	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydefgoto	pars/pars0grm.cc	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	fts/fts0pars.cc	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yydestruct	pars/pars0grm.cc	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	pars/lexyy.cc	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	fts/fts0pars.cc	589;"	d	file:
yyerrok	pars/pars0grm.cc	1181;"	d	file:
yyerror	fts/fts0pars.cc	67;"	d	file:
yyerror	pars/pars0pars.cc	/^yyerror($/;"	f
yyextra	fts/fts0blex.cc	133;"	d	file:
yyextra	fts/fts0tlex.cc	133;"	d	file:
yyextra	include/fts0blex.h	126;"	d
yyextra	include/fts0tlex.h	126;"	d
yyextra_r	fts/fts0blex.cc	/^	YY_EXTRA_TYPE yyextra_r;$/;"	m	struct:yyguts_t	file:
yyextra_r	fts/fts0tlex.cc	/^	YY_EXTRA_TYPE yyextra_r;$/;"	m	struct:yyguts_t	file:
yyfree	pars/lexyy.cc	/^void yyfree (void * ptr )$/;"	f
yyget_debug	pars/lexyy.cc	/^int yyget_debug  (void)$/;"	f
yyget_in	pars/lexyy.cc	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	pars/lexyy.cc	/^yy_size_t yyget_leng  (void)$/;"	f
yyget_lineno	pars/lexyy.cc	/^int yyget_lineno  (void)$/;"	f
yyget_out	pars/lexyy.cc	/^FILE *yyget_out  (void)$/;"	f
yyget_text	pars/lexyy.cc	/^char *yyget_text  (void)$/;"	f
yyguts_t	fts/fts0blex.cc	/^struct yyguts_t$/;"	s	file:
yyguts_t	fts/fts0tlex.cc	/^struct yyguts_t$/;"	s	file:
yyin	fts/fts0blex.cc	131;"	d	file:
yyin	fts/fts0tlex.cc	131;"	d	file:
yyin	include/fts0blex.h	124;"	d
yyin	include/fts0tlex.h	124;"	d
yyin	pars/lexyy.cc	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyin_r	fts/fts0blex.cc	/^	FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yyin_r	fts/fts0tlex.cc	/^	FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yyinput	fts/fts0blex.cc	/^	static int yyinput (yyscan_t yyscanner)$/;"	f	file:
yyinput	fts/fts0tlex.cc	/^	static int yyinput (yyscan_t yyscanner)$/;"	f	file:
yyinput	pars/lexyy.cc	/^    static int yyinput (void)$/;"	f	file:
yyleng	fts/fts0blex.cc	134;"	d	file:
yyleng	fts/fts0tlex.cc	134;"	d	file:
yyleng	include/fts0blex.h	127;"	d
yyleng	include/fts0tlex.h	127;"	d
yyleng	pars/lexyy.cc	/^yy_size_t yyleng;$/;"	v
yyleng_r	fts/fts0blex.cc	/^	int yyleng_r;$/;"	m	struct:yyguts_t	file:
yyleng_r	fts/fts0tlex.cc	/^	int yyleng_r;$/;"	m	struct:yyguts_t	file:
yyless	fts/fts0blex.cc	1621;"	d	file:
yyless	fts/fts0blex.cc	1622;"	d	file:
yyless	fts/fts0blex.cc	190;"	d	file:
yyless	fts/fts0tlex.cc	1614;"	d	file:
yyless	fts/fts0tlex.cc	1615;"	d	file:
yyless	fts/fts0tlex.cc	190;"	d	file:
yyless	pars/lexyy.cc	182;"	d	file:
yyless	pars/lexyy.cc	2920;"	d	file:
yyless	pars/lexyy.cc	2921;"	d	file:
yylex	fts/fts0pars.cc	66;"	d	file:
yylex_destroy	pars/lexyy.cc	/^MY_ATTRIBUTE((unused)) static int yylex_destroy  (void)$/;"	f	file:
yylineno	fts/fts0blex.cc	136;"	d	file:
yylineno	fts/fts0tlex.cc	136;"	d	file:
yylineno	include/fts0blex.h	129;"	d
yylineno	include/fts0tlex.h	129;"	d
yylineno	pars/lexyy.cc	/^int yylineno = 1;$/;"	v
yylineno_r	fts/fts0blex.cc	/^	int yylineno_r;$/;"	m	struct:yyguts_t	file:
yylineno_r	fts/fts0tlex.cc	/^	int yylineno_r;$/;"	m	struct:yyguts_t	file:
yylval	fts/fts0pars.cc	68;"	d	file:
yylval	pars/pars0grm.cc	/^YYSTYPE yylval;$/;"	v
yymore	fts/fts0blex.cc	448;"	d	file:
yymore	fts/fts0tlex.cc	444;"	d	file:
yymore	pars/lexyy.cc	912;"	d	file:
yynerrs	fts/fts0pars.cc	71;"	d	file:
yynerrs	pars/pars0grm.cc	/^int yynerrs;$/;"	v
yyout	fts/fts0blex.cc	132;"	d	file:
yyout	fts/fts0tlex.cc	132;"	d	file:
yyout	include/fts0blex.h	125;"	d
yyout	include/fts0tlex.h	125;"	d
yyout	pars/lexyy.cc	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyout_r	fts/fts0blex.cc	/^	FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yyout_r	fts/fts0tlex.cc	/^	FILE *yyin_r, *yyout_r;$/;"	m	struct:yyguts_t	file:
yypact	fts/fts0pars.cc	/^static const yytype_int8 yypact[] =$/;"	v	file:
yypact	pars/pars0grm.cc	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact_value_is_default	fts/fts0pars.cc	563;"	d	file:
yyparse	fts/fts0pars.cc	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yyparse	fts/fts0pars.cc	65;"	d	file:
yyparse	pars/pars0grm.cc	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yypgoto	fts/fts0pars.cc	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yypgoto	pars/pars0grm.cc	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yypop_buffer_state	pars/lexyy.cc	/^void yypop_buffer_state (void)$/;"	f
yyprhs	fts/fts0pars.cc	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yyprhs	pars/pars0grm.cc	/^static const yytype_uint16 yyprhs[] =$/;"	v	file:
yypush_buffer_state	pars/lexyy.cc	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	fts/fts0pars.cc	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr1	pars/pars0grm.cc	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	fts/fts0pars.cc	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyr2	pars/pars0grm.cc	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	pars/lexyy.cc	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	pars/lexyy.cc	/^void yyrestart  (FILE * input_file )$/;"	f
yyrhs	fts/fts0pars.cc	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrhs	pars/pars0grm.cc	/^static const yytype_int16 yyrhs[] =$/;"	v	file:
yyrline	fts/fts0pars.cc	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyrline	pars/pars0grm.cc	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyscan_t	fts/fts0blex.cc	/^typedef void* yyscan_t;$/;"	t	file:
yyscan_t	fts/fts0tlex.cc	/^typedef void* yyscan_t;$/;"	t	file:
yyscan_t	include/fts0blex.h	/^typedef void* yyscan_t;$/;"	t
yyscan_t	include/fts0tlex.h	/^typedef void* yyscan_t;$/;"	t
yyscanner	fts/fts0pars.cc	/^	void*		yyscanner;$/;"	m	struct:fts_lexer_t	file:
yyset_debug	pars/lexyy.cc	/^void yyset_debug (int  bdebug )$/;"	f
yyset_in	pars/lexyy.cc	/^void yyset_in (FILE *  in_str )$/;"	f
yyset_lineno	pars/lexyy.cc	/^void yyset_lineno (int  line_number )$/;"	f
yyset_out	pars/lexyy.cc	/^void yyset_out (FILE *  out_str )$/;"	f
yyss	pars/pars0grm.cc	/^  yytype_int16 yyss;$/;"	m	union:yyalloc	file:
yyss_alloc	fts/fts0pars.cc	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	fts/fts0pars.cc	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystos	pars/pars0grm.cc	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	fts/fts0pars.cc	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	fts/fts0pars.cc	899;"	d	file:
yystpcpy	pars/pars0grm.cc	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	pars/pars0grm.cc	1477;"	d	file:
yystrlen	fts/fts0pars.cc	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	fts/fts0pars.cc	876;"	d	file:
yystrlen	pars/pars0grm.cc	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	pars/pars0grm.cc	1454;"	d	file:
yystype	fts/fts0pars.cc	170;"	d	file:
yystype	include/fts0pars.h	66;"	d
yystype	include/pars0grm.h	255;"	d
yystype	pars/pars0grm.cc	321;"	d	file:
yysyntax_error	fts/fts0pars.cc	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yysyntax_error	pars/pars0grm.cc	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:
yytable	fts/fts0pars.cc	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yytable	pars/pars0grm.cc	/^static const yytype_uint16 yytable[] =$/;"	v	file:
yytable_value_is_error	fts/fts0pars.cc	566;"	d	file:
yyterminate	fts/fts0blex.cc	660;"	d	file:
yyterminate	fts/fts0tlex.cc	656;"	d	file:
yyterminate	pars/lexyy.cc	1145;"	d	file:
yytext	fts/fts0blex.cc	135;"	d	file:
yytext	fts/fts0tlex.cc	135;"	d	file:
yytext	include/fts0blex.h	128;"	d
yytext	include/fts0tlex.h	128;"	d
yytext	pars/lexyy.cc	/^char *yytext;$/;"	v
yytext_ptr	fts/fts0blex.cc	345;"	d	file:
yytext_ptr	fts/fts0tlex.cc	345;"	d	file:
yytext_ptr	include/fts0blex.h	228;"	d
yytext_ptr	include/fts0tlex.h	228;"	d
yytext_ptr	pars/lexyy.cc	359;"	d	file:
yytext_r	fts/fts0blex.cc	/^	char *yytext_r;$/;"	m	struct:yyguts_t	file:
yytext_r	fts/fts0tlex.cc	/^	char *yytext_r;$/;"	m	struct:yyguts_t	file:
yytname	fts/fts0pars.cc	/^static const char *const yytname[] =$/;"	v	file:
yytname	pars/pars0grm.cc	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	fts/fts0pars.cc	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytnamerr	pars/pars0grm.cc	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	fts/fts0pars.cc	/^   enum yytokentype {$/;"	g	file:
yytokentype	include/fts0pars.h	/^   enum yytokentype {$/;"	g
yytokentype	include/pars0grm.h	/^   enum yytokentype {$/;"	g
yytokentype	pars/pars0grm.cc	/^   enum yytokentype {$/;"	g	file:
yytoknum	fts/fts0pars.cc	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytoknum	pars/pars0grm.cc	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	fts/fts0pars.cc	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytranslate	pars/pars0grm.cc	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	fts/fts0pars.cc	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	fts/fts0pars.cc	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int16	pars/pars0grm.cc	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	pars/pars0grm.cc	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	fts/fts0pars.cc	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	fts/fts0pars.cc	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	fts/fts0pars.cc	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_int8	pars/pars0grm.cc	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	pars/pars0grm.cc	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	pars/pars0grm.cc	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	fts/fts0pars.cc	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	fts/fts0pars.cc	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint16	pars/pars0grm.cc	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	pars/pars0grm.cc	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	fts/fts0pars.cc	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	fts/fts0pars.cc	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yytype_uint8	pars/pars0grm.cc	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	pars/pars0grm.cc	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyvs	pars/pars0grm.cc	/^  YYSTYPE yyvs;$/;"	m	union:yyalloc	file:
yyvs_alloc	fts/fts0pars.cc	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yywrap	pars/lexyy.cc	345;"	d	file:
zip	fts/fts0opt.cc	/^	fts_zip_t*	zip;		\/*!< Words read from the FTS_INDEX *\/$/;"	m	struct:fts_optimize_t	file:
zip	include/buf0buf.h	/^	page_zip_des_t	zip;		\/*!< compressed page; zip.data$/;"	m	class:buf_page_t
zip_clean	include/buf0buf.h	/^	UT_LIST_BASE_NODE_T(buf_page_t)	zip_clean;$/;"	m	struct:buf_pool_t
zip_failure_threshold_pct	dict/dict0dict.cc	/^ulong	zip_failure_threshold_pct = 5;$/;"	v
zip_free	include/buf0buf.h	/^	UT_LIST_BASE_NODE_T(buf_buddy_free_t) zip_free[BUF_BUDDY_SIZES_MAX];$/;"	m	struct:buf_pool_t
zip_hash	include/buf0buf.h	/^	hash_table_t*	zip_hash;	\/*!< hash table of buf_block_t blocks$/;"	m	struct:buf_pool_t
zip_mutex	include/buf0buf.h	/^	BufPoolZipMutex	zip_mutex;	\/*!< Zip mutex of this buffer$/;"	m	struct:buf_pool_t
zip_pad	include/dict0mem.h	/^	zip_pad_info_t	zip_pad;\/*!< Information about state of$/;"	m	struct:dict_index_t
zip_pad_info_t	include/dict0mem.h	/^struct zip_pad_info_t {$/;"	s
zip_pad_max	dict/dict0dict.cc	/^ulong	zip_pad_max = 50;$/;"	v
zip_pad_mutex_key	sync/sync0sync.cc	/^mysql_pfs_key_t zip_pad_mutex_key;$/;"	v
zip_ssize	handler/i_s.cc	/^	unsigned	zip_ssize:PAGE_ZIP_SSIZE_BITS;$/;"	m	struct:buf_page_info_t	file:
zp	fts/fts0opt.cc	/^	z_streamp	zp;		\/*!< ZLib state *\/$/;"	m	struct:fts_zip_t	file:
~AIO	os/os0file.cc	/^AIO::~AIO()$/;"	f	class:AIO
~AbstractCallback	row/row0import.cc	/^	virtual ~AbstractCallback()$/;"	f	class:AbstractCallback
~Altered_partitions	handler/ha_innopart.cc	/^Altered_partitions::~Altered_partitions()$/;"	f	class:Altered_partitions
~BlockMutexPolicy	include/sync0policy.h	/^	~BlockMutexPolicy() { }$/;"	f	class:BlockMutexPolicy
~BtrBulk	include/btr0bulk.h	/^	~BtrBulk()$/;"	f	class:BtrBulk
~Callback	row/row0trunc.cc	/^	virtual ~Callback()$/;"	f	class:Callback
~Command	mtr/mtr0mtr.cc	/^	~Command()$/;"	f	class:mtr_t::Command
~Datafile	include/fsp0file.h	/^	virtual ~Datafile()$/;"	f	class:Datafile
~FilSpace	include/fil0fil.h	/^	~FilSpace()$/;"	f	class:FilSpace
~FlushHp	include/buf0buf.h	/^	virtual ~FlushHp() {}$/;"	f	class:FlushHp
~FlushObserver	buf/buf0flu.cc	/^FlushObserver::~FlushObserver()$/;"	f	class:FlushObserver
~Folder	include/fil0fil.h	/^	~Folder()$/;"	f	class:Folder
~GenericPolicy	include/sync0policy.h	/^	~GenericPolicy() { }$/;"	f	struct:GenericPolicy
~Ha_innopart_share	handler/ha_innopart.cc	/^Ha_innopart_share::~Ha_innopart_share()$/;"	f	class:Ha_innopart_share
~HazardPointer	include/buf0buf.h	/^	virtual ~HazardPointer() {}$/;"	f	class:HazardPointer
~IORequest	include/os0file.h	/^	~IORequest() { }$/;"	f	class:IORequest
~LRUHp	include/buf0buf.h	/^	virtual ~LRUHp() {}$/;"	f	class:LRUHp
~LRUItr	include/buf0buf.h	/^	virtual ~LRUItr() {}$/;"	f	class:LRUItr
~LatchMeta	include/sync0types.h	/^	~LatchMeta() { }$/;"	f	class:LatchMeta
~LinuxAIOHandler	os/os0file.cc	/^	~LinuxAIOHandler()$/;"	f	class:LinuxAIOHandler
~MVCC	read/read0read.cc	/^MVCC::~MVCC()$/;"	f	class:MVCC
~MutexDebug	include/sync0policy.h	/^	virtual ~MutexDebug() { }$/;"	f	class:MutexDebug
~MutexMonitor	include/ut0mutex.h	/^	~MutexMonitor() { }$/;"	f	class:MutexMonitor
~OSMutex	include/sync0types.h	/^	~OSMutex() { }$/;"	f	struct:OSMutex
~PageBulk	include/btr0bulk.h	/^	~PageBulk()$/;"	f	class:PageBulk
~Pool	include/ut0pool.h	/^	~Pool()$/;"	f	struct:Pool
~PoolManager	include/ut0pool.h	/^	~PoolManager()$/;"	f	struct:PoolManager
~ReadView	read/read0read.cc	/^ReadView::~ReadView()$/;"	f	class:ReadView
~RemoteDatafile	include/fsp0file.h	/^	~RemoteDatafile()$/;"	f	class:RemoteDatafile
~SimulatedAIOHandler	os/os0file.cc	/^	~SimulatedAIOHandler()$/;"	f	class:SimulatedAIOHandler
~SyncFileIO	os/os0file.cc	/^	~SyncFileIO()$/;"	f	class:SyncFileIO
~SysIndexCallback	include/row0mysql.h	/^	virtual ~SysIndexCallback() { }$/;"	f	struct:SysIndexCallback
~SysTablespace	include/fsp0sysspace.h	/^	~SysTablespace()$/;"	f	class:SysTablespace
~TTASFutexMutex	include/ib0mutex.h	/^	~TTASFutexMutex()$/;"	f
~Tablespace	include/fsp0space.h	/^	virtual ~Tablespace()$/;"	f	class:Tablespace
~TruncateLogger	row/row0trunc.cc	/^	~TruncateLogger()$/;"	f	class:TruncateLogger
~TrxInInnoDB	include/trx0trx.h	/^	~TrxInInnoDB()$/;"	f	class:TrxInInnoDB
~block_t	include/dyn0buf.h	/^		~block_t() { }$/;"	f	class:dyn_buf_t::block_t
~btrsea_sync_check	include/sync0types.h	/^	virtual ~btrsea_sync_check() { }$/;"	f	struct:btrsea_sync_check
~dict_foreign_set_free	include/dict0mem.h	/^	~dict_foreign_set_free()$/;"	f	struct:dict_foreign_set_free
~dict_intrinsic_table_t	include/sess0sess.h	/^	~dict_intrinsic_table_t()$/;"	f	class:dict_intrinsic_table_t
~dict_sync_check	include/sync0types.h	/^	virtual ~dict_sync_check() { }$/;"	f	struct:dict_sync_check
~dyn_buf_t	include/dyn0buf.h	/^	~dyn_buf_t()$/;"	f	class:dyn_buf_t
~error	ut/ut0ut.cc	/^error::~error()$/;"	f	class:ib::error
~error_or_warn	ut/ut0ut.cc	/^error_or_warn::~error_or_warn()$/;"	f	class:ib::error_or_warn
~fatal	ut/ut0ut.cc	/^fatal::~fatal()$/;"	f	class:ib::fatal
~fatal_or_error	ut/ut0ut.cc	/^fatal_or_error::~fatal_or_error()$/;"	f	class:ib::fatal_or_error
~fts_t	fts/fts0fts.cc	/^fts_t::~fts_t()$/;"	f	class:fts_t
~ha_innobase	handler/ha_innodb.cc	/^ha_innobase::~ha_innobase()$/;"	f	class:ha_innobase
~ha_innobase_inplace_ctx	handler/handler0alter.cc	/^	~ha_innobase_inplace_ctx()$/;"	f	struct:ha_innobase_inplace_ctx
~ha_innopart	handler/ha_innopart.cc	/^ha_innopart::~ha_innopart()$/;"	f	class:ha_innopart
~ha_innopart_inplace_ctx	handler/handler0alter.cc	/^	~ha_innopart_inplace_ctx()$/;"	f	class:ha_innopart_inplace_ctx
~ib_counter_t	include/ut0counter.h	/^	~ib_counter_t()$/;"	f	class:ib_counter_t
~ib_dec_in_dtor	row/row0ins.cc	/^	~ib_dec_in_dtor() {$/;"	f	class:ib_dec_in_dtor
~ids_t	include/read0types.h	/^		~ids_t() { UT_DELETE_ARRAY(m_ptr); }$/;"	f	class:ReadView::ids_t
~index_tuple_info_t	row/row0merge.cc	/^	~index_tuple_info_t()$/;"	f	class:index_tuple_info_t
~info	ut/ut0ut.cc	/^info::~info()$/;"	f	class:ib::info
~innodb_session_t	include/sess0sess.h	/^	~innodb_session_t()$/;"	f	class:innodb_session_t
~mem_heap_allocator	include/mem0mem.h	/^	~mem_heap_allocator() { m_heap = 0; }$/;"	f	class:mem_heap_allocator
~mtr_t	include/mtr0mtr.h	/^	~mtr_t() { }$/;"	f	struct:mtr_t
~rec_printer	include/rem0rec.h	/^	virtual ~rec_printer() {}$/;"	f	class:rec_printer
~rw_lock_t	include/sync0rw.h	/^	virtual ~rw_lock_t()$/;"	f	struct:rw_lock_t
~set_numa_interleave_t	buf/buf0buf.cc	/^	~set_numa_interleave_t()$/;"	f	struct:set_numa_interleave_t
~sync_check_functor_t	include/sync0types.h	/^	virtual ~sync_check_functor_t() { }$/;"	f	struct:sync_check_functor_t
~truncate_t	row/row0trunc.cc	/^truncate_t::~truncate_t()$/;"	f	class:truncate_t
~ut_chrono_t	include/ut0dbg.h	/^	~ut_chrono_t()$/;"	f	class:ut_chrono_t
~ut_stage_alter_t	include/ut0stage.h	/^ut_stage_alter_t::~ut_stage_alter_t()$/;"	f	class:ut_stage_alter_t
~warn	ut/ut0ut.cc	/^warn::~warn()$/;"	f	class:ib::warn
